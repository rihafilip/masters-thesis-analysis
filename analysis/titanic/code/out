
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


Execution halted
*********************** Compilation session for: match.fun (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: match.fun (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 40
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 1
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 1

----------------------
match.fun [0x560a55e6ef60]
referenced: 40
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 1
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] (cls|blt)- (polluted)
val?            %1.2  = Force!<lazy>       !vL   %1.0, e1.1   <(cls|blt)->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a55e6ee60[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (cls|blt)-, expected: (cls|blt)-, required: val?^ | miss

Type#2 [unused] lgl$-
lgl$#-          %2.4  = CallSafeBuiltin    wed   is.function(%2.1)    <lgl$->
other unused reason

Type#3 [unused] (cls|blt)- (polluted)
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: inherits (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1 miss: 1) ***********************
======================= ClosureVersion: inherits (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1 miss: 1) =======================
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

----------------------
inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %1.3  = Force!<lazy>       !v    %1.1, e1.2   <val?>
other unused reason

Type#1 [unused] str$-
val?            %1.5  = Force!<value>      !v    %1.4, e1.2   <str$->
other unused reason

Type#2 [unused] lgl$-
val?            %1.7  = Force!<lazy>       !v    %1.6, e1.2   <lgl$->
other unused reason

*********************** Compilation session for: is.vector (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1) ***********************
======================= ClosureVersion: is.vector (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1) =======================
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
is.vector [0x560a55e6f180]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (str|vec)- (polluted)
val+            %1.1  = Force!<lazy>       !vr   %1.0,    <(str|vec)->
other unused reason

Type#1 [unused] str$-
optimized away

*********************** Compilation session for: lapply (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: lapply (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 17
referenced non-empty: 13
read non-empty: 12
used: 0
present non-empty: 7

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 13
optimized away non-empty: 6
dependent: 10
other reasons unused non-empty: 3

Polluted
polluted: 9
used polluted: 0

----------------------
lapply [0x560a55e69d00]
referenced: 15
referenced non-empty: 11
read non-empty: 11
used: 0
present non-empty: 7

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 11
optimized away non-empty: 4
dependent: 10
other reasons unused non-empty: 1

Polluted
polluted: 8
used polluted: 0

Type#0 [unused] (cls|blt)- (polluted)
optimized away (dependency)

Type#1 [unused] (cls|blt)- (polluted)
val?            %1.4  = StaticCall         !v    match.fun[0x560a5608b9e0](%1.3) e1.2   <(cls|blt)->
dependent slot

Type#2 [unused] (str|vec)- (polluted)
val?            %2.4  = Force!<lazy>       !v    %2.3, e1.2   <(str|vec)->
dependent slot

Type#3 [unused] lgl$-
lgl$#-          %2.5  = CallSafeBuiltin    wed   is.vector(%2.4, "any")    <lgl$->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] (str|vec)- (polluted)
val?            %12.4 = Force!<wrapped>    !v    %12.3, e1.2   <(str|vec)->
dependent slot

Type#6 [unused] lgl$-
lgl$#-          %12.5 = CallSafeBuiltin    wed   is.object(%12.4)    <lgl$->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] (str|vec)- (polluted)
val?            %7.1  = Force!<wrapped>    !v    %7.0, e1.2   <(str|vec)->
dependent slot

Type#10 [unused] (str|vec)- (polluted)
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] int$-
optimized away

Type#13 [unused] val? (polluted)
optimized away (dependency)

Type#14 [unused] val? (polluted)
val?            %9.5  = NamedCall          !v    %9.1(%9.2, .xpandDotsTrigger=%9.4) e1.2   <val?>
dependent slot

----------------------
Inlinee: is.vector [0x560a55e6f180]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (str|vec)- (polluted)
optimized away

Type#1 [unused] str$-
optimized away

*********************** Compilation session for: is.numeric_version (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: is.numeric_version (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 5
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

----------------------
is.numeric_version [0x560a55f0ec30]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] vec (polluted)
optimized away

Type#1 [used] lgl$-
val?            %1.8  = PopContext         C     %1.7, %1.3   <lgl$->
void                    Assume             D     %1.9, %1.10 (Typecheck@0x560a55f0eb40[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %1.6  = Force!<lazy>       !vL   %1.4, e1.5   <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

*********************** Compilation session for: nchar (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 3) ***********************
======================= ClosureVersion: nchar (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 3) =======================
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
nchar [0x560a560bc4c0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str-
val+            %1.1  = Force!<lazy>       !vr   %1.0,    <str->
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: match (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl0,NonRefl2,!Obj0,!Obj2,SimpleInt2 miss: 1) ***********************
======================= ClosureVersion: match (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl0,NonRefl2,!Obj0,!Obj2,SimpleInt2 miss: 1) =======================
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 1
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
match [0x560a55e4d070]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 1
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str- (polluted)
val+            %1.4  = Force!<lazy>       !vr   %1.2,    <str->
dependent slot

Type#1 [used] str-
val?            %1.5  = Force!<lazy>       !vL   %1.1, e1.3   <str->
void                    Assume             D     %1.6, %1.8 (Typecheck@0x560a55e4cf60[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?^ | miss

Type#2 [unused] int$-
int$-           %1.7  = Force!<lazy>             %1.0,    <int$->
other unused reason

Type#3 [unused] nil-
optimized away

*********************** Compilation session for: unique (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2) ***********************
======================= ClosureVersion: unique (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2) =======================
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
unique [0x560a55e49770]
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

*********************** Compilation session for: is.factor (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: is.factor (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 5
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

----------------------
is.factor [0x560a55ec8200]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (int|str)+ (polluted)
optimized away

Type#1 [used] lgl$-
val?            %1.8  = PopContext         C     %1.7, %1.3   <lgl$->
void                    Assume             D     %1.9, %1.10 (Typecheck@0x560a55ec8110[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %1.6  = Force!<lazy>       !vL   %1.4, e1.5   <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

*********************** Compilation session for: unlist (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2) ***********************
======================= ClosureVersion: unlist (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2) =======================
referenced: 27
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 5
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

----------------------
unlist [0x560a55eb29b0]
referenced: 27
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 5
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec- (polluted)
val+            %1.4  = Force!<lazy>       !vr   %1.0,    <vec->
dependent slot

Type#1 [unused] lgl$-
optimized away (dependency)

Type#2 [unused] vec- (polluted)
val?            %6.1  = Force!<wrapped>    !v    %6.0, e1.1   <vec->
dependent slot

Type#3 [unused] lgl$-
val?            %6.3  = Force!<wrapped>    !v    %6.2, e1.1   <lgl$->
dependent slot

Type#4 [unused] lgl$-
val?            %6.5  = Force!<lazy>       !v    %6.4, e1.1   <lgl$->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: FUN (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: .make_numeric_version (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 124
referenced non-empty: 61
read non-empty: 59
used: 16
present non-empty: 25

Used
exact match: 7
widened: 9
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 45
optimized away non-empty: 20
dependent: 34
other reasons unused non-empty: 11

Polluted
polluted: 13
used polluted: 2

----------------------
.make_numeric_version [0x560a55ef49f0]
referenced: 48
referenced non-empty: 29
read non-empty: 29
used: 11
present non-empty: 9

Used
exact match: 4
widened: 7
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 18
optimized away non-empty: 9
dependent: 15
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str$-
val?            %1.4  = Force!<lazy>       !v    %1.2, e1.3   <str$->
void                    Assume             D     %1.5, %1.6 (Typecheck@0x560a55ef48e0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

Type#2 [unused] nil-
val+            %2.2  = CallSafeBuiltin    wed   names(%2.1)    <nil->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str$-
val?            %4.4  = Force!<wrapped>    !v    %4.3, e1.3   <str$->
void                    Assume             D     %4.5, %4.6 (Typecheck@0x560a55ef48e0[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#5 [unused] str$-
val+            %6.2  = CallSafeBuiltin    wed   as.character(%6.1)    <str$->
dependent slot

Type#6 [unused] int-
int-            %8.9  = StaticCall         !vr   unknown--fromConstant[0x560a56420f50]() from function(length=0L) <(rir::DispatchTable*)0x56|... e1.3   <int->
other unused reason

Type#7 [unused] vec$-
val+            %8.10 = CallSafeBuiltin    wed   list(%8.9)    <vec$->
dependent slot

Type#8 [unused] str$-
val?            %10.4 = Force!<value>      !v    %10.3, e1.3   <str$->
dependent slot

Type#9 [unused] int$-
int-            %12.4 = CastType           d     dn %10.5   <int$->
dependent slot

Type#10 [unused] vec$-
val+            %12.5 = CallSafeBuiltin    wed   rep.int(%12.2, %12.4)    <vec$->
dependent slot

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [unused] str$-
val?            %14.10 = PopContext         C     %14.9, %14.5   <str$->
dependent slot

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [used] str$-
val?            %16.4 = Force!<value>      !v    %16.3, e1.3   <str$->
void                    Assume             D     %16.5, %16.6 (Typecheck@0x560a55ef48e0[Type#14])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#15 [used] int$-
(int|real)$-    %18.2 = CallSafeBuiltin    wed   length(%18.1)    <int$->
void                    Assume             D     %18.3, %18.4 (Typecheck@0x560a55ef48e0[Type#15])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#16 [unused] str$-
optimized away (dependency)

Type#17 [unused] str$-
optimized away (dependency)

Type#18 [used] lgl$-
val?            %46.14 = PopContext         C     %46.13, %27.5   <lgl$->
void                    Assume             D     %46.15, %46.16 (Typecheck@0x560a55ef48e0[Type#18])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] lgl$-
optimized away (dependency)

Type#21 [used] lgl$-
val?            %50.3 = CallBuiltin        !v    all(%48.1) e1.3   <lgl$->
void                    Assume             D     %50.4, %50.5 (Typecheck@0x560a55ef48e0[Type#21])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] str$-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] lgl$-
optimized away (dependency)

Type#34 [unused] str$-
optimized away (dependency)

Type#35 [unused] vec$-
optimized away (dependency)

Type#36 [unused] blt-
optimized away

Type#37 [used] vec$-
val?            %67.0 = PopContext         C     %65.1, %57.5   <vec$->
void                    Assume             D     %67.1, %67.2 (Typecheck@0x560a55ef48e0[Type#37])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#38 [used] vec$-
val?^ | miss    %69.0 = LdVar              eR    y !upd, e1.3
void                    Assume             D     %69.1, %67.2 (Typecheck@0x560a55ef48e0[Type#38])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#39 [used] lgl$-
val?^ | miss    %69.5 = LdVar              eR    ok, e1.3
void                    Assume             D     %69.6, %67.2 (Typecheck@0x560a55ef48e0[Type#39])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#40 [used] nil-
val?^ | miss    %24.0 = LdVar              eR    nms, e1.3
void                    Assume             D     %24.1, %22.0 (Typecheck@0x560a55ef48e0[Type#40])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: nil-, expected: nil-, required: val?^ | miss

Type#41 [used] vec$-
val?^ | miss    %26.0 = LdVar              eR    y, e1.3
void                    Assume             D     %26.1, %24.6 (Typecheck@0x560a55ef48e0[Type#41])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] vec$
val?            %26.13 = Force!<value>      !     %26.11, e1.3   <vec$>
other unused reason

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %27.17 = Force!<lazy>       !vL   %27.15, e27.16   <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: is.factor [0x560a55ec8200]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (int|str)+ (polluted)
optimized away

Type#1 [used] lgl$-
val?            %27.19 = PopContext         C     %27.18, %27.14   <lgl$->
void                    Assume             D     %27.20, %27.21 (Typecheck@0x560a55ec8110[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: is.vector [0x560a55e6f180]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (str|vec)- (polluted)
optimized away

Type#1 [unused] str$-
optimized away

----------------------
Inlinee: lapply [0x560a55e69d00]
referenced: 15
referenced non-empty: 11
read non-empty: 11
used: 0
present non-empty: 7

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 11
optimized away non-empty: 4
dependent: 10
other reasons unused non-empty: 1

Polluted
polluted: 8
used polluted: 0

Type#0 [unused] (cls|blt)- (polluted)
optimized away (dependency)

Type#1 [unused] (cls|blt)- (polluted)
val?            %57.10 = StaticCall         !v    match.fun[0x560a56435170](%57.9) e57.8   <(cls|blt)->
dependent slot

Type#2 [unused] (str|vec)- (polluted)
val?            %59.4 = Force!<lazy>       !v    %59.3, e57.8   <(str|vec)->
dependent slot

Type#3 [unused] lgl$-
lgl$#-          %59.5 = CallSafeBuiltin    wed   is.vector(%59.4, "any")    <lgl$->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] (str|vec)- (polluted)
val?            %71.4 = Force!<wrapped>    !v    %71.3, e57.8   <(str|vec)->
dependent slot

Type#6 [unused] lgl$-
lgl$#-          %71.5 = CallSafeBuiltin    wed   is.object(%71.4)    <lgl$->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] (str|vec)- (polluted)
val?            %64.1 = Force!<wrapped>    !v    %64.0, e57.8   <(str|vec)->
dependent slot

Type#10 [unused] (str|vec)- (polluted)
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] int$-
optimized away

Type#13 [unused] val? (polluted)
optimized away (dependency)

Type#14 [unused] val? (polluted)
val?            %66.5 = NamedCall          !v    %66.1(%66.2, .xpandDotsTrigger=%66.4) e57.8   <val?>
dependent slot

----------------------
Inlinee: grepl [0x560a55ec7ff0]
referenced: 51
referenced non-empty: 11
read non-empty: 11
used: 2
present non-empty: 8

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 1
dependent: 9
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away (dependency)

Type#1 [used] lgl$-
val?            %29.2 = PopContext         C     %29.1, %27.10   <lgl$->
void                    Assume             D     %29.3, %29.4 (Typecheck@0x560a55ec7ed0[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$+
val?            %36.4 = Force!<wrapped>    !v    %36.3, e27.8   <str$+>
dependent slot

Type#13 [unused] lgl$-
lgl$#-          %36.5 = CallSafeBuiltin    wed   is.character(%36.4)    <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [used] str$-
val?            %44.4 = Force!<lazy>       !v    %44.3, e27.8   <str$->
void                    Assume             D     %44.5, %44.6 (Typecheck@0x560a55ec7ed0[Type#18])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#19 [unused] str$-
val+            %46.2 = CallSafeBuiltin    wed   as.character(%46.1)    <str$->
dependent slot

Type#20 [unused] str$+
val?            %46.4 = Force!<wrapped>    !v    %46.3, e27.8   <str$+>
dependent slot

Type#21 [unused] lgl$-
val?            %46.6 = Force!<lazy>       !v    %46.5, e27.8   <lgl$->
dependent slot

Type#22 [unused] lgl$-
val?            %46.8 = Force!<lazy>       !v    %46.7, e27.8   <lgl$->
dependent slot

Type#23 [unused] lgl$-
val?            %46.10 = Force!<lazy>       !v    %46.9, e27.8   <lgl$->
dependent slot

Type#24 [unused] lgl$-
val?            %46.12 = Force!<lazy>       !v    %46.11, e27.8   <lgl$->
dependent slot

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: sprintf [0x560a55effc10]
referenced: 1
referenced non-empty: 1
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

----------------------
Inlinee: rep.int [0x560a55ef9c20]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 2
present non-empty: 0

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 2

Type#0 [used] (int|vec)- (polluted)
val+            %8.10 = CallSafeBuiltin    wed   list(%8.9)    <vec$->
void                    Assume             D     %12.0, %10.7 (Typecheck@0x560a55ef47e0[Type#0])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: (int|vec)-, expected: (int|vec)-, required: val?+

Type#1 [used] int- (polluted)
val?            %10.5 = CallBuiltin        !v    length(%10.4) e1.3   <int$->
void                    Assume             D     %10.6, %10.7 (Typecheck@0x560a55ef47e0[Type#1])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

======================= ClosureVersion: unknown--fromConstant (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
unknown--fromConstant [0x560a55efcd20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] int$-
optimized away

======================= ClosureVersion: FUN (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 48
referenced non-empty: 19
read non-empty: 19
used: 4
present non-empty: 5

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 10
dependent: 7
other reasons unused non-empty: 8

Polluted
polluted: 3
used polluted: 0

----------------------
FUN [0x560a5613eb00]
referenced: 35
referenced non-empty: 8
read non-empty: 8
used: 2
present non-empty: 3

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 3
dependent: 5
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (str|vec)$ (polluted)
optimized away

Type#1 [used] lgl$-
val?            %2.2  = PopContext         C     %2.1, %1.3   <lgl$->
void                    Assume             D     %2.3, %2.4 (Typecheck@0x560a560a7240[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [used] lgl$-
val?            %7.2  = PopContext         C     %7.1, %5.4   <lgl$->
void                    Assume             D     %7.3, %7.4 (Typecheck@0x560a560a7240[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] str$-
val?            %10.1 = Force!<wrapped>    !v    %10.0, e1.1   <str$->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] vec$
val?            %17.12 = PopContext         C     %17.11, %17.4   <vec$>
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] vec$
val?            %21.2 = Force!<wrapped>    !     %21.0, e1.1   <vec$>
dependent slot

----------------------
Inlinee: numeric_version [0x560a5632c110]
referenced: 6
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] vec+
optimized away

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$-
optimized away (dependency)

Type#5 [unused] vec$
val?            %17.11 = StaticCall         !     .make_numeric_version[0x560a563e2740](%17.8, %17.9, %17.10) e17.7   <vec$>
other unused reason

----------------------
Inlinee: is.package_version [0x560a56384d80]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [used] lgl$-
val?            %5.13 = PopContext         C     %5.12, %5.8   <lgl$->
void                    Assume             D     %5.14, %5.15 (Typecheck@0x560a56258d20[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %5.11 = Force!<lazy>       !vL   %5.9, e5.10   <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: is.numeric_version [0x560a55f0ec30]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] vec (polluted)
optimized away

Type#1 [used] lgl$-
val?            %1.12 = PopContext         C     %1.11, %1.7   <lgl$->
void                    Assume             D     %1.13, %1.14 (Typecheck@0x560a55f0eb40[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: strrep (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: strrep (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 10
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
strrep [0x560a55fbe740]
referenced: 10
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$-
val+            %1.3  = Force!<lazy>       !vr   %1.1,    <str$->
dependent slot

Type#2 [unused] lgl$-
lgl$#-          %1.4  = CallSafeBuiltin    wed   is.character(%1.3)    <lgl$->
other unused reason

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] str$-
val?            %3.1  = Force!<wrapped>    !v    %3.0, e1.2   <str$->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] int-
val?            %5.4  = Force!<lazy>       !v    %5.3, e1.2   <int->
void                    Assume             D     %5.5, %5.6 (Typecheck@0x560a560a4bf0[Type#8])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#9 [unused] int-
optimized away (dependency)

*********************** Compilation session for: %in% (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: %in% (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 3
present non-empty: 3

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 5

Polluted
polluted: 5
used polluted: 2

----------------------
%in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] str- (polluted)
val+            %1.3  = Force!<lazy>       !vr   %1.1,    <str->
other unused reason

Type#1 [unused] (nil|str)- (polluted)
val?            %1.4  = Force!<lazy>       !vL   %1.0, e1.2   <(nil|str)->
other unused reason

Type#2 [used] int- (polluted)
val+            %2.6  = CallSafeBuiltin    wed   match(%2.3, %2.5, 0L, nil)    <int->
void                    Assume             D     %2.7, %2.8 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val+, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %4.3  = Gt                 vwed  %4.2, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: match [0x560a55e4d070]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 2
present non-empty: 0

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

Type#0 [used] str- (polluted)
val+            %1.3  = Force!<lazy>       !vr   %1.1,    <str->
void                    Assume             D     %1.6, %1.7 (Typecheck@0x560a55e4cf60[Type#0])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: str-, expected: str-, required: val?+

Type#1 [used] str-
val?            %1.4  = Force!<lazy>       !vL   %1.0, e1.2   <(nil|str)->
void                    Assume             D     %1.5, %1.7 (Typecheck@0x560a55e4cf60[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#2 [unused] int$-
optimized away

Type#3 [unused] nil-
optimized away

*********************** Compilation session for: getOption (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: getOption (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
getOption [0x560a55e8e470]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] nil-
val?            %4.0  = CallBuiltin        !v    getOption(%1.5) e1.2   <nil->
other unused reason

Type#2 [unused] $#-
optimized away

Type#3 [unused] lgl$-
val?            %5.2  = Force!<value>      !     %5.0, e1.2   <lgl$->
other unused reason

Type#4 [unused] str$-
val+            %1.5  = Force                    %1.1,    <str$->
dependent slot

*********************** Compilation session for: identical (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 6) ***********************
======================= ClosureVersion: identical (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 6) =======================
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 0
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

----------------------
identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 0
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val?+ (polluted)
val+            %1.3  = Force!<lazy>       !vr   %1.1,    <val?+>
dependent slot

Type#1 [unused] val?+ (polluted)
val?            %1.4  = Force!<lazy>       !v    %1.0, e1.2   <val?+>
dependent slot

Type#2 [unused] lgl$-
val?            %1.6  = Force!<lazy>       !v    %1.5, e1.2   <lgl$->
dependent slot

Type#3 [unused] lgl$-
val?            %1.8  = Force!<lazy>       !v    %1.7, e1.2   <lgl$->
dependent slot

Type#4 [unused] lgl$-
val?            %1.10 = Force!<lazy>       !v    %1.9, e1.2   <lgl$->
dependent slot

Type#5 [unused] lgl$-
val?            %1.12 = Force!<lazy>       !v    %1.11, e1.2   <lgl$->
dependent slot

Type#6 [unused] lgl$-
val?            %1.14 = Force!<lazy>       !v    %1.13, e1.2   <lgl$->
dependent slot

Type#7 [unused] lgl$-
val?            %1.16 = Force!<lazy>       !v    %1.15, e1.2   <lgl$->
dependent slot

*********************** Compilation session for: asNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1) ***********************
======================= ClosureVersion: asNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1) =======================
referenced: 28
referenced non-empty: 22
read non-empty: 22
used: 4
present non-empty: 7

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 18
optimized away non-empty: 11
dependent: 17
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

----------------------
asNamespace [0x560a5662fe70]
referenced: 16
referenced non-empty: 10
read non-empty: 10
used: 3
present non-empty: 4

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 3
dependent: 7
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] env-
val+            %1.2  = Force!<lazy>       !vr   %1.0,    <env->
dependent slot

Type#2 [unused] lgl$-
lgl$#-          %1.3  = CallSafeBuiltin    wed   is.character(%1.2)    <lgl$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] lgl$-
lgl$#-          %21.0 = CallSafeBuiltin    wed   is.symbol(%1.2)    <lgl$->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] env-
optimized away (dependency)

Type#9 [used] lgl$-
val?            %4.6  = PopContext         C     %4.5, %4.1   <lgl$->
void                    Assume             D     %4.7, %4.8 (Typecheck@0x560a566a7520[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [used] lgl$-
val?            %7.1  = Force!<lazy>       !v    %7.0, e1.1   <lgl$->
void                    Assume             D     %7.2, %7.3 (Typecheck@0x560a566a7520[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#11 [unused] env-
optimized away (dependency)

Type#12 [used] lgl$-
val?            %12.2 = PopContext         C     %12.1, %10.4   <lgl$->
void                    Assume             D     %12.3, %12.4 (Typecheck@0x560a566a7520[Type#12])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#13 [unused] env-
val?            %16.2 = Force!<wrapped>    !     %16.0, e1.1   <env->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: isBaseNamespace [0x560a5643a450]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %10.16 = PopContext         C     %10.15, %10.9   <lgl$->
void                    Assume             D     %10.17, %10.18 (Typecheck@0x560a565938d0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val?            %4.4  = Force!<lazy>       !vr   %4.2,    <env->
other unused reason

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val?+ (polluted)
val?            %10.13 = Force!<lazy>       !vL   %10.11, e10.12   <val?+>
dependent slot

Type#1 [unused] val?+ (polluted)
val?            %10.14 = Force!<lazy>       !vL   %10.10, e10.12   <val?+>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: isNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: isNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val+            %1.2  = Force!<lazy>       !vr   %1.0,    <env->
other unused reason

*********************** Compilation session for: isBaseNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: isBaseNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 11
referenced non-empty: 11
read non-empty: 11
used: 1
present non-empty: 2

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 10
optimized away non-empty: 8
dependent: 10
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

----------------------
isBaseNamespace [0x560a5643a450]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %1.11 = PopContext         C     %1.10, %1.4   <lgl$->
void                    Assume             D     %1.12, %1.13 (Typecheck@0x560a565938d0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val?+ (polluted)
val?            %1.8  = Force!<lazy>       !vr   %1.6,    <val?+>
dependent slot

Type#1 [unused] val?+ (polluted)
val?            %1.9  = Force!<lazy>       !vL   %1.5, e1.7   <val?+>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: sys.frame (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0,SimpleInt0) ***********************
======================= ClosureVersion: sys.frame (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0,SimpleInt0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
sys.frame [0x560a562a50c0]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] int$-
int$-           %1.2  = Force!<lazy>       !vr   %1.0,    <int$->
other unused reason

*********************** Compilation session for: match (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 2) ***********************
======================= ClosureVersion: match (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 2) =======================
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

----------------------
match [0x560a55e4d070]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str+ (polluted)
val+            %1.2  = Force!<lazy>       !vr   %1.1,    <str+>
other unused reason

Type#1 [used] str-
val+            %1.3  = Force!<lazy>       !vr   %1.0,    <str->
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a55e4cf60[Type#1])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: str-, expected: str-, required: val?+

Type#2 [unused] int$-
optimized away

Type#3 [unused] nil-
optimized away

*********************** Compilation session for: .identC (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: .identC (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

----------------------
.identC [0x560a569917c0]
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %2.3  = Force!<value>      !v    %2.1, e2.2   <vec>
other unused reason

Type#4 [unused] str$+ (polluted)
val?            %2.5  = Force!<lazy>       !v    %2.4, e2.2   <str$+>
other unused reason

Type#5 [unused] str$-
val?            %2.7  = Force!<lazy>       !v    %2.6, e2.2   <str$->
other unused reason

Type#6 [used] lgl$-
val?            %2.8  = CallBuiltin        !     .Call(%2.3, %2.5, %2.7) e2.2   <lgl$->
void                    Assume             D     %2.9, %2.10 (Typecheck@0x560a5692fc50[Type#6])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: getClassDef (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1) ***********************
======================= ClosureVersion: getClassDef (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1) =======================
referenced: 49
referenced non-empty: 10
read non-empty: 10
used: 0
present non-empty: 6

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 10
optimized away non-empty: 4
dependent: 4
other reasons unused non-empty: 6

Polluted
polluted: 0
used polluted: 0

----------------------
getClassDef [0x560a569916a0]
referenced: 42
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 4
dependent: 4
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away

Type#5 [unused] str$-
optimized away

Type#6 [unused] other$
val?            %4.9  = PopContext         C     %4.8, %2.5   <other$>
dependent slot

Type#7 [unused] other$
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] other$
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] other$
val             %4.12 = ChkMissing         e     %4.9   <other$>
dependent slot

----------------------
Inlinee: .getClassesFromCache [0x560a5695c4d0]
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %4.3  = Force!<value>      !v    %4.1, e4.2   <vec>
other unused reason

Type#4 [unused] str$-
val?            %4.5  = Force!<lazy>       !v    %4.4, e4.2   <str$->
other unused reason

Type#5 [unused] env-
val?            %4.7  = Force!<wrapped>    !v    %4.6, e4.2   <env->
other unused reason

Type#6 [unused] other$
val?            %4.8  = CallBuiltin        !v    .Call(%4.3, %4.5, %4.7) e4.2   <other$>
other unused reason

*********************** Compilation session for: .getClassesFromCache (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: .getClassesFromCache (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

----------------------
.getClassesFromCache [0x560a5695c4d0]
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %2.3  = Force!<value>      !v    %2.1, e2.2   <vec>
other unused reason

Type#4 [unused] str$-
val?            %2.5  = Force!<lazy>       !v    %2.4, e2.2   <str$->
other unused reason

Type#5 [unused] env-
val?            %2.7  = Force!<wrapped>    !v    %2.6, e2.2   <env->
other unused reason

Type#6 [unused] other$
val?            %2.8  = CallBuiltin        !     .Call(%2.3, %2.5, %2.7) e2.2   <other$>
other unused reason

*********************** Compilation session for: is (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: getClassDef (!ExpMi,CorrOrd,!TMany,Argmatch miss: 3) =======================
referenced: 49
referenced non-empty: 10
read non-empty: 10
used: 0
present non-empty: 6

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 10
optimized away non-empty: 4
dependent: 4
other reasons unused non-empty: 6

Polluted
polluted: 0
used polluted: 0

----------------------
getClassDef [0x560a569916a0]
referenced: 42
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 4
dependent: 4
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away

Type#5 [unused] str$-
optimized away

Type#6 [unused] other$
val?            %4.9  = PopContext         C     %4.8, %2.4   <other$>
dependent slot

Type#7 [unused] other$
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] other$
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] other$
val             %4.12 = ChkMissing         e     %4.9   <other$>
dependent slot

----------------------
Inlinee: .getClassesFromCache [0x560a5695c4d0]
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %4.3  = Force!<value>      !v    %4.1, e4.2   <vec>
other unused reason

Type#4 [unused] str$-
val?            %4.5  = Force!<lazy>       !v    %4.4, e4.2   <str$->
other unused reason

Type#5 [unused] env-
val?            %4.7  = Force!<wrapped>    !v    %4.6, e4.2   <env->
other unused reason

Type#6 [unused] other$
val?            %4.8  = CallBuiltin        !v    .Call(%4.3, %4.5, %4.7) e4.2   <other$>
other unused reason

======================= ClosureVersion: getClassDef (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 49
referenced non-empty: 10
read non-empty: 10
used: 0
present non-empty: 6

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 10
optimized away non-empty: 4
dependent: 4
other reasons unused non-empty: 6

Polluted
polluted: 0
used polluted: 0

----------------------
getClassDef [0x560a569916a0]
referenced: 42
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 4
dependent: 4
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away

Type#5 [unused] str$-
optimized away

Type#6 [unused] other$
val?            %4.9  = PopContext         C     %4.8, %2.5   <other$>
dependent slot

Type#7 [unused] other$
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] other$
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] other$
val             %4.12 = ChkMissing         e     %4.9   <other$>
dependent slot

----------------------
Inlinee: .getClassesFromCache [0x560a5695c4d0]
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %4.3  = Force!<value>      !v    %4.1, e4.2   <vec>
other unused reason

Type#4 [unused] str$-
val?            %4.5  = Force!<lazy>       !v    %4.4, e4.2   <str$->
other unused reason

Type#5 [unused] env-
val?            %4.7  = Force!<wrapped>    !v    %4.6, e4.2   <env->
other unused reason

Type#6 [unused] other$
val?            %4.8  = CallBuiltin        !v    .Call(%4.3, %4.5, %4.7) e4.2   <other$>
other unused reason

======================= ClosureVersion: is (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 124
referenced non-empty: 39
read non-empty: 39
used: 12
present non-empty: 15

Used
exact match: 6
widened: 6
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 27
optimized away non-empty: 12
dependent: 23
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

----------------------
is [0x560a56cd40c0]
referenced: 117
referenced non-empty: 35
read non-empty: 35
used: 11
present non-empty: 12

Used
exact match: 5
widened: 6
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 24
optimized away non-empty: 12
dependent: 23
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] cls-
val+            %2.2  = Force!<lazy>       !vr   %1.1,    <cls->
dependent slot

Type#2 [used] str$-
val?            %2.3  = CallBuiltin        !v    class(%2.2) e2.1   <str$->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a56d00d40[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$-
optimized away (dependency)

Type#5 [used] int$-
(int|real)$-    %4.6  = CallSafeBuiltin    wed   length(%4.5)    <int$->
void                    Assume             D     %4.7, %4.8 (Typecheck@0x560a56d00d40[Type#5])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] lgl$-
lgl$-           %6.2  = Gt                 d     %6.1, 1L, elided   <lgl$->
dependent slot

Type#7 [unused] lgl$-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] other$
val?            %11.4 = StaticCall         !v    getClassDef[0x560a56f0a910](%11.3) e2.1   <other$>
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] str$-
val?            %13.4 = Force!<value>      !v    %13.3, e2.1   <str$->
dependent slot

Type#16 [unused] lgl$-
lgl$#-          %13.5 = CallSafeBuiltin    wed   is.character(%13.4)    <lgl$->
dependent slot

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] other$
val?            %15.1 = Force!<value>      !v    %15.0, e2.1   <other$>
dependent slot

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [used] nil-
val?^ | miss    %18.0 = LdVar              eR    class2Def, e2.1
void                    Assume             D     %18.1, %15.3 (Typecheck@0x560a56d00d40[Type#25])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: nil-, expected: nil-, required: val?^ | miss

Type#26 [unused] str$-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] other$
val?            %87.6 = StaticCall         !v    getClassDef[0x560a56ed49e0](%87.3, %87.4, %87.5) e2.1   <other$>
dependent slot

Type#36 [used] lgl$-
val?^ | miss    %22.0 = LdVar              eR    S3Case, e2.1
void                    Assume             D     %22.1, %20.0 (Typecheck@0x560a56d00d40[Type#36])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] cls-
val?            %23.4 = Force!<wrapped>    !v    %23.3, e2.1   <cls->
dependent slot

Type#39 [unused] lgl$-
lgl$#-          %23.5 = CallSafeBuiltin    wed   is.object(%23.4)    <lgl$->
dependent slot

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] lgl$-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] lgl$-
optimized away (dependency)

Type#51 [unused] str$-
optimized away (dependency)

Type#52 [unused] str$-
optimized away (dependency)

Type#53 [used] lgl$-
val?            %39.2 = PopContext         C     %39.1, %35.5   <lgl$->
void                    Assume             D     %39.3, %39.4 (Typecheck@0x560a56d00d40[Type#53])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#54 [unused] str$-
optimized away (dependency)

Type#55 [used] lgl$-
val?            %46.2 = PopContext         C     %46.1, %42.4   <lgl$->
void                    Assume             D     %46.3, %46.4 (Typecheck@0x560a56d00d40[Type#55])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [used] vec+
val?            %50.3 = Call               !v    %50.0(%50.1, %50.2) e2.1   <vec+>
void                    Assume             D     %54.0, %52.4 (Typecheck@0x560a56d00d40[Type#58])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [used] str$-
val?            %52.2 = Force!<value>      !v    %52.1, e2.1   <str$->
void                    Assume             D     %52.3, %52.4 (Typecheck@0x560a56d00d40[Type#60])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#61 [unused] nil-
val?            %54.5 = Extract2_1D        wed   %54.2, %54.4, elided   <nil->
dependent slot

Type#62 [unused] other$
val?            %55.1 = Force!<value>      !v    %55.0, e2.1   <other$>
dependent slot

Type#63 [unused] other$
optimized away (dependency)

Type#64 [unused] str$+
optimized away

Type#65 [used] lgl$-
val?            %62.2 = PopContext         C     %62.1, %58.4   <lgl$->
void                    Assume             D     %62.3, %62.4 (Typecheck@0x560a56d00d40[Type#65])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [used] vec+
val?            %67.3 = Call               !v    %67.0(%67.1, %67.2) e2.1   <vec+>
void                    Assume             D     %67.5, %67.6 (Typecheck@0x560a56d00d40[Type#70])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [used] str$-
val?^ | miss    %69.1 = LdVar              eR    class1, e2.1
void                    Assume             D     %69.2, %67.6 (Typecheck@0x560a56d00d40[Type#72])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#73 [unused] nil-
val?            %69.8 = Extract2_1D        wed   %69.7, %69.5, elided   <nil->
dependent slot

Type#74 [unused] nil-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] $#-
optimized away (dependency)

Type#87 [unused] $#-
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] $#-
optimized away (dependency)

Type#90 [unused] $#-
optimized away (dependency)

Type#91 [unused] $#-
optimized away (dependency)

Type#92 [unused] $#-
optimized away (dependency)

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] $#-
optimized away (dependency)

Type#99 [unused] $#-
optimized away (dependency)

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [unused] $#-
optimized away (dependency)

Type#102 [unused] $#-
optimized away (dependency)

Type#103 [unused] $#-
optimized away (dependency)

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] $#-
optimized away (dependency)

Type#106 [unused] $#-
optimized away (dependency)

Type#107 [unused] $#-
optimized away (dependency)

Type#108 [unused] $#-
optimized away (dependency)

Type#109 [unused] $#-
optimized away (dependency)

Type#110 [unused] $#-
optimized away (dependency)

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] $#-
optimized away (dependency)

Type#113 [unused] $#-
optimized away (dependency)

Type#114 [unused] $#-
optimized away (dependency)

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: .identC [0x560a569917c0]
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %60.3 = Force!<value>      !v    %60.1, e60.2   <vec>
other unused reason

Type#4 [unused] str$+ (polluted)
val?            %60.5 = Force!<lazy>       !v    %60.4, e60.2   <str$+>
other unused reason

Type#5 [unused] str$-
val?            %60.7 = Force!<lazy>       !v    %60.6, e60.2   <str$->
other unused reason

Type#6 [used] lgl$-
val?            %60.8 = CallBuiltin        !v    .Call(%60.3, %60.5, %60.7) e60.2   <lgl$->
void                    Assume             D     %60.9, %60.10 (Typecheck@0x560a5692fc50[Type#6])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: parent.frame (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0,SimpleReal0) ***********************
======================= ClosureVersion: parent.frame (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0,SimpleReal0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
parent.frame [0x560a55e7fb30]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] real$-
real$-          %1.1  = Force<lazy>              %1.0,    <real$->
other unused reason

*********************** Compilation session for: get0 (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 3) ***********************
======================= ClosureVersion: get0 (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 3) =======================
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 5

Polluted
polluted: 3
used polluted: 0

----------------------
get0 [0x560a56361ae0]
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 5

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] str$+ (polluted)
val+            %1.3  = Force!<lazy>       !vr   %1.1,    <str$+>
other unused reason

Type#2 [unused] env+ (polluted)
val?            %1.4  = Force!<lazy>       !v    %1.0, e1.2   <env+>
other unused reason

Type#3 [unused] str$-
val?            %1.6  = Force!<lazy>       !v    %1.5, e1.2   <str$->
other unused reason

Type#4 [unused] lgl$-
val?            %1.8  = Force!<lazy>       !v    %1.7, e1.2   <lgl$->
other unused reason

Type#5 [unused] (nil|vec)+ (polluted)
val?            %1.10 = Force!<lazy>       !v    %1.9, e1.2   <(nil|vec)+>
other unused reason

*********************** Compilation session for: typeof (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: typeof (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (lgl|spec)- (polluted)
val+            %1.1  = Force!<lazy>       !vr   %1.0,    <(lgl|spec)->
other unused reason

*********************** Compilation session for: parent.env (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: parent.env (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
parent.env [0x560a56e176a0]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val+            %1.2  = Force!<lazy>       !vr   %1.0,    <env->
other unused reason

*********************** Compilation session for: .registerS3method (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl4,!Obj4) ***********************
======================= ClosureVersion: asNamespace (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 28
referenced non-empty: 24
read non-empty: 24
used: 5
present non-empty: 9

Used
exact match: 4
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 10
dependent: 17
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

----------------------
asNamespace [0x560a5662fe70]
referenced: 16
referenced non-empty: 12
read non-empty: 12
used: 4
present non-empty: 6

Used
exact match: 3
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 2
dependent: 7
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] env-
val?            %1.2  = Force!<lazy>       !v    %1.0, e1.1   <env->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a566a7520[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?^ | miss

Type#2 [unused] lgl$-
lgl$#-          %2.2  = CallSafeBuiltin    wed   is.character(%2.1)    <lgl$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env-
val?            %5.4  = Force!<wrapped>    !v    %5.3, e1.1   <env->
dependent slot

Type#5 [unused] lgl$-
lgl$#-          %5.5  = CallSafeBuiltin    wed   is.symbol(%5.4)    <lgl$->
dependent slot

Type#6 [unused] str$+
val?            %28.4 = Force!<wrapped>    !v    %28.3, e1.1   <str$+>
other unused reason

Type#7 [unused] env-
val?            %28.6 = StaticCall         !v    getNamespace[0x560a572072f0](%28.5) e1.1   <env->
dependent slot

Type#8 [unused] env-
optimized away (dependency)

Type#9 [used] lgl$-
val?            %12.9 = PopContext         C     %12.8, %12.4   <lgl$->
void                    Assume             D     %12.10, %12.11 (Typecheck@0x560a566a7520[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [used] lgl$-
val?            %15.1 = Force!<lazy>       !v    %15.0, e1.1   <lgl$->
void                    Assume             D     %15.2, %15.3 (Typecheck@0x560a566a7520[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#11 [unused] env-
optimized away (dependency)

Type#12 [used] lgl$-
val?            %20.2 = PopContext         C     %20.1, %18.4   <lgl$->
void                    Assume             D     %20.3, %20.4 (Typecheck@0x560a566a7520[Type#12])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#13 [unused] env-
val?            %24.2 = Force!<wrapped>    !     %24.0, e1.1   <env->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: isBaseNamespace [0x560a5643a450]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %18.16 = PopContext         C     %18.15, %18.9   <lgl$->
void                    Assume             D     %18.17, %18.18 (Typecheck@0x560a565938d0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val?            %12.7 = Force!<lazy>       !vL   %12.5, e12.6   <env->
other unused reason

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val?+ (polluted)
val?            %18.13 = Force!<lazy>       !vL   %18.11, e18.12   <val?+>
dependent slot

Type#1 [unused] val?+ (polluted)
val?            %18.14 = Force!<lazy>       !vL   %18.10, e18.12   <val?+>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

======================= ClosureVersion: .registerS3method (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl4,!Obj4) =======================
referenced: 77
referenced non-empty: 39
read non-empty: 39
used: 10
present non-empty: 13

Used
exact match: 2
widened: 8
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 29
optimized away non-empty: 16
dependent: 18
other reasons unused non-empty: 11

Polluted
polluted: 4
used polluted: 0

----------------------
.registerS3method [0x560a5695f060]
referenced: 62
referenced non-empty: 28
read non-empty: 28
used: 10
present non-empty: 8

Used
exact match: 2
widened: 8
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 18
optimized away non-empty: 10
dependent: 14
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str+
val?            %2.5  = Force!<wrapped>    !v    %2.3, e2.4   <str+>
void                    Assume             D     %6.0, %4.4 (Typecheck@0x560a5695f420[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?+

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [used] str$+
val?            %4.2  = Force!<lazy>       !v    %4.1, e2.4   <str$+>
void                    Assume             D     %4.3, %4.4 (Typecheck@0x560a5695f420[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?+

Type#7 [used] str$+
val?            %6.5  = Extract1_1D        wed   %6.2, %6.4, elided   <str$+>
void                    Assume             D     %6.7, %6.8 (Typecheck@0x560a5695f420[Type#7])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?+

Type#8 [unused] lgl$+
lgl+            %8.2  = CallSafeBuiltin    wed   is.na(%8.1)    <lgl$+>
other unused reason

Type#9 [unused] str$+
optimized away (dependency)

Type#10 [unused] env-
optimized away (dependency)

Type#11 [unused] env+
optimized away

Type#12 [unused] spec-
val?            %11.12 = PopContext         C     %11.11, %11.5   <spec->
dependent slot

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [used] lgl$-
val?            %14.3 = CallBuiltin        !v    .isMethodsDispatchOn() e2.4   <lgl$->
void                    Assume             D     %14.4, %14.5 (Typecheck@0x560a5695f420[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] cls-
val?            %17.3 = Call               !v    %17.0(%17.1, %17.2) e2.4   <cls->
other unused reason

Type#20 [unused] spec-
optimized away (dependency)

Type#21 [used] lgl$-
val?            %17.6 = Call               !v    %17.4(%17.5, "genericFunction") e2.4   <lgl$->
void                    Assume             D     %17.7, %17.8 (Typecheck@0x560a5695f420[Type#21])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [used] spec-
val?^ | miss    %23.3 = LdVar              eR    genfun, e2.4
void                    Assume             D     %23.4, %20.1 (Typecheck@0x560a5695f420[Type#25])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: spec-, expected: spec-, required: val?^ | miss

Type#26 [unused] str$-
str$-           %23.8 = CallSafeBuiltin    wed   typeof(%23.7)    <str$->
other unused reason

Type#27 [unused] lgl$-
lgl$-           %25.0 = Eq                 d     %23.8, "closure", elided   <lgl$->
dependent slot

Type#28 [used] env-
val?^ | miss    %26.0 = LdVar              eR    .BaseNamespaceEnv, e2.4
void                    Assume             D     %26.1, %23.9 (Typecheck@0x560a5695f420[Type#28])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] str$+
optimized away (dependency)

Type#32 [unused] env-
val?            %48.4 = StaticCall         !v    asNamespace[0x560a57116140](%48.3) e2.4   <env->
dependent slot

Type#33 [used] env-
val?            %27.0 = Phi                      %26.4:BB26, %48.4:BB48   <env->
void                    Assume             D     %27.3, %27.4 (Typecheck@0x560a5695f420[Type#33])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#34 [used] env-
val?            %29.4 = Extract2_1D        wed   %29.3, ".__S3MethodsTable__.", elided   <env->
void                    Assume             D     %34.0, %32.6 (Typecheck@0x560a5695f420[Type#34])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] env-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [used] str$+
val?            %32.4 = Force!<lazy>       !v    %32.3, e2.4   <str$+>
void                    Assume             D     %32.5, %32.6 (Typecheck@0x560a5695f420[Type#41])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?+

Type#42 [unused] nil-
val?            %34.5 = Extract2_1D        wed   %34.2, %34.4, elided   <nil->
dependent slot

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] str$+
optimized away (dependency)

Type#58 [unused] str$+
optimized away (dependency)

Type#59 [unused] env-
optimized away (dependency)

Type#60 [unused] env-
optimized away (dependency)

Type#61 [unused] nil-
val?            %41.7 = PopContext         C     %41.6, %39.12   <nil->
dependent slot

----------------------
Inlinee: assignWrapped [0x560a569538e0]
referenced: 8
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
val?            %39.18 = Force!<lazy>       !vL   %39.15, e39.17   <str$+>
dependent slot

Type#1 [unused] env-
val?            %39.21 = Force!<lazy>       !L    %39.14, e39.17   <env->
dependent slot

Type#2 [unused] str$+
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] env-
optimized away (dependency)

Type#7 [unused] nil-
val?            %41.6 = StaticCall         !     delayedAssign[0x560a5722e2b0](%41.3, %41.4, missingArg, %41.5) { 0 1 3n } e39.17   <nil->
other unused reason

----------------------
Inlinee: get0 [0x560a56361ae0]
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 5

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] str$+ (polluted)
val?            %11.9 = Force!<lazy>       !vL   %11.7, e11.8   <str$+>
other unused reason

Type#2 [unused] env+ (polluted)
val?            %11.10 = Force!<lazy>       !vL   %11.6, e11.8   <env+>
other unused reason

Type#3 [unused] str$-
optimized away

Type#4 [unused] lgl$-
optimized away

Type#5 [unused] (nil|vec)+ (polluted)
optimized away

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (lgl|spec)- (polluted)
optimized away

======================= ClosureVersion: delayedAssign (CorrOrd,!TMany,Argmatch;Eager2,NonRefl2) =======================
referenced: 7
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
delayedAssign [0x560a56a9a9e0]
referenced: 7
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] str$+
val?            %5.1  = Force!<lazy>       !v    %5.0, e1.6   <str$+>
void                    Assume             D     %5.2, %5.3 (Typecheck@0x560a56daba20[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] code-
val?            %7.4  = Call               !v    %7.2(%7.3) e1.6   <code->
other unused reason

Type#5 [unused] env-
val?            %7.6  = Force!<lazy>       !v    %7.5, e1.6   <env->
dependent slot

Type#6 [unused] env-
val?            %7.8  = Force!<lazy>       !v    %7.7, e1.6   <env->
dependent slot

*********************** Compilation session for: asNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1) ***********************
======================= ClosureVersion: asNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1) =======================
referenced: 33
referenced non-empty: 27
read non-empty: 26
used: 4
present non-empty: 10

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 23
optimized away non-empty: 13
dependent: 19
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 0

----------------------
asNamespace [0x560a5662fe70]
referenced: 16
referenced non-empty: 12
read non-empty: 12
used: 3
present non-empty: 5

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 4
dependent: 7
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|env)+ (polluted)
val+            %1.2  = Force!<lazy>       !vr   %1.0,    <(str|env)+>
other unused reason

Type#2 [unused] lgl$-
lgl$#-          %1.3  = CallSafeBuiltin    wed   is.character(%1.2)    <lgl$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] lgl$-
lgl$#-          %26.0 = CallSafeBuiltin    wed   is.symbol(%1.2)    <lgl$->
dependent slot

Type#6 [unused] str$+
optimized away

Type#7 [unused] env-
val?            %25.0 = PopContext         C     %23.5, %23.1   <env->
dependent slot

Type#8 [unused] env-
optimized away (dependency)

Type#9 [used] lgl$-
val?            %7.9  = PopContext         C     %7.8, %7.4   <lgl$->
void                    Assume             D     %7.10, %7.11 (Typecheck@0x560a566a7520[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [used] lgl$-
val?            %10.1 = Force!<lazy>       !v    %10.0, e1.1   <lgl$->
void                    Assume             D     %10.2, %10.3 (Typecheck@0x560a566a7520[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#11 [unused] env-
optimized away (dependency)

Type#12 [used] lgl$-
val?            %15.2 = PopContext         C     %15.1, %13.4   <lgl$->
void                    Assume             D     %15.3, %15.4 (Typecheck@0x560a566a7520[Type#12])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#13 [unused] env-
val?            %19.2 = Force!<wrapped>    !     %19.0, e1.1   <env->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: isBaseNamespace [0x560a5643a450]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %13.16 = PopContext         C     %13.15, %13.9   <lgl$->
void                    Assume             D     %13.17, %13.18 (Typecheck@0x560a565938d0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val?            %7.7  = Force!<lazy>       !vrL  %7.5, e7.6   <env->
other unused reason

----------------------
Inlinee: getNamespace [0x560a572728f0]
referenced: 5
referenced non-empty: 3
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
val?            %23.4 = Force!<lazy>       !vr   %23.2,    <str$+>
other unused reason

Type#1 [unused] env-
val?            %23.5 = CallBuiltin        !v    getRegisteredNamespace(%23.4) e23.3   <env->
dependent slot

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val?+ (polluted)
val?            %13.13 = Force!<lazy>       !vL   %13.11, e13.12   <val?+>
dependent slot

Type#1 [unused] val?+ (polluted)
val?            %13.14 = Force!<lazy>       !vL   %13.10, e13.12   <val?+>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: .registerS3method (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl4,!Obj4) ***********************
======================= ClosureVersion: environment (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

----------------------
environment [0x560a55e84a10]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

Type#0 [used] (nil|cls)- (polluted)
val?            %1.1  = Force!<lazy>             %1.0,    <(nil|cls)->
void                    Assume             D     %1.2, %1.3 (Typecheck@0x560a55e84920[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (nil|cls)-, expected: (nil|cls)-, required: val?^ | miss

======================= ClosureVersion: asNamespace (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 33
referenced non-empty: 27
read non-empty: 26
used: 5
present non-empty: 10

Used
exact match: 4
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 22
optimized away non-empty: 12
dependent: 19
other reasons unused non-empty: 3

Polluted
polluted: 3
used polluted: 1

----------------------
asNamespace [0x560a5662fe70]
referenced: 16
referenced non-empty: 12
read non-empty: 12
used: 4
present non-empty: 5

Used
exact match: 3
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 3
dependent: 7
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] (str|env)+ (polluted)
val?            %1.2  = Force!<lazy>       !v    %1.0, e1.1   <(str|env)+>
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a566a7520[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: (str|env)+, expected: (str|env)+, required: val?^ | miss

Type#2 [unused] lgl$-
lgl$#-          %2.2  = CallSafeBuiltin    wed   is.character(%2.1)    <lgl$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env-
val?            %5.4  = Force!<wrapped>    !v    %5.3, e1.1   <env->
dependent slot

Type#5 [unused] lgl$-
lgl$#-          %5.5  = CallSafeBuiltin    wed   is.symbol(%5.4)    <lgl$->
dependent slot

Type#6 [unused] str$+
optimized away

Type#7 [unused] env-
val?            %30.0 = PopContext         C     %28.8, %28.4   <env->
dependent slot

Type#8 [unused] env-
optimized away (dependency)

Type#9 [used] lgl$-
val?            %12.9 = PopContext         C     %12.8, %12.4   <lgl$->
void                    Assume             D     %12.10, %12.11 (Typecheck@0x560a566a7520[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [used] lgl$-
val?            %15.1 = Force!<lazy>       !v    %15.0, e1.1   <lgl$->
void                    Assume             D     %15.2, %15.3 (Typecheck@0x560a566a7520[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#11 [unused] env-
optimized away (dependency)

Type#12 [used] lgl$-
val?            %20.2 = PopContext         C     %20.1, %18.4   <lgl$->
void                    Assume             D     %20.3, %20.4 (Typecheck@0x560a566a7520[Type#12])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#13 [unused] env-
val?            %24.2 = Force!<wrapped>    !     %24.0, e1.1   <env->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: isBaseNamespace [0x560a5643a450]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %18.16 = PopContext         C     %18.15, %18.9   <lgl$->
void                    Assume             D     %18.17, %18.18 (Typecheck@0x560a565938d0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val?            %12.7 = Force!<lazy>       !vL   %12.5, e12.6   <env->
other unused reason

----------------------
Inlinee: getNamespace [0x560a572728f0]
referenced: 5
referenced non-empty: 3
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
val?            %28.7 = Force!<lazy>       !vL   %28.5, e28.6   <str$+>
other unused reason

Type#1 [unused] env-
val?            %28.8 = CallBuiltin        !v    getRegisteredNamespace(%28.7) e28.6   <env->
dependent slot

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val?+ (polluted)
val?            %18.13 = Force!<lazy>       !vL   %18.11, e18.12   <val?+>
dependent slot

Type#1 [unused] val?+ (polluted)
val?            %18.14 = Force!<lazy>       !vL   %18.10, e18.12   <val?+>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

======================= ClosureVersion: .registerS3method (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl4,!Obj4) =======================
referenced: 77
referenced non-empty: 41
read non-empty: 41
used: 10
present non-empty: 14

Used
exact match: 2
widened: 8
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 31
optimized away non-empty: 17
dependent: 21
other reasons unused non-empty: 10

Polluted
polluted: 7
used polluted: 1

----------------------
.registerS3method [0x560a5695f060]
referenced: 62
referenced non-empty: 30
read non-empty: 30
used: 10
present non-empty: 9

Used
exact match: 2
widened: 8
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 20
optimized away non-empty: 11
dependent: 17
other reasons unused non-empty: 3

Polluted
polluted: 3
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str+
val?            %2.5  = Force!<wrapped>    !v    %2.3, e2.4   <str+>
void                    Assume             D     %6.0, %4.4 (Typecheck@0x560a5695f420[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?+

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [used] str$+
val?            %4.2  = Force!<lazy>       !v    %4.1, e2.4   <str$+>
void                    Assume             D     %4.3, %4.4 (Typecheck@0x560a5695f420[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?+

Type#7 [used] str$+
val?            %6.5  = Extract1_1D        wed   %6.2, %6.4, elided   <str$+>
void                    Assume             D     %6.7, %6.8 (Typecheck@0x560a5695f420[Type#7])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?+

Type#8 [unused] lgl$+
lgl+            %8.2  = CallSafeBuiltin    wed   is.na(%8.1)    <lgl$+>
other unused reason

Type#9 [unused] str$+
optimized away (dependency)

Type#10 [unused] env-
optimized away (dependency)

Type#11 [unused] env+
optimized away

Type#12 [unused] (spec|blt)- (polluted)
val?            %11.12 = PopContext         C     %11.11, %11.5   <(spec|blt)->
dependent slot

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [used] lgl$-
val?            %14.3 = CallBuiltin        !v    .isMethodsDispatchOn() e2.4   <lgl$->
void                    Assume             D     %14.4, %14.5 (Typecheck@0x560a5695f420[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] cls-
val?            %17.3 = Call               !v    %17.0(%17.1, %17.2) e2.4   <cls->
dependent slot

Type#20 [unused] (spec|blt)- (polluted)
optimized away (dependency)

Type#21 [used] lgl$-
val?            %17.6 = Call               !v    %17.4(%17.5, "genericFunction") e2.4   <lgl$->
void                    Assume             D     %17.7, %17.8 (Typecheck@0x560a5695f420[Type#21])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [used] (spec|blt)- (polluted)
val?^ | miss    %23.3 = LdVar              eR    genfun, e2.4
void                    Assume             D     %23.4, %20.1 (Typecheck@0x560a5695f420[Type#25])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: (spec|blt)-, expected: (spec|blt)-, required: val?^ | miss

Type#26 [unused] str$-
str$-           %23.8 = CallSafeBuiltin    wed   typeof(%23.7)    <str$->
other unused reason

Type#27 [unused] lgl$-
lgl$-           %25.0 = Eq                 d     %23.8, "closure", elided   <lgl$->
dependent slot

Type#28 [used] env-
val?^ | miss    %26.0 = LdVar              eR    .BaseNamespaceEnv, e2.4
void                    Assume             D     %26.1, %23.9 (Typecheck@0x560a5695f420[Type#28])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#29 [unused] cls-
optimized away (dependency)

Type#30 [unused] env-
val?            %45.7 = StaticCall         !v    environment[0x560a5772b100](%45.6) e2.4   <env->
dependent slot

Type#31 [unused] str$+
optimized away (dependency)

Type#32 [unused] env-
val?            %49.4 = StaticCall         !v    asNamespace[0x560a5717b7e0](%49.3) e2.4   <env->
dependent slot

Type#33 [used] env-
val?            %28.0 = Phi                      %27.0:BB27, %49.4:BB49   <env->
void                    Assume             D     %28.3, %28.4 (Typecheck@0x560a5695f420[Type#33])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#34 [used] env-
val?            %30.4 = Extract2_1D        wed   %30.3, ".__S3MethodsTable__.", elided   <env->
void                    Assume             D     %35.0, %33.6 (Typecheck@0x560a5695f420[Type#34])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] env-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [used] str$+
val?            %33.4 = Force!<lazy>       !v    %33.3, e2.4   <str$+>
void                    Assume             D     %33.5, %33.6 (Typecheck@0x560a5695f420[Type#41])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?+

Type#42 [unused] nil-
val?            %35.5 = Extract2_1D        wed   %35.2, %35.4, elided   <nil->
dependent slot

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] str$+
optimized away (dependency)

Type#58 [unused] str$+
optimized away (dependency)

Type#59 [unused] env-
optimized away (dependency)

Type#60 [unused] env-
optimized away (dependency)

Type#61 [unused] nil-
val?            %42.7 = PopContext         C     %42.6, %40.12   <nil->
dependent slot

----------------------
Inlinee: assignWrapped [0x560a569538e0]
referenced: 8
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
val?            %40.18 = Force!<lazy>       !vL   %40.15, e40.17   <str$+>
dependent slot

Type#1 [unused] env-
val?            %40.21 = Force!<lazy>       !L    %40.14, e40.17   <env->
dependent slot

Type#2 [unused] str$+
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] env-
optimized away (dependency)

Type#7 [unused] nil-
val?            %42.6 = StaticCall         !     delayedAssign[0x560a570911b0](%42.3, %42.4, missingArg, %42.5) { 0 1 3n } e40.17   <nil->
other unused reason

----------------------
Inlinee: get0 [0x560a56361ae0]
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 5

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] str$+ (polluted)
val?            %11.9 = Force!<lazy>       !vL   %11.7, e11.8   <str$+>
other unused reason

Type#2 [unused] env+ (polluted)
val?            %11.10 = Force!<lazy>       !vL   %11.6, e11.8   <env+>
other unused reason

Type#3 [unused] str$-
optimized away

Type#4 [unused] lgl$-
optimized away

Type#5 [unused] (nil|vec)+ (polluted)
optimized away

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (lgl|spec)- (polluted)
optimized away

*********************** Compilation session for: setNamespaceInfo (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2) ***********************
======================= ClosureVersion: setNamespaceInfo (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2) =======================
referenced: 7
referenced non-empty: 7
read non-empty: 7
used: 4
present non-empty: 2

Used
exact match: 1
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

----------------------
setNamespaceInfo [0x560a5678ac70]
referenced: 7
referenced non-empty: 7
read non-empty: 7
used: 4
present non-empty: 2

Used
exact match: 1
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] env-
val+            %1.4  = Force!<lazy>       !vr   %1.2,    <env->
dependent slot

Type#1 [used] env-
val?            %1.5  = StaticCall         !v    asNamespace[0x560a570c4330](%1.4, false) { 0 1n } e1.3   <env->
void                    Assume             D     %1.8, %1.9 (Typecheck@0x560a56367f30[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] env-
val?            %2.4  = Extract2_1D        wed   %2.3, ".__NAMESPACE__.", elided   <env->
dependent slot

Type#4 [used] val?+ (polluted)
val?            %2.7  = Force!<lazy>       !v    %2.6, e1.3   <val?+>
void                    Assume             D     %6.0, %4.8 (Typecheck@0x560a56367f30[Type#4])
exact match
checkFor: val?+, static: val?, feedback: val?+, expected: val?+, required: val?+

Type#5 [used] env-
val?^ | miss    %4.0  = LdVar              eR    info !upd, e1.3
void                    Assume             D     %4.1, %2.8 (Typecheck@0x560a56367f30[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#6 [used] str$-
val?            %4.6  = Force!<value>      !v    %4.5, e1.3   <str$->
void                    Assume             D     %4.7, %4.8 (Typecheck@0x560a56367f30[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

======================= ClosureVersion: asNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 33
referenced non-empty: 27
read non-empty: 20
used: 4
present non-empty: 10

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 23
optimized away non-empty: 13
dependent: 19
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 0

----------------------
asNamespace [0x560a5662fe70]
referenced: 16
referenced non-empty: 12
read non-empty: 12
used: 3
present non-empty: 5

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 4
dependent: 7
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|env)+ (polluted)
val+            %1.2  = Force!<lazy>             %1.1,    <(str|env)+>
other unused reason

Type#2 [unused] lgl$-
lgl$#-          %1.3  = CallSafeBuiltin    wed   is.character(%1.2)    <lgl$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] lgl$-
lgl$#-          %26.0 = CallSafeBuiltin    wed   is.symbol(%1.2)    <lgl$->
dependent slot

Type#6 [unused] str$+
optimized away

Type#7 [unused] env-
val?            %25.0 = PopContext         C     %23.5, %23.1   <env->
dependent slot

Type#8 [unused] env-
optimized away (dependency)

Type#9 [used] lgl$-
val?            %7.9  = PopContext         C     %7.8, %7.4   <lgl$->
void                    Assume             D     %7.10, %7.11 (Typecheck@0x560a566a7520[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [used] lgl$-
val?            %10.1 = Force!<lazy>       !v    %10.0, e1.4   <lgl$->
void                    Assume             D     %10.2, %10.3 (Typecheck@0x560a566a7520[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#11 [unused] env-
optimized away (dependency)

Type#12 [used] lgl$-
val?            %15.2 = PopContext         C     %15.1, %13.4   <lgl$->
void                    Assume             D     %15.3, %15.4 (Typecheck@0x560a566a7520[Type#12])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#13 [unused] env-
val?            %19.2 = Force!<wrapped>    !     %19.0, e1.4   <env->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val?            %7.7  = Force!<lazy>       !vrL  %7.5, e7.6   <env->
other unused reason

----------------------
Inlinee: getNamespace [0x560a572728f0]
referenced: 5
referenced non-empty: 3
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
val?            %23.4 = Force!<lazy>       !vr   %23.2,    <str$+>
other unused reason

Type#1 [unused] env-
val?            %23.5 = CallBuiltin        !v    getRegisteredNamespace(%23.4) e23.3   <env->
dependent slot

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

----------------------
Inlinee: isBaseNamespace [0x560a5643a450]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %13.16 = PopContext         C     %13.15, %13.9   <lgl$->
void                    Assume             D     %13.17, %13.18 (Typecheck@0x560a565938d0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val?+ (polluted)
val?            %13.13 = Force!<lazy>       !vL   %13.11, e13.12   <val?+>
dependent slot

Type#1 [unused] val?+ (polluted)
val?            %13.14 = Force!<lazy>       !vL   %13.10, e13.12   <val?+>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: .getNamespaceInfo (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: .getNamespaceInfo (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 2
present non-empty: 2

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 1
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
.getNamespaceInfo [0x560a5649a8c0]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 2
present non-empty: 2

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 1
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env-
val+            %1.2  = Force!<lazy>       !vr   %1.1,    <env->
dependent slot

Type#1 [used] env-
val?            %1.3  = Extract2_1D        wed   %1.2, ".__NAMESPACE__.", elided   <env->
void                    Assume             D     %1.5, %1.8 (Typecheck@0x560a56567c00[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] $#-
optimized away

Type#3 [used] str$-
val+            %1.6  = Force!<value>            %1.0,    <str$->
void                    Assume             D     %1.7, %1.8 (Typecheck@0x560a56567c00[Type#3])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: str$-, expected: str$-, required: val?+

Type#4 [unused] val?+ (polluted)
val?            %2.5  = Extract2_1D        wed   %2.2, %2.4, elided   <val?+>
other unused reason

*********************** Compilation session for: %in% (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: %in% (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 2
present non-empty: 3

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 6

Polluted
polluted: 5
used polluted: 1

----------------------
%in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] str+ (polluted)
val+            %1.3  = Force!<lazy>       !vr   %1.1,    <str+>
other unused reason

Type#1 [unused] (nil|str)- (polluted)
val+            %1.4  = Force!<lazy>       !vr   %1.0,    <(nil|str)->
other unused reason

Type#2 [used] int- (polluted)
val+            %2.2  = CallSafeBuiltin    wed   match(%1.3, %2.1, 0L, nil)    <int->
void                    Assume             D     %2.3, %2.4 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val+, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %4.3  = Gt                 vwed  %4.2, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: match [0x560a55e4d070]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str+ (polluted)
optimized away

Type#1 [used] str-
val+            %1.4  = Force!<lazy>       !vr   %1.0,    <(nil|str)->
void                    Assume             D     %1.5, %1.6 (Typecheck@0x560a55e4cf60[Type#1])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: str-, expected: str-, required: val?+

Type#2 [unused] int$-
optimized away

Type#3 [unused] nil-
optimized away

*********************** Compilation session for: character (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: character (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
character [0x560a55e4c150]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] int$-
optimized away

*********************** Compilation session for: readRDS (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1) ***********************
======================= ClosureVersion: readRDS (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1) =======================
referenced: 21
referenced non-empty: 11
read non-empty: 11
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 11
optimized away non-empty: 3
dependent: 8
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

----------------------
readRDS [0x560a55e88220]
referenced: 16
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 1
dependent: 4
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$-
val+            %1.2  = Force!<lazy>       !vr   %1.0,    <str$->
dependent slot

Type#2 [unused] lgl$-
lgl$#-          %1.3  = CallSafeBuiltin    wed   is.character(%1.2)    <lgl$->
other unused reason

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] str$-
optimized away (dependency)

Type#11 [unused] int$
val?            %2.13 = PopContext         C     %2.12, %2.1   <int$>
dependent slot

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] int$
val?            %2.19 = Force!<value>      !v    %2.18, e1.1   <int$>
dependent slot

Type#15 [unused] nil-
val?            %2.21 = Force!<lazy>       !v    %2.20, e1.1   <nil->
other unused reason

----------------------
Inlinee: gzfile [0x560a55e8b430]
referenced: 5
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] str$-
val?            %2.8  = Force!<lazy>       !vr   %2.2,    <str$->
dependent slot

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] str$-
val?            %2.9  = Force!<lazy>       !v    %2.5, e2.3   <str$->
dependent slot

Type#4 [unused] real$-
val?            %2.11 = Force!<lazy>       !v    %2.10, e2.3   <real$->
other unused reason

*********************** Compilation session for: isTRUE (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: isTRUE (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 7
used: 4
present non-empty: 1

Used
exact match: 3
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

----------------------
isTRUE [0x560a55e9e1e0]
referenced: 11
referenced non-empty: 8
read non-empty: 7
used: 4
present non-empty: 1

Used
exact match: 3
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] (nil|lgl)- (polluted)
val?            %1.2  = Force!<lazy>       !vL   %1.0, e1.1   <(nil|lgl)->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a55e9bc50[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (nil|lgl)-, expected: (nil|lgl)-, required: val?^ | miss

Type#2 [used] lgl$-
val+            %2.4  = CallSafeBuiltin    vwed  is.logical(%2.1)    <lgl$->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a55e9bc50[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?-           %2.1  = CastType           d     dn %1.2   <(nil|lgl)->
void                    Assume             D     %5.0, %2.6 (Typecheck@0x560a55e9bc50[Type#4])
exact match
checkFor: lgl$-, static: val?-, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?-           %2.1  = CastType           d     dn %1.2   <(nil|lgl)->
void                    Assume             D     %7.0, %2.6 (Typecheck@0x560a55e9bc50[Type#8])
exact match
checkFor: lgl$-, static: val?-, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %7.3  = CallSafeBuiltin    vwed  is.na(%7.2)    <lgl$->
dependent slot

Type#10 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: FUN (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: FUN (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 3
referenced non-empty: 3
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

----------------------
FUN [0x560a55f1abc0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] int-
optimized away

Type#1 [unused] str-
val?            %2.11 = PopContext         C     %2.10, %2.6   <str->
other unused reason

----------------------
Inlinee: sprintf [0x560a55effc10]
referenced: 1
referenced non-empty: 1
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

*********************** Compilation session for: FUN (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) ***********************
======================= ClosureVersion: FUN (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) =======================
referenced: 8
referenced non-empty: 8
read non-empty: 5
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 5
dependent: 2
other reasons unused non-empty: 6

Polluted
polluted: 2
used polluted: 0

----------------------
FUN [0x560a55f1b8c0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str-
optimized away (dependency)

Type#1 [unused] int$-
optimized away

Type#2 [unused] str-
val?            %2.7  = Call               !v    %2.4(%2.5, "0", %2.6) e2.3   <str->
dependent slot

Type#3 [unused] str$-
val+            %2.9  = CallSafeBuiltin    vwed  paste(%2.8, " ", "", false)    <str$->
other unused reason

----------------------
Inlinee: paste [0x560a55fd8390]
referenced: 4
referenced non-empty: 4
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec- (polluted)
val+            %2.8  = CallSafeBuiltin    wed   list(%2.7)    <vec->
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] (nil|str)- (polluted)
optimized away

Type#3 [unused] lgl$-
optimized away

*********************** Compilation session for: strlpad (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: strlpad (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 11
referenced non-empty: 11
read non-empty: 9
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 11
optimized away non-empty: 9
dependent: 6
other reasons unused non-empty: 5

Polluted
polluted: 0
used polluted: 0

----------------------
strlpad [0x560a55f198f0]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 7
dependent: 6
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] int$-
optimized away

Type#2 [unused] str-
optimized away (dependency)

Type#3 [unused] int-
optimized away (dependency)

Type#4 [unused] int-
optimized away (dependency)

Type#5 [unused] str-
optimized away (dependency)

Type#6 [unused] str-
optimized away (dependency)

Type#7 [unused] str-
val?            %2.15 = PopContext         C     %2.14, %2.7   <str->
dependent slot

----------------------
Inlinee: paste0 [0x560a55fc8790]
referenced: 3
referenced non-empty: 3
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec-
val+            %2.13 = CallSafeBuiltin    wed   list(%2.11, %2.12)    <vec->
other unused reason

Type#1 [unused] nil-
optimized away

Type#2 [unused] lgl$-
optimized away

*********************** Compilation session for: which (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2) ***********************
======================= ClosureVersion: which (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2) =======================
referenced: 12
referenced non-empty: 3
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
which [0x560a56086380]
referenced: 12
referenced non-empty: 3
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [used] lgl-
val+            %1.1  = Force!<lazy>       !vr   %1.0,    <lgl->
void                    Assume             D     %1.2, %1.3 (Typecheck@0x560a560cb7f0[Type#0])
exact match
checkFor: lgl-, static: val+, feedback: lgl-, expected: lgl-, required: val?^ | miss

Type#1 [unused] lgl$-
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] int-
val+            %2.2  = CallSafeBuiltin    wed   which(%2.1)    <int->
other unused reason

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: rep.int (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: rep.int (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 2
present non-empty: 0

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 2

----------------------
rep.int [0x560a55ef9c20]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 2
present non-empty: 0

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 2

Type#0 [used] (int|vec)- (polluted)
val?            %1.3  = Force!<lazy>       !vL   %1.1, e1.2   <(int|vec)->
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a55ef47e0[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (int|vec)-, expected: (int|vec)-, required: val?^ | miss

Type#1 [used] int- (polluted)
val?            %2.4  = Force!<lazy>       !vL   %1.0, e1.2   <int->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a55ef47e0[Type#1])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?^ | miss

*********************** Compilation session for: new.env (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0 miss: 1) ***********************
======================= ClosureVersion: new.env (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0 miss: 1) =======================
referenced: 4
referenced non-empty: 4
read non-empty: 3
used: 2
present non-empty: 0

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

----------------------
new.env [0x560a5671c500]
referenced: 4
referenced non-empty: 4
read non-empty: 3
used: 2
present non-empty: 0

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] env-
optimized away

Type#1 [used] lgl$-
val+            %1.2  = Force<lazy>              %1.1,    <lgl$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a56e31360[Type#1])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [used] env+ (polluted)
val?            %2.3  = Force!<lazy>       !vL   %1.0, e2.2   <env+>
void                    Assume             D     %2.4, %2.5 (Typecheck@0x560a56e31360[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: env+, expected: env+, required: val?^ | miss

Type#3 [unused] int$-
optimized away

*********************** Compilation session for: asNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: asNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 33
referenced non-empty: 27
read non-empty: 26
used: 4
present non-empty: 10

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 23
optimized away non-empty: 13
dependent: 19
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 0

----------------------
asNamespace [0x560a5662fe70]
referenced: 16
referenced non-empty: 12
read non-empty: 12
used: 3
present non-empty: 5

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 4
dependent: 7
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|env)+ (polluted)
val+            %1.3  = Force!<lazy>       !vr   %1.1,    <(str|env)+>
other unused reason

Type#2 [unused] lgl$-
lgl$#-          %1.4  = CallSafeBuiltin    wed   is.character(%1.3)    <lgl$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] lgl$-
lgl$#-          %26.0 = CallSafeBuiltin    wed   is.symbol(%1.3)    <lgl$->
dependent slot

Type#6 [unused] str$+
optimized away

Type#7 [unused] env-
val?            %25.0 = PopContext         C     %23.5, %23.1   <env->
dependent slot

Type#8 [unused] env-
optimized away (dependency)

Type#9 [used] lgl$-
val?            %7.9  = PopContext         C     %7.8, %7.4   <lgl$->
void                    Assume             D     %7.10, %7.11 (Typecheck@0x560a566a7520[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [used] lgl$-
val?            %10.1 = Force!<lazy>       !v    %10.0, e1.2   <lgl$->
void                    Assume             D     %10.2, %10.3 (Typecheck@0x560a566a7520[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#11 [unused] env-
optimized away (dependency)

Type#12 [used] lgl$-
val?            %15.2 = PopContext         C     %15.1, %13.4   <lgl$->
void                    Assume             D     %15.3, %15.4 (Typecheck@0x560a566a7520[Type#12])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#13 [unused] env-
val?            %19.2 = Force!<wrapped>    !     %19.0, e1.2   <env->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: isBaseNamespace [0x560a5643a450]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %13.16 = PopContext         C     %13.15, %13.9   <lgl$->
void                    Assume             D     %13.17, %13.18 (Typecheck@0x560a565938d0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: getNamespace [0x560a572728f0]
referenced: 5
referenced non-empty: 3
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
val?            %23.4 = Force!<lazy>       !vr   %23.2,    <str$+>
other unused reason

Type#1 [unused] env-
val?            %23.5 = CallBuiltin        !v    getRegisteredNamespace(%23.4) e23.3   <env->
dependent slot

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

----------------------
Inlinee: isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val?            %7.7  = Force!<lazy>       !vrL  %7.5, e7.6   <env->
other unused reason

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val?+ (polluted)
val?            %13.13 = Force!<lazy>       !vL   %13.11, e13.12   <val?+>
dependent slot

Type#1 [unused] val?+ (polluted)
val?            %13.14 = Force!<lazy>       !vL   %13.10, e13.12   <val?+>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: is.vector (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: is.vector (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
is.vector [0x560a55e6f180]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (str|vec) (polluted)
val?            %1.2  = Force!<lazy>       !vL   %1.0, e1.1   <(str|vec)>
other unused reason

Type#1 [unused] str$-
optimized away

*********************** Compilation session for: .standard_regexps (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: .standard_regexps (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
.standard_regexps [0x560a55e49ba0]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec+
val?            %1.2  = NamedCall          !     <blt list>(valid_package_name="[[:alpha:]][[:alnum:].]*[[:alnum:]]", valid_package_version="([[:digit:]]+[.-]){1,}[[:digit:]]+", valid_R_system_version="[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+", valid_numeric_version="([[:digit:]]+[.-])*[[:digit:]]+") e1.1   <vec+>
other unused reason

*********************** Compilation session for: getOption (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0 miss: 1) ***********************
======================= ClosureVersion: getOption (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0 miss: 1) =======================
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
getOption [0x560a55e8e470]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] nil-
val?            %4.0  = CallBuiltin        !v    getOption(%1.1) e1.2   <nil->
other unused reason

Type#2 [unused] $#-
optimized away

Type#3 [unused] lgl$-
val?            %5.2  = Force!<value>      !     %5.0, e1.2   <lgl$->
other unused reason

Type#4 [unused] str$-
val+            %1.1  = Force                    %1.0,    <str$->
dependent slot

*********************** Compilation session for: grepl (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 4) ***********************
======================= ClosureVersion: grepl (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 4) =======================
referenced: 56
referenced non-empty: 16
read non-empty: 16
used: 3
present non-empty: 9

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 13
optimized away non-empty: 4
dependent: 9
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

----------------------
grepl [0x560a55ec7ff0]
referenced: 51
referenced non-empty: 11
read non-empty: 11
used: 2
present non-empty: 8

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 1
dependent: 9
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away (dependency)

Type#1 [used] lgl$-
val?            %2.2  = PopContext         C     %2.1, %1.4   <lgl$->
void                    Assume             D     %2.3, %2.4 (Typecheck@0x560a55ec7ed0[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$+
val?            %9.4  = Force!<wrapped>    !v    %9.3, e1.2   <str$+>
dependent slot

Type#13 [unused] lgl$-
lgl$#-          %9.5  = CallSafeBuiltin    wed   is.character(%9.4)    <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [used] str$-
val?            %17.4 = Force!<lazy>       !v    %17.3, e1.2   <str$->
void                    Assume             D     %17.5, %17.6 (Typecheck@0x560a55ec7ed0[Type#18])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#19 [unused] str$-
val+            %19.2 = CallSafeBuiltin    wed   as.character(%19.1)    <str$->
dependent slot

Type#20 [unused] str$+
val?            %19.4 = Force!<wrapped>    !v    %19.3, e1.2   <str$+>
dependent slot

Type#21 [unused] lgl$-
val?            %19.6 = Force!<lazy>       !v    %19.5, e1.2   <lgl$->
dependent slot

Type#22 [unused] lgl$-
val?            %19.8 = Force!<lazy>       !v    %19.7, e1.2   <lgl$->
dependent slot

Type#23 [unused] lgl$-
val?            %19.10 = Force!<lazy>       !v    %19.9, e1.2   <lgl$->
dependent slot

Type#24 [unused] lgl$-
val?            %19.12 = Force!<lazy>       !v    %19.11, e1.2   <lgl$->
dependent slot

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %1.11 = Force!<lazy>       !vr   %1.9,    <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: is.factor [0x560a55ec8200]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (int|str)+ (polluted)
optimized away

Type#1 [used] lgl$-
val?            %1.13 = PopContext         C     %1.12, %1.8   <lgl$->
void                    Assume             D     %1.14, %1.15 (Typecheck@0x560a55ec8110[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: unique (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) ***********************
======================= ClosureVersion: unique (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
unique [0x560a55e49770]
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

*********************** Compilation session for: unlist (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 1) ***********************
======================= ClosureVersion: unlist (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 1) =======================
referenced: 27
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 0
dependent: 5
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

----------------------
unlist [0x560a55eb29b0]
referenced: 27
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 0
dependent: 5
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec+ (polluted)
val+            %1.5  = Force!<lazy>       !vr   %1.1,    <vec+>
dependent slot

Type#1 [unused] lgl$-
val+            %1.6  = Force!<lazy>             %1.0,    <lgl$->
dependent slot

Type#2 [unused] vec+ (polluted)
val?            %6.1  = Force!<wrapped>    !v    %6.0, e1.2   <vec+>
dependent slot

Type#3 [unused] lgl$-
val?            %6.3  = Force!<wrapped>    !v    %6.2, e1.2   <lgl$->
dependent slot

Type#4 [unused] lgl$-
val?            %6.5  = Force!<lazy>       !v    %6.4, e1.2   <lgl$->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: lapply (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: lapply (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 17
referenced non-empty: 16
read non-empty: 15
used: 0
present non-empty: 9

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 16
optimized away non-empty: 7
dependent: 13
other reasons unused non-empty: 3

Polluted
polluted: 9
used polluted: 0

----------------------
lapply [0x560a55e69d00]
referenced: 15
referenced non-empty: 14
read non-empty: 14
used: 0
present non-empty: 9

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 5
dependent: 13
other reasons unused non-empty: 1

Polluted
polluted: 8
used polluted: 0

Type#0 [unused] (cls|blt)- (polluted)
optimized away (dependency)

Type#1 [unused] (cls|blt)- (polluted)
val?            %1.4  = StaticCall         !v    match.fun[0x560a58288ab0](%1.3) e1.2   <(cls|blt)->
dependent slot

Type#2 [unused] (str|vec) (polluted)
val?            %2.4  = Force!<lazy>       !v    %2.3, e1.2   <(str|vec)>
dependent slot

Type#3 [unused] lgl$-
lgl$#-          %2.5  = CallSafeBuiltin    wed   is.vector(%2.4, "any")    <lgl$->
dependent slot

Type#4 [unused] $#-
optimized away

Type#5 [unused] (str|vec)+ (polluted)
val?            %15.4 = Force!<wrapped>    !v    %15.3, e1.2   <(str|vec)+>
other unused reason

Type#6 [unused] lgl$-
lgl$#-          %15.5 = CallSafeBuiltin    wed   is.object(%15.4)    <lgl$->
dependent slot

Type#7 [unused] vec
val?            %14.4 = Force!<wrapped>    !v    %14.3, e1.2   <vec>
dependent slot

Type#8 [unused] vec
val?            %14.5 = StaticCall         !v    as.list[0x560a582441d0](%14.4) { 0 } e1.2   <vec>
dependent slot

Type#9 [unused] (str|vec) (polluted)
val?            %10.1 = Force!<wrapped>    !v    %10.0, e1.2   <(str|vec)>
dependent slot

Type#10 [unused] (str|vec) (polluted)
optimized away (dependency)

Type#11 [unused] int$-
optimized away (dependency)

Type#12 [unused] int$-
optimized away (dependency)

Type#13 [unused] val? (polluted)
optimized away (dependency)

Type#14 [unused] val? (polluted)
val?            %12.5 = NamedCall          !v    %12.1(%12.2, .xpandDotsTrigger=%12.4) e1.2   <val?>
dependent slot

----------------------
Inlinee: is.vector [0x560a55e6f180]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (str|vec) (polluted)
optimized away

Type#1 [unused] str$-
optimized away

======================= ClosureVersion: as.list (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0 miss: 1) =======================
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
as.list [0x560a573f45e0]
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

*********************** Compilation session for: setNamespaceInfo (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: setNamespaceInfo (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 7
referenced non-empty: 7
read non-empty: 7
used: 4
present non-empty: 2

Used
exact match: 1
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

----------------------
setNamespaceInfo [0x560a5678ac70]
referenced: 7
referenced non-empty: 7
read non-empty: 7
used: 4
present non-empty: 2

Used
exact match: 1
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] env-
val+            %1.4  = Force!<lazy>       !vr   %1.2,    <env->
dependent slot

Type#1 [used] env-
val?            %1.5  = StaticCall         !v    asNamespace[0x560a5844ceb0](%1.4, false) { 0 1n } e1.3   <env->
void                    Assume             D     %1.8, %1.9 (Typecheck@0x560a56367f30[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] env-
val?            %2.4  = Extract2_1D        wed   %2.3, ".__NAMESPACE__.", elided   <env->
dependent slot

Type#4 [used] val?+ (polluted)
val?            %2.7  = Force!<lazy>       !v    %2.6, e1.3   <val?+>
void                    Assume             D     %6.0, %4.8 (Typecheck@0x560a56367f30[Type#4])
exact match
checkFor: val?+, static: val?, feedback: val?+, expected: val?+, required: val?+

Type#5 [used] env-
val?^ | miss    %4.0  = LdVar              eR    info !upd, e1.3
void                    Assume             D     %4.1, %2.8 (Typecheck@0x560a56367f30[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#6 [used] str$-
val?            %4.6  = Force!<value>      !v    %4.5, e1.3   <str$->
void                    Assume             D     %4.7, %4.8 (Typecheck@0x560a56367f30[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

*********************** Compilation session for: getNamespaceName (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: getNamespaceName (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 23
referenced non-empty: 22
read non-empty: 22
used: 5
present non-empty: 6

Used
exact match: 2
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 17
optimized away non-empty: 11
dependent: 14
other reasons unused non-empty: 3

Polluted
polluted: 3
used polluted: 0

----------------------
getNamespaceName [0x560a5655f440]
referenced: 7
referenced non-empty: 7
read non-empty: 7
used: 2
present non-empty: 3

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
val?            %1.3  = StaticCall         !v    asNamespace[0x560a58456520](%1.2) e1.1   <env->
dependent slot

Type#2 [unused] env-
optimized away (dependency)

Type#3 [used] lgl$-
val?            %4.2  = PopContext         C     %4.1, %2.4   <lgl$->
void                    Assume             D     %4.3, %4.4 (Typecheck@0x560a55f9c630[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] env-
val?            %7.4  = Force!<value>      !v    %7.3, e1.1   <env->
dependent slot

Type#5 [used] str+
val?            %11.3 = Extract2_1D        wed   %11.2, "spec", elided   <val?+>
void                    Assume             D     %11.5, %11.6 (Typecheck@0x560a55f9c630[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?+

Type#6 [unused] str$+
val?            %13.3 = Extract1_1D        wed   %13.2, "name", elided   <str$+>
other unused reason

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val?+ (polluted)
val?            %2.13 = Force!<lazy>       !vL   %2.11, e2.12   <val?+>
dependent slot

Type#1 [unused] val?+ (polluted)
val?            %2.14 = Force!<lazy>       !vL   %2.10, e2.12   <val?+>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: .getNamespaceInfo [0x560a5649a8c0]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 2
present non-empty: 1

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [used] env-
val?            %7.4  = Force!<value>      !v    %7.3, e1.1   <env->
void                    Assume             D     %7.6, %7.7 (Typecheck@0x560a56567c00[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#1 [used] env-
val?            %9.3  = Extract2_1D        wed   %9.2, ".__NAMESPACE__.", elided   <env->
void                    Assume             D     %9.5, %9.6 (Typecheck@0x560a56567c00[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] $#-
optimized away

Type#3 [unused] str$-
optimized away

Type#4 [unused] val?+ (polluted)
val?            %11.3 = Extract2_1D        wed   %11.2, "spec", elided   <val?+>
other unused reason

----------------------
Inlinee: isBaseNamespace [0x560a5643a450]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %2.16 = PopContext         C     %2.15, %2.9   <lgl$->
void                    Assume             D     %2.17, %2.18 (Typecheck@0x560a565938d0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: %in% (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: %in% (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 2
present non-empty: 3

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 6

Polluted
polluted: 5
used polluted: 1

----------------------
%in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] str+ (polluted)
val+            %1.3  = Force!<lazy>       !vr   %1.1,    <str+>
other unused reason

Type#1 [unused] (nil|str)- (polluted)
val?            %1.4  = Force!<lazy>       !vL   %1.0, e1.2   <(nil|str)->
other unused reason

Type#2 [used] int- (polluted)
val+            %2.4  = CallSafeBuiltin    wed   match(%1.3, %2.3, 0L, nil)    <int->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val+, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %4.3  = Gt                 vwed  %4.2, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: match [0x560a55e4d070]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str+ (polluted)
optimized away

Type#1 [used] str-
val?            %1.4  = Force!<lazy>       !vL   %1.0, e1.2   <(nil|str)->
void                    Assume             D     %1.5, %1.6 (Typecheck@0x560a55e4cf60[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#2 [unused] int$-
optimized away

Type#3 [unused] nil-
optimized away

*********************** Compilation session for: startsWith (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: startsWith (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
startsWith [0x560a5664e750]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str+
val+            %1.3  = Force!<lazy>       !vr   %1.1,    <str+>
other unused reason

Type#1 [unused] str$-
val+            %1.4  = Force!<value>            %1.0,    <str$->
other unused reason

*********************** Compilation session for: dynGet (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 2) ***********************
======================= ClosureVersion: sys.nframe (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 0
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
sys.nframe [0x560a562e8030]
referenced: 0
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

======================= ClosureVersion: sys.frame (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0,SimpleInt0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
sys.frame [0x560a562a50c0]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] int$-
int$-           %1.1  = Force!<lazy>             %1.0,    <int$->
other unused reason

======================= ClosureVersion: dynGet (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 2) =======================
referenced: 108
referenced non-empty: 70
read non-empty: 66
used: 17
present non-empty: 27

Used
exact match: 11
widened: 6
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 53
optimized away non-empty: 26
dependent: 47
other reasons unused non-empty: 6

Polluted
polluted: 12
used polluted: 3

----------------------
dynGet [0x560a562d4a40]
referenced: 41
referenced non-empty: 35
read non-empty: 35
used: 9
present non-empty: 9

Used
exact match: 7
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 17
dependent: 25
other reasons unused non-empty: 1

Polluted
polluted: 3
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] int$-
val?            %1.3  = StaticCall         !v    sys.nframe[0x560a58581710]() e1.2   <int$->
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a563af3d0[Type#4])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#5 [unused] raw$-
optimized away

Type#6 [unused] vec$+
optimized away (dependency)

Type#7 [unused] vec$+
val?            %11.2 = PopContext         C     %11.1, %4.5   <vec$+>
dependent slot

Type#8 [used] int$-
val?^ | miss    %13.0 = LdVar              eR    n, e1.2
void                    Assume             D     %13.1, %11.4 (Typecheck@0x560a563af3d0[Type#8])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#9 [used] int$-
val?            %13.5 = Force!<lazy>       !v    %13.4, e1.2   <int$->
void                    Assume             D     %13.6, %13.7 (Typecheck@0x560a563af3d0[Type#9])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?+

Type#10 [unused] lgl$-
lgl$-           %15.2 = Gt                 d     %13.3, %15.1, elided   <lgl$->
dependent slot

Type#11 [used] int$-
val?^ | miss    %15.5 = LdVar              eR    n, e1.2
void                    Assume             D     %15.6, %13.7 (Typecheck@0x560a563af3d0[Type#11])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#12 [unused] int$-
int$-           %15.9 = Sub                d     %15.8, 1L, elided   <int$->
dependent slot

Type#13 [unused] int$-
optimized away (dependency)

Type#14 [unused] env-
val?            %17.3 = StaticCall         !v    sys.frame[0x560a585c84a0](%15.9) e1.2   <env->
dependent slot

Type#15 [unused] str$-
optimized away (dependency)

Type#16 [unused] env-
optimized away (dependency)

Type#17 [unused] lgl$-
optimized away (dependency)

Type#18 [unused] vec$+
optimized away (dependency)

Type#19 [unused] vec$+
val?            %19.7 = StaticCall         !v    get0[0x560a582d4720](%19.3, %19.4, missingArg, %19.5, %19.6) { 0 1n 3n 4n } e1.2   <vec$+>
dependent slot

Type#20 [unused] vec$+
optimized away (dependency)

Type#21 [unused] vec$+
optimized away (dependency)

Type#22 [used] lgl$-
val?            %21.11 = PopContext         C     %21.10, %21.5   <lgl$->
void                    Assume             D     %21.12, %21.13 (Typecheck@0x560a563af3d0[Type#22])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [used] int$-
val?^ | miss    %27.0 = LdVar              eR    n, e1.2
void                    Assume             D     %27.1, %25.0 (Typecheck@0x560a563af3d0[Type#24])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#25 [used] int$-
val?^ | miss    %27.4 = LdVar              eR    minframe, e1.2
void                    Assume             D     %27.5, %25.0 (Typecheck2@0x560a563af3d0[Type#25])
narrowed with static type: no
widened: yes
checkFor: int$~-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?+

Type#26 [unused] lgl$-
lgl$-           %27.9 = Gt                 d     %27.3, %27.8, elided   <lgl$->
dependent slot

Type#27 [unused] int$-
optimized away (dependency)

Type#28 [unused] int$-
int$-           %30.0 = Sub                d     %27.3, 1L, elided   <int$->
dependent slot

Type#29 [unused] int$-
optimized away (dependency)

Type#30 [unused] env-
val?            %32.3 = StaticCall         !v    sys.frame[0x560a585c84a0](%30.0) e1.2   <env->
dependent slot

Type#31 [unused] str$-
optimized away (dependency)

Type#32 [unused] env-
optimized away (dependency)

Type#33 [unused] lgl$-
optimized away (dependency)

Type#34 [unused] vec$+
optimized away (dependency)

Type#35 [unused] (str|vec)+ (polluted)
val?            %34.7 = StaticCall         !v    get0[0x560a582d4720](%34.3, %34.4, missingArg, %34.5, %34.6) { 0 1n 3n 4n } e1.2   <(str|vec)+>
dependent slot

Type#36 [unused] (str|vec)+ (polluted)
optimized away (dependency)

Type#37 [unused] vec$+
optimized away (dependency)

Type#38 [used] lgl$-
val?            %36.25 = PopContext         C     %36.24, %36.5   <lgl$->
void                    Assume             D     %36.26, %36.27 (Typecheck@0x560a563af3d0[Type#38])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#39 [used] (str|vec)+ (polluted)
val?^ | miss    %40.0 = LdVar              eR    r, e1.2
void                    Assume             D     %40.1, %36.27 (Typecheck@0x560a563af3d0[Type#39])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: (str|vec)+, expected: (str|vec)+, required: val?^ | miss

Type#40 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: match [0x560a55e4d070]
referenced: 4
referenced non-empty: 4
read non-empty: 3
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 4
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str+ (polluted)
optimized away

Type#1 [unused] str-
optimized away

Type#2 [unused] int$-
optimized away

Type#3 [unused] nil-
optimized away

----------------------
Inlinee: structure [0x560a55eda070]
referenced: 55
referenced non-empty: 23
read non-empty: 20
used: 8
present non-empty: 10

Used
exact match: 4
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 5
dependent: 14
other reasons unused non-empty: 1

Polluted
polluted: 6
used polluted: 2

Type#0 [unused] (str|vec)+ (polluted)
val?            %4.8  = Force!<lazy>       !vL   %4.6, e4.7   <(str|vec)+>
dependent slot

Type#1 [used] vec+
val?            %5.0  = NamedCall          !v    <blt list>(foo=47L) e4.7   <vec+>
void                    Assume             D     %5.2, %5.3 (Typecheck@0x560a55eda190[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec+
optimized away (dependency)

Type#4 [used] int$-
(int|real)$-    %7.6  = CallSafeBuiltin    wed   length(%7.5)    <int$->
void                    Assume             D     %7.7, %7.8 (Typecheck@0x560a55eda190[Type#4])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#5 [unused] str-
str-            %42.3 = CallSafeBuiltin    wed   c(".Dim", ".Dimnames", ".Names", ".Tsp", ".Label")    <str->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] vec+
optimized away (dependency)

Type#8 [unused] str-
val+            %44.3 = CallSafeBuiltin    wed   names(%7.5)    <str->
dependent slot

Type#9 [unused] str-
optimized away (dependency)

Type#10 [unused] str-
optimized away (dependency)

Type#11 [used] int-
val+            %46.3 = CallSafeBuiltin    wed   match(%44.3, %42.3, NA, nil)    <int->
void                    Assume             D     %46.5, %46.6 (Typecheck@0x560a55eda190[Type#11])
exact match
checkFor: int-, static: val+, feedback: int-, expected: int-, required: val?+

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] int-
optimized away (dependency)

Type#14 [unused] lgl-
lgl-            %48.5 = CallSafeBuiltin    wed   is.na(%48.4)    <lgl->
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] lgl-
lgl-            %48.6 = Not                wed   %48.5, elided   <lgl->
dependent slot

Type#17 [used] lgl$-
val?            %50.3 = CallBuiltin        !v    any(%48.6) e4.7   <lgl$->
void                    Assume             D     %50.4, %50.5 (Typecheck@0x560a55eda190[Type#17])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [used] (nil|str)- (polluted)
val?            %53.5 = NamedCall          !v    %53.3(%53.4, "class", exact=true) e4.7   <(nil|str)->
void                    Assume             D     %53.6, %53.7 (Typecheck@0x560a55eda190[Type#38])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (nil|str)-, expected: (nil|str)-, required: val?+

Type#39 [unused] lgl-
lgl-            %55.2 = Eq                 wed   %55.1, "factor", elided   <lgl->
dependent slot

Type#40 [used] lgl$-
val?            %55.3 = CallBuiltin        !v    any(%55.2) e4.7   <lgl$->
void                    Assume             D     %55.4, %55.5 (Typecheck@0x560a55eda190[Type#40])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] (str|vec)+ (polluted)
val?            %60.7 = Force!<wrapped>    !v    %60.6, e4.7   <(str|vec)+>
dependent slot

Type#50 [used] (nil|vec)+ (polluted)
val?            %60.8 = CallBuiltin        !v    attributes(%60.7) e4.7   <(nil|vec)+>
void                    Assume             D     %60.9, %60.10 (Typecheck@0x560a55eda190[Type#50])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: (nil|vec)+, expected: (nil|vec)+, required: val?+

Type#51 [used] vec+
val?^ | miss    %62.0 = LdVar              eR    attrib, e4.7
void                    Assume             D     %62.1, %60.10 (Typecheck@0x560a55eda190[Type#51])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: vec+, expected: vec+, required: val?^ | miss

Type#52 [unused] vec+
val+            %62.7 = CallSafeBuiltin    wed   c(%62.6, %62.4)    <vec+>
dependent slot

Type#53 [unused] (str|vec)+ (polluted)
val?            %62.10 = Force!<wrapped>    !v    %62.9, e4.7   <(str|vec)+>
dependent slot

Type#54 [unused] (str|vec) (polluted)
val?            %11.1 = Force!<value>      !v    %11.0, e4.7   <(str|vec)>
other unused reason

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 0
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val?+ (polluted)
val?            %36.9 = Force!<lazy>       !vr   %36.7, e36.8   <val?+>
dependent slot

Type#1 [unused] val?+ (polluted)
val?            %36.11 = Force!<lazy>       !v    %36.10, e36.8   <val?+>
dependent slot

Type#2 [unused] lgl$-
val?            %36.13 = Force!<lazy>       !v    %36.12, e36.8   <lgl$->
dependent slot

Type#3 [unused] lgl$-
val?            %36.15 = Force!<lazy>       !v    %36.14, e36.8   <lgl$->
dependent slot

Type#4 [unused] lgl$-
val?            %36.17 = Force!<lazy>       !v    %36.16, e36.8   <lgl$->
dependent slot

Type#5 [unused] lgl$-
val?            %36.19 = Force!<lazy>       !v    %36.18, e36.8   <lgl$->
dependent slot

Type#6 [unused] lgl$-
val?            %36.21 = Force!<lazy>       !v    %36.20, e36.8   <lgl$->
dependent slot

Type#7 [unused] lgl$-
val?            %36.23 = Force!<lazy>       !v    %36.22, e36.8   <lgl$->
dependent slot

======================= ClosureVersion: get0 (CorrOrd,!TMany,Argmatch;Eager2,NonRefl1,NonRefl2) =======================
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

----------------------
get0 [0x560a56361ae0]
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

Type#0 [unused] $#-
optimized away

Type#1 [used] str$+ (polluted)
val?            %9.1  = Force!<lazy>       !v    %9.0, e1.7   <str$+>
void                    Assume             D     %9.2, %9.3 (Typecheck@0x560a563ebd40[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#2 [unused] env+ (polluted)
val?            %11.3 = Force!<lazy>       !v    %11.2, e1.7   <env+>
other unused reason

Type#3 [unused] str$-
val?            %11.5 = Force!<lazy>       !v    %11.4, e1.7   <str$->
other unused reason

Type#4 [unused] lgl$-
val?            %11.7 = Force!<lazy>       !v    %11.6, e1.7   <lgl$->
other unused reason

Type#5 [unused] (nil|vec)+ (polluted)
val?            %11.9 = Force!<lazy>       !v    %11.8, e1.7   <(nil|vec)+>
other unused reason

*********************** Compilation session for: environmentIsLocked (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: environmentIsLocked (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
environmentIsLocked [0x560a566af530]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val+            %1.2  = Force!<lazy>       !vr   %1.0,    <env->
other unused reason

*********************** Compilation session for: strsplit (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2 miss: 2) ***********************
======================= ClosureVersion: strsplit (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2 miss: 2) =======================
referenced: 7
referenced non-empty: 6
read non-empty: 4
used: 2
present non-empty: 2

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 4
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
strsplit [0x560a55f04d60]
referenced: 7
referenced non-empty: 6
read non-empty: 4
used: 2
present non-empty: 2

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 4
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val+            %1.3  = Force!<lazy>       !vr   %1.2,    <str$->
dependent slot

Type#1 [unused] $#-
optimized away

Type#2 [used] str$-
val+            %1.4  = Force!<value>            %1.1,    <str$->
void                    Assume             D     %1.5, %1.7 (Typecheck@0x560a55f05820[Type#2])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: str$-, expected: str$-, required: val?+

Type#3 [unused] str$-
val+            %2.2  = CallSafeBuiltin    wed   as.character(%2.1)    <str$->
dependent slot

Type#4 [used] lgl$-
val+            %1.6  = Force!<lazy>             %1.0,    <lgl$->
void                    Assume             D     %4.0, %2.3 (Typecheck@0x560a55f05820[Type#4])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: parent.frame (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: parent.frame (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
parent.frame [0x560a55e7fb30]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] real$-
optimized away

*********************** Compilation session for: getNamespaceInfo (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: getNamespaceInfo (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 3
dependent: 4
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
getNamespaceInfo [0x560a566d4080]
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 3
dependent: 4
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env-
val+            %1.4  = Force!<lazy>       !r    %1.1,    <env->
dependent slot

Type#1 [unused] env-
val?            %1.5  = StaticCall         !     asNamespace[0x560a58d3a820](%1.4, false) { 0 1n } e1.3   <env->
dependent slot

Type#2 [unused] str$-
optimized away

Type#3 [unused] env-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] (str|env)_ (polluted)
val?            %2.5  = StaticCall         !     get[0x560a58d35020](%2.3, missingArg, %2.4) { 0 2n } e1.3   <(str|env)_>
other unused reason

======================= ClosureVersion: get (CorrOrd,!TMany,Argmatch;Eager1,NonRefl1 miss: 2) =======================
referenced: 6
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 1

----------------------
get [0x560a56b53b40]
referenced: 6
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] str$+ (polluted)
val?            %5.3  = Force!<lazy>       !v    %5.2, e1.5   <str$+>
void                    Assume             D     %5.4, %5.5 (Typecheck@0x560a56e45650[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#3 [unused] env-
val?            %7.3  = Force!<lazy>       !v    %7.2, e1.5   <env->
other unused reason

Type#4 [unused] str$-
val?            %7.5  = Force!<lazy>       !v    %7.4, e1.5   <str$->
other unused reason

Type#5 [unused] lgl$-
val?            %7.7  = Force!<lazy>       !v    %7.6, e1.5   <lgl$->
other unused reason

*********************** Compilation session for: environment (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: environment (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
environment [0x560a55e84a10]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|cls)- (polluted)
optimized away

*********************** Compilation session for: FUN (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) ***********************
======================= ClosureVersion: FUN (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 3
present non-empty: 1

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
FUN [0x560a577a5ee0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 3
present non-empty: 1

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec
val?            %1.1  = Force<wrapped>           %1.0,    <vec>
other unused reason

Type#1 [used] str$-
val?            %2.2  = Extract2_1D        !v    %1.1, "path", e2.1   <str$->
void                    Assume             D     %2.3, %2.4 (Typecheck@0x560a574cd5f0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#2 [used] str$-
val?^ | miss    %4.0  = LdVar              eR    file, e2.1
void                    Assume             D     %4.1, %2.4 (Typecheck@0x560a574cd5f0[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#3 [used] lgl$-
lgl-            %4.8  = Eq                 vwed  %4.7, %4.5, elided   <lgl$->
void                    Assume             D     %4.9, %4.10 (Typecheck@0x560a574cd5f0[Type#3])
exact match
checkFor: lgl$-, static: lgl-, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: FUN (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: FUN (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 40
referenced non-empty: 23
read non-empty: 21
used: 6
present non-empty: 6

Used
exact match: 1
widened: 5
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 17
optimized away non-empty: 11
dependent: 14
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 0

----------------------
FUN [0x560a562d7200]
referenced: 37
referenced non-empty: 20
read non-empty: 20
used: 6
present non-empty: 5

Used
exact match: 1
widened: 5
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 9
dependent: 14
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] str-
optimized away (dependency)

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] vec
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$-
optimized away (dependency)

Type#5 [unused] str-
optimized away (dependency)

Type#6 [unused] str$-
optimized away (dependency)

Type#7 [unused] str$-
val?            %2.18 = PopContext         C     %2.17, %2.8   <str$->
dependent slot

Type#8 [unused] str$-
optimized away (dependency)

Type#9 [unused] env-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %4.5  = StaticCall         !v    exists[0x560a58c85790](%4.3, missingArg, %4.4, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %4.6, %4.7 (Typecheck@0x560a560239b0[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] vec
val?            %7.1  = Force!<wrapped>    !v    %7.0, e2.3   <vec>
dependent slot

Type#12 [unused] env-
val?            %7.3  = Force!<wrapped>    !v    %7.2, e2.3   <env->
dependent slot

Type#13 [used] str$-
val?^ | miss    %9.0  = LdVar              eR    varName, e2.3
void                    Assume             D     %9.1, %7.4 (Typecheck@0x560a560239b0[Type#13])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [used] str-
val?^ | miss    %11.3 = LdVar              eR    varnames, e2.3
void                    Assume             D     %11.4, %9.7 (Typecheck@0x560a560239b0[Type#16])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#17 [used] str$-
val?^ | miss    %11.8 = LdVar              eR    varName, e2.3
void                    Assume             D     %11.9, %9.7 (Typecheck@0x560a560239b0[Type#17])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#18 [unused] str- (polluted)
val+            %11.13 = CallSafeBuiltin    wed   c(%11.7, %11.12)    <str->
dependent slot

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [used] str-
val?^ | miss    %13.3 = LdVar              eR    symnames, e2.3
void                    Assume             D     %13.4, %11.15 (Typecheck@0x560a560239b0[Type#23])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#24 [unused] vec
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [used] str$-
val?            %13.11 = Call               !v    %13.8(%13.9, %13.10) e2.3   <str$->
void                    Assume             D     %13.12, %13.13 (Typecheck@0x560a560239b0[Type#26])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#27 [unused] str- (polluted)
val+            %15.2 = CallSafeBuiltin    wed   c(%13.7, %15.1)    <str->
dependent slot

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: paste0 [0x560a55fc8790]
referenced: 3
referenced non-empty: 3
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec-
val+            %2.16 = CallSafeBuiltin    wed   list(%2.13, %2.14, %2.15)    <vec->
other unused reason

Type#1 [unused] nil-
optimized away

Type#2 [unused] lgl$-
optimized away

======================= ClosureVersion: exists (CorrOrd,!TMany,Argmatch;Eager1,Eager3,Eager4,Eager5,NonRefl0,NonRefl1,NonRefl3,NonRefl4,NonRefl5,!Obj5) =======================
referenced: 8
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 1
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
exists [0x560a572da620]
referenced: 8
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 1
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str$-
val?            %7.1  = Force!<lazy>       !vr   %7.0,    <str$->
void                    Assume             D     %7.2, %7.3 (Typecheck@0x560a574dece0[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

Type#5 [unused] env-
val?            %9.3  = Force!<lazy>       !v    %9.2, e1.8   <env->
other unused reason

Type#6 [unused] str$-
val?            %9.5  = Force!<lazy>       !v    %9.4, e1.8   <str$->
dependent slot

Type#7 [unused] lgl$-
val?            %9.7  = Force!<value>      !v    %9.6, e1.8   <lgl$->
other unused reason

*********************** Compilation session for: tryCatchList (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,NonRefl3,!Obj1,!Obj2,!Obj3) ***********************
======================= ClosureVersion: tryCatchList (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,NonRefl3,!Obj1,!Obj2,!Obj3) =======================
referenced: 35
referenced non-empty: 12
read non-empty: 12
used: 1
present non-empty: 4

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 11
optimized away non-empty: 7
dependent: 8
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 0

----------------------
tryCatchList [0x560a55e78ea0]
referenced: 35
referenced non-empty: 12
read non-empty: 12
used: 1
present non-empty: 4

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 11
optimized away non-empty: 7
dependent: 8
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$-
val+            %2.4  = Force!<lazy>       !vr   %1.2,    <str$->
dependent slot

Type#2 [used] int$-
(int|real)$-    %2.5  = CallSafeBuiltin    wed   length(%2.4)    <int$->
void                    Assume             D     %2.6, %2.7 (Typecheck@0x560a55e78d90[Type#2])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#3 [unused] int$-
optimized away (dependency)

Type#4 [unused] lgl$-
lgl$-           %6.0  = Gt                 d     %4.1, 1L, elided   <lgl$->
dependent slot

Type#5 [unused] int$-
optimized away (dependency)

Type#6 [unused] lgl$-
lgl$-           %7.1  = Eq                 vd    %4.1, 1L, elided   <lgl$->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] val?+ (polluted)
optimized away (dependency)

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [unused] env-
optimized away

Type#11 [unused] vec$+
optimized away

Type#12 [unused] cls-
optimized away

Type#13 [unused] val?+ (polluted)
val?            %10.11 = StaticCall         !     tryCatchOne[0x560a58fcd3c0](%10.6, %10.7, %10.8, %10.9) from %10.10 e2.3   <val?+>
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: tryCatchOne (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,!Obj1,!Obj2) ***********************
======================= ClosureVersion: tryCatchOne (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,!Obj1,!Obj2) =======================
referenced: 30
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 4
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

----------------------
tryCatchOne [0x560a55e7a320]
referenced: 30
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 4
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val?+ (polluted)
optimized away

Type#1 [unused] str$-
optimized away

Type#2 [unused] env-
optimized away

Type#3 [unused] cls-
optimized away

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: doTryCatch (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,!Obj1,!Obj2) ***********************
======================= ClosureVersion: doTryCatch (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,!Obj1,!Obj2) =======================
referenced: 7
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

----------------------
doTryCatch [0x560a55e790b0]
referenced: 7
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val+            %1.5  = Force!<lazy>       !vr   %1.2,    <str$->
other unused reason

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] cls-
val?            %2.3  = Force!<lazy>       !v    %1.0, e1.4   <cls->
other unused reason

Type#3 [unused] vec$-
val+            %2.4  = CallSafeBuiltin    wed   list(%2.3)    <vec$->
other unused reason

Type#4 [unused] env-
val?            %2.6  = Force!<lazy>       !v    %2.5, e1.4   <env->
dependent slot

Type#5 [unused] env-
val?            %4.3  = StaticCall         !v    environment[0x560a591ab640]() e1.4   <env->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: vapply (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl0,NonRefl2,!Obj0,!Obj2,SimpleInt2 miss: 2) ***********************
======================= ClosureVersion: vapply (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl0,NonRefl2,!Obj0,!Obj2,SimpleInt2 miss: 2) =======================
referenced: 17
referenced non-empty: 11
read non-empty: 10
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 11
optimized away non-empty: 3
dependent: 6
other reasons unused non-empty: 5

Polluted
polluted: 6
used polluted: 0

----------------------
vapply [0x560a5607f4e0]
referenced: 15
referenced non-empty: 9
read non-empty: 9
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 1
dependent: 6
other reasons unused non-empty: 3

Polluted
polluted: 5
used polluted: 0

Type#0 [unused] (cls|blt)- (polluted)
optimized away (dependency)

Type#1 [unused] (cls|blt)- (polluted)
val?            %1.5  = StaticCall         !v    match.fun[0x560a591de300](%1.4) e1.3   <(cls|blt)->
dependent slot

Type#2 [unused] (str|vec) (polluted)
val?            %2.4  = Force!<lazy>       !v    %2.3, e1.3   <(str|vec)>
other unused reason

Type#3 [unused] lgl$-
lgl$#-          %2.5  = CallSafeBuiltin    vwed  is.vector(%2.4, "any")    <lgl$->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] (str|vec)+ (polluted)
val?            %12.4 = Force!<wrapped>    !v    %12.3, e1.3   <(str|vec)+>
other unused reason

Type#6 [unused] lgl$-
lgl$#-          %12.5 = CallSafeBuiltin    vwed  is.object(%12.4)    <lgl$->
dependent slot

Type#7 [unused] vec
val?            %11.5 = Force!<wrapped>    !     %11.3, e1.3   <vec>
dependent slot

Type#8 [unused] vec
val?            %11.6 = StaticCall         !     as.list[0x560a592d7860](%11.5) { 0 } e1.3   <vec>
dependent slot

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] val?+ (polluted)
val?            %10.2 = Call               !     %10.0(%10.1) e1.3   <val?+>
other unused reason

----------------------
Inlinee: is.vector [0x560a55e6f180]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (str|vec) (polluted)
optimized away

Type#1 [unused] str$-
optimized away

*********************** Compilation session for:  (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) ***********************
======================= ClosureVersion:  (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) =======================
referenced: 81
referenced non-empty: 43
read non-empty: 43
used: 19
present non-empty: 9

Used
exact match: 7
widened: 12
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 24
optimized away non-empty: 15
dependent: 21
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

----------------------
 [0x560a5884c850]
referenced: 78
referenced non-empty: 40
read non-empty: 40
used: 18
present non-empty: 7

Used
exact match: 7
widened: 11
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 22
optimized away non-empty: 15
dependent: 21
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val+            %1.1  = Force<wrapped>           %1.0,    <str$->
dependent slot

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %2.9  = StaticCall         !v    existsInFrame[0x560a5933fe80](%1.1, %2.7) from %2.8 e2.6   <lgl$->
void                    Assume             D     %2.10, %2.11 (Typecheck@0x560a58731550[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [used] env-
val?            %9.5  = PopContext         C     %9.4, %7.8   <env->
void                    Assume             D     %13.0, %11.9 (Typecheck@0x560a58731550[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#4 [unused] env-
optimized away (dependency)

Type#5 [used] env-
val?^ | miss    %11.1 = LdVar              eR    envenv !upd, e2.6
void                    Assume             D     %11.2, %9.7 (Typecheck@0x560a58731550[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#6 [used] str$-
val?            %11.7 = Force!<wrapped>    !v    %11.6, e2.6   <str$->
void                    Assume             D     %11.8, %11.9 (Typecheck@0x560a58731550[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#7 [used] env-
val?^ | miss    %15.0 = LdVar              eR    env, e2.6
void                    Assume             D     %15.1, %13.7 (Typecheck@0x560a58731550[Type#7])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [used] str$-
val?            %15.8 = Force!<wrapped>    !v    %15.7, e2.6   <str$->
void                    Assume             D     %15.9, %15.10 (Typecheck@0x560a58731550[Type#9])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#10 [unused] int-
val?            %17.2 = Extract2_1D        wed   %15.4, %17.1, elided   <int->
dependent slot

Type#11 [unused] int-
optimized away (dependency)

Type#12 [unused] int-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] int-
optimized away (dependency)

Type#21 [used] str$-
val?^ | miss    %20.3 = LdVar              eR    datafile, e2.6
void                    Assume             D     %20.4, %18.1 (Typecheck@0x560a58731550[Type#21])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#22 [used] lgl$-
val?^ | miss    %20.8 = LdVar              eR    compressed, e2.6
void                    Assume             D     %20.9, %18.1 (Typecheck@0x560a58731550[Type#22])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#23 [used] cls-
val?^ | miss    %20.12 = LdVar              eR    envhook, e2.6
void                    Assume             D     %20.13, %18.1 (Typecheck@0x560a58731550[Type#23])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: cls-, expected: cls-, required: val?^ | miss

Type#24 [unused] vec+
val?            %20.17 = CallBuiltin        !v    lazyLoadDBfetch(%17.2, %20.7, %20.11, %20.16) e2.6   <vec+>
dependent slot

Type#25 [unused] vec+
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] env-
val?            %20.22 = Call               !v    %20.19(%20.20, %20.21) e2.6   <env->
dependent slot

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] vec+
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] env-
val?            %56.3 = Call               !v    %56.0(%56.1, %56.2) e2.6   <env->
dependent slot

Type#32 [used] env-
val?^ | miss    %26.6 = LdVar              eR    e, e2.6
void                    Assume             D     %26.7, %24.1 (Typecheck@0x560a58731550[Type#32])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#33 [unused] vec+
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] vec+
optimized away (dependency)

Type#36 [unused] env-
optimized away (dependency)

Type#37 [unused] vec+
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] nil-
val?            %28.21 = Call               !v    %28.18(%28.19, %28.20) e2.6   <nil->
other unused reason

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] vec+
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [used] lgl$-
val?            %29.3 = Call               !v    %29.0(%29.1, %29.2) e2.6   <lgl$->
void                    Assume             D     %29.5, %29.6 (Typecheck@0x560a58731550[Type#46])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#47 [unused] vec+
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [used] lgl$-
val?            %32.3 = Call               !v    %32.0(%32.1, %32.2) e2.6   <lgl$->
void                    Assume             D     %32.4, %32.5 (Typecheck@0x560a58731550[Type#49])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [used] int-
val?^ | miss    %39.0 = LdVar              eR    key, e2.6
void                    Assume             D     %39.1, %37.0 (Typecheck@0x560a58731550[Type#51])
exact match
checkFor: int-, static: val?^ | miss, feedback: int-, expected: int-, required: val?^ | miss

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] vec+
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [used] lgl$-
val?            %39.6 = Call               !v    %39.3(%39.4, %39.5) e2.6   <lgl$->
void                    Assume             D     %39.8, %39.9 (Typecheck@0x560a58731550[Type#68])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#69 [unused] vec+
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [used] lgl$-
val?            %42.3 = Call               !v    %42.0(%42.1, %42.2) e2.6   <lgl$->
void                    Assume             D     %42.4, %42.5 (Typecheck@0x560a58731550[Type#71])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [used] env-
val?^ | miss    %49.0 = LdVar              eR    e, e2.6
void                    Assume             D     %49.1, %47.0 (Typecheck@0x560a58731550[Type#73])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#74 [used] env-
val?^ | miss    %58.0 = LdVar              eR    envenv, e2.6
void                    Assume             D     %58.1, %2.11 (Typecheck@0x560a58731550[Type#74])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [used] str$-
val?            %58.8 = Force!<wrapped>    !v    %58.7, e2.6   <str$->
void                    Assume             D     %58.9, %58.10 (Typecheck@0x560a58731550[Type#76])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#77 [unused] env-
val?            %60.2 = Extract2_1D        wed   %58.4, %60.1, elided   <env->
dependent slot

----------------------
Inlinee: list2env [0x560a58761370]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec+
val?            %28.14 = Force!<lazy>       !vL   %28.12, e28.13   <vec+>
other unused reason

Type#1 [unused] env-
val?            %28.15 = Force!<lazy>       !vrL  %28.11, e28.13   <env->
other unused reason

----------------------
Inlinee: mkenv [0x560a58954360]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] env-
val?            %7.13 = CallBuiltin        !vL   baseenv() e7.12   <env->
void                    Assume             D     %7.14, %7.15 (Typecheck@0x560a5894e170[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

*********************** Compilation session for: existsInFrame (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) ***********************
======================= ClosureVersion: existsInFrame (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) =======================
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
existsInFrame [0x560a58730bb0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val+            %1.2  = Force<lazy>              %1.1,    <str$->
other unused reason

Type#1 [used] env-
val?            %1.4  = Force!<lazy>       !v    %1.0, e1.3   <env->
void                    Assume             D     %1.5, %1.6 (Typecheck@0x560a587236d0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?^ | miss

*********************** Compilation session for: parent.env<- (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: parent.env<- (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
parent.env<- [0x560a586463a0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val+            %1.2  = Force<value>             %1.1,    <env->
dependent slot

Type#1 [unused] env-
val+            %1.3  = Force<wrapped>           %1.0,    <env->
dependent slot

*********************** Compilation session for: as.list (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1) ***********************
======================= ClosureVersion: as.list (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1) =======================
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
as.list [0x560a573f45e0]
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

*********************** Compilation session for: do.call (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) ***********************
======================= ClosureVersion: do.call (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 9
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 1

----------------------
do.call [0x560a55e919d0]
referenced: 9
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 1

Type#0 [unused] env-
optimized away (dependency)

Type#1 [used] vec- (polluted)
val?            %1.6  = Force!<lazy>       !v    %1.0, e1.2   <vec->
void                    Assume             D     %1.8, %1.9 (Typecheck@0x560a55e918c0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?^ | miss

Type#2 [unused] lgl$-
val?            %3.1  = Force!<lazy>       !v    %3.0, e1.2   <lgl$->
other unused reason

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] str$-
val?            %4.1  = Force!<lazy>       !v    %4.0, e1.2   <str$->
other unused reason

Type#7 [unused] vec- (polluted)
val?            %4.3  = Force!<wrapped>    !v    %4.2, e1.2   <vec->
dependent slot

Type#8 [unused] env-
val?            %4.6  = Force!<lazy>       !     %4.4, e1.2   <env->
dependent slot

*********************** Compilation session for: eval (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: eval (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 3
dependent: 5
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

----------------------
eval [0x560a56683b40]
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 3
dependent: 5
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] env-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [used] (code|ast)- (polluted)
val?            %1.6  = Force!<lazy>       !v    %1.1, e1.2   <(code|ast)->
void                    Assume             D     %1.7, %1.8 (Typecheck@0x560a56683e10[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (code|ast)-, expected: (code|ast)-, required: val?^ | miss

Type#6 [unused] env-
val?            %2.3  = Force!<lazy>       !v    %2.2, e1.2   <env->
dependent slot

Type#7 [unused] env-
val?            %2.6  = Force!<lazy>       !     %2.4, e1.2   <env->
dependent slot

*********************** Compilation session for: delayedAssign (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager2,NonRefl0,NonRefl2,!Obj0,!Obj2 miss: 1) ***********************
======================= ClosureVersion: delayedAssign (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager2,NonRefl0,NonRefl2,!Obj0,!Obj2 miss: 1) =======================
referenced: 7
referenced non-empty: 5
read non-empty: 4
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
delayedAssign [0x560a56a9a9e0]
referenced: 7
referenced non-empty: 5
read non-empty: 4
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] str$+
val+            %1.7  = Force<lazy>              %1.2,    <str$+>
other unused reason

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] code-
val?            %1.9  = Call               !v    <spec substitute>(%1.8) e1.3   <code->
other unused reason

Type#5 [unused] env-
val?            %1.11 = Force!<lazy>       !v    %1.10, e1.3   <env->
dependent slot

Type#6 [unused] env-
val?            %1.13 = Force!<lazy>       !v    %1.12, e1.3   <env->
dependent slot

*********************** Compilation session for: sys.parent (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: sys.parent (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
sys.parent [0x560a56fe6b20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] int$-
optimized away

*********************** Compilation session for: formals (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: formals (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 10
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 1
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
formals [0x560a573a7330]
referenced: 10
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 1
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] cls-
val?            %1.5  = Force!<lazy>       !v    %1.0, e1.1   <cls->
void                    Assume             D     %1.6, %1.7 (Typecheck@0x560a573a7230[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: cls-, expected: cls-, required: val?^ | miss

Type#5 [unused] lgl$-
lgl$#-          %2.2  = CallSafeBuiltin    wed   is.character(%2.1)    <lgl$->
other unused reason

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] cls-
val?            %3.1  = Force!<wrapped>    !v    %3.0, e1.1   <cls->
dependent slot

*********************** Compilation session for: sys.function (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: sys.function (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
sys.function [0x560a56a34730]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] int$-
val?            %1.2  = Force!<lazy>       !v    %1.0, e1.1   <int$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a57013520[Type#0])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

*********************** Compilation session for: match.arg (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) ***********************
======================= ClosureVersion: match.arg (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 77
referenced non-empty: 53
read non-empty: 52
used: 15
present non-empty: 16

Used
exact match: 10
widened: 5
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 38
optimized away non-empty: 22
dependent: 32
other reasons unused non-empty: 6

Polluted
polluted: 5
used polluted: 0

----------------------
match.arg [0x560a57448fc0]
referenced: 61
referenced non-empty: 39
read non-empty: 38
used: 13
present non-empty: 12

Used
exact match: 10
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 14
dependent: 22
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] int$-
optimized away (dependency)

Type#1 [unused] cls-
optimized away

Type#2 [unused] list-
val?            %1.3  = StaticCall         !v    formals[0x560a59b2faa0](%1.2) e1.1   <list->
dependent slot

Type#3 [unused] list-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] sym-
optimized away

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [unused] code-
optimized away

Type#11 [unused] int$-
optimized away (dependency)

Type#12 [unused] env-
optimized away

Type#13 [unused] str-
val?            %2.5  = StaticCall         !v    eval[0x560a59847cc0](%2.3, %2.4) { 0 1n } e1.1   <str->
dependent slot

Type#14 [unused] str- (polluted)
val?            %2.8  = Force!<lazy>       !v    %2.7, e1.1   <str->
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] str- (polluted)
val?            %5.4  = Force!<wrapped>    !v    %5.3, e1.1   <str->
dependent slot

Type#17 [unused] lgl$-
lgl$#-          %5.5  = CallSafeBuiltin    wed   is.character(%5.4)    <lgl$->
dependent slot

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [used] lgl$-
val?            %7.1  = Force!<lazy>       !v    %7.0, e1.1   <lgl$->
void                    Assume             D     %7.2, %7.3 (Typecheck@0x560a57393050[Type#20])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] str- (polluted)
optimized away (dependency)

Type#26 [unused] str-
optimized away (dependency)

Type#27 [used] lgl$-
val?            %44.12 = PopContext         C     %44.11, %44.5   <lgl$->
void                    Assume             D     %44.13, %44.14 (Typecheck@0x560a57393050[Type#27])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#28 [used] str-
val?            %54.1 = Force!<wrapped>    !v    %54.0, e1.1   <str->
void                    Assume             D     %54.3, %54.4 (Typecheck@0x560a57393050[Type#28])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#29 [unused] str$-
val?            %56.3 = Extract1_1D        wed   %56.2, 1L, elided   <str$->
dependent slot

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [used] str$-
val?            %47.4 = Force!<wrapped>    !v    %47.3, e1.1   <str$->
void                    Assume             D     %47.5, %47.6 (Typecheck@0x560a57393050[Type#31])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#32 [used] int$-
(int|real)$-    %49.2 = CallSafeBuiltin    wed   length(%49.1)    <int$->
void                    Assume             D     %49.3, %49.4 (Typecheck@0x560a57393050[Type#32])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#33 [unused] lgl$-
lgl$-           %51.2 = Gt                 d     %51.1, 1L, elided   <lgl$->
dependent slot

Type#34 [unused] str$-
val?            %18.4 = Force!<wrapped>    !v    %18.3, e1.1   <str$->
dependent slot

Type#35 [unused] str-
val?            %20.4 = Force!<value>      !v    %20.3, e1.1   <str->
dependent slot

Type#36 [used] int$-
val+            %22.3 = CallSafeBuiltin    wed   pmatch(%20.2, %22.2, 0L, true)    <int$->
void                    Assume             D     %22.4, %22.5 (Typecheck@0x560a57393050[Type#36])
exact match
checkFor: int$-, static: val+, feedback: int$-, expected: int$-, required: val?^ | miss

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] int$-
optimized away (dependency)

Type#40 [unused] lgl$-
lgl$-           %26.3 = Eq                 d     %24.1, 0L, elided   <lgl$->
dependent slot

Type#41 [used] lgl$-
val?            %26.4 = CallBuiltin        !v    all(%26.3) e1.1   <lgl$->
void                    Assume             D     %26.5, %26.6 (Typecheck@0x560a57393050[Type#41])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [used] int$-
val?^ | miss    %29.0 = LdVar              eR    i, e1.1
void                    Assume             D     %29.1, %26.6 (Typecheck@0x560a57393050[Type#46])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] int$-
optimized away (dependency)

Type#50 [unused] lgl$-
lgl$-           %29.4 = Gt                 d     %29.3, 0L, elided   <lgl$->
dependent slot

Type#51 [used] int$-
int-            %29.5 = Extract1_1D        wed   %29.3, %29.4, elided   <int$->
void                    Assume             D     %29.6, %29.7 (Typecheck@0x560a57393050[Type#51])
exact match
checkFor: int$-, static: int-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#52 [used] lgl$-
val?            %31.4 = Force!<wrapped>    !v    %31.3, e1.1   <lgl$->
void                    Assume             D     %31.5, %31.6 (Typecheck@0x560a57393050[Type#52])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [used] int$-
val?^ | miss    %34.3 = LdVar              eR    i, e1.1
void                    Assume             D     %34.4, %31.6 (Typecheck@0x560a57393050[Type#54])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#55 [unused] int$-
optimized away (dependency)

Type#56 [unused] lgl$-
optimized away (dependency)

Type#57 [used] str-
val?            %36.1 = Force!<value>      !v    %36.0, e1.1   <str->
void                    Assume             D     %36.3, %36.4 (Typecheck@0x560a57393050[Type#57])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [used] int$-
val?^ | miss    %38.1 = LdVar              eR    i, e1.1
void                    Assume             D     %38.2, %36.4 (Typecheck@0x560a57393050[Type#59])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#60 [unused] str$-
val?            %38.7 = Extract1_1D        wed   %38.6, %38.4, elided   <str$->
dependent slot

----------------------
Inlinee: pmatch [0x560a57621820]
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 2
present non-empty: 2

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str$-
val?            %18.4 = Force!<wrapped>    !v    %18.3, e1.1   <str$->
void                    Assume             D     %18.5, %18.6 (Typecheck@0x560a57621710[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#2 [unused] str$-
val+            %20.2 = CallSafeBuiltin    wed   as.character(%20.1)    <str$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str-
val?            %20.4 = Force!<value>      !v    %20.3, e1.1   <str->
void                    Assume             D     %20.5, %20.6 (Typecheck@0x560a57621710[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#5 [unused] str-
val+            %22.2 = CallSafeBuiltin    wed   as.character(%22.1)    <str->
dependent slot

Type#6 [unused] int$-
optimized away

Type#7 [unused] lgl$-
optimized away

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val?+ (polluted)
val?            %44.9 = Force!<lazy>       !vL   %44.7, e44.8   <val?+>
dependent slot

Type#1 [unused] val?+ (polluted)
val?            %44.10 = Force!<lazy>       !vL   %44.6, e44.8   <val?+>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: strsplit (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 3) ***********************
======================= ClosureVersion: strsplit (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 3) =======================
referenced: 7
referenced non-empty: 6
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 3
dependent: 5
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
strsplit [0x560a55f04d60]
referenced: 7
referenced non-empty: 6
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 3
dependent: 5
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val+            %1.2  = Force!<lazy>       !vr   %1.1,    <str$->
dependent slot

Type#1 [unused] $#-
optimized away

Type#2 [used] str$-
val+            %1.3  = Force!<value>            %1.0,    <str$->
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a55f05820[Type#2])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: str$-, expected: str$-, required: val?+

Type#3 [unused] str$-
val+            %2.2  = CallSafeBuiltin    wed   as.character(%2.1)    <str$->
dependent slot

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: getHook (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: get0 (CorrOrd,!TMany,Argmatch;Eager2,Eager3,NonRefl2,NonRefl3,!Obj3) =======================
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

----------------------
get0 [0x560a56361ae0]
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

Type#0 [unused] $#-
optimized away

Type#1 [used] str$+ (polluted)
val?            %7.1  = Force!<lazy>       !v    %7.0, e1.7   <str$+>
void                    Assume             D     %7.2, %7.3 (Typecheck@0x560a563ebd40[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#2 [unused] env+ (polluted)
val?            %9.3  = Force!<lazy>       !v    %9.2, e1.7   <env+>
other unused reason

Type#3 [unused] str$-
val?            %9.5  = Force!<lazy>       !v    %9.4, e1.7   <str$->
other unused reason

Type#4 [unused] lgl$-
val?            %9.7  = Force!<lazy>       !v    %9.6, e1.7   <lgl$->
other unused reason

Type#5 [unused] (nil|vec)+ (polluted)
val?            %9.9  = Force!<lazy>       !v    %9.8, e1.7   <(nil|vec)+>
other unused reason

======================= ClosureVersion: getHook (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
getHook [0x560a57734970]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] env-
optimized away

Type#2 [unused] vec-
optimized away (dependency)

Type#3 [unused] vec-
val?            %1.5  = StaticCall         !     get0[0x560a5a2517b0](%1.2, %1.3, missingArg, false, %1.4) { 0 1n 3n 4n } e1.1   <vec->
dependent slot

*********************** Compilation session for: packageEvent (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1) ***********************
======================= ClosureVersion: packageEvent (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1) =======================
referenced: 21
referenced non-empty: 19
read non-empty: 13
used: 2
present non-empty: 5

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 17
optimized away non-empty: 12
dependent: 13
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

----------------------
packageEvent [0x560a570c4360]
referenced: 10
referenced non-empty: 9
read non-empty: 9
used: 2
present non-empty: 4

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 3
dependent: 7
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] str$-
val?            %1.4  = StaticCall         !v    match.arg[0x560a59f051a0](%1.3, <str [1] "onLoad" "attach" "detach" "onUnload">) e1.2   <str$->
dependent slot

Type#3 [unused] str$-
val?            %2.4  = Force!<lazy>       !v    %2.3, e1.2   <str$->
dependent slot

Type#4 [used] vec$-
vec+            %2.5  = CallSafeBuiltin    wed   strsplit(%2.4, "_", true, false, false)    <vec$->
void                    Assume             D     %2.6, %2.7 (Typecheck@0x560a56c3dcb0[Type#4])
narrowed with static type: no
widened: yes
checkFor: vec-, static: vec+, feedback: vec$-, expected: vec$-, required: val?+

Type#5 [used] str$-
val             %4.2  = Extract2_1D        wed   %4.1, 1L, elided   <str$->
void                    Assume             D     %4.4, %4.5 (Typecheck@0x560a56c3dcb0[Type#5])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: str$-, expected: str$-, required: val?+

Type#6 [unused] str$-
val?            %6.3  = Extract1_1D        wed   %6.2, 1L, elided   <str$->
dependent slot

Type#7 [unused] str$-
optimized away (dependency)

Type#8 [unused] str$-
optimized away (dependency)

Type#9 [unused] str$-
val+            %8.10 = CallSafeBuiltin    vwed  paste(%8.9, "::", nil, false)    <str$->
dependent slot

----------------------
Inlinee: paste [0x560a55fd8390]
referenced: 4
referenced non-empty: 4
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec- (polluted)
val+            %8.9  = CallSafeBuiltin    wed   list("UserHook", %6.3, %8.8)    <vec->
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] (nil|str)- (polluted)
optimized away

Type#3 [unused] lgl$-
optimized away

----------------------
Inlinee: strsplit [0x560a55f04d60]
referenced: 7
referenced non-empty: 6
read non-empty: 3
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 6
dependent: 6
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

======================= ClosureVersion: match.arg (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1 miss: 1) =======================
referenced: 77
referenced non-empty: 53
read non-empty: 52
used: 15
present non-empty: 16

Used
exact match: 10
widened: 5
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 38
optimized away non-empty: 22
dependent: 32
other reasons unused non-empty: 6

Polluted
polluted: 5
used polluted: 0

----------------------
match.arg [0x560a57448fc0]
referenced: 61
referenced non-empty: 39
read non-empty: 38
used: 13
present non-empty: 12

Used
exact match: 10
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 14
dependent: 22
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] int$-
optimized away (dependency)

Type#1 [unused] cls-
optimized away

Type#2 [unused] list-
val?            %2.1  = StaticCall         !v    formals[0x560a59e30060](%2.0) e1.2   <list->
dependent slot

Type#3 [unused] list-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] sym-
optimized away

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [unused] code-
optimized away

Type#11 [unused] int$-
optimized away (dependency)

Type#12 [unused] env-
optimized away

Type#13 [unused] str-
val?            %4.5  = StaticCall         !v    eval[0x560a59ebf500](%4.3, %4.4) { 0 1n } e1.2   <str->
dependent slot

Type#14 [unused] str- (polluted)
val?            %5.1  = Force!<lazy>       !v    %5.0, e1.2   <str->
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] str- (polluted)
val?            %8.4  = Force!<wrapped>    !v    %8.3, e1.2   <str->
dependent slot

Type#17 [unused] lgl$-
lgl$#-          %8.5  = CallSafeBuiltin    wed   is.character(%8.4)    <lgl$->
dependent slot

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [used] lgl$-
val?            %10.1 = Force!<lazy>       !v    %10.0, e1.2   <lgl$->
void                    Assume             D     %10.2, %10.3 (Typecheck@0x560a57393050[Type#20])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] str- (polluted)
optimized away (dependency)

Type#26 [unused] str-
optimized away (dependency)

Type#27 [used] lgl$-
val?            %47.12 = PopContext         C     %47.11, %47.5   <lgl$->
void                    Assume             D     %47.13, %47.14 (Typecheck@0x560a57393050[Type#27])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#28 [used] str-
val?            %57.1 = Force!<wrapped>    !v    %57.0, e1.2   <str->
void                    Assume             D     %57.3, %57.4 (Typecheck@0x560a57393050[Type#28])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#29 [unused] str$-
val?            %59.3 = Extract1_1D        wed   %59.2, 1L, elided   <str$->
dependent slot

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [used] str$-
val?            %50.4 = Force!<wrapped>    !v    %50.3, e1.2   <str$->
void                    Assume             D     %50.5, %50.6 (Typecheck@0x560a57393050[Type#31])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#32 [used] int$-
(int|real)$-    %52.2 = CallSafeBuiltin    wed   length(%52.1)    <int$->
void                    Assume             D     %52.3, %52.4 (Typecheck@0x560a57393050[Type#32])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#33 [unused] lgl$-
lgl$-           %54.2 = Gt                 d     %54.1, 1L, elided   <lgl$->
dependent slot

Type#34 [unused] str$-
val?            %21.4 = Force!<wrapped>    !v    %21.3, e1.2   <str$->
dependent slot

Type#35 [unused] str-
val?            %23.4 = Force!<value>      !v    %23.3, e1.2   <str->
dependent slot

Type#36 [used] int$-
val+            %25.3 = CallSafeBuiltin    wed   pmatch(%23.2, %25.2, 0L, true)    <int$->
void                    Assume             D     %25.4, %25.5 (Typecheck@0x560a57393050[Type#36])
exact match
checkFor: int$-, static: val+, feedback: int$-, expected: int$-, required: val?^ | miss

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] int$-
optimized away (dependency)

Type#40 [unused] lgl$-
lgl$-           %29.3 = Eq                 d     %27.1, 0L, elided   <lgl$->
dependent slot

Type#41 [used] lgl$-
val?            %29.4 = CallBuiltin        !v    all(%29.3) e1.2   <lgl$->
void                    Assume             D     %29.5, %29.6 (Typecheck@0x560a57393050[Type#41])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [used] int$-
val?^ | miss    %32.0 = LdVar              eR    i, e1.2
void                    Assume             D     %32.1, %29.6 (Typecheck@0x560a57393050[Type#46])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] int$-
optimized away (dependency)

Type#50 [unused] lgl$-
lgl$-           %32.4 = Gt                 d     %32.3, 0L, elided   <lgl$->
dependent slot

Type#51 [used] int$-
int-            %32.5 = Extract1_1D        wed   %32.3, %32.4, elided   <int$->
void                    Assume             D     %32.6, %32.7 (Typecheck@0x560a57393050[Type#51])
exact match
checkFor: int$-, static: int-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#52 [used] lgl$-
val?            %34.4 = Force!<wrapped>    !v    %34.3, e1.2   <lgl$->
void                    Assume             D     %34.5, %34.6 (Typecheck@0x560a57393050[Type#52])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [used] int$-
val?^ | miss    %37.3 = LdVar              eR    i, e1.2
void                    Assume             D     %37.4, %34.6 (Typecheck@0x560a57393050[Type#54])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#55 [unused] int$-
optimized away (dependency)

Type#56 [unused] lgl$-
optimized away (dependency)

Type#57 [used] str-
val?            %39.1 = Force!<value>      !v    %39.0, e1.2   <str->
void                    Assume             D     %39.3, %39.4 (Typecheck@0x560a57393050[Type#57])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [used] int$-
val?^ | miss    %41.1 = LdVar              eR    i, e1.2
void                    Assume             D     %41.2, %39.4 (Typecheck@0x560a57393050[Type#59])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#60 [unused] str$-
val?            %41.7 = Extract1_1D        wed   %41.6, %41.4, elided   <str$->
dependent slot

----------------------
Inlinee: pmatch [0x560a57621820]
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 2
present non-empty: 2

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str$-
val?            %21.4 = Force!<wrapped>    !v    %21.3, e1.2   <str$->
void                    Assume             D     %21.5, %21.6 (Typecheck@0x560a57621710[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#2 [unused] str$-
val+            %23.2 = CallSafeBuiltin    wed   as.character(%23.1)    <str$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str-
val?            %23.4 = Force!<value>      !v    %23.3, e1.2   <str->
void                    Assume             D     %23.5, %23.6 (Typecheck@0x560a57621710[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#5 [unused] str-
val+            %25.2 = CallSafeBuiltin    wed   as.character(%25.1)    <str->
dependent slot

Type#6 [unused] int$-
optimized away

Type#7 [unused] lgl$-
optimized away

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val?+ (polluted)
val?            %47.9 = Force!<lazy>       !vL   %47.7, e47.8   <val?+>
dependent slot

Type#1 [unused] val?+ (polluted)
val?            %47.10 = Force!<lazy>       !vL   %47.6, e47.8   <val?+>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: isNamespaceLoaded (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: isNamespaceLoaded (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
isNamespaceLoaded [0x560a5907d3f0]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val+            %1.2  = Force!<lazy>       !vr   %1.0,    <str$->
other unused reason

*********************** Compilation session for: setHook (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: setHook (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 38
referenced non-empty: 19
read non-empty: 19
used: 4
present non-empty: 4

Used
exact match: 1
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 11
dependent: 11
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 1

----------------------
setHook [0x560a5973c230]
referenced: 34
referenced non-empty: 15
read non-empty: 15
used: 4
present non-empty: 3

Used
exact match: 1
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 11
optimized away non-empty: 8
dependent: 9
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 1

Type#0 [unused] str-
optimized away (dependency)

Type#1 [unused] str-
optimized away (dependency)

Type#2 [unused] str$-
val?            %1.7  = StaticCall         !v    match.arg[0x560a59e6aa40](%1.6, <str [1] "append" "prepend" "replace">) e1.2   <str$->
dependent slot

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] vec- (polluted)
val?            %2.11 = PopContext         C     %2.10, %2.4   <vec->
dependent slot

Type#5 [used] str$-
val?            %2.14 = Force!<value>      !v    %2.13, e1.2   <str$->
void                    Assume             D     %2.35, %2.36 (Typecheck@0x560a5961ae00[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] vec- (polluted)
val?^ | miss    %8.4  = LdVar              eR    old, e1.2
void                    Assume             D     %8.5, %6.3 (Typecheck@0x560a5961ae00[Type#8])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#9 [used] cls-
val?            %8.10 = Force!<lazy>       !v    %8.9, e1.2   <cls->
void                    Assume             D     %8.11, %8.12 (Typecheck@0x560a5961ae00[Type#9])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: cls-, expected: cls-, required: val?+

Type#10 [unused] vec-
val+            %10.2 = CallSafeBuiltin    wed   c(%8.8, %10.1)    <vec->
dependent slot

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] vec-
optimized away (dependency)

Type#24 [used] int$-
(int|real)$-    %12.3 = CallSafeBuiltin    wed   length(%10.2)    <int$->
void                    Assume             D     %12.4, %12.5 (Typecheck@0x560a5961ae00[Type#24])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] str$-
optimized away (dependency)

Type#31 [unused] vec-
optimized away (dependency)

Type#32 [unused] env-
optimized away

Type#33 [unused] nil-
optimized away

----------------------
Inlinee: getHook [0x560a57734970]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] env-
optimized away

Type#2 [unused] vec-
optimized away (dependency)

Type#3 [unused] vec-
val?            %2.10 = StaticCall         !v    get0[0x560a59f01690](%2.7, %2.8, missingArg, false, %2.9) { 0 1n 3n 4n } e2.6   <vec->
dependent slot

======================= ClosureVersion: assign (CorrOrd,!TMany,Argmatch;Eager2,Eager4,NonRefl2,NonRefl4,!Obj4 miss: 1) =======================
referenced: 6
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

----------------------
assign [0x560a596bb7f0]
referenced: 6
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] str$-
val?            %5.2  = Force!<lazy>       !v    %5.1, e1.7   <str$->
void                    Assume             D     %5.3, %5.4 (Typecheck@0x560a596c4aa0[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

Type#3 [unused] vec-
val?            %7.3  = Force!<lazy>       !v    %7.2, e1.7   <vec->
other unused reason

Type#4 [unused] env-
val?            %7.5  = Force!<lazy>       !v    %7.4, e1.7   <env->
other unused reason

Type#5 [unused] lgl$-
val?            %7.7  = Force!<value>      !v    %7.6, e1.7   <lgl$->
other unused reason

*********************** Compilation session for: which (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2) ***********************
======================= ClosureVersion: which (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2) =======================
referenced: 12
referenced non-empty: 3
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 1

----------------------
which [0x560a56086380]
referenced: 12
referenced non-empty: 3
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 1

Type#0 [used] lgl+ (polluted)
val+            %1.1  = Force!<lazy>       !vr   %1.0,    <lgl+>
void                    Assume             D     %1.2, %1.3 (Typecheck@0x560a560cb7f0[Type#0])
exact match
checkFor: lgl+, static: val+, feedback: lgl+, expected: lgl+, required: val?^ | miss

Type#1 [unused] lgl$-
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] int+ (polluted)
val+            %2.2  = CallSafeBuiltin    wed   which(%2.1)    <int+>
other unused reason

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: NextMethod (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0 miss: 2) ***********************
======================= ClosureVersion: NextMethod (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0 miss: 2) =======================
referenced: 4
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
NextMethod [0x560a56115ce0]
referenced: 4
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] lgl$+ (polluted)
val?            %1.4  = Call               !     <spec .Internal>(%1.3) e1.2   <lgl$+>
other unused reason

*********************** Compilation session for: match (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl2,!Obj2,SimpleInt2 miss: 1) ***********************
======================= ClosureVersion: match (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl2,!Obj2,SimpleInt2 miss: 1) =======================
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 2
present non-empty: 1

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

----------------------
match [0x560a55e4d070]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 2
present non-empty: 1

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

Type#0 [used] (nil|str)+ (polluted)
val?            %1.4  = Force!<lazy>       !vL   %1.2, e1.3   <(nil|str)+>
void                    Assume             D     %1.5, %1.7 (Typecheck@0x560a55e4cf60[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: (nil|str)+, expected: (nil|str)+, required: val?^ | miss

Type#1 [used] str-
val?            %2.4  = Force!<lazy>       !vL   %1.1, e1.3   <str->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a55e4cf60[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?^ | miss

Type#2 [unused] int$-
int$-           %1.6  = Force!<lazy>             %1.0,    <int$->
other unused reason

Type#3 [unused] nil-
optimized away

*********************** Compilation session for: anyDuplicated (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2) ***********************
======================= ClosureVersion: anyDuplicated (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2) =======================
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
anyDuplicated [0x560a56609a40]
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

*********************** Compilation session for: %in% (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: %in% (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 3
present non-empty: 2

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 5

Polluted
polluted: 5
used polluted: 2

----------------------
%in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 2
present non-empty: 2

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 4
used polluted: 2

Type#0 [used] (nil|str)+ (polluted)
val?            %1.3  = Force!<lazy>       !vL   %1.1, e1.2   <(nil|str)+>
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a5530d350[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: (nil|str)+, expected: (nil|str)+, required: val?^ | miss

Type#1 [unused] (nil|str)- (polluted)
val?            %2.4  = Force!<lazy>       !vL   %1.0, e1.2   <(nil|str)->
other unused reason

Type#2 [used] int- (polluted)
val+            %4.4  = CallSafeBuiltin    wed   match(%2.3, %4.3, 0L, nil)    <int->
void                    Assume             D     %4.5, %4.6 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val+, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %6.3  = Gt                 vwed  %6.2, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: match [0x560a55e4d070]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|str)+ (polluted)
optimized away

Type#1 [used] str-
val?            %2.4  = Force!<lazy>       !vL   %1.0, e1.2   <(nil|str)->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a55e4cf60[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#2 [unused] int$-
optimized away

Type#3 [unused] nil-
optimized away

*********************** Compilation session for: vapply (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) ***********************
======================= ClosureVersion: vapply (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 17
referenced non-empty: 11
read non-empty: 10
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 11
optimized away non-empty: 3
dependent: 4
other reasons unused non-empty: 7

Polluted
polluted: 7
used polluted: 0

----------------------
vapply [0x560a5607f4e0]
referenced: 15
referenced non-empty: 9
read non-empty: 9
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 1
dependent: 4
other reasons unused non-empty: 5

Polluted
polluted: 6
used polluted: 0

Type#0 [unused] (cls|blt)- (polluted)
optimized away (dependency)

Type#1 [unused] (cls|blt)- (polluted)
val?            %1.5  = StaticCall         !v    match.fun[0x560a55040ad0](%1.4) e1.3   <(cls|blt)->
dependent slot

Type#2 [unused] val? (polluted)
val?            %2.4  = Force!<lazy>       !v    %2.3, e1.3   <val?>
other unused reason

Type#3 [unused] lgl$-
lgl$#-          %2.5  = CallSafeBuiltin    vwed  is.vector(%2.4, "any")    <lgl$->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] (str|vec)+ (polluted)
val?            %12.4 = Force!<wrapped>    !v    %12.3, e1.3   <(str|vec)+>
other unused reason

Type#6 [unused] lgl$-
lgl$#-          %12.5 = CallSafeBuiltin    vwed  is.object(%12.4)    <lgl$->
dependent slot

Type#7 [unused] (nil|vec) (polluted)
val?            %11.5 = Force!<wrapped>    !     %11.3, e1.3   <(nil|vec)>
other unused reason

Type#8 [unused] vec
val?            %11.6 = StaticCall         !     as.list[0x560a54ccecb0](%11.5) { 0 } e1.3   <vec>
other unused reason

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] val?+ (polluted)
val?            %10.2 = Call               !     %10.0(%10.1) e1.3   <val?+>
other unused reason

----------------------
Inlinee: is.vector [0x560a55e6f180]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (str|vec) (polluted)
optimized away

Type#1 [unused] str$-
optimized away

*********************** Compilation session for: setdiff (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: unique (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0 miss: 2) =======================
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
unique [0x560a55e49770]
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

======================= ClosureVersion: setdiff (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 22
referenced non-empty: 18
read non-empty: 18
used: 2
present non-empty: 12

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 16
optimized away non-empty: 4
dependent: 13
other reasons unused non-empty: 3

Polluted
polluted: 11
used polluted: 2

----------------------
setdiff [0x560a57925c20]
referenced: 20
referenced non-empty: 16
read non-empty: 16
used: 1
present non-empty: 12

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 3
dependent: 13
other reasons unused non-empty: 2

Polluted
polluted: 10
used polluted: 1

Type#0 [used] str- (polluted)
val?            %1.3  = Force!<lazy>       !v    %1.1, e1.2   <str->
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a56c3e230[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?^ | miss

Type#1 [unused] str- (polluted)
val             %2.2  = CallSafeBuiltin    wed   as.vector(%2.1, "any")    <str->
dependent slot

Type#2 [unused] str- (polluted)
val?            %4.4  = Force!<lazy>       !v    %4.3, e1.2   <str->
dependent slot

Type#3 [unused] str- (polluted)
val             %6.2  = CallSafeBuiltin    wed   as.vector(%6.1, "any")    <str->
dependent slot

Type#4 [unused] str- (polluted)
val?            %8.7  = Force!<value>      !v    %8.6, e1.2   <str->
dependent slot

Type#5 [unused] int$-
val?            %8.8  = CallBuiltin        !v    length(%8.7) e1.2   <int$->
dependent slot

Type#6 [unused] str-
optimized away (dependency)

Type#7 [unused] int$-
val?            %9.2  = Call               !v    %9.0(%9.1) e1.2   <int$->
dependent slot

Type#8 [unused] str-
val?            %11.2 = Force!<value>      !     %11.0, e1.2   <str->
dependent slot

Type#9 [unused] str- (polluted)
val?            %13.1 = Force<value>       !v    %13.0, e1.2   <str->
dependent slot

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] str- (polluted)
optimized away (dependency)

Type#15 [unused] str- (polluted)
optimized away (dependency)

Type#16 [unused] int- (polluted)
val?            %16.3 = Call               !v    %16.0(%16.1, %16.2, 0L) e1.2   <int->
other unused reason

Type#17 [unused] lgl- (polluted)
val?            %16.4 = Eq                 !v    %16.3, 0L, e1.2   <lgl->
other unused reason

Type#18 [unused] str-
val?            %15.1 = Extract1_1D        !v    %13.1, %15.0, e1.2   <str->
dependent slot

Type#19 [unused] str-
val?            %12.1 = StaticCall         !     unique[0x560a5a5f4590](%12.0) { 0 } e1.2   <str->
dependent slot

----------------------
Inlinee: as.vector [0x560a577b6aa0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

Type#0 [used] str- (polluted)
val?            %4.4  = Force!<lazy>       !v    %4.3, e1.2   <str->
void                    Assume             D     %4.5, %4.6 (Typecheck@0x560a56c848c0[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#1 [unused] str$-
optimized away

*********************** Compilation session for: as.vector (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: as.vector (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

----------------------
as.vector [0x560a577b6aa0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

Type#0 [used] str- (polluted)
val?            %1.2  = Force!<lazy>       !vL   %1.0, e1.1   <str->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a56c848c0[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?^ | miss

Type#1 [unused] str$-
optimized away

*********************** Compilation session for: .rlang_vctrs_typeof (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: .rlang_vctrs_typeof (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 33
referenced non-empty: 16
read non-empty: 11
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 16
optimized away non-empty: 14
dependent: 13
other reasons unused non-empty: 3

Polluted
polluted: 3
used polluted: 0

----------------------
.rlang_vctrs_typeof [0x560a5a04b590]
referenced: 32
referenced non-empty: 15
read non-empty: 10
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 13
dependent: 13
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|vec) (polluted)
val+            %2.1  = Force!<lazy>       !vr   %1.0,    <(str|vec)>
other unused reason

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] vec
optimized away

Type#5 [unused] str-
optimized away (dependency)

Type#6 [unused] str-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

Type#8 [unused] str-
optimized away (dependency)

Type#9 [unused] lgl$-
optimized away (dependency)

Type#10 [unused] str-
optimized away (dependency)

Type#11 [unused] str-
optimized away (dependency)

Type#12 [unused] lgl$-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] str- (polluted)
optimized away (dependency)

Type#23 [unused] str$-
str$-           %4.3  = CallSafeBuiltin    wed   typeof(%2.1)    <str$->
dependent slot

Type#24 [unused] str$-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] str$-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val?- (polluted)
optimized away

*********************** Compilation session for: sys.call (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: sys.call (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
sys.call [0x560a5a4dbdb0]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] int$-
optimized away

*********************** Compilation session for: .row_names_info (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleInt1) ***********************
======================= ClosureVersion: .row_names_info (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleInt1) =======================
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
.row_names_info [0x560a5a38ec80]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec
val+            %1.3  = Force!<lazy>       !vr   %1.1,    <vec>
other unused reason

Type#1 [unused] int$-
int$-           %1.4  = Force!<value>            %1.0,    <int$->
other unused reason

*********************** Compilation session for: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 7
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 6
dependent: 6
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 7
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 6
dependent: 6
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] lgl$-
val+            %1.1  = Force!<lazy>       !vr   %1.0,    <lgl$->
void                    Assume             D     %1.2, %1.3 (Typecheck@0x560a54e55690[Type#1])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] lgl$-
optimized away (dependency)

Type#9 [unused] lgl$-
lgl$-           %2.2  = CallSafeBuiltin    vwed  is.na(%2.1)    <lgl$->
dependent slot

Type#10 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: identical (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 6) ***********************
======================= ClosureVersion: identical (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 6) =======================
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

----------------------
identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val+            %1.3  = Force!<lazy>       !vr   %1.1,    <val?>
dependent slot

Type#1 [unused] val? (polluted)
val+            %1.4  = Force!<lazy>             %1.0,    <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: unknown--fromConstant (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0,SimpleReal0) ***********************
======================= ClosureVersion: unknown--fromConstant (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0,SimpleReal0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
unknown--fromConstant [0x560a55efcd20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (int|real)$- (polluted)
real$-          %1.1  = Force<lazy>              %1.0,    <(int|real)$->
other unused reason

*********************** Compilation session for: vec_size (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) ***********************
======================= ClosureVersion: vec_size (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) =======================
referenced: 16
referenced non-empty: 14
read non-empty: 14
used: 6
present non-empty: 3

Used
exact match: 5
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 5
dependent: 0
other reasons unused non-empty: 8

Polluted
polluted: 5
used polluted: 1

----------------------
vec_size [0x560a58d1b190]
referenced: 7
referenced non-empty: 6
read non-empty: 6
used: 4
present non-empty: 0

Used
exact match: 3
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 1

Type#0 [unused] val? (polluted)
optimized away

Type#1 [used] lgl$-
val?            %4.2  = PopContext         C     %4.1, %2.5   <lgl$->
void                    Assume             D     %4.3, %4.4 (Typecheck@0x560a58d1b0a0[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] $#-
optimized away

Type#3 [used] (int|str)- (polluted)
val?            %7.4  = Force!<wrapped>    !v    %7.3, e2.3   <(int|str)->
void                    Assume             D     %7.5, %7.6 (Typecheck@0x560a58d1b0a0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (int|str)-, expected: (int|str)-, required: val?+

Type#4 [used] int$-
(int|real)$-    %9.2  = CallSafeBuiltin    vwed  length(%9.1)    <int$->
void                    Assume             D     %9.3, %9.4 (Typecheck@0x560a58d1b0a0[Type#4])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#5 [unused] vec
optimized away

Type#6 [used] int$-
val?            %17.7 = PopContext         C     %17.5, %13.4   <int$->
void                    Assume             D     %17.8, %17.9 (Typecheck@0x560a58d1b0a0[Type#6])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %2.12 = Force!<lazy>       !vr   %2.10,    <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: nrow [0x560a569e0e60]
referenced: 4
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (str|vec) (polluted)
val?            %13.7 = Force!<lazy>       !vL   %13.5, e13.6   <(str|vec)>
other unused reason

Type#2 [used] int-
val?            %15.2 = CallBuiltin        !vL   dim(%13.7) e13.6   <int->
void                    Assume             D     %15.4, %15.5 (Typecheck@0x560a56a77a90[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] int$-
int$-           %17.5 = Extract1_1D        wed   %17.4, 1L, elided   <int$->
other unused reason

----------------------
Inlinee: is.data.frame [0x560a55221df0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

Type#1 [used] lgl$-
val?            %2.14 = PopContext         C     %2.13, %2.9   <lgl$->
void                    Assume             D     %2.15, %2.16 (Typecheck@0x560a55221d00[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: is.data.frame (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: is.data.frame (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 5
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

----------------------
is.data.frame [0x560a55221df0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

Type#1 [used] lgl$-
val?            %1.8  = PopContext         C     %1.7, %1.3   <lgl$->
void                    Assume             D     %1.9, %1.10 (Typecheck@0x560a55221d00[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %1.6  = Force!<lazy>       !vL   %1.4, e1.5   <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

*********************** Compilation session for:  (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: new_data_frame (!ExpMi,CorrOrd,!TMany,Argmatch miss: 3) =======================
referenced: 37
referenced non-empty: 32
read non-empty: 32
used: 9
present non-empty: 10

Used
exact match: 8
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 23
optimized away non-empty: 13
dependent: 12
other reasons unused non-empty: 11

Polluted
polluted: 10
used polluted: 1

----------------------
new_data_frame [0x560a55149330]
referenced: 21
referenced non-empty: 18
read non-empty: 18
used: 3
present non-empty: 7

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 8
dependent: 12
other reasons unused non-empty: 3

Polluted
polluted: 5
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] vec (polluted)
val?            %2.4  = Force!<lazy>       !v    %1.0, e2.3   <vec>
dependent slot

Type#3 [used] int$-
val?            %2.5  = CallBuiltin        !v    length(%2.4) e2.3   <int$->
void                    Assume             D     %2.6, %2.7 (Typecheck@0x560a55149220[Type#3])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#4 [unused] int$-
optimized away (dependency)

Type#5 [unused] lgl$-
lgl$-           %6.0  = Neq                d     %4.1, 0, elided   <lgl$->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] vec (polluted)
val?            %7.4  = Force!<wrapped>    !v    %7.3, e2.3   <vec>
dependent slot

Type#8 [unused] str-
val?            %7.5  = CallBuiltin        !v    names(%7.4) e2.3   <str->
dependent slot

Type#9 [unused] nil-
val?            %9.2  = Force!<lazy>       !     %9.0, e2.3   <nil->
other unused reason

Type#10 [used] int$-
val?^ | miss    %16.0 = LdVar              eR    n_cols, e2.3
void                    Assume             D     %16.1, %9.4 (Typecheck@0x560a55149220[Type#10])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#11 [unused] lgl$-
lgl$-           %16.4 = Eq                 d     %16.3, 0, elided   <lgl$->
dependent slot

Type#12 [unused] vec (polluted)
optimized away (dependency)

Type#13 [unused] str-
optimized away (dependency)

Type#14 [used] int$-
val?            %29.1 = PopContext         C     %29.0, %17.4   <int$->
void                    Assume             D     %29.2, %29.3 (Typecheck@0x560a55149220[Type#14])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#15 [unused] vec (polluted)
optimized away (dependency)

Type#16 [unused] (nil|str)- (polluted)
optimized away

Type#17 [unused] str-
optimized away (dependency)

Type#18 [unused] int$-
optimized away (dependency)

Type#19 [unused] int-
optimized away

Type#20 [unused] vec
val?            %15.8 = NamedCall          !     function(.Data, ...) <(rir::DispatchTable*)0x5|...(%15.3, class=%15.4, row.names=%15.5, .xpandDotsTrigger=%15.7) e2.3   <vec>
dependent slot

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %19.12 = Force!<lazy>       !vL   %19.10, e19.11   <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: is.data.frame [0x560a55221df0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

Type#1 [used] lgl$-
val?            %19.14 = PopContext         C     %19.13, %19.9   <lgl$->
void                    Assume             D     %19.15, %19.16 (Typecheck@0x560a55221d00[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: vec_size [0x560a58d1b190]
referenced: 7
referenced non-empty: 6
read non-empty: 6
used: 4
present non-empty: 0

Used
exact match: 3
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 1

Type#0 [unused] val? (polluted)
optimized away

Type#1 [used] lgl$-
val?            %21.2 = PopContext         C     %21.1, %19.5   <lgl$->
void                    Assume             D     %21.3, %21.4 (Typecheck@0x560a58d1b0a0[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] $#-
optimized away

Type#3 [used] (int|str)- (polluted)
val?            %24.4 = Force!<wrapped>    !v    %24.3, e19.3   <(int|str)->
void                    Assume             D     %24.5, %24.6 (Typecheck@0x560a58d1b0a0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (int|str)-, expected: (int|str)-, required: val?+

Type#4 [used] int$-
(int|real)$-    %26.2 = CallSafeBuiltin    vwed  length(%26.1)    <int$->
void                    Assume             D     %26.3, %26.4 (Typecheck@0x560a58d1b0a0[Type#4])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#5 [unused] vec
optimized away

Type#6 [used] int$-
val?            %36.7 = PopContext         C     %36.5, %32.4   <int$->
void                    Assume             D     %36.8, %36.9 (Typecheck@0x560a58d1b0a0[Type#6])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

----------------------
Inlinee: nrow [0x560a569e0e60]
referenced: 4
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (str|vec) (polluted)
val?            %32.7 = Force!<lazy>       !vL   %32.5, e32.6   <(str|vec)>
other unused reason

Type#2 [used] int-
val?            %34.2 = CallBuiltin        !vL   dim(%32.7) e32.6   <int->
void                    Assume             D     %34.4, %34.5 (Typecheck@0x560a56a77a90[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] int$-
int$-           %36.5 = Extract1_1D        wed   %36.4, 1L, elided   <int$->
other unused reason

======================= ClosureVersion: .rlang_vctrs_typeof (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) =======================
referenced: 40
referenced non-empty: 23
read non-empty: 15
used: 3
present non-empty: 6

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 20
optimized away non-empty: 14
dependent: 18
other reasons unused non-empty: 2

Polluted
polluted: 4
used polluted: 0

----------------------
.rlang_vctrs_typeof [0x560a5a04b590]
referenced: 32
referenced non-empty: 15
read non-empty: 13
used: 3
present non-empty: 4

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 8
dependent: 10
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|vec) (polluted)
val?            %2.4  = Force!<lazy>       !vrd  %1.0,    <(str|vec)>
other unused reason

Type#2 [unused] lgl$-
lgl$#-          %2.5  = CallSafeBuiltin    wed   is.object(%2.4)    <lgl$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] vec
optimized away

Type#5 [unused] str-
val?            %11.3 = CallBuiltin        !v    class(%2.4) e2.3   <str->
dependent slot

Type#6 [unused] str-
optimized away (dependency)

Type#7 [used] lgl$-
val?            %13.8 = PopContext         C     %13.7, %13.4   <lgl$->
void                    Assume             D     %13.9, %13.10 (Typecheck@0x560a5a01b7e0[Type#7])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#8 [unused] str-
optimized away (dependency)

Type#9 [used] lgl$-
val?            %16.9 = PopContext         C     %16.8, %16.4   <lgl$->
void                    Assume             D     %16.10, %16.11 (Typecheck@0x560a5a01b7e0[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [unused] str-
optimized away (dependency)

Type#11 [unused] str-
optimized away (dependency)

Type#12 [used] lgl$-
val?            %19.12 = PopContext         C     %19.11, %19.5   <lgl$->
void                    Assume             D     %19.13, %19.14 (Typecheck@0x560a5a01b7e0[Type#12])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] str- (polluted)
optimized away (dependency)

Type#23 [unused] str$-
str$-           %5.3  = CallSafeBuiltin    wed   typeof(%2.4)    <str$->
dependent slot

Type#24 [unused] str$-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] str$-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %19.9 = Force!<lazy>       !vL   %19.7, e19.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %19.10 = Force!<lazy>       !vL   %19.6, e19.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

======================= ClosureVersion: .rlang_vctrs_typeof (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 41
referenced non-empty: 24
read non-empty: 24
used: 3
present non-empty: 8

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 21
optimized away non-empty: 13
dependent: 18
other reasons unused non-empty: 3

Polluted
polluted: 5
used polluted: 0

----------------------
.rlang_vctrs_typeof [0x560a5a04b590]
referenced: 32
referenced non-empty: 15
read non-empty: 15
used: 3
present non-empty: 6

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 6
dependent: 10
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|vec) (polluted)
val?            %2.4  = Force!<lazy>       !v    %1.0, e2.3   <(str|vec)>
other unused reason

Type#2 [unused] lgl$-
lgl$#-          %2.5  = CallSafeBuiltin    wed   is.object(%2.4)    <lgl$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] vec
val?            %11.4 = Force!<wrapped>    !v    %11.3, e2.3   <vec>
other unused reason

Type#5 [unused] str-
val?            %11.5 = CallBuiltin        !v    class(%11.4) e2.3   <str->
dependent slot

Type#6 [unused] str-
optimized away (dependency)

Type#7 [used] lgl$-
val?            %13.8 = PopContext         C     %13.7, %13.4   <lgl$->
void                    Assume             D     %13.9, %13.10 (Typecheck@0x560a5a01b7e0[Type#7])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#8 [unused] str-
optimized away (dependency)

Type#9 [used] lgl$-
val?            %16.9 = PopContext         C     %16.8, %16.4   <lgl$->
void                    Assume             D     %16.10, %16.11 (Typecheck@0x560a5a01b7e0[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [unused] str-
optimized away (dependency)

Type#11 [unused] str-
optimized away (dependency)

Type#12 [used] lgl$-
val?            %19.12 = PopContext         C     %19.11, %19.5   <lgl$->
void                    Assume             D     %19.13, %19.14 (Typecheck@0x560a5a01b7e0[Type#12])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] str- (polluted)
val?            %5.4  = Force!<wrapped>    !v    %5.3, e2.3   <str->
dependent slot

Type#23 [unused] str$-
str$-           %5.5  = CallSafeBuiltin    wed   typeof(%5.4)    <str$->
dependent slot

Type#24 [unused] str$-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] str$-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %19.9 = Force!<lazy>       !vL   %19.7, e19.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %19.10 = Force!<lazy>       !vL   %19.6, e19.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val?- (polluted)
optimized away

======================= ClosureVersion:  (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 104
referenced non-empty: 56
read non-empty: 53
used: 11
present non-empty: 18

Used
exact match: 8
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 45
optimized away non-empty: 27
dependent: 29
other reasons unused non-empty: 16

Polluted
polluted: 16
used polluted: 1

----------------------
 [0x560a59fc8df0]
referenced: 38
referenced non-empty: 11
read non-empty: 11
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 10
optimized away non-empty: 6
dependent: 9
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] (str|vec) (polluted)
val+            %1.12 = Force<lazy>              %1.1,    <(str|vec)>
dependent slot

Type#1 [unused] (str|vec) (polluted)
val+            %1.14 = Force<lazy>              %1.0,    <(str|vec)>
dependent slot

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] (str|vec) (polluted)
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] (str|vec) (polluted)
optimized away (dependency)

Type#10 [used] str$-
val?            %15.4 = StaticCall         !v    .rlang_vctrs_typeof[0x560a5b846c60](%15.3) e1.2   <str$->
void                    Assume             D     %15.25, %15.26 (Typecheck@0x560a5a404ac0[Type#10])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] str-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] str-
val?            %88.4 = PopContext         C     %88.3, %80.5   <str->
dependent slot

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] vec
optimized away (dependency)

Type#30 [unused] vec
optimized away (dependency)

Type#31 [unused] vec
val?            %51.10 = PopContext         C     %51.9, %34.6   <vec>
dependent slot

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: vec_size [0x560a58d1b190]
referenced: 7
referenced non-empty: 6
read non-empty: 6
used: 4
present non-empty: 0

Used
exact match: 3
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 1

Type#0 [unused] val? (polluted)
optimized away

Type#1 [used] lgl$-
val?            %59.2 = PopContext         C     %59.1, %57.5   <lgl$->
void                    Assume             D     %59.3, %59.4 (Typecheck@0x560a58d1b0a0[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] $#-
optimized away

Type#3 [used] (int|str)- (polluted)
val?            %62.4 = Force!<wrapped>    !v    %62.3, e57.3   <(int|str)->
void                    Assume             D     %62.5, %62.6 (Typecheck@0x560a58d1b0a0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (int|str)-, expected: (int|str)-, required: val?+

Type#4 [used] int$-
(int|real)$-    %64.2 = CallSafeBuiltin    vwed  length(%64.1)    <int$->
void                    Assume             D     %64.3, %64.4 (Typecheck@0x560a58d1b0a0[Type#4])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#5 [unused] vec
optimized away

Type#6 [used] int$-
val?            %74.7 = PopContext         C     %74.5, %70.4   <int$->
void                    Assume             D     %74.8, %74.9 (Typecheck@0x560a58d1b0a0[Type#6])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

----------------------
Inlinee: is.data.frame [0x560a55221df0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

Type#1 [used] lgl$-
val?            %57.14 = PopContext         C     %57.13, %57.9   <lgl$->
void                    Assume             D     %57.15, %57.16 (Typecheck@0x560a55221d00[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val?- (polluted)
optimized away

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %57.12 = Force!<lazy>       !vL   %57.10, e57.11   <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: chr_cast [0x560a5a03f750]
referenced: 6
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str-
optimized away (dependency)

Type#1 [used] str$-
val?            %82.5 = StaticCall         !v    .rlang_vctrs_typeof[0x560a5b567f60](%82.4) e82.0   <str$->
void                    Assume             D     %82.26, %82.27 (Typecheck@0x560a59e1c700[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#2 [unused] str-
val?            %88.3 = Force!<wrapped>    !     %88.1, e82.0   <str->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: rlib_df_cast [0x560a5a04ce50]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 4
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec
optimized away (dependency)

Type#1 [unused] vec
optimized away (dependency)

Type#2 [unused] vec
optimized away (dependency)

Type#3 [unused] vec
val?            %51.9 = PopContext         C     %51.8, %36.5   <vec>
dependent slot

----------------------
Inlinee: vec_is_unspecified [0x560a5a404bc0]
referenced: 18
referenced non-empty: 5
read non-empty: 4
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|vec) (polluted)
optimized away

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] str-
optimized away

Type#4 [unused] str$-
str$-           %4.9  = CallSafeBuiltin    wed   typeof(%1.12)    <str$->
other unused reason

Type#5 [unused] lgl$-
lgl$-           %4.10 = Eq                 d     %4.9, "logical", elided   <lgl$->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: nrow [0x560a569e0e60]
referenced: 4
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (str|vec) (polluted)
val?            %70.7 = Force!<lazy>       !vL   %70.5, e70.6   <(str|vec)>
other unused reason

Type#2 [used] int-
val?            %72.2 = CallBuiltin        !vL   dim(%70.7) e70.6   <int->
void                    Assume             D     %72.4, %72.5 (Typecheck@0x560a56a77a90[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] int$-
int$-           %74.5 = Extract1_1D        wed   %74.4, 1L, elided   <int$->
other unused reason

----------------------
Inlinee: new_data_frame [0x560a55149330]
referenced: 21
referenced non-empty: 18
read non-empty: 16
used: 3
present non-empty: 7

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 8
dependent: 12
other reasons unused non-empty: 3

Polluted
polluted: 5
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] vec (polluted)
val?            %38.4 = Force!<lazy>       !vL   %36.6, e38.3   <vec>
dependent slot

Type#3 [used] int$-
val?            %38.5 = CallBuiltin        !v    length(%38.4) e38.3   <int$->
void                    Assume             D     %38.6, %38.7 (Typecheck@0x560a55149220[Type#3])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#4 [unused] int$-
optimized away (dependency)

Type#5 [unused] lgl$-
lgl$-           %42.0 = Neq                d     %40.1, 0, elided   <lgl$->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] vec (polluted)
val?            %43.4 = Force!<wrapped>    !v    %43.3, e38.3   <vec>
dependent slot

Type#8 [unused] str-
val?            %43.5 = CallBuiltin        !v    names(%43.4) e38.3   <str->
dependent slot

Type#9 [unused] nil-
val?            %45.2 = Force!<lazy>       !     %45.0, e38.3   <nil->
other unused reason

Type#10 [used] int$-
val?^ | miss    %54.0 = LdVar              eR    n_cols, e38.3
void                    Assume             D     %54.1, %45.4 (Typecheck@0x560a55149220[Type#10])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#11 [unused] lgl$-
lgl$-           %54.4 = Eq                 d     %54.3, 0, elided   <lgl$->
dependent slot

Type#12 [unused] vec (polluted)
optimized away (dependency)

Type#13 [unused] str-
optimized away (dependency)

Type#14 [used] int$-
val?            %67.1 = PopContext         C     %67.0, %55.4   <int$->
void                    Assume             D     %67.2, %67.3 (Typecheck@0x560a55149220[Type#14])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#15 [unused] vec (polluted)
optimized away (dependency)

Type#16 [unused] (nil|str)- (polluted)
optimized away

Type#17 [unused] str-
optimized away (dependency)

Type#18 [unused] int$-
optimized away (dependency)

Type#19 [unused] int-
optimized away

Type#20 [unused] vec
val?            %51.8 = NamedCall          !     function(.Data, ...) <(rir::DispatchTable*)0x5|...(%51.3, class=%51.4, row.names=%51.5, .xpandDotsTrigger=%51.7) e38.3   <vec>
dependent slot

*********************** Compilation session for: NROW (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: NROW (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 11
referenced non-empty: 7
read non-empty: 7
used: 4
present non-empty: 2

Used
exact match: 3
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

----------------------
NROW [0x560a5698aa10]
referenced: 11
referenced non-empty: 7
read non-empty: 7
used: 4
present non-empty: 2

Used
exact match: 3
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str_
val+            %1.1  = Force!<lazy>       !vr   %1.0,    <str_>
other unused reason

Type#4 [unused] (nil|int)- (polluted)
val+            %1.2  = CallSafeBuiltin    wed   dim(%1.1)    <(nil|int)->
other unused reason

Type#5 [used] int$-
(int|real)$-    %1.3  = CallSafeBuiltin    wed   length(%1.2)    <int$->
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a56cb3cc0[Type#5])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [used] str$-
val+            %1.1  = Force!<lazy>       !vr   %1.0,    <str_>
void                    Assume             D     %3.0, %1.5 (Typecheck@0x560a56cb3cc0[Type#7])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: str$-, expected: str$-, required: val?+

Type#8 [used] int$-
(int|real)$-    %3.3  = CallSafeBuiltin    vwed  length(%3.2)    <int$->
void                    Assume             D     %3.4, %3.5 (Typecheck@0x560a56cb3cc0[Type#8])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#9 [unused] int-
optimized away

Type#10 [used] int$-
val?            %7.0  = Extract1_1D        wed   %1.2, 1L, elided   <int$->
void                    Assume             D     %7.1, %7.2 (Typecheck@0x560a56cb3cc0[Type#10])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

*********************** Compilation session for: check_dots_empty0 (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) ***********************
======================= ClosureVersion: check_dots_empty0 (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 4
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
check_dots_empty0 [0x560a5a6b8af0]
referenced: 4
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] int$-
val?            %2.3  = CallBuiltin        !v    nargs() e1.0   <int$->
void                    Assume             D     %2.4, %2.5 (Typecheck@0x560a5a500ec0[Type#1])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: is_true (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: is_true (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 10
referenced non-empty: 10
read non-empty: 10
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 8
dependent: 9
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

----------------------
is_true [0x560a55a7e8c0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 1
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] lgl$-
optimized away (dependency)

Type#1 [used] lgl$-
val?            %2.10 = PopContext         C     %2.9, %2.5   <lgl$->
void                    Assume             D     %2.11, %2.12 (Typecheck@0x560a55a7e7d0[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 7
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %2.8  = Force!<lazy>       !vr   %2.6,    <val?>
dependent slot

Type#1 [unused] val? (polluted)
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: .set_row_names (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0,SimpleInt0) ***********************
======================= ClosureVersion: .set_row_names (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0,SimpleInt0) =======================
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
.set_row_names [0x560a57875ee0]
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] int$-
int$-           %1.1  = Force!<lazy>       !vr   %1.0,    <int$->
dependent slot

Type#1 [unused] lgl$-
lgl$-           %1.3  = Gt                 vd    %1.1, 0, elided   <lgl$->
other unused reason

Type#2 [unused] int-
int-            %4.0  = StaticCall         !r    integer[0x560a5b90f0f0]()    <int->
dependent slot

Type#3 [unused] $#-
optimized away

Type#4 [unused] int$-
optimized away (dependency)

Type#5 [unused] int-
int-            %2.1  = CallSafeBuiltin    vwed  c(NA, %2.0)    <int->
dependent slot

*********************** Compilation session for: vec_is_unspecified (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) ***********************
======================= ClosureVersion: vec_is_unspecified (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) =======================
referenced: 19
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

----------------------
vec_is_unspecified [0x560a5a404bc0]
referenced: 18
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|vec) (polluted)
val?            %2.1  = Force!<lazy>       !vr   %1.0,    <(str|vec)>
other unused reason

Type#2 [unused] lgl$-
lgl$#-          %2.2  = CallSafeBuiltin    vwed  is.object(%2.1)    <lgl$->
dependent slot

Type#3 [unused] str-
optimized away

Type#4 [unused] str$-
str$-           %5.3  = CallSafeBuiltin    wed   typeof(%2.1)    <str$->
other unused reason

Type#5 [unused] lgl$-
lgl$-           %5.5  = Eq                 vd    %5.3, "logical", elided   <lgl$->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val?- (polluted)
optimized away

*********************** Compilation session for: as.list (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 1) ***********************
======================= ClosureVersion: as.list (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 1) =======================
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
as.list [0x560a573f45e0]
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

*********************** Compilation session for: vec_size (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: vec_size (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 16
referenced non-empty: 14
read non-empty: 14
used: 6
present non-empty: 3

Used
exact match: 5
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 5
dependent: 0
other reasons unused non-empty: 8

Polluted
polluted: 5
used polluted: 1

----------------------
vec_size [0x560a58d1b190]
referenced: 7
referenced non-empty: 6
read non-empty: 6
used: 4
present non-empty: 0

Used
exact match: 3
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 1

Type#0 [unused] val? (polluted)
optimized away

Type#1 [used] lgl$-
val?            %4.2  = PopContext         C     %4.1, %2.5   <lgl$->
void                    Assume             D     %4.3, %4.4 (Typecheck@0x560a58d1b0a0[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] $#-
optimized away

Type#3 [used] (int|str)- (polluted)
val?            %7.4  = Force!<wrapped>    !v    %7.3, e2.3   <(int|str)->
void                    Assume             D     %7.5, %7.6 (Typecheck@0x560a58d1b0a0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (int|str)-, expected: (int|str)-, required: val?+

Type#4 [used] int$-
(int|real)$-    %9.2  = CallSafeBuiltin    vwed  length(%9.1)    <int$->
void                    Assume             D     %9.3, %9.4 (Typecheck@0x560a58d1b0a0[Type#4])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#5 [unused] vec
optimized away

Type#6 [used] int$-
val?            %17.7 = PopContext         C     %17.5, %13.4   <int$->
void                    Assume             D     %17.8, %17.9 (Typecheck@0x560a58d1b0a0[Type#6])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %2.12 = Force!<lazy>       !vr   %2.10,    <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: nrow [0x560a569e0e60]
referenced: 4
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (str|vec) (polluted)
val?            %13.7 = Force!<lazy>       !vL   %13.5, e13.6   <(str|vec)>
other unused reason

Type#2 [used] int-
val?            %15.2 = CallBuiltin        !vL   dim(%13.7) e13.6   <int->
void                    Assume             D     %15.4, %15.5 (Typecheck@0x560a56a77a90[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] int$-
int$-           %17.5 = Extract1_1D        wed   %17.4, 1L, elided   <int$->
other unused reason

----------------------
Inlinee: is.data.frame [0x560a55221df0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

Type#1 [used] lgl$-
val?            %2.14 = PopContext         C     %2.13, %2.9   <lgl$->
void                    Assume             D     %2.15, %2.16 (Typecheck@0x560a55221d00[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: is_function (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: is_function (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 5
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
is_function [0x560a5a5fb670]
referenced: 5
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] vec
val?            %2.5  = Force!<value>      !v    %2.3, e2.4   <vec>
other unused reason

Type#3 [unused] val?- (polluted)
val?            %2.7  = Force!<lazy>       !v    %2.6, e2.4   <val?->
other unused reason

Type#4 [used] lgl$-
val?            %2.8  = CallBuiltin        !     .Call(%2.5, %2.7) e2.4   <lgl$->
void                    Assume             D     %2.9, %2.10 (Typecheck@0x560a5a61bb80[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: .row_names_info (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj1,SimpleInt1) ***********************
======================= ClosureVersion: .row_names_info (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj1,SimpleInt1) =======================
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
.row_names_info [0x560a5a38ec80]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec
val?            %1.3  = Force!<lazy>       !vr   %1.1,    <vec>
other unused reason

Type#1 [unused] int$-
int$-           %1.4  = Force!<value>            %1.0,    <int$->
other unused reason

*********************** Compilation session for: strrep (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: strrep (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 10
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

----------------------
strrep [0x560a55fbe740]
referenced: 10
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$-
val+            %1.3  = Force!<lazy>       !vr   %1.1,    <str$->
dependent slot

Type#2 [unused] lgl$-
lgl$#-          %1.4  = CallSafeBuiltin    wed   is.character(%1.3)    <lgl$->
other unused reason

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] str$-
val?            %3.1  = Force!<wrapped>    !v    %3.0, e1.2   <str$->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] int+ (polluted)
val?            %5.4  = Force!<lazy>       !v    %5.3, e1.2   <int+>
void                    Assume             D     %5.5, %5.6 (Typecheck@0x560a560a4bf0[Type#8])
exact match
checkFor: int+, static: val?, feedback: int+, expected: int+, required: val?+

Type#9 [unused] int-
int-            %7.2  = CallSafeBuiltin    wed   as.integer(%7.1)    <int->
other unused reason

*********************** Compilation session for: is (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj1) ***********************
======================= ClosureVersion: is (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj1) =======================
referenced: 124
referenced non-empty: 42
read non-empty: 42
used: 13
present non-empty: 17

Used
exact match: 7
widened: 6
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 29
optimized away non-empty: 12
dependent: 24
other reasons unused non-empty: 5

Polluted
polluted: 10
used polluted: 2

----------------------
is [0x560a56cd40c0]
referenced: 117
referenced non-empty: 38
read non-empty: 38
used: 12
present non-empty: 14

Used
exact match: 6
widened: 6
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 12
dependent: 24
other reasons unused non-empty: 2

Polluted
polluted: 9
used polluted: 2

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %2.2  = Force!<lazy>       !vr   %1.1,    <val?>
dependent slot

Type#2 [used] str$+ (polluted)
val?            %2.3  = CallBuiltin        !v    class(%2.2) e2.1   <str$+>
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a56d00d40[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$+ (polluted)
optimized away (dependency)

Type#5 [used] int$-
(int|real)$-    %4.6  = CallSafeBuiltin    wed   length(%4.5)    <int$->
void                    Assume             D     %4.7, %4.8 (Typecheck@0x560a56d00d40[Type#5])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] lgl$-
lgl$-           %6.2  = Gt                 d     %6.1, 1L, elided   <lgl$->
dependent slot

Type#7 [unused] lgl$-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$+ (polluted)
optimized away (dependency)

Type#13 [unused] other$
val?            %11.4 = StaticCall         !v    getClassDef[0x560a5c545a10](%11.3) e2.1   <other$>
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] str$-
val?            %13.4 = Force!<value>      !v    %13.3, e2.1   <str$->
dependent slot

Type#16 [unused] lgl$-
lgl$#-          %13.5 = CallSafeBuiltin    wed   is.character(%13.4)    <lgl$->
dependent slot

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] other$
val?            %15.1 = Force!<value>      !v    %15.0, e2.1   <other$>
dependent slot

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [used] nil-
val?^ | miss    %18.0 = LdVar              eR    class2Def, e2.1
void                    Assume             D     %18.1, %15.3 (Typecheck@0x560a56d00d40[Type#25])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: nil-, expected: nil-, required: val?^ | miss

Type#26 [unused] str$-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] other$
val?            %92.6 = StaticCall         !v    getClassDef[0x560a5c546830](%92.3, %92.4, %92.5) e2.1   <other$>
dependent slot

Type#36 [used] lgl$-
val?^ | miss    %22.0 = LdVar              eR    S3Case, e2.1
void                    Assume             D     %22.1, %20.0 (Typecheck@0x560a56d00d40[Type#36])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] val? (polluted)
val?            %23.4 = Force!<wrapped>    !v    %23.3, e2.1   <val?>
dependent slot

Type#39 [unused] lgl$-
lgl$#-          %23.5 = CallSafeBuiltin    wed   is.object(%23.4)    <lgl$->
dependent slot

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] (cls|other) (polluted)
val?            %90.4 = Force!<wrapped>    !v    %90.3, e2.1   <(cls|other)>
other unused reason

Type#42 [unused] lgl$-
lgl$#-          %90.5 = CallSafeBuiltin    wed   isS4(%90.4)    <lgl$->
dependent slot

Type#43 [unused] lgl$-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] lgl$-
optimized away (dependency)

Type#51 [unused] str$+ (polluted)
optimized away (dependency)

Type#52 [unused] str$-
optimized away (dependency)

Type#53 [used] lgl$-
val?            %41.2 = PopContext         C     %41.1, %37.5   <lgl$->
void                    Assume             D     %41.3, %41.4 (Typecheck@0x560a56d00d40[Type#53])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#54 [unused] str$-
optimized away (dependency)

Type#55 [used] lgl$-
val?            %48.2 = PopContext         C     %48.1, %44.4   <lgl$->
void                    Assume             D     %48.3, %48.4 (Typecheck@0x560a56d00d40[Type#55])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [used] vec+
val?            %52.3 = Call               !v    %52.0(%52.1, %52.2) e2.1   <vec+>
void                    Assume             D     %56.0, %54.4 (Typecheck@0x560a56d00d40[Type#58])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [used] str$-
val?            %54.2 = Force!<value>      !v    %54.1, e2.1   <str$->
void                    Assume             D     %54.3, %54.4 (Typecheck@0x560a56d00d40[Type#60])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#61 [unused] (nil|other) (polluted)
val?            %56.5 = Extract2_1D        wed   %56.2, %56.4, elided   <(nil|other)>
other unused reason

Type#62 [unused] other$
val?            %57.1 = Force!<value>      !v    %57.0, e2.1   <other$>
dependent slot

Type#63 [unused] other$
optimized away (dependency)

Type#64 [unused] str$+
optimized away (dependency)

Type#65 [used] lgl$-
val?            %64.2 = PopContext         C     %64.1, %60.4   <lgl$->
void                    Assume             D     %64.3, %64.4 (Typecheck@0x560a56d00d40[Type#65])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [used] vec+
val?            %69.3 = Call               !v    %69.0(%69.1, %69.2) e2.1   <vec+>
void                    Assume             D     %69.5, %69.6 (Typecheck@0x560a56d00d40[Type#70])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [used] str$+ (polluted)
val?^ | miss    %71.1 = LdVar              eR    class1, e2.1
void                    Assume             D     %71.2, %69.6 (Typecheck@0x560a56d00d40[Type#72])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str$+, expected: str$+, required: val?^ | miss

Type#73 [unused] nil-
val?            %71.8 = Extract2_1D        wed   %71.7, %71.5, elided   <nil->
dependent slot

Type#74 [unused] nil-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] $#-
optimized away (dependency)

Type#87 [unused] $#-
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] $#-
optimized away (dependency)

Type#90 [unused] $#-
optimized away (dependency)

Type#91 [unused] $#-
optimized away (dependency)

Type#92 [unused] $#-
optimized away (dependency)

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] $#-
optimized away (dependency)

Type#99 [unused] $#-
optimized away (dependency)

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [unused] $#-
optimized away (dependency)

Type#102 [unused] $#-
optimized away (dependency)

Type#103 [unused] $#-
optimized away (dependency)

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] $#-
optimized away (dependency)

Type#106 [unused] $#-
optimized away (dependency)

Type#107 [unused] $#-
optimized away (dependency)

Type#108 [used] lgl$-
val?            %81.3 = Call               !     %81.0(%81.1, %81.2) e2.1   <lgl$->
void                    Assume             D     %81.4, %81.5 (Typecheck@0x560a56d00d40[Type#108])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#109 [unused] $#-
optimized away (dependency)

Type#110 [unused] $#-
optimized away (dependency)

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] $#-
optimized away (dependency)

Type#113 [unused] $#-
optimized away (dependency)

Type#114 [unused] $#-
optimized away (dependency)

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: .identC [0x560a569917c0]
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %62.3 = Force!<value>      !v    %62.1, e62.2   <vec>
other unused reason

Type#4 [unused] str$+ (polluted)
val?            %62.5 = Force!<lazy>       !v    %62.4, e62.2   <str$+>
other unused reason

Type#5 [unused] str$-
val?            %62.7 = Force!<lazy>       !v    %62.6, e62.2   <str$->
other unused reason

Type#6 [used] lgl$-
val?            %62.8 = CallBuiltin        !v    .Call(%62.3, %62.5, %62.7) e62.2   <lgl$->
void                    Assume             D     %62.9, %62.10 (Typecheck@0x560a5692fc50[Type#6])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: identical (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1 miss: 6) ***********************
======================= ClosureVersion: identical (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1 miss: 6) =======================
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

----------------------
identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %1.3  = Force!<lazy>       !vr   %1.1,    <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %1.4  = Force!<lazy>       !vr   %1.0,    <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: .updateMethodsInTable (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj1,!Obj2) ***********************
======================= ClosureVersion: .getGeneric (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 50
referenced non-empty: 31
read non-empty: 31
used: 5
present non-empty: 17

Used
exact match: 3
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 9
dependent: 15
other reasons unused non-empty: 11

Polluted
polluted: 8
used polluted: 1

----------------------
.getGeneric [0x560a553ad2f0]
referenced: 41
referenced non-empty: 23
read non-empty: 23
used: 4
present non-empty: 15

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 4
dependent: 15
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$+
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] cls
val?            %50.9 = PopContext         C     %50.8, %48.6   <cls>
other unused reason

Type#5 [unused] (nil|cls) (polluted)
val?            %4.0  = Phi                      nil:BB3, %50.9:BB50   <(nil|cls)>
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %9.4  = Force!<lazy>       !v    %9.3, e2.0   <str$->
dependent slot

Type#8 [unused] lgl$-
lgl$#-          %9.5  = CallSafeBuiltin    wed   is.character(%9.4)    <lgl$->
dependent slot

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %45.3 = PopContext         C     %45.2, %43.4   <lgl$->
void                    Assume             D     %45.4, %45.5 (Typecheck@0x560a553a6140[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$-
val?            %17.4 = Force!<wrapped>    !v    %17.3, e2.0   <str$->
dependent slot

Type#13 [unused] lgl$-
lgl$#-          %17.5 = CallSafeBuiltin    wed   is.character(%17.4)    <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] str$-
val?            %39.4 = Force!<wrapped>    !v    %39.3, e2.0   <str$->
dependent slot

Type#16 [used] lgl$-
val?            %39.5 = CallBuiltin        !v    nzchar(%39.4) e2.0   <lgl$->
void                    Assume             D     %39.6, %39.7 (Typecheck@0x560a553a6140[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] vec
val?            %24.4 = Force!<value>      !v    %24.3, e2.0   <vec>
other unused reason

Type#24 [unused] str$-
val?            %24.6 = Force!<wrapped>    !v    %24.5, e2.0   <str$->
dependent slot

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] env-
val?            %26.4 = Force!<lazy>       !v    %26.3, e2.0   <env->
dependent slot

Type#27 [unused] env-
val?            %26.5 = CallBuiltin        !v    as.environment(%26.4) e2.0   <env->
dependent slot

Type#28 [unused] str$-
val?            %26.7 = Force!<lazy>       !v    %26.6, e2.0   <str$->
dependent slot

Type#29 [unused] (nil|cls) (polluted)
val?            %26.8 = CallBuiltin        !v    .Call(%24.4, %24.6, false, %26.5, %26.7) e2.0   <(nil|cls)>
dependent slot

Type#30 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#31 [used] env-
val?^ | miss    %29.0 = LdVar              eR    .GlobalEnv, e2.0
void                    Assume             D     %29.1, %26.11 (Typecheck@0x560a553a6140[Type#31])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [used] str$-
val?            %29.8 = Force!<wrapped>    !v    %29.7, e2.0   <str$->
void                    Assume             D     %29.9, %29.10 (Typecheck@0x560a553a6140[Type#33])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#34 [unused] nil-
val?            %31.2 = Extract2_1D        wed   %29.4, %31.1, elided   <nil->
other unused reason

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] (nil|cls) (polluted)
val?            %8.2  = Force!<value>      !     %8.0, e2.0   <(nil|cls)>
dependent slot

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away

Type#1 [unused] (nil|str)- (polluted)
optimized away

Type#2 [used] int- (polluted)
val?            %43.9 = StaticCall         !v    match[0x560a5cf8efa0](%43.7, %43.8, 0L) { 0 1 2n } e43.6   <int->
void                    Assume             D     %43.10, %43.11 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %45.2 = Gt                 wed   %45.1, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: .getGenericFromCache [0x560a5a356500]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away

Type#3 [unused] env-
optimized away

Type#4 [unused] cls
val?            %50.8 = StaticCall         !v    .getGenericFromCacheTable[0x560a5cf8f0a0](%50.4, %50.5, %50.6, %50.7) e50.3   <cls>
other unused reason

======================= ClosureVersion: .getGeneric (CorrOrd,!TMany,Argmatch;Eager1,NonRefl1) =======================
referenced: 50
referenced non-empty: 31
read non-empty: 31
used: 5
present non-empty: 17

Used
exact match: 3
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 9
dependent: 15
other reasons unused non-empty: 11

Polluted
polluted: 8
used polluted: 1

----------------------
.getGeneric [0x560a553ad2f0]
referenced: 41
referenced non-empty: 23
read non-empty: 23
used: 4
present non-empty: 15

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 4
dependent: 15
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$+
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] cls
val?            %55.9 = PopContext         C     %55.8, %53.6   <cls>
other unused reason

Type#5 [unused] (nil|cls) (polluted)
val?            %9.0  = Phi                      nil:BB8, %55.9:BB55   <(nil|cls)>
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %14.4 = Force!<lazy>       !v    %14.3, e1.5   <str$->
dependent slot

Type#8 [unused] lgl$-
lgl$#-          %14.5 = CallSafeBuiltin    wed   is.character(%14.4)    <lgl$->
dependent slot

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %50.3 = PopContext         C     %50.2, %48.4   <lgl$->
void                    Assume             D     %50.4, %50.5 (Typecheck@0x560a553a6140[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$-
val?            %22.4 = Force!<wrapped>    !v    %22.3, e1.5   <str$->
dependent slot

Type#13 [unused] lgl$-
lgl$#-          %22.5 = CallSafeBuiltin    wed   is.character(%22.4)    <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] str$-
val?            %44.4 = Force!<wrapped>    !v    %44.3, e1.5   <str$->
dependent slot

Type#16 [used] lgl$-
val?            %44.5 = CallBuiltin        !v    nzchar(%44.4) e1.5   <lgl$->
void                    Assume             D     %44.6, %44.7 (Typecheck@0x560a553a6140[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] vec
val?            %29.4 = Force!<value>      !v    %29.3, e1.5   <vec>
other unused reason

Type#24 [unused] str$-
val?            %29.6 = Force!<wrapped>    !v    %29.5, e1.5   <str$->
dependent slot

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] env-
val?            %31.4 = Force!<lazy>       !v    %31.3, e1.5   <env->
dependent slot

Type#27 [unused] env-
val?            %31.5 = CallBuiltin        !v    as.environment(%31.4) e1.5   <env->
dependent slot

Type#28 [unused] str$-
val?            %31.7 = Force!<lazy>       !v    %31.6, e1.5   <str$->
dependent slot

Type#29 [unused] (nil|cls) (polluted)
val?            %31.8 = CallBuiltin        !v    .Call(%29.4, %29.6, false, %31.5, %31.7) e1.5   <(nil|cls)>
dependent slot

Type#30 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#31 [used] env-
val?^ | miss    %34.0 = LdVar              eR    .GlobalEnv, e1.5
void                    Assume             D     %34.1, %31.11 (Typecheck@0x560a553a6140[Type#31])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [used] str$-
val?            %34.8 = Force!<wrapped>    !v    %34.7, e1.5   <str$->
void                    Assume             D     %34.9, %34.10 (Typecheck@0x560a553a6140[Type#33])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#34 [unused] nil-
val?            %36.2 = Extract2_1D        wed   %34.4, %36.1, elided   <nil->
other unused reason

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] (nil|cls) (polluted)
val?            %13.2 = Force!<value>      !     %13.0, e1.5   <(nil|cls)>
dependent slot

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away

Type#1 [unused] (nil|str)- (polluted)
optimized away

Type#2 [used] int- (polluted)
val?            %48.9 = StaticCall         !v    match[0x560a5cf8efa0](%48.7, %48.8, 0L) { 0 1 2n } e48.6   <int->
void                    Assume             D     %48.10, %48.11 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %50.2 = Gt                 wed   %50.1, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: .getGenericFromCache [0x560a5a356500]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away

Type#3 [unused] env-
optimized away

Type#4 [unused] cls
val?            %55.8 = StaticCall         !v    .getGenericFromCacheTable[0x560a5cf8f0a0](%55.4, %55.5, %55.6, %55.7) e55.3   <cls>
other unused reason

======================= ClosureVersion: match (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 2
present non-empty: 0

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

----------------------
match [0x560a55e4d070]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 2
present non-empty: 0

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

Type#0 [used] (nil|str)+ (polluted)
val?            %1.3  = Force!<lazy>       !vL   %1.1, e1.2   <(nil|str)+>
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a55e4cf60[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: (nil|str)+, expected: (nil|str)+, required: val?^ | miss

Type#1 [used] str-
val?            %2.4  = Force!<lazy>       !vL   %1.0, e1.2   <str->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a55e4cf60[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?^ | miss

Type#2 [unused] int$-
optimized away

Type#3 [unused] nil-
optimized away

======================= ClosureVersion: environment (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
environment [0x560a55e84a10]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|cls) (polluted)
val+            %1.1  = Force!<lazy>             %1.0,    <(nil|cls)>
other unused reason

======================= ClosureVersion: genericForBasic (CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj2) =======================
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
genericForBasic [0x560a5685bec0]
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] vec+
val?            %3.1  = Force!<wrapped>    !v    %3.0, e1.4   <vec+>
void                    Assume             D     %7.0, %5.4 (Typecheck@0x560a55ff3030[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str$-
val?            %5.2  = Force!<lazy>       !v    %5.1, e1.4   <str$->
void                    Assume             D     %5.3, %5.4 (Typecheck@0x560a55ff3030[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#5 [unused] cls
val?            %7.5  = Extract2_1D        wed   %7.2, %7.4, elided   <cls>
dependent slot

Type#6 [unused] lgl$-
val?            %7.8  = Force!<value>      !v    %7.7, e1.4   <lgl$->
other unused reason

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] cls
val?            %10.2 = Force!<value>      !     %10.0, e1.4   <cls>
dependent slot

======================= ClosureVersion: .resetInheritedMethods (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 50
referenced non-empty: 27
read non-empty: 27
used: 11
present non-empty: 5

Used
exact match: 4
widened: 7
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 16
optimized away non-empty: 11
dependent: 15
other reasons unused non-empty: 1

Polluted
polluted: 10
used polluted: 2

----------------------
.resetInheritedMethods [0x560a57543a30]
referenced: 49
referenced non-empty: 26
read non-empty: 26
used: 11
present non-empty: 5

Used
exact match: 4
widened: 7
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 10
dependent: 15
other reasons unused non-empty: 0

Polluted
polluted: 10
used polluted: 2

Type#0 [unused] str-
str-            %2.3  = CallSafeBuiltin    wed   vector("character", 0L)    <str->
dependent slot

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] env-
val?            %4.4  = Force!<lazy>       !v    %1.0, e4.3   <env->
void                    Assume             D     %4.5, %4.6 (Typecheck@0x560a56d63100[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?^ | miss

Type#3 [unused] str- (polluted)
val+            %6.2  = CallSafeBuiltin    wed   names(%6.1)    <str->
dependent slot

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [used] env-
val?            %6.7  = Call               !v    %6.4(%6.5, %6.6) e4.3   <env->
void                    Assume             D     %10.4, %6.10 (Typecheck@0x560a56d63100[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] env-
optimized away (dependency)

Type#13 [unused] str- (polluted)
val+            %10.7 = CallSafeBuiltin    wed   names(%10.6)    <str->
dependent slot

Type#14 [unused] str- (polluted)
optimized away (dependency)

Type#15 [unused] str- (polluted)
optimized away (dependency)

Type#16 [unused] str-
optimized away (dependency)

Type#17 [unused] env-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] str- (polluted)
optimized away (dependency)

Type#22 [unused] str- (polluted)
optimized away (dependency)

Type#23 [used] int- (polluted)
val?            %14.8 = StaticCall         !v    match[0x560a5cafad70](%14.6, %14.7) e4.3   <int->
void                    Assume             D     %14.9, %14.10 (Typecheck@0x560a56d63100[Type#23])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#24 [used] lgl$-
val+            %16.2 = CallSafeBuiltin    wed   anyNA(%16.1)    <lgl$->
void                    Assume             D     %16.3, %16.4 (Typecheck@0x560a56d63100[Type#24])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [used] str- (polluted)
val?^ | miss    %19.0 = LdVar              eR    direct, e4.3
void                    Assume             D     %19.1, %16.4 (Typecheck@0x560a56d63100[Type#28])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#29 [used] env-
val?^ | miss    %22.0 = LdVar              eR    allTable, e4.3
void                    Assume             D     %22.1, %20.2 (Typecheck@0x560a56d63100[Type#29])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [used] str$-
val             %22.7 = ChkMissing         e     %20.0
void                    Assume             D     %22.8, %20.2 (Typecheck@0x560a56d63100[Type#31])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: str$-, expected: str$-, required: val?^ | miss

Type#32 [unused] (cls|blt) (polluted)
val?            %22.11 = Extract2_1D        wed   %22.4, %22.10, elided   <(cls|blt)>
dependent slot

Type#33 [unused] (cls|blt) (polluted)
optimized away (dependency)

Type#34 [used] lgl$-
val?            %24.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%24.3, "MethodWithNext") e4.3   <lgl$->
void                    Assume             D     %24.5, %24.6 (Typecheck@0x560a56d63100[Type#34])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [used] env-
val?^ | miss    %31.0 = LdVar              eR    allTable, e4.3
void                    Assume             D     %31.1, %29.2 (Typecheck@0x560a56d63100[Type#39])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [used] str$-
val             %31.7 = ChkMissing         e     %29.0
void                    Assume             D     %31.8, %29.2 (Typecheck@0x560a56d63100[Type#41])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: str$-, expected: str$-, required: val?^ | miss

Type#42 [unused] cls
val?            %31.11 = Extract2_1D        wed   %31.4, %31.10, elided   <cls>
dependent slot

Type#43 [unused] cls
optimized away (dependency)

Type#44 [used] lgl$-
val?            %33.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%33.3, "MethodWithNext") e4.3   <lgl$->
void                    Assume             D     %33.5, %33.6 (Typecheck@0x560a56d63100[Type#44])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: character [0x560a55e4c150]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] int$-
optimized away

======================= ClosureVersion: .updateMethodsInTable (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj1,!Obj2) =======================
referenced: 106
referenced non-empty: 70
read non-empty: 69
used: 13
present non-empty: 19

Used
exact match: 7
widened: 6
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 57
optimized away non-empty: 38
dependent: 51
other reasons unused non-empty: 6

Polluted
polluted: 3
used polluted: 0

----------------------
.updateMethodsInTable [0x560a56c3cd80]
referenced: 83
referenced non-empty: 51
read non-empty: 51
used: 13
present non-empty: 12

Used
exact match: 7
widened: 6
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 38
optimized away non-empty: 26
dependent: 36
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
val?            %2.4  = Force!<lazy>       !vr   %1.2,    <cls>
dependent slot

Type#1 [unused] env-
val?            %2.6  = StaticCall         !v    environment[0x560a5c759490](%2.5) e2.3   <env->
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [used] lgl$-
val?            %4.9  = PopContext         C     %4.8, %4.4   <lgl$->
void                    Assume             D     %4.10, %4.11 (Typecheck@0x560a56f15b20[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] env-
val?            %6.6  = Call               !v    %6.3(%6.4, %6.5) e2.3   <env->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [used] lgl$-
val?^ | miss    %9.0  = LdVar              eR    reset, e2.3
void                    Assume             D     %9.1, %6.9 (Typecheck@0x560a56f15b20[Type#10])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] env-
val?            %59.4 = Force!<lazy>       !v    %59.3, e2.3   <env->
dependent slot

Type#13 [unused] env-
val?            %59.5 = CallBuiltin        !v    as.environment(%59.4) e2.3   <env->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] str$+
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] str$-
optimized away (dependency)

Type#20 [unused] str$-
val?            %65.14 = PopContext         C     %65.13, %61.5   <str$->
dependent slot

Type#21 [used] env-
val?^ | miss    %67.0 = LdVar              eR    env, e2.3
void                    Assume             D     %67.1, %65.16 (Typecheck@0x560a56f15b20[Type#21])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [used] str$-
val             %67.7 = ChkMissing         e     %65.14
void                    Assume             D     %67.8, %65.16 (Typecheck@0x560a56f15b20[Type#23])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: str$-, expected: str$-, required: val?^ | miss

Type#24 [unused] nil-
val?            %67.11 = Extract2_1D        wed   %67.4, %67.10, elided   <nil->
other unused reason

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [used] vec-
val?            %13.6 = Call               !v    %13.3(%13.4, %13.5) e2.3   <vec->
void                    Assume             D     %13.7, %13.8 (Typecheck@0x560a56f15b20[Type#34])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#35 [used] int$-
(int|real)$-    %15.2 = CallSafeBuiltin    wed   length(%15.1)    <int$->
void                    Assume             D     %15.3, %15.4 (Typecheck@0x560a56f15b20[Type#35])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] vec$-
val?            %42.6 = Call               !v    %42.3(%42.4, %42.5) e2.3   <vec$->
dependent slot

Type#39 [unused] vec$-
val?            %42.7 = StaticCall         !v    as.list[0x560a5ca37090](%42.6) { 0 } e2.3   <vec$->
dependent slot

Type#40 [used] vec$-
val             %44.6 = ChkMissing         e     %42.7
void                    Assume             D     %44.7, %42.9 (Typecheck@0x560a56f15b20[Type#40])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#41 [used] int$-
(int|real)$-    %44.10 = CallSafeBuiltin    wed   length(%44.9)    <int$->
void                    Assume             D     %44.11, %44.12 (Typecheck@0x560a56f15b20[Type#41])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#42 [unused] vec$-
vec-            %46.2 = CallSafeBuiltin    wed   vector("list", %46.1)    <vec$->
dependent slot

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] vec$-
optimized away (dependency)

Type#45 [used] int$-
val?            %48.3 = CallBuiltin        !v    seq_along(%44.9) e2.3   <int$->
void                    Assume             D     %48.4, %48.5 (Typecheck@0x560a56f15b20[Type#45])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#46 [unused] vec$-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] int$-
optimized away (dependency)

Type#49 [unused] str$-
optimized away (dependency)

Type#50 [unused] cls
val?            %52.4 = StaticCall         !v    getGeneric[0x560a5ca283a0](%52.3) e2.3   <cls>
dependent slot

Type#51 [used] vec$-
val?^ | miss    %54.0 = LdVar              eR    generics !upd, e2.3
void                    Assume             D     %54.1, %52.5 (Typecheck@0x560a56f15b20[Type#51])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#52 [used] int$-
val?^ | miss    %54.5 = LdVar              eR    i, e2.3
void                    Assume             D     %54.6, %52.5 (Typecheck@0x560a56f15b20[Type#52])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] vec$-
optimized away (dependency)

Type#61 [unused] vec$-
optimized away (dependency)

Type#62 [unused] cls
optimized away (dependency)

Type#63 [used] lgl$-
val?            %21.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%21.3, "groupGenericFunction") e2.3   <lgl$->
void                    Assume             D     %21.5, %21.6 (Typecheck@0x560a56f15b20[Type#63])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] str$+
optimized away (dependency)

Type#67 [unused] vec$-
optimized away (dependency)

Type#68 [unused] cls
optimized away (dependency)

Type#69 [unused] vec$-
optimized away (dependency)

Type#70 [unused] cls
optimized away (dependency)

Type#71 [unused] str-
val?            %32.4 = StaticCall         !v    getGroupMembers[0x560a5cf76540](%32.3) e2.3   <str->
other unused reason

Type#72 [unused] str$-
optimized away (dependency)

Type#73 [unused] cls
optimized away (dependency)

Type#74 [unused] env-
optimized away (dependency)

Type#75 [unused] lgl$-
optimized away (dependency)

Type#76 [unused] str$-
optimized away (dependency)

Type#77 [unused] cls
optimized away (dependency)

Type#78 [unused] env-
optimized away (dependency)

Type#79 [unused] lgl$-
optimized away (dependency)

Type#80 [unused] env-
optimized away (dependency)

Type#81 [unused] env-
optimized away (dependency)

Type#82 [used] env-
val?^ | miss    %29.0 = LdVar              eR    mtable, e2.3
void                    Assume             D     %29.1, %27.6 (Typecheck@0x560a56f15b20[Type#82])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

----------------------
Inlinee: methodsPackageMetaName [0x560a595b46a0]
referenced: 9
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 0
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] vec
val?            %65.5 = Force!<value>      !v    %65.3, e65.4   <vec>
other unused reason

Type#5 [unused] str$-
val?            %65.7 = Force!<value>      !v    %65.6, e65.4   <str$->
dependent slot

Type#6 [unused] str$-
val?            %65.9 = Force!<lazy>       !v    %65.8, e65.4   <str$->
dependent slot

Type#7 [unused] str$-
val?            %65.11 = Force!<lazy>       !v    %65.10, e65.4   <str$->
dependent slot

Type#8 [unused] str$-
val?            %65.12 = CallBuiltin        !v    .Call(%65.5, %65.7, %65.9, %65.11) e65.4   <str$->
dependent slot

----------------------
Inlinee: vector [0x560a55e99e90]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] (int|real)$- (polluted)
optimized away

----------------------
Inlinee: .TableMetaName [0x560a56d30040]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] str$-
val?            %65.13 = PopContext         C     %65.12, %63.5   <str$->
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 7
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %4.7  = Force!<lazy>       !vL   %4.5, e4.6   <val?>
dependent slot

Type#1 [unused] val? (polluted)
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

======================= ClosureVersion: .updateMethodsInTable (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 106
referenced non-empty: 70
read non-empty: 69
used: 13
present non-empty: 19

Used
exact match: 7
widened: 6
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 57
optimized away non-empty: 38
dependent: 51
other reasons unused non-empty: 6

Polluted
polluted: 3
used polluted: 0

----------------------
.updateMethodsInTable [0x560a56c3cd80]
referenced: 83
referenced non-empty: 51
read non-empty: 51
used: 13
present non-empty: 12

Used
exact match: 7
widened: 6
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 38
optimized away non-empty: 26
dependent: 36
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
val?            %2.4  = Force!<lazy>       !v    %1.2, e2.3   <cls>
dependent slot

Type#1 [unused] env-
val?            %2.6  = StaticCall         !v    environment[0x560a5c759490](%2.5) e2.3   <env->
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [used] lgl$-
val?            %4.9  = PopContext         C     %4.8, %4.4   <lgl$->
void                    Assume             D     %4.10, %4.11 (Typecheck@0x560a56f15b20[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] env-
val?            %6.6  = Call               !v    %6.3(%6.4, %6.5) e2.3   <env->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [used] lgl$-
val?^ | miss    %9.0  = LdVar              eR    reset, e2.3
void                    Assume             D     %9.1, %6.9 (Typecheck@0x560a56f15b20[Type#10])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] env-
val?            %59.4 = Force!<lazy>       !v    %59.3, e2.3   <env->
dependent slot

Type#13 [unused] env-
val?            %59.5 = CallBuiltin        !v    as.environment(%59.4) e2.3   <env->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] str$+
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] str$-
optimized away (dependency)

Type#20 [unused] str$-
val?            %65.14 = PopContext         C     %65.13, %61.5   <str$->
dependent slot

Type#21 [used] env-
val?^ | miss    %67.0 = LdVar              eR    env, e2.3
void                    Assume             D     %67.1, %65.16 (Typecheck@0x560a56f15b20[Type#21])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [used] str$-
val             %67.7 = ChkMissing         e     %65.14
void                    Assume             D     %67.8, %65.16 (Typecheck@0x560a56f15b20[Type#23])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: str$-, expected: str$-, required: val?^ | miss

Type#24 [unused] nil-
val?            %67.11 = Extract2_1D        wed   %67.4, %67.10, elided   <nil->
other unused reason

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [used] vec-
val?            %13.6 = Call               !v    %13.3(%13.4, %13.5) e2.3   <vec->
void                    Assume             D     %13.7, %13.8 (Typecheck@0x560a56f15b20[Type#34])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#35 [used] int$-
(int|real)$-    %15.2 = CallSafeBuiltin    wed   length(%15.1)    <int$->
void                    Assume             D     %15.3, %15.4 (Typecheck@0x560a56f15b20[Type#35])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] vec$-
val?            %42.6 = Call               !v    %42.3(%42.4, %42.5) e2.3   <vec$->
dependent slot

Type#39 [unused] vec$-
val?            %42.7 = StaticCall         !v    as.list[0x560a5ca37090](%42.6) { 0 } e2.3   <vec$->
dependent slot

Type#40 [used] vec$-
val             %44.6 = ChkMissing         e     %42.7
void                    Assume             D     %44.7, %42.9 (Typecheck@0x560a56f15b20[Type#40])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#41 [used] int$-
(int|real)$-    %44.10 = CallSafeBuiltin    wed   length(%44.9)    <int$->
void                    Assume             D     %44.11, %44.12 (Typecheck@0x560a56f15b20[Type#41])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#42 [unused] vec$-
vec-            %46.2 = CallSafeBuiltin    wed   vector("list", %46.1)    <vec$->
dependent slot

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] vec$-
optimized away (dependency)

Type#45 [used] int$-
val?            %48.3 = CallBuiltin        !v    seq_along(%44.9) e2.3   <int$->
void                    Assume             D     %48.4, %48.5 (Typecheck@0x560a56f15b20[Type#45])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#46 [unused] vec$-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] int$-
optimized away (dependency)

Type#49 [unused] str$-
optimized away (dependency)

Type#50 [unused] cls
val?            %52.4 = StaticCall         !v    getGeneric[0x560a5ca283a0](%52.3) e2.3   <cls>
dependent slot

Type#51 [used] vec$-
val?^ | miss    %54.0 = LdVar              eR    generics !upd, e2.3
void                    Assume             D     %54.1, %52.5 (Typecheck@0x560a56f15b20[Type#51])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#52 [used] int$-
val?^ | miss    %54.5 = LdVar              eR    i, e2.3
void                    Assume             D     %54.6, %52.5 (Typecheck@0x560a56f15b20[Type#52])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] vec$-
optimized away (dependency)

Type#61 [unused] vec$-
optimized away (dependency)

Type#62 [unused] cls
optimized away (dependency)

Type#63 [used] lgl$-
val?            %21.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%21.3, "groupGenericFunction") e2.3   <lgl$->
void                    Assume             D     %21.5, %21.6 (Typecheck@0x560a56f15b20[Type#63])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] str$+
optimized away (dependency)

Type#67 [unused] vec$-
optimized away (dependency)

Type#68 [unused] cls
optimized away (dependency)

Type#69 [unused] vec$-
optimized away (dependency)

Type#70 [unused] cls
optimized away (dependency)

Type#71 [unused] str-
val?            %32.4 = StaticCall         !v    getGroupMembers[0x560a5cf76540](%32.3) e2.3   <str->
other unused reason

Type#72 [unused] str$-
optimized away (dependency)

Type#73 [unused] cls
optimized away (dependency)

Type#74 [unused] env-
optimized away (dependency)

Type#75 [unused] lgl$-
optimized away (dependency)

Type#76 [unused] str$-
optimized away (dependency)

Type#77 [unused] cls
optimized away (dependency)

Type#78 [unused] env-
optimized away (dependency)

Type#79 [unused] lgl$-
optimized away (dependency)

Type#80 [unused] env-
optimized away (dependency)

Type#81 [unused] env-
optimized away (dependency)

Type#82 [used] env-
val?^ | miss    %29.0 = LdVar              eR    mtable, e2.3
void                    Assume             D     %29.1, %27.6 (Typecheck@0x560a56f15b20[Type#82])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

----------------------
Inlinee: methodsPackageMetaName [0x560a595b46a0]
referenced: 9
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 0
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] vec
val?            %65.5 = Force!<value>      !v    %65.3, e65.4   <vec>
other unused reason

Type#5 [unused] str$-
val?            %65.7 = Force!<value>      !v    %65.6, e65.4   <str$->
dependent slot

Type#6 [unused] str$-
val?            %65.9 = Force!<lazy>       !v    %65.8, e65.4   <str$->
dependent slot

Type#7 [unused] str$-
val?            %65.11 = Force!<lazy>       !v    %65.10, e65.4   <str$->
dependent slot

Type#8 [unused] str$-
val?            %65.12 = CallBuiltin        !v    .Call(%65.5, %65.7, %65.9, %65.11) e65.4   <str$->
dependent slot

----------------------
Inlinee: vector [0x560a55e99e90]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] (int|real)$- (polluted)
optimized away

----------------------
Inlinee: .TableMetaName [0x560a56d30040]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] str$-
val?            %65.13 = PopContext         C     %65.12, %63.5   <str$->
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 7
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %4.7  = Force!<lazy>       !vL   %4.5, e4.6   <val?>
dependent slot

Type#1 [unused] val? (polluted)
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

======================= ClosureVersion: remove (CorrOrd,!TMany,Argmatch;Eager0,Eager2,NonRefl0,NonRefl2 miss: 1) =======================
referenced: 46
referenced non-empty: 29
read non-empty: 28
used: 6
present non-empty: 14

Used
exact match: 2
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 23
optimized away non-empty: 9
dependent: 14
other reasons unused non-empty: 9

Polluted
polluted: 7
used polluted: 0

----------------------
remove [0x560a57054940]
referenced: 28
referenced non-empty: 17
read non-empty: 17
used: 6
present non-empty: 6

Used
exact match: 2
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 11
optimized away non-empty: 5
dependent: 10
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] nil-
val?            %7.3  = NamedCall          !v    <spec $>(%7.1, .xpandDotsTrigger=%7.2) e1.6   <nil->
void                    Assume             D     %7.5, %7.6 (Typecheck@0x560a57054830[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: nil-, expected: nil-, required: val?+

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] nil-
optimized away (dependency)

Type#7 [used] int$-
(int|real)$-    %9.6  = CallSafeBuiltin    wed   length(%9.5)    <int$->
void                    Assume             D     %9.7, %9.8 (Typecheck@0x560a57054830[Type#7])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] nil-
optimized away (dependency)

Type#14 [unused] blt-
optimized away (dependency)

Type#15 [used] str-
val?            %26.3 = PopContext         C     %26.2, %16.5   <str->
void                    Assume             D     %26.5, %26.6 (Typecheck@0x560a57054830[Type#15])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] str-
optimized away (dependency)

Type#18 [used] int$-
(int|real)$-    %28.6 = CallSafeBuiltin    wed   length(%28.5)    <int$->
void                    Assume             D     %28.7, %28.8 (Typecheck@0x560a57054830[Type#18])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#19 [unused] lgl$-
lgl$-           %30.2 = Eq                 d     %30.1, 0L, elided   <lgl$->
dependent slot

Type#20 [unused] str-
str-            %39.3 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
dependent slot

Type#21 [unused] blt-
val?            %34.3 = CallBuiltin        !v    .Primitive("c") e1.6   <blt->
dependent slot

Type#22 [used] str-
val?            %36.4 = Force!<lazy>       !v    %36.3, e1.6   <str->
void                    Assume             D     %36.5, %36.6 (Typecheck@0x560a57054830[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#23 [used] str-
val?^ | miss    %38.0 = LdVar              eR    names, e1.6
void                    Assume             D     %38.1, %36.6 (Typecheck@0x560a57054830[Type#23])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#24 [unused] str-
val+            %38.7 = CallSafeBuiltin    wed   c(%38.6, %38.4)    <str->
dependent slot

Type#25 [unused] str-
optimized away (dependency)

Type#26 [unused] env-
val?            %38.10 = Force!<lazy>       !v    %38.9, e1.6   <env->
other unused reason

Type#27 [unused] lgl$-
val?            %38.12 = Force!<lazy>       !v    %38.11, e1.6   <lgl$->
dependent slot

----------------------
Inlinee: is.vector [0x560a55e6f180]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (str|vec) (polluted)
optimized away

Type#1 [unused] str$-
optimized away

----------------------
Inlinee: vapply [0x560a5607f4e0]
referenced: 15
referenced non-empty: 9
read non-empty: 9
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 1
dependent: 4
other reasons unused non-empty: 5

Polluted
polluted: 6
used polluted: 0

Type#0 [unused] (cls|blt)- (polluted)
optimized away (dependency)

Type#1 [unused] (cls|blt)- (polluted)
val?            %16.10 = StaticCall         !v    match.fun[0x560a5d032ee0](%16.9) e16.8   <(cls|blt)->
dependent slot

Type#2 [unused] val? (polluted)
val?            %18.4 = Force!<lazy>       !v    %18.3, e16.8   <val?>
other unused reason

Type#3 [unused] lgl$-
lgl$#-          %18.5 = CallSafeBuiltin    wed   is.vector(%18.4, "any")    <lgl$->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] (str|vec)+ (polluted)
val?            %41.4 = Force!<wrapped>    !v    %41.3, e16.8   <(str|vec)+>
other unused reason

Type#6 [unused] lgl$-
lgl$#-          %41.5 = CallSafeBuiltin    wed   is.object(%41.4)    <lgl$->
dependent slot

Type#7 [unused] (nil|vec) (polluted)
val?            %40.4 = Force!<wrapped>    !v    %40.3, e16.8   <(nil|vec)>
other unused reason

Type#8 [unused] vec
val?            %40.5 = StaticCall         !v    as.list[0x560a5ca37090](%40.4) { 0 } e16.8   <vec>
other unused reason

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] val?+ (polluted)
val?            %26.2 = Call               !v    %26.0(%26.1) e16.8   <val?+>
other unused reason

----------------------
Inlinee: character [0x560a55e4c150]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] int$-
optimized away

======================= ClosureVersion: exists (CorrOrd,!TMany,Argmatch;Eager1,Eager3,Eager4,Eager5,NonRefl1,NonRefl3,NonRefl4,NonRefl5,!Obj5) =======================
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

----------------------
exists [0x560a572da620]
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] env-
optimized away (dependency)

Type#4 [used] str$+ (polluted)
val?            %7.1  = Force!<lazy>       !v    %7.0, e1.8   <str$+>
void                    Assume             D     %7.2, %7.3 (Typecheck@0x560a574dece0[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#5 [unused] env-
val?            %9.3  = Force!<lazy>       !v    %9.2, e1.8   <env->
dependent slot

Type#6 [unused] str$-
val?            %9.5  = Force!<lazy>       !v    %9.4, e1.8   <str$->
other unused reason

Type#7 [unused] lgl$-
val?            %9.7  = Force!<lazy>       !v    %9.6, e1.8   <lgl$->
other unused reason

======================= ClosureVersion: getGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1 miss: 1) =======================
referenced: 132
referenced non-empty: 51
read non-empty: 45
used: 11
present non-empty: 19

Used
exact match: 6
widened: 5
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 40
optimized away non-empty: 21
dependent: 36
other reasons unused non-empty: 4

Polluted
polluted: 5
used polluted: 0

----------------------
getGeneric [0x560a54ffa020]
referenced: 64
referenced non-empty: 28
read non-empty: 28
used: 7
present non-empty: 11

Used
exact match: 4
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 21
optimized away non-empty: 10
dependent: 19
other reasons unused non-empty: 2

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|cls) (polluted)
val?            %2.4  = Force!<lazy>       !v    %1.2, e2.3   <(str|cls)>
other unused reason

Type#2 [used] lgl$-
val?            %2.5  = CallBuiltin        !v    is.function(%2.4) e2.3   <lgl$->
void                    Assume             D     %2.6, %2.7 (Typecheck@0x560a574f80c0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] cls
optimized away (dependency)

Type#4 [used] lgl$-
val?            %76.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%76.3, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %76.5, %76.6 (Typecheck@0x560a574f80c0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] cls
val?            %80.2 = Force!<wrapped>    !     %80.0, e2.3   <cls>
dependent slot

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] env-
optimized away (dependency)

Type#14 [unused] str$-
optimized away (dependency)

Type#15 [unused] (nil|cls) (polluted)
val?            %6.6  = StaticCall         !v    .getGeneric[0x560a5cf8eea0](%6.3, %6.4, %6.5) e2.3   <(nil|cls)>
dependent slot

Type#16 [unused] str$+
optimized away

Type#17 [unused] str$-
optimized away (dependency)

Type#18 [unused] cls
val?            %75.5 = StaticCall         !v    .getGeneric[0x560a5c9b3f10](%75.3, missingArg, %75.4) e2.3   <cls>
dependent slot

Type#19 [unused] (nil|cls) (polluted)
val?            %7.0  = Phi                      %6.6:BB6, %75.5:BB75   <(nil|cls)>
dependent slot

Type#20 [used] env-
val?            %10.3 = CallBuiltin        !v    baseenv() e2.3   <env->
void                    Assume             D     %14.0, %12.4 (Typecheck@0x560a574f80c0[Type#20])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [used] str$-
val?            %12.2 = Force!<wrapped>    !v    %12.1, e2.3   <str$->
void                    Assume             D     %12.3, %12.4 (Typecheck@0x560a574f80c0[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#23 [unused] blt-
val?            %14.5 = Extract2_1D        wed   %14.2, %14.4, elided   <blt->
dependent slot

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [used] blt-
val?^ | miss    %45.3 = LdVar              eR    baseDef, e2.3
void                    Assume             D     %45.4, %15.1 (Typecheck@0x560a574f80c0[Type#25])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: blt-, expected: blt-, required: val?^ | miss

Type#26 [unused] lgl$-
lgl$#-          %45.8 = CallSafeBuiltin    wed   is.function(%45.7)    <lgl$->
dependent slot

Type#27 [unused] str$-
optimized away (dependency)

Type#28 [unused] cls
val?            %49.4 = StaticCall         !v    genericForBasic[0x560a5c9caa60](%49.3, missingArg, false) { 0 2n } e2.3   <cls>
dependent slot

Type#29 [unused] cls
optimized away (dependency)

Type#30 [used] lgl$-
val?            %51.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%51.3, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %51.5, %51.6 (Typecheck@0x560a574f80c0[Type#30])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#31 [unused] str$-
optimized away (dependency)

Type#32 [unused] cls
optimized away (dependency)

Type#33 [unused] cls
val?            %73.3 = PopContext         C     %73.2, %55.5   <cls>
dependent slot

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] cls
val?            %21.4 = Force!<value>      !v    %21.3, e2.3   <cls>
dependent slot

Type#36 [used] lgl$-
val?            %21.5 = CallBuiltin        !v    is.function(%21.4) e2.3   <lgl$->
void                    Assume             D     %21.6, %21.7 (Typecheck@0x560a574f80c0[Type#36])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] cls
val?            %44.2 = Force!<value>      !     %44.0, e2.3   <cls>
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %69.9 = Force!<lazy>       !vL   %69.7, e69.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %69.10 = Force!<lazy>       !vL   %69.6, e69.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: .cacheGenericTable [0x560a59442440]
referenced: 56
referenced non-empty: 11
read non-empty: 11
used: 4
present non-empty: 5

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 2
dependent: 7
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
val?            %57.12 = Force!<lazy>       !vL   %57.9, e57.11   <cls>
dependent slot

Type#1 [used] env-
val?            %57.14 = Force!<lazy>       !vL   %57.8, e57.11   <env->
void                    Assume             D     %61.0, %59.3 (Typecheck@0x560a594db2c0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] str$-
val?            %59.1 = Force!<lazy>       !vL   %57.10, e57.11   <str$->
void                    Assume             D     %59.2, %59.3 (Typecheck@0x560a594db2c0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#4 [unused] cls
val?            %61.5 = Extract2_1D        wed   %61.2, %61.4, elided   <cls>
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %63.3 = Call               !v    %63.0(%63.1, %63.2) e57.11   <str$->
dependent slot

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] cls
val?            %65.4 = Force!<value>      !v    %65.3, e57.11   <cls>
dependent slot

Type#10 [used] lgl$-
val?            %65.5 = CallBuiltin        !v    is.function(%65.4) e57.11   <lgl$->
void                    Assume             D     %65.6, %65.7 (Typecheck@0x560a594db2c0[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] cls
optimized away (dependency)

Type#12 [unused] cls
optimized away (dependency)

Type#13 [used] lgl$-
val?            %69.12 = PopContext         C     %69.11, %69.5   <lgl$->
void                    Assume             D     %69.13, %69.14 (Typecheck@0x560a594db2c0[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#14 [unused] cls
val?            %73.1 = Force!<value>      !v    %73.0, e57.11   <cls>
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: .cacheGeneric [0x560a54a9d440]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] cls
optimized away (dependency)

Type#2 [unused] env-
optimized away

Type#3 [unused] cls
val?            %73.2 = PopContext         C     %73.1, %57.7   <cls>
dependent slot

======================= ClosureVersion: getGeneric (!ExpMi,CorrOrd,!TMany,Argmatch miss: 3) =======================
referenced: 132
referenced non-empty: 51
read non-empty: 45
used: 11
present non-empty: 19

Used
exact match: 6
widened: 5
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 40
optimized away non-empty: 21
dependent: 36
other reasons unused non-empty: 4

Polluted
polluted: 5
used polluted: 0

----------------------
getGeneric [0x560a54ffa020]
referenced: 64
referenced non-empty: 28
read non-empty: 28
used: 7
present non-empty: 11

Used
exact match: 4
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 21
optimized away non-empty: 10
dependent: 19
other reasons unused non-empty: 2

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|cls) (polluted)
val?            %2.4  = Force!<lazy>       !v    %1.0, e2.3   <(str|cls)>
other unused reason

Type#2 [used] lgl$-
val?            %2.5  = CallBuiltin        !v    is.function(%2.4) e2.3   <lgl$->
void                    Assume             D     %2.6, %2.7 (Typecheck@0x560a574f80c0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] cls
optimized away (dependency)

Type#4 [used] lgl$-
val?            %76.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%76.3, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %76.5, %76.6 (Typecheck@0x560a574f80c0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] cls
val?            %80.2 = Force!<wrapped>    !     %80.0, e2.3   <cls>
dependent slot

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] env-
optimized away (dependency)

Type#14 [unused] str$-
optimized away (dependency)

Type#15 [unused] (nil|cls) (polluted)
val?            %6.6  = StaticCall         !v    .getGeneric[0x560a5cf8eea0](%6.3, %6.4, %6.5) e2.3   <(nil|cls)>
dependent slot

Type#16 [unused] str$+
optimized away

Type#17 [unused] str$-
optimized away (dependency)

Type#18 [unused] cls
val?            %75.5 = StaticCall         !v    .getGeneric[0x560a5c9b3f10](%75.3, missingArg, %75.4) e2.3   <cls>
dependent slot

Type#19 [unused] (nil|cls) (polluted)
val?            %7.0  = Phi                      %6.6:BB6, %75.5:BB75   <(nil|cls)>
dependent slot

Type#20 [used] env-
val?            %10.3 = CallBuiltin        !v    baseenv() e2.3   <env->
void                    Assume             D     %14.0, %12.4 (Typecheck@0x560a574f80c0[Type#20])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [used] str$-
val?            %12.2 = Force!<wrapped>    !v    %12.1, e2.3   <str$->
void                    Assume             D     %12.3, %12.4 (Typecheck@0x560a574f80c0[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#23 [unused] blt-
val?            %14.5 = Extract2_1D        wed   %14.2, %14.4, elided   <blt->
dependent slot

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [used] blt-
val?^ | miss    %45.3 = LdVar              eR    baseDef, e2.3
void                    Assume             D     %45.4, %15.1 (Typecheck@0x560a574f80c0[Type#25])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: blt-, expected: blt-, required: val?^ | miss

Type#26 [unused] lgl$-
lgl$#-          %45.8 = CallSafeBuiltin    wed   is.function(%45.7)    <lgl$->
dependent slot

Type#27 [unused] str$-
optimized away (dependency)

Type#28 [unused] cls
val?            %49.4 = StaticCall         !v    genericForBasic[0x560a5c9caa60](%49.3, missingArg, false) { 0 2n } e2.3   <cls>
dependent slot

Type#29 [unused] cls
optimized away (dependency)

Type#30 [used] lgl$-
val?            %51.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%51.3, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %51.5, %51.6 (Typecheck@0x560a574f80c0[Type#30])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#31 [unused] str$-
optimized away (dependency)

Type#32 [unused] cls
optimized away (dependency)

Type#33 [unused] cls
val?            %73.3 = PopContext         C     %73.2, %55.5   <cls>
dependent slot

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] cls
val?            %21.4 = Force!<value>      !v    %21.3, e2.3   <cls>
dependent slot

Type#36 [used] lgl$-
val?            %21.5 = CallBuiltin        !v    is.function(%21.4) e2.3   <lgl$->
void                    Assume             D     %21.6, %21.7 (Typecheck@0x560a574f80c0[Type#36])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] cls
val?            %44.2 = Force!<value>      !     %44.0, e2.3   <cls>
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %69.9 = Force!<lazy>       !vL   %69.7, e69.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %69.10 = Force!<lazy>       !vL   %69.6, e69.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: .cacheGenericTable [0x560a59442440]
referenced: 56
referenced non-empty: 11
read non-empty: 11
used: 4
present non-empty: 5

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 2
dependent: 7
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
val?            %57.12 = Force!<lazy>       !vL   %57.9, e57.11   <cls>
dependent slot

Type#1 [used] env-
val?            %57.14 = Force!<lazy>       !vL   %57.8, e57.11   <env->
void                    Assume             D     %61.0, %59.3 (Typecheck@0x560a594db2c0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] str$-
val?            %59.1 = Force!<lazy>       !vL   %57.10, e57.11   <str$->
void                    Assume             D     %59.2, %59.3 (Typecheck@0x560a594db2c0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#4 [unused] cls
val?            %61.5 = Extract2_1D        wed   %61.2, %61.4, elided   <cls>
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %63.3 = Call               !v    %63.0(%63.1, %63.2) e57.11   <str$->
dependent slot

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] cls
val?            %65.4 = Force!<value>      !v    %65.3, e57.11   <cls>
dependent slot

Type#10 [used] lgl$-
val?            %65.5 = CallBuiltin        !v    is.function(%65.4) e57.11   <lgl$->
void                    Assume             D     %65.6, %65.7 (Typecheck@0x560a594db2c0[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] cls
optimized away (dependency)

Type#12 [unused] cls
optimized away (dependency)

Type#13 [used] lgl$-
val?            %69.12 = PopContext         C     %69.11, %69.5   <lgl$->
void                    Assume             D     %69.13, %69.14 (Typecheck@0x560a594db2c0[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#14 [unused] cls
val?            %73.1 = Force!<value>      !v    %73.0, e57.11   <cls>
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: .cacheGeneric [0x560a54a9d440]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] cls
optimized away (dependency)

Type#2 [unused] env-
optimized away

Type#3 [unused] cls
val?            %73.2 = PopContext         C     %73.1, %57.7   <cls>
dependent slot

======================= ClosureVersion: sapply (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1 miss: 3) =======================
referenced: 32
referenced non-empty: 20
read non-empty: 19
used: 4
present non-empty: 8

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 16
optimized away non-empty: 8
dependent: 14
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
sapply [0x560a55ec8320]
referenced: 21
referenced non-empty: 12
read non-empty: 12
used: 0
present non-empty: 7

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 5
dependent: 11
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls-
optimized away (dependency)

Type#1 [unused] cls-
val?            %1.4  = StaticCall         !v    match.fun[0x560a5d032ee0](%1.3) e1.2   <cls->
dependent slot

Type#2 [unused] vec-
optimized away (dependency)

Type#3 [unused] cls-
optimized away (dependency)

Type#4 [unused] vec-
val?            %2.7  = NamedCall          !v    function(X, FUN, ...) <(rir::DispatchTable*)0x|...(X=%2.3, FUN=%2.4, .xpandDotsTrigger=%2.6) e1.2   <vec->
dependent slot

Type#5 [unused] lgl$-
val?            %2.10 = Force!<lazy>       !v    %2.9, e1.2   <lgl$->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] vec-
val?            %5.4  = Force!<wrapped>    !v    %5.3, e1.2   <vec->
dependent slot

Type#8 [unused] lgl$-
lgl$#-          %5.5  = CallSafeBuiltin    wed   is.character(%5.4)    <lgl$->
dependent slot

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] lgl$-
val?            %15.4 = Force!<lazy>       !v    %15.3, e1.2   <lgl$->
dependent slot

Type#15 [unused] lgl$-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] vec-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] str-
val?            %28.3 = NamedCall          !     %28.0(%28.1, higher=%28.2) e1.2   <str->
other unused reason

----------------------
Inlinee: isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 7
used: 4
present non-empty: 1

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] lgl$-
optimized away (dependency)

Type#2 [used] lgl$-
val+            %15.7 = CallSafeBuiltin    vwed  is.logical(%15.4)    <lgl$->
void                    Assume             D     %15.8, %15.9 (Typecheck@0x560a54e55690[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %15.4 = Force!<lazy>       !v    %15.3, e1.2   <lgl$->
void                    Assume             D     %18.3, %15.9 (Typecheck@0x560a54e55690[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %15.4 = Force!<lazy>       !v    %15.3, e1.2   <lgl$->
void                    Assume             D     %20.3, %15.9 (Typecheck@0x560a54e55690[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %20.6 = CallSafeBuiltin    vwed  is.na(%20.5)    <lgl$->
dependent slot

Type#10 [used] lgl$-
val?            %15.4 = Force!<lazy>       !v    %15.3, e1.2   <lgl$->
void                    Assume             D     %24.1, %21.3 (Typecheck@0x560a54e55690[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

======================= ClosureVersion: .getGenericFromCacheTable (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 59
referenced non-empty: 10
read non-empty: 10
used: 2
present non-empty: 3

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 5
dependent: 7
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
.getGenericFromCacheTable [0x560a54351240]
referenced: 59
referenced non-empty: 10
read non-empty: 10
used: 2
present non-empty: 3

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 5
dependent: 7
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %2.6  = StaticCall         !v    exists[0x560a5cf6ffd0](%2.4, missingArg, %2.5, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %2.7, %2.8 (Typecheck@0x560a59dbfa60[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] str$+
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] cls
val?            %7.5  = StaticCall         !v    get[0x560a5caecb90](%7.3, missingArg, %7.4) { 0 2n } e2.3   <cls>
dependent slot

Type#6 [unused] cls
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] str$-
val?            %10.4 = Force!<lazy>       !v    %10.3, e2.3   <str$->
other unused reason

Type#9 [used] lgl$-
val?            %10.5 = CallBuiltin        !v    nzchar(%10.4) e2.3   <lgl$->
void                    Assume             D     %10.6, %10.7 (Typecheck@0x560a59dbfa60[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] cls
val?            %15.2 = Force!<value>      !     %15.0, e2.3   <cls>
dependent slot

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

======================= ClosureVersion: getGroupMembers (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 38
referenced non-empty: 25
read non-empty: 18
used: 3
present non-empty: 7

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 22
optimized away non-empty: 15
dependent: 20
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

----------------------
getGroupMembers [0x560a5a44b620]
referenced: 30
referenced non-empty: 17
read non-empty: 17
used: 3
present non-empty: 7

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 7
dependent: 12
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
optimized away (dependency)

Type#1 [unused] cls
val?            %2.4  = StaticCall         !v    getGeneric[0x560a5ca283a0](%2.3) e1.1   <cls>
dependent slot

Type#2 [unused] cls
optimized away (dependency)

Type#3 [unused] cls
optimized away (dependency)

Type#4 [used] lgl$-
val?            %5.4  = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%5.3, "groupGenericFunction") e1.1   <lgl$->
void                    Assume             D     %5.5, %5.6 (Typecheck@0x560a59e504c0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] vec-
val?            %8.3  = Call               !v    %8.0(%8.1, %8.2) e1.1   <vec->
dependent slot

Type#8 [unused] lgl$-
val?            %8.6  = Force!<lazy>       !v    %8.5, e1.1   <lgl$->
dependent slot

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] str$-
val?            %16.3 = Call               !v    %16.0(%16.1, %16.2) e1.1   <str$->
dependent slot

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [used] lgl$-
val?            %18.8 = PopContext         C     %18.7, %18.4   <lgl$->
void                    Assume             D     %18.9, %18.10 (Typecheck@0x560a59e504c0[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] vec-
optimized away (dependency)

Type#19 [unused] env-
optimized away

Type#20 [unused] vec-
val?            %24.5 = StaticCall         !v    .recMembers[0x560a5cd6ade0](%24.3, %24.4) from %1.2 e1.1   <vec->
dependent slot

Type#21 [unused] lgl$-
val?            %10.2 = Force!<lazy>       !     %10.0, e1.1   <lgl$->
dependent slot

Type#22 [used] vec-
val?^ | miss    %13.0 = LdVar              eR    members, e1.1
void                    Assume             D     %13.1, %10.4 (Typecheck@0x560a59e504c0[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#23 [unused] vec-
optimized away (dependency)

Type#24 [unused] str-
val?            %15.6 = StaticCall         !     sapply[0x560a5d05b800](%15.3, %15.5) { 0 1 } e1.1   <str->
other unused reason

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 8
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away (dependency)

Type#1 [unused] val? (polluted)
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: .recMembers (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: .getGeneric (CorrOrd,!TMany,Argmatch;Eager1,NonRefl1) =======================
referenced: 50
referenced non-empty: 31
read non-empty: 31
used: 5
present non-empty: 17

Used
exact match: 3
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 9
dependent: 15
other reasons unused non-empty: 11

Polluted
polluted: 8
used polluted: 1

----------------------
.getGeneric [0x560a553ad2f0]
referenced: 41
referenced non-empty: 23
read non-empty: 23
used: 4
present non-empty: 15

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 4
dependent: 15
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$+
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] cls
val?            %57.9 = PopContext         C     %57.8, %55.6   <cls>
other unused reason

Type#5 [unused] (nil|cls) (polluted)
val?            %9.0  = Phi                      nil:BB8, %57.9:BB57   <(nil|cls)>
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %14.4 = Force!<lazy>       !v    %14.3, e1.5   <str$->
dependent slot

Type#8 [unused] lgl$-
lgl$#-          %14.5 = CallSafeBuiltin    wed   is.character(%14.4)    <lgl$->
dependent slot

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %52.3 = PopContext         C     %52.2, %50.4   <lgl$->
void                    Assume             D     %52.4, %52.5 (Typecheck@0x560a553a6140[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$-
val?            %22.4 = Force!<wrapped>    !v    %22.3, e1.5   <str$->
dependent slot

Type#13 [unused] lgl$-
lgl$#-          %22.5 = CallSafeBuiltin    wed   is.character(%22.4)    <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] str$-
val?            %46.4 = Force!<wrapped>    !v    %46.3, e1.5   <str$->
dependent slot

Type#16 [used] lgl$-
val?            %46.5 = CallBuiltin        !v    nzchar(%46.4) e1.5   <lgl$->
void                    Assume             D     %46.6, %46.7 (Typecheck@0x560a553a6140[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] vec
val?            %30.4 = Force!<value>      !v    %30.3, e1.5   <vec>
other unused reason

Type#24 [unused] str$-
val?            %30.6 = Force!<wrapped>    !v    %30.5, e1.5   <str$->
dependent slot

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] env-
val?            %32.4 = Force!<lazy>       !v    %32.3, e1.5   <env->
dependent slot

Type#27 [unused] env-
val?            %32.5 = CallBuiltin        !v    as.environment(%32.4) e1.5   <env->
dependent slot

Type#28 [unused] str$-
val?            %32.7 = Force!<lazy>       !v    %32.6, e1.5   <str$->
dependent slot

Type#29 [unused] (nil|cls) (polluted)
val?            %32.8 = CallBuiltin        !v    .Call(%30.4, %30.6, false, %32.5, %32.7) e1.5   <(nil|cls)>
dependent slot

Type#30 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#31 [used] env-
val?^ | miss    %35.0 = LdVar              eR    .GlobalEnv, e1.5
void                    Assume             D     %35.1, %32.11 (Typecheck@0x560a553a6140[Type#31])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [used] str$-
val?            %35.8 = Force!<wrapped>    !v    %35.7, e1.5   <str$->
void                    Assume             D     %35.9, %35.10 (Typecheck@0x560a553a6140[Type#33])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#34 [unused] nil-
val?            %37.2 = Extract2_1D        wed   %35.4, %37.1, elided   <nil->
other unused reason

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] (nil|cls) (polluted)
val?            %13.2 = Force!<value>      !     %13.0, e1.5   <(nil|cls)>
dependent slot

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away

Type#1 [unused] (nil|str)- (polluted)
optimized away

Type#2 [used] int- (polluted)
val?            %50.9 = StaticCall         !v    match[0x560a5cc57e20](%50.7, %50.8, 0L) { 0 1 2n } e50.6   <int->
void                    Assume             D     %50.10, %50.11 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %52.2 = Gt                 wed   %52.1, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: .getGenericFromCache [0x560a5a356500]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away

Type#3 [unused] env-
optimized away

Type#4 [unused] cls
val?            %57.8 = StaticCall         !v    .getGenericFromCacheTable[0x560a5cae3d20](%57.4, %57.5, %57.6, %57.7) e57.3   <cls>
other unused reason

======================= ClosureVersion: genericForBasic (CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj2) =======================
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
genericForBasic [0x560a5685bec0]
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] vec+
val?            %3.1  = Force!<wrapped>    !v    %3.0, e1.4   <vec+>
void                    Assume             D     %7.0, %5.4 (Typecheck@0x560a55ff3030[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str$-
val?            %5.2  = Force!<lazy>       !v    %5.1, e1.4   <str$->
void                    Assume             D     %5.3, %5.4 (Typecheck@0x560a55ff3030[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#5 [unused] cls
val?            %7.5  = Extract2_1D        wed   %7.2, %7.4, elided   <cls>
dependent slot

Type#6 [unused] lgl$-
val?            %7.8  = Force!<value>      !v    %7.7, e1.4   <lgl$->
other unused reason

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] cls
val?            %11.2 = Force!<value>      !     %11.0, e1.4   <cls>
dependent slot

======================= ClosureVersion: exists (CorrOrd,!TMany,Argmatch;Eager1,Eager3,Eager4,Eager5,NonRefl1,NonRefl3,NonRefl4,NonRefl5,!Obj5) =======================
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

----------------------
exists [0x560a572da620]
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] env-
optimized away (dependency)

Type#4 [used] str$+ (polluted)
val?            %7.1  = Force!<lazy>       !v    %7.0, e1.8   <str$+>
void                    Assume             D     %7.2, %7.3 (Typecheck@0x560a574dece0[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#5 [unused] env-
val?            %9.3  = Force!<lazy>       !v    %9.2, e1.8   <env->
dependent slot

Type#6 [unused] str$-
val?            %9.5  = Force!<lazy>       !v    %9.4, e1.8   <str$->
other unused reason

Type#7 [unused] lgl$-
val?            %9.7  = Force!<lazy>       !v    %9.6, e1.8   <lgl$->
other unused reason

======================= ClosureVersion: .recMembers (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 61
referenced non-empty: 45
read non-empty: 44
used: 18
present non-empty: 12

Used
exact match: 7
widened: 11
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 27
optimized away non-empty: 15
dependent: 23
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

----------------------
.recMembers [0x560a58e55040]
referenced: 57
referenced non-empty: 42
read non-empty: 42
used: 18
present non-empty: 11

Used
exact match: 7
widened: 11
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 24
optimized away non-empty: 13
dependent: 23
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec-
val+            %2.7  = Force!<lazy>       !vr   %1.1,    <vec->
dependent slot

Type#1 [used] int$-
(int|real)$-    %2.8  = CallSafeBuiltin    wed   length(%2.7)    <int$->
void                    Assume             D     %2.9, %2.10 (Typecheck@0x560a58731950[Type#1])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#2 [unused] vec-
vec-            %4.2  = CallSafeBuiltin    wed   vector("list", %4.1)    <vec->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] vec-
optimized away (dependency)

Type#5 [unused] int-
val?            %6.3  = CallBuiltin        !v    seq_along(%2.7) e2.6   <int->
other unused reason

Type#6 [used] vec-
val?            %8.9  = Force!<wrapped>    !v    %8.8, e2.6   <vec->
void                    Assume             D     %8.11, %8.12 (Typecheck@0x560a58731950[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] int$-
val?^ | miss    %10.1 = LdVar              eR    i, e2.6
void                    Assume             D     %10.2, %8.12 (Typecheck@0x560a58731950[Type#8])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#9 [unused] str$-
val?            %10.7 = Extract2_1D        wed   %10.6, %10.4, elided   <str$->
dependent slot

Type#10 [unused] str$-
optimized away (dependency)

Type#11 [unused] env-
optimized away (dependency)

Type#12 [unused] cls
val?            %12.5 = StaticCall         !v    getGeneric[0x560a5d3ed180](%12.3, false, %12.4) e2.6   <cls>
dependent slot

Type#13 [unused] cls
optimized away (dependency)

Type#14 [used] str$-
val?^ | miss    %52.0 = LdVar              eR    what, e2.6
void                    Assume             D     %52.1, %12.8 (Typecheck@0x560a58731950[Type#14])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#15 [used] vec-
val?^ | miss    %52.5 = LdVar              eR    all !upd, e2.6
void                    Assume             D     %52.6, %12.8 (Typecheck@0x560a58731950[Type#15])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#16 [used] int$-
val?^ | miss    %52.10 = LdVar              eR    i, e2.6
void                    Assume             D     %52.11, %12.8 (Typecheck@0x560a58731950[Type#16])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#17 [unused] cls
optimized away (dependency)

Type#18 [used] lgl$-
val?            %18.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%18.3, "groupGenericFunction") e2.6   <lgl$->
void                    Assume             D     %18.5, %18.6 (Typecheck@0x560a58731950[Type#18])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] vec-
val?            %47.3 = Call               !v    %47.0(%47.1, %47.2) e2.6   <vec->
dependent slot

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [used] vec-
val?^ | miss    %49.3 = LdVar              eR    all, e2.6
void                    Assume             D     %49.4, %47.5 (Typecheck@0x560a58731950[Type#26])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#27 [unused] vec-
optimized away (dependency)

Type#28 [unused] env-
optimized away (dependency)

Type#29 [used] vec-
val?            %49.18 = PopContext         C     %49.17, %49.14   <vec->
void                    Assume             D     %49.19, %49.20 (Typecheck@0x560a58731950[Type#29])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#30 [unused] vec-
val+            %51.2 = CallSafeBuiltin    wed   c(%49.7, %51.1)    <vec->
dependent slot

Type#31 [used] vec-
val?            %25.3 = Force!<wrapped>    !v    %25.2, e2.6   <vec->
void                    Assume             D     %25.5, %25.6 (Typecheck@0x560a58731950[Type#31])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [used] int$-
val?^ | miss    %27.1 = LdVar              eR    i, e2.6
void                    Assume             D     %27.2, %25.6 (Typecheck@0x560a58731950[Type#33])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#34 [unused] str$-
val?            %27.7 = Extract2_1D        wed   %27.6, %27.4, elided   <str$->
dependent slot

Type#35 [unused] str$-
optimized away (dependency)

Type#36 [unused] env-
optimized away (dependency)

Type#37 [unused] cls
val?            %29.5 = StaticCall         !v    getGeneric[0x560a5d3ed180](%29.3, false, %29.4) e2.6   <cls>
dependent slot

Type#38 [unused] cls
optimized away (dependency)

Type#39 [used] str$-
val?^ | miss    %45.0 = LdVar              eR    what, e2.6
void                    Assume             D     %45.1, %29.8 (Typecheck@0x560a58731950[Type#39])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#40 [used] vec-
val?^ | miss    %45.5 = LdVar              eR    all !upd, e2.6
void                    Assume             D     %45.6, %29.8 (Typecheck@0x560a58731950[Type#40])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#41 [used] int$-
val?^ | miss    %45.10 = LdVar              eR    i, e2.6
void                    Assume             D     %45.11, %29.8 (Typecheck@0x560a58731950[Type#41])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#42 [unused] cls
optimized away (dependency)

Type#43 [used] lgl$-
val?            %35.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%35.3, "groupGenericFunction") e2.6   <lgl$->
void                    Assume             D     %35.5, %35.6 (Typecheck@0x560a58731950[Type#43])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] vec-
val?            %40.3 = Call               !v    %40.0(%40.1, %40.2) e2.6   <vec->
dependent slot

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [used] vec-
val?^ | miss    %42.3 = LdVar              eR    all, e2.6
void                    Assume             D     %42.4, %40.5 (Typecheck@0x560a58731950[Type#51])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#52 [unused] vec-
optimized away (dependency)

Type#53 [unused] env-
optimized away (dependency)

Type#54 [used] vec-
val?            %42.18 = PopContext         C     %42.17, %42.14   <vec->
void                    Assume             D     %42.19, %42.20 (Typecheck@0x560a58731950[Type#54])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#55 [unused] vec-
val+            %44.2 = CallSafeBuiltin    wed   c(%42.7, %44.1)    <vec->
dependent slot

Type#56 [used] vec-
val?^ | miss    %46.0 = LdVar              eR    all, e2.6
void                    Assume             D     %46.1, %22.2 (Typecheck@0x560a58731950[Type#56])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

----------------------
Inlinee: Recall [0x560a5a3adf30]
referenced: 2
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (lgl|vec)- (polluted)
val?            %42.17 = Call               !v    <spec .Internal>(%42.16) e42.15   <(lgl|vec)->
other unused reason

----------------------
Inlinee: vector [0x560a55e99e90]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] (int|real)$- (polluted)
optimized away

======================= ClosureVersion: .getGenericFromCacheTable (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 59
referenced non-empty: 10
read non-empty: 10
used: 2
present non-empty: 3

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 5
dependent: 7
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
.getGenericFromCacheTable [0x560a54351240]
referenced: 59
referenced non-empty: 10
read non-empty: 10
used: 2
present non-empty: 3

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 5
dependent: 7
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %2.6  = StaticCall         !v    exists[0x560a5cda96d0](%2.4, missingArg, %2.5, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %2.7, %2.8 (Typecheck@0x560a59dbfa60[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] str$+
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] cls
val?            %8.5  = StaticCall         !v    get[0x560a5c99f3f0](%8.3, missingArg, %8.4) { 0 2n } e2.3   <cls>
dependent slot

Type#6 [unused] cls
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] str$-
val?            %11.4 = Force!<lazy>       !v    %11.3, e2.3   <str$->
other unused reason

Type#9 [used] lgl$-
val?            %11.5 = CallBuiltin        !v    nzchar(%11.4) e2.3   <lgl$->
void                    Assume             D     %11.6, %11.7 (Typecheck@0x560a59dbfa60[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] cls
val?            %18.2 = Force!<value>      !     %18.0, e2.3   <cls>
dependent slot

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: FUN (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: .getGeneric (CorrOrd,!TMany,Argmatch;Eager1,NonRefl1) =======================
referenced: 50
referenced non-empty: 31
read non-empty: 31
used: 5
present non-empty: 17

Used
exact match: 3
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 9
dependent: 15
other reasons unused non-empty: 11

Polluted
polluted: 8
used polluted: 1

----------------------
.getGeneric [0x560a553ad2f0]
referenced: 41
referenced non-empty: 23
read non-empty: 23
used: 4
present non-empty: 15

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 4
dependent: 15
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$+
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] cls
val?            %57.9 = PopContext         C     %57.8, %55.6   <cls>
other unused reason

Type#5 [unused] (nil|cls) (polluted)
val?            %9.0  = Phi                      nil:BB8, %57.9:BB57   <(nil|cls)>
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %14.4 = Force!<lazy>       !v    %14.3, e1.5   <str$->
dependent slot

Type#8 [unused] lgl$-
lgl$#-          %14.5 = CallSafeBuiltin    wed   is.character(%14.4)    <lgl$->
dependent slot

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %52.3 = PopContext         C     %52.2, %50.4   <lgl$->
void                    Assume             D     %52.4, %52.5 (Typecheck@0x560a553a6140[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$-
val?            %22.4 = Force!<wrapped>    !v    %22.3, e1.5   <str$->
dependent slot

Type#13 [unused] lgl$-
lgl$#-          %22.5 = CallSafeBuiltin    wed   is.character(%22.4)    <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] str$-
val?            %46.4 = Force!<wrapped>    !v    %46.3, e1.5   <str$->
dependent slot

Type#16 [used] lgl$-
val?            %46.5 = CallBuiltin        !v    nzchar(%46.4) e1.5   <lgl$->
void                    Assume             D     %46.6, %46.7 (Typecheck@0x560a553a6140[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] vec
val?            %30.4 = Force!<value>      !v    %30.3, e1.5   <vec>
other unused reason

Type#24 [unused] str$-
val?            %30.6 = Force!<wrapped>    !v    %30.5, e1.5   <str$->
dependent slot

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] env-
val?            %32.4 = Force!<lazy>       !v    %32.3, e1.5   <env->
dependent slot

Type#27 [unused] env-
val?            %32.5 = CallBuiltin        !v    as.environment(%32.4) e1.5   <env->
dependent slot

Type#28 [unused] str$-
val?            %32.7 = Force!<lazy>       !v    %32.6, e1.5   <str$->
dependent slot

Type#29 [unused] (nil|cls) (polluted)
val?            %32.8 = CallBuiltin        !v    .Call(%30.4, %30.6, false, %32.5, %32.7) e1.5   <(nil|cls)>
dependent slot

Type#30 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#31 [used] env-
val?^ | miss    %35.0 = LdVar              eR    .GlobalEnv, e1.5
void                    Assume             D     %35.1, %32.11 (Typecheck@0x560a553a6140[Type#31])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [used] str$-
val?            %35.8 = Force!<wrapped>    !v    %35.7, e1.5   <str$->
void                    Assume             D     %35.9, %35.10 (Typecheck@0x560a553a6140[Type#33])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#34 [unused] nil-
val?            %37.2 = Extract2_1D        wed   %35.4, %37.1, elided   <nil->
other unused reason

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] (nil|cls) (polluted)
val?            %13.2 = Force!<value>      !     %13.0, e1.5   <(nil|cls)>
dependent slot

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away

Type#1 [unused] (nil|str)- (polluted)
optimized away

Type#2 [used] int- (polluted)
val?            %50.9 = StaticCall         !v    match[0x560a5c9ab650](%50.7, %50.8, 0L) { 0 1 2n } e50.6   <int->
void                    Assume             D     %50.10, %50.11 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %52.2 = Gt                 wed   %52.1, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: .getGenericFromCache [0x560a5a356500]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away

Type#3 [unused] env-
optimized away

Type#4 [unused] cls
val?            %57.8 = StaticCall         !v    .getGenericFromCacheTable[0x560a5c8d0200](%57.4, %57.5, %57.6, %57.7) e57.3   <cls>
other unused reason

======================= ClosureVersion: genericForBasic (CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj2) =======================
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
genericForBasic [0x560a5685bec0]
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] vec+
val?            %3.1  = Force!<wrapped>    !v    %3.0, e1.4   <vec+>
void                    Assume             D     %7.0, %5.4 (Typecheck@0x560a55ff3030[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str$-
val?            %5.2  = Force!<lazy>       !v    %5.1, e1.4   <str$->
void                    Assume             D     %5.3, %5.4 (Typecheck@0x560a55ff3030[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#5 [unused] cls
val?            %7.5  = Extract2_1D        wed   %7.2, %7.4, elided   <cls>
dependent slot

Type#6 [unused] lgl$-
val?            %7.8  = Force!<value>      !v    %7.7, e1.4   <lgl$->
other unused reason

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] cls
val?            %11.2 = Force!<value>      !     %11.0, e1.4   <cls>
dependent slot

======================= ClosureVersion: FUN (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 10
referenced non-empty: 7
read non-empty: 7
used: 3
present non-empty: 3

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
FUN [0x560a575ccf00]
referenced: 10
referenced non-empty: 7
read non-empty: 7
used: 3
present non-empty: 3

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str$+
val?            %2.4  = Force!<lazy>       !v    %1.0, e2.3   <str$+>
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a576bf230[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#2 [unused] lgl$-
lgl$#-          %4.2  = CallSafeBuiltin    vwed  is.character(%4.1)    <lgl$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str$+
val?            %14.4 = Force!<wrapped>    !v    %14.3, e2.3   <str$+>
void                    Assume             D     %14.5, %14.6 (Typecheck@0x560a576bf230[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?+

Type#5 [used] int$-
(int|real)$-    %16.2 = CallSafeBuiltin    wed   length(%16.1)    <int$->
void                    Assume             D     %16.3, %16.4 (Typecheck@0x560a576bf230[Type#5])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] lgl$-
lgl$-           %18.3 = Eq                 vd    %18.1, 1L, elided   <lgl$->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] str$+
optimized away (dependency)

Type#9 [unused] cls
val?            %13.4 = StaticCall         !     getGeneric[0x560a5cd56330](%13.3) e2.3   <cls>
other unused reason

*********************** Compilation session for: environment (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) ***********************
======================= ClosureVersion: environment (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
environment [0x560a55e84a10]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|cls) (polluted)
val?            %1.2  = Force!<lazy>       !vr   %1.0,    <(nil|cls)>
other unused reason

*********************** Compilation session for: FUN (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: FUN (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 13
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
FUN [0x560a58c55880]
referenced: 13
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [used] lgl$-
val?            %2.5  = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%2.4, "character") e2.3   <lgl$->
void                    Assume             D     %2.6, %2.7 (Typecheck@0x560a572ed6e0[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$-
val?            %6.2  = Force!<wrapped>    !     %6.0, e2.3   <str$->
dependent slot

*********************** Compilation session for: lapply (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 1) ***********************
======================= ClosureVersion: lapply (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 1) =======================
referenced: 17
referenced non-empty: 16
read non-empty: 15
used: 0
present non-empty: 9

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 16
optimized away non-empty: 7
dependent: 13
other reasons unused non-empty: 3

Polluted
polluted: 9
used polluted: 0

----------------------
lapply [0x560a55e69d00]
referenced: 15
referenced non-empty: 14
read non-empty: 14
used: 0
present non-empty: 9

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 5
dependent: 13
other reasons unused non-empty: 1

Polluted
polluted: 8
used polluted: 0

Type#0 [unused] (cls|blt)- (polluted)
optimized away (dependency)

Type#1 [unused] (cls|blt)- (polluted)
val?            %1.4  = StaticCall         !v    match.fun[0x560a5c8ac6c0](%1.3) e1.2   <(cls|blt)->
dependent slot

Type#2 [unused] (str|vec) (polluted)
val?            %2.4  = Force!<lazy>       !v    %2.3, e1.2   <(str|vec)>
dependent slot

Type#3 [unused] lgl$-
lgl$#-          %2.5  = CallSafeBuiltin    wed   is.vector(%2.4, "any")    <lgl$->
dependent slot

Type#4 [unused] $#-
optimized away

Type#5 [unused] (str|vec)+ (polluted)
val?            %15.4 = Force!<wrapped>    !v    %15.3, e1.2   <(str|vec)+>
other unused reason

Type#6 [unused] lgl$-
lgl$#-          %15.5 = CallSafeBuiltin    wed   is.object(%15.4)    <lgl$->
dependent slot

Type#7 [unused] vec
val?            %14.4 = Force!<wrapped>    !v    %14.3, e1.2   <vec>
dependent slot

Type#8 [unused] vec
val?            %14.5 = StaticCall         !v    as.list[0x560a5cf45f10](%14.4) { 0 } e1.2   <vec>
dependent slot

Type#9 [unused] (str|vec) (polluted)
val?            %10.1 = Force!<wrapped>    !v    %10.0, e1.2   <(str|vec)>
dependent slot

Type#10 [unused] (str|vec) (polluted)
optimized away (dependency)

Type#11 [unused] int$-
optimized away (dependency)

Type#12 [unused] int$-
optimized away (dependency)

Type#13 [unused] val? (polluted)
optimized away (dependency)

Type#14 [unused] val? (polluted)
val?            %12.5 = NamedCall          !v    %12.1(%12.2, .xpandDotsTrigger=%12.4) e1.2   <val?>
dependent slot

----------------------
Inlinee: is.vector [0x560a55e6f180]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (str|vec) (polluted)
optimized away

Type#1 [unused] str$-
optimized away

*********************** Compilation session for: is (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1) ***********************
======================= ClosureVersion: is (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1) =======================
referenced: 124
referenced non-empty: 42
read non-empty: 42
used: 13
present non-empty: 17

Used
exact match: 7
widened: 6
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 29
optimized away non-empty: 12
dependent: 24
other reasons unused non-empty: 5

Polluted
polluted: 10
used polluted: 2

----------------------
is [0x560a56cd40c0]
referenced: 117
referenced non-empty: 38
read non-empty: 38
used: 12
present non-empty: 14

Used
exact match: 6
widened: 6
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 12
dependent: 24
other reasons unused non-empty: 2

Polluted
polluted: 9
used polluted: 2

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %2.4  = Force!<lazy>       !v    %1.1, e2.3   <val?>
dependent slot

Type#2 [used] str$+ (polluted)
val?            %2.5  = CallBuiltin        !v    class(%2.4) e2.3   <str$+>
void                    Assume             D     %2.7, %2.8 (Typecheck@0x560a56d00d40[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$+ (polluted)
optimized away (dependency)

Type#5 [used] int$-
(int|real)$-    %4.6  = CallSafeBuiltin    wed   length(%4.5)    <int$->
void                    Assume             D     %4.7, %4.8 (Typecheck@0x560a56d00d40[Type#5])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] lgl$-
lgl$-           %6.2  = Gt                 d     %6.1, 1L, elided   <lgl$->
dependent slot

Type#7 [unused] lgl$-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$+ (polluted)
optimized away (dependency)

Type#13 [unused] other$
val?            %11.4 = StaticCall         !v    getClassDef[0x560a5ca74130](%11.3) e2.3   <other$>
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] str$-
val?            %13.4 = Force!<value>      !v    %13.3, e2.3   <str$->
dependent slot

Type#16 [unused] lgl$-
lgl$#-          %13.5 = CallSafeBuiltin    wed   is.character(%13.4)    <lgl$->
dependent slot

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] other$
val?            %15.1 = Force!<value>      !v    %15.0, e2.3   <other$>
dependent slot

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [used] nil-
val?^ | miss    %18.0 = LdVar              eR    class2Def, e2.3
void                    Assume             D     %18.1, %15.3 (Typecheck@0x560a56d00d40[Type#25])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: nil-, expected: nil-, required: val?^ | miss

Type#26 [unused] str$-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] other$
val?            %92.6 = StaticCall         !v    getClassDef[0x560a5caf7d10](%92.3, %92.4, %92.5) e2.3   <other$>
dependent slot

Type#36 [used] lgl$-
val?^ | miss    %22.0 = LdVar              eR    S3Case, e2.3
void                    Assume             D     %22.1, %20.0 (Typecheck@0x560a56d00d40[Type#36])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] val? (polluted)
val?            %23.4 = Force!<wrapped>    !v    %23.3, e2.3   <val?>
dependent slot

Type#39 [unused] lgl$-
lgl$#-          %23.5 = CallSafeBuiltin    wed   is.object(%23.4)    <lgl$->
dependent slot

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] (cls|other) (polluted)
val?            %90.4 = Force!<wrapped>    !v    %90.3, e2.3   <(cls|other)>
other unused reason

Type#42 [unused] lgl$-
lgl$#-          %90.5 = CallSafeBuiltin    wed   isS4(%90.4)    <lgl$->
dependent slot

Type#43 [unused] lgl$-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] lgl$-
optimized away (dependency)

Type#51 [unused] str$+ (polluted)
optimized away (dependency)

Type#52 [unused] str$-
optimized away (dependency)

Type#53 [used] lgl$-
val?            %41.2 = PopContext         C     %41.1, %37.5   <lgl$->
void                    Assume             D     %41.3, %41.4 (Typecheck@0x560a56d00d40[Type#53])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#54 [unused] str$-
optimized away (dependency)

Type#55 [used] lgl$-
val?            %48.2 = PopContext         C     %48.1, %44.4   <lgl$->
void                    Assume             D     %48.3, %48.4 (Typecheck@0x560a56d00d40[Type#55])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [used] vec+
val?            %52.3 = Call               !v    %52.0(%52.1, %52.2) e2.3   <vec+>
void                    Assume             D     %56.0, %54.4 (Typecheck@0x560a56d00d40[Type#58])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [used] str$-
val?            %54.2 = Force!<value>      !v    %54.1, e2.3   <str$->
void                    Assume             D     %54.3, %54.4 (Typecheck@0x560a56d00d40[Type#60])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#61 [unused] (nil|other) (polluted)
val?            %56.5 = Extract2_1D        wed   %56.2, %56.4, elided   <(nil|other)>
other unused reason

Type#62 [unused] other$
val?            %57.1 = Force!<value>      !v    %57.0, e2.3   <other$>
dependent slot

Type#63 [unused] other$
optimized away (dependency)

Type#64 [unused] str$+
optimized away (dependency)

Type#65 [used] lgl$-
val?            %64.2 = PopContext         C     %64.1, %60.4   <lgl$->
void                    Assume             D     %64.3, %64.4 (Typecheck@0x560a56d00d40[Type#65])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [used] vec+
val?            %69.3 = Call               !v    %69.0(%69.1, %69.2) e2.3   <vec+>
void                    Assume             D     %69.5, %69.6 (Typecheck@0x560a56d00d40[Type#70])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [used] str$+ (polluted)
val?^ | miss    %71.1 = LdVar              eR    class1, e2.3
void                    Assume             D     %71.2, %69.6 (Typecheck@0x560a56d00d40[Type#72])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str$+, expected: str$+, required: val?^ | miss

Type#73 [unused] nil-
val?            %71.8 = Extract2_1D        wed   %71.7, %71.5, elided   <nil->
dependent slot

Type#74 [unused] nil-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] $#-
optimized away (dependency)

Type#87 [unused] $#-
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] $#-
optimized away (dependency)

Type#90 [unused] $#-
optimized away (dependency)

Type#91 [unused] $#-
optimized away (dependency)

Type#92 [unused] $#-
optimized away (dependency)

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] $#-
optimized away (dependency)

Type#99 [unused] $#-
optimized away (dependency)

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [unused] $#-
optimized away (dependency)

Type#102 [unused] $#-
optimized away (dependency)

Type#103 [unused] $#-
optimized away (dependency)

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] $#-
optimized away (dependency)

Type#106 [unused] $#-
optimized away (dependency)

Type#107 [unused] $#-
optimized away (dependency)

Type#108 [used] lgl$-
val?            %81.3 = Call               !     %81.0(%81.1, %81.2) e2.3   <lgl$->
void                    Assume             D     %81.4, %81.5 (Typecheck@0x560a56d00d40[Type#108])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#109 [unused] $#-
optimized away (dependency)

Type#110 [unused] $#-
optimized away (dependency)

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] $#-
optimized away (dependency)

Type#113 [unused] $#-
optimized away (dependency)

Type#114 [unused] $#-
optimized away (dependency)

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: .identC [0x560a569917c0]
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %62.3 = Force!<value>      !v    %62.1, e62.2   <vec>
other unused reason

Type#4 [unused] str$+ (polluted)
val?            %62.5 = Force!<lazy>       !v    %62.4, e62.2   <str$+>
other unused reason

Type#5 [unused] str$-
val?            %62.7 = Force!<lazy>       !v    %62.6, e62.2   <str$->
other unused reason

Type#6 [used] lgl$-
val?            %62.8 = CallBuiltin        !v    .Call(%62.3, %62.5, %62.7) e62.2   <lgl$->
void                    Assume             D     %62.9, %62.10 (Typecheck@0x560a5692fc50[Type#6])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: getGroupMembers (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj1,!Obj2) ***********************
======================= ClosureVersion: .getGeneric (CorrOrd,!TMany,Argmatch;Eager1,NonRefl1) =======================
referenced: 50
referenced non-empty: 31
read non-empty: 31
used: 5
present non-empty: 17

Used
exact match: 3
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 9
dependent: 15
other reasons unused non-empty: 11

Polluted
polluted: 8
used polluted: 1

----------------------
.getGeneric [0x560a553ad2f0]
referenced: 41
referenced non-empty: 23
read non-empty: 23
used: 4
present non-empty: 15

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 4
dependent: 15
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$+
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] cls
val?            %57.9 = PopContext         C     %57.8, %55.6   <cls>
other unused reason

Type#5 [unused] (nil|cls) (polluted)
val?            %9.0  = Phi                      nil:BB8, %57.9:BB57   <(nil|cls)>
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %14.4 = Force!<lazy>       !v    %14.3, e1.5   <str$->
dependent slot

Type#8 [unused] lgl$-
lgl$#-          %14.5 = CallSafeBuiltin    wed   is.character(%14.4)    <lgl$->
dependent slot

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %52.3 = PopContext         C     %52.2, %50.4   <lgl$->
void                    Assume             D     %52.4, %52.5 (Typecheck@0x560a553a6140[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$-
val?            %22.4 = Force!<wrapped>    !v    %22.3, e1.5   <str$->
dependent slot

Type#13 [unused] lgl$-
lgl$#-          %22.5 = CallSafeBuiltin    wed   is.character(%22.4)    <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] str$-
val?            %46.4 = Force!<wrapped>    !v    %46.3, e1.5   <str$->
dependent slot

Type#16 [used] lgl$-
val?            %46.5 = CallBuiltin        !v    nzchar(%46.4) e1.5   <lgl$->
void                    Assume             D     %46.6, %46.7 (Typecheck@0x560a553a6140[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] vec
val?            %30.4 = Force!<value>      !v    %30.3, e1.5   <vec>
other unused reason

Type#24 [unused] str$-
val?            %30.6 = Force!<wrapped>    !v    %30.5, e1.5   <str$->
dependent slot

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] env-
val?            %32.4 = Force!<lazy>       !v    %32.3, e1.5   <env->
dependent slot

Type#27 [unused] env-
val?            %32.5 = CallBuiltin        !v    as.environment(%32.4) e1.5   <env->
dependent slot

Type#28 [unused] str$-
val?            %32.7 = Force!<lazy>       !v    %32.6, e1.5   <str$->
dependent slot

Type#29 [unused] (nil|cls) (polluted)
val?            %32.8 = CallBuiltin        !v    .Call(%30.4, %30.6, false, %32.5, %32.7) e1.5   <(nil|cls)>
dependent slot

Type#30 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#31 [used] env-
val?^ | miss    %35.0 = LdVar              eR    .GlobalEnv, e1.5
void                    Assume             D     %35.1, %32.11 (Typecheck@0x560a553a6140[Type#31])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [used] str$-
val?            %35.8 = Force!<wrapped>    !v    %35.7, e1.5   <str$->
void                    Assume             D     %35.9, %35.10 (Typecheck@0x560a553a6140[Type#33])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#34 [unused] nil-
val?            %37.2 = Extract2_1D        wed   %35.4, %37.1, elided   <nil->
other unused reason

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] (nil|cls) (polluted)
val?            %13.2 = Force!<value>      !     %13.0, e1.5   <(nil|cls)>
dependent slot

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away

Type#1 [unused] (nil|str)- (polluted)
optimized away

Type#2 [used] int- (polluted)
val?            %50.9 = StaticCall         !v    match[0x560a5a3ac490](%50.7, %50.8, 0L) { 0 1 2n } e50.6   <int->
void                    Assume             D     %50.10, %50.11 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %52.2 = Gt                 wed   %52.1, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: .getGenericFromCache [0x560a5a356500]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away

Type#3 [unused] env-
optimized away

Type#4 [unused] cls
val?            %57.8 = StaticCall         !v    .getGenericFromCacheTable[0x560a55ece430](%57.4, %57.5, %57.6, %57.7) e57.3   <cls>
other unused reason

======================= ClosureVersion: genericForBasic (CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj2) =======================
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
genericForBasic [0x560a5685bec0]
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] vec+
val?            %3.1  = Force!<wrapped>    !v    %3.0, e1.4   <vec+>
void                    Assume             D     %7.0, %5.4 (Typecheck@0x560a55ff3030[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str$-
val?            %5.2  = Force!<lazy>       !v    %5.1, e1.4   <str$->
void                    Assume             D     %5.3, %5.4 (Typecheck@0x560a55ff3030[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#5 [unused] cls
val?            %7.5  = Extract2_1D        wed   %7.2, %7.4, elided   <cls>
dependent slot

Type#6 [unused] lgl$-
val?            %7.8  = Force!<value>      !v    %7.7, e1.4   <lgl$->
other unused reason

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] cls
val?            %11.2 = Force!<value>      !     %11.0, e1.4   <cls>
dependent slot

======================= ClosureVersion: getGroupMembers (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj1,!Obj2) =======================
referenced: 38
referenced non-empty: 25
read non-empty: 18
used: 3
present non-empty: 7

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 22
optimized away non-empty: 15
dependent: 20
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

----------------------
getGroupMembers [0x560a5a44b620]
referenced: 30
referenced non-empty: 17
read non-empty: 17
used: 3
present non-empty: 7

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 7
dependent: 12
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
optimized away (dependency)

Type#1 [unused] cls
val?            %2.4  = StaticCall         !v    getGeneric[0x560a5cfbe2c0](%2.3) e1.3   <cls>
dependent slot

Type#2 [unused] cls
optimized away (dependency)

Type#3 [unused] cls
optimized away (dependency)

Type#4 [used] lgl$-
val?            %5.4  = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%5.3, "groupGenericFunction") e1.3   <lgl$->
void                    Assume             D     %5.5, %5.6 (Typecheck@0x560a59e504c0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] vec-
val?            %8.3  = Call               !v    %8.0(%8.1, %8.2) e1.3   <vec->
dependent slot

Type#8 [unused] lgl$-
val?            %8.6  = Force!<lazy>       !v    %8.5, e1.3   <lgl$->
dependent slot

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] str$-
val?            %16.3 = Call               !v    %16.0(%16.1, %16.2) e1.3   <str$->
dependent slot

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [used] lgl$-
val?            %18.8 = PopContext         C     %18.7, %18.4   <lgl$->
void                    Assume             D     %18.9, %18.10 (Typecheck@0x560a59e504c0[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] vec-
optimized away (dependency)

Type#19 [unused] env-
optimized away

Type#20 [unused] vec-
val?            %24.5 = StaticCall         !v    .recMembers[0x560a5d90a630](%24.3, %24.4) from %1.4 e1.3   <vec->
dependent slot

Type#21 [unused] lgl$-
val?            %10.2 = Force!<lazy>       !     %10.0, e1.3   <lgl$->
dependent slot

Type#22 [used] vec-
val?^ | miss    %13.0 = LdVar              eR    members, e1.3
void                    Assume             D     %13.1, %10.4 (Typecheck@0x560a59e504c0[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#23 [unused] vec-
optimized away (dependency)

Type#24 [unused] str-
val?            %15.6 = StaticCall         !     sapply[0x560a5d338590](%15.3, %15.5) { 0 1 } e1.3   <str->
other unused reason

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 8
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away (dependency)

Type#1 [unused] val? (polluted)
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: getGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2 miss: 1) ***********************
======================= ClosureVersion: .getGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2) =======================
referenced: 50
referenced non-empty: 31
read non-empty: 30
used: 5
present non-empty: 17

Used
exact match: 3
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 9
dependent: 15
other reasons unused non-empty: 11

Polluted
polluted: 8
used polluted: 1

----------------------
.getGeneric [0x560a553ad2f0]
referenced: 41
referenced non-empty: 23
read non-empty: 22
used: 4
present non-empty: 15

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 4
dependent: 15
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$+
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] cls
val?            %50.9 = PopContext         C     %50.8, %48.6   <cls>
other unused reason

Type#5 [unused] (nil|cls) (polluted)
val?            %4.0  = Phi                      nil:BB3, %50.9:BB50   <(nil|cls)>
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %9.4  = Force!<lazy>       !v    %9.3, e2.0   <str$->
dependent slot

Type#8 [unused] lgl$-
lgl$#-          %9.5  = CallSafeBuiltin    wed   is.character(%9.4)    <lgl$->
dependent slot

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %45.3 = PopContext         C     %45.2, %43.4   <lgl$->
void                    Assume             D     %45.4, %45.5 (Typecheck@0x560a553a6140[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$-
val?            %17.4 = Force!<wrapped>    !v    %17.3, e2.0   <str$->
dependent slot

Type#13 [unused] lgl$-
lgl$#-          %17.5 = CallSafeBuiltin    wed   is.character(%17.4)    <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] str$-
val?            %39.4 = Force!<wrapped>    !v    %39.3, e2.0   <str$->
dependent slot

Type#16 [used] lgl$-
val?            %39.5 = CallBuiltin        !v    nzchar(%39.4) e2.0   <lgl$->
void                    Assume             D     %39.6, %39.7 (Typecheck@0x560a553a6140[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] vec
val?            %24.4 = Force!<value>      !v    %24.3, e2.0   <vec>
other unused reason

Type#24 [unused] str$-
val?            %24.6 = Force!<wrapped>    !v    %24.5, e2.0   <str$->
dependent slot

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] env-
val?            %26.4 = Force!<lazy>       !v    %26.3, e2.0   <env->
dependent slot

Type#27 [unused] env-
val?            %26.5 = CallBuiltin        !v    as.environment(%26.4) e2.0   <env->
dependent slot

Type#28 [unused] str$-
val?            %26.7 = Force!<lazy>       !v    %26.6, e2.0   <str$->
dependent slot

Type#29 [unused] (nil|cls) (polluted)
val?            %26.8 = CallBuiltin        !v    .Call(%24.4, %24.6, false, %26.5, %26.7) e2.0   <(nil|cls)>
dependent slot

Type#30 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#31 [used] env-
val?^ | miss    %29.0 = LdVar              eR    .GlobalEnv, e2.0
void                    Assume             D     %29.1, %26.11 (Typecheck@0x560a553a6140[Type#31])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [used] str$-
val?            %29.8 = Force!<wrapped>    !v    %29.7, e2.0   <str$->
void                    Assume             D     %29.9, %29.10 (Typecheck@0x560a553a6140[Type#33])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#34 [unused] nil-
val?            %31.2 = Extract2_1D        wed   %29.4, %31.1, elided   <nil->
other unused reason

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] (nil|cls) (polluted)
val?            %8.2  = Force!<value>      !     %8.0, e2.0   <(nil|cls)>
dependent slot

----------------------
Inlinee: .getGenericFromCache [0x560a5a356500]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away

Type#3 [unused] env-
optimized away

Type#4 [unused] cls
val?            %50.8 = StaticCall         !v    .getGenericFromCacheTable[0x560a5a473220](%50.4, %50.5, %50.6, %50.7) e50.3   <cls>
other unused reason

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away

Type#1 [unused] (nil|str)- (polluted)
optimized away

Type#2 [used] int- (polluted)
val?            %43.9 = StaticCall         !v    match[0x560a5a548620](%43.7, %43.8, 0L) { 0 1 2n } e43.6   <int->
void                    Assume             D     %43.10, %43.11 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %45.2 = Gt                 wed   %45.1, 0L, elided   <lgl->
other unused reason

======================= ClosureVersion: .getGeneric (CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,NonRefl2) =======================
referenced: 50
referenced non-empty: 31
read non-empty: 30
used: 5
present non-empty: 17

Used
exact match: 3
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 9
dependent: 15
other reasons unused non-empty: 11

Polluted
polluted: 8
used polluted: 1

----------------------
.getGeneric [0x560a553ad2f0]
referenced: 41
referenced non-empty: 23
read non-empty: 22
used: 4
present non-empty: 15

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 4
dependent: 15
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$+
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] cls
val?            %57.9 = PopContext         C     %57.8, %55.6   <cls>
other unused reason

Type#5 [unused] (nil|cls) (polluted)
val?            %9.0  = Phi                      nil:BB8, %57.9:BB57   <(nil|cls)>
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %14.4 = Force!<lazy>       !v    %14.3, e1.5   <str$->
dependent slot

Type#8 [unused] lgl$-
lgl$#-          %14.5 = CallSafeBuiltin    wed   is.character(%14.4)    <lgl$->
dependent slot

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %52.3 = PopContext         C     %52.2, %50.4   <lgl$->
void                    Assume             D     %52.4, %52.5 (Typecheck@0x560a553a6140[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$-
val?            %22.4 = Force!<wrapped>    !v    %22.3, e1.5   <str$->
dependent slot

Type#13 [unused] lgl$-
lgl$#-          %22.5 = CallSafeBuiltin    wed   is.character(%22.4)    <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] str$-
val?            %46.4 = Force!<wrapped>    !v    %46.3, e1.5   <str$->
dependent slot

Type#16 [used] lgl$-
val?            %46.5 = CallBuiltin        !v    nzchar(%46.4) e1.5   <lgl$->
void                    Assume             D     %46.6, %46.7 (Typecheck@0x560a553a6140[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] vec
val?            %30.4 = Force!<value>      !v    %30.3, e1.5   <vec>
other unused reason

Type#24 [unused] str$-
val?            %30.6 = Force!<wrapped>    !v    %30.5, e1.5   <str$->
dependent slot

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] env-
val?            %32.4 = Force!<lazy>       !v    %32.3, e1.5   <env->
dependent slot

Type#27 [unused] env-
val?            %32.5 = CallBuiltin        !v    as.environment(%32.4) e1.5   <env->
dependent slot

Type#28 [unused] str$-
val?            %32.7 = Force!<lazy>       !v    %32.6, e1.5   <str$->
dependent slot

Type#29 [unused] (nil|cls) (polluted)
val?            %32.8 = CallBuiltin        !v    .Call(%30.4, %30.6, false, %32.5, %32.7) e1.5   <(nil|cls)>
dependent slot

Type#30 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#31 [used] env-
val?^ | miss    %35.0 = LdVar              eR    .GlobalEnv, e1.5
void                    Assume             D     %35.1, %32.11 (Typecheck@0x560a553a6140[Type#31])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [used] str$-
val?            %35.8 = Force!<wrapped>    !v    %35.7, e1.5   <str$->
void                    Assume             D     %35.9, %35.10 (Typecheck@0x560a553a6140[Type#33])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#34 [unused] nil-
val?            %37.2 = Extract2_1D        wed   %35.4, %37.1, elided   <nil->
other unused reason

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] (nil|cls) (polluted)
val?            %13.2 = Force!<value>      !     %13.0, e1.5   <(nil|cls)>
dependent slot

----------------------
Inlinee: .getGenericFromCache [0x560a5a356500]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away

Type#3 [unused] env-
optimized away

Type#4 [unused] cls
val?            %57.8 = StaticCall         !v    .getGenericFromCacheTable[0x560a5a473220](%57.4, %57.5, %57.6, %57.7) e57.3   <cls>
other unused reason

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away

Type#1 [unused] (nil|str)- (polluted)
optimized away

Type#2 [used] int- (polluted)
val?            %50.9 = StaticCall         !v    match[0x560a5a548620](%50.7, %50.8, 0L) { 0 1 2n } e50.6   <int->
void                    Assume             D     %50.10, %50.11 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %52.2 = Gt                 wed   %52.1, 0L, elided   <lgl->
other unused reason

======================= ClosureVersion: genericForBasic (CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj2) =======================
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
genericForBasic [0x560a5685bec0]
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] vec+
val?            %3.1  = Force!<wrapped>    !v    %3.0, e1.4   <vec+>
void                    Assume             D     %7.0, %5.4 (Typecheck@0x560a55ff3030[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str$-
val?            %5.2  = Force!<lazy>       !v    %5.1, e1.4   <str$->
void                    Assume             D     %5.3, %5.4 (Typecheck@0x560a55ff3030[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#5 [unused] cls
val?            %7.5  = Extract2_1D        wed   %7.2, %7.4, elided   <cls>
dependent slot

Type#6 [unused] lgl$-
val?            %7.8  = Force!<value>      !v    %7.7, e1.4   <lgl$->
other unused reason

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] cls
val?            %11.2 = Force!<value>      !     %11.0, e1.4   <cls>
dependent slot

======================= ClosureVersion: getGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2 miss: 1) =======================
referenced: 132
referenced non-empty: 51
read non-empty: 45
used: 10
present non-empty: 20

Used
exact match: 5
widened: 5
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 41
optimized away non-empty: 21
dependent: 37
other reasons unused non-empty: 4

Polluted
polluted: 5
used polluted: 0

----------------------
getGeneric [0x560a54ffa020]
referenced: 64
referenced non-empty: 28
read non-empty: 28
used: 6
present non-empty: 12

Used
exact match: 3
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 22
optimized away non-empty: 10
dependent: 20
other reasons unused non-empty: 2

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|cls) (polluted)
val+            %2.4  = Force!<lazy>       !vr   %1.2,    <(str|cls)>
other unused reason

Type#2 [unused] lgl$-
lgl$#-          %2.5  = CallSafeBuiltin    wed   is.function(%2.4)    <lgl$->
dependent slot

Type#3 [unused] cls
optimized away (dependency)

Type#4 [used] lgl$-
val?            %76.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%76.3, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %76.5, %76.6 (Typecheck@0x560a574f80c0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] cls
val?            %80.2 = Force!<wrapped>    !     %80.0, e2.3   <cls>
dependent slot

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] env-
optimized away (dependency)

Type#14 [unused] str$-
optimized away (dependency)

Type#15 [unused] (nil|cls) (polluted)
val?            %6.6  = StaticCall         !v    .getGeneric[0x560a5d0f51f0](%6.3, %6.4, %6.5) e2.3   <(nil|cls)>
dependent slot

Type#16 [unused] str$+
optimized away

Type#17 [unused] str$-
optimized away (dependency)

Type#18 [unused] cls
val?            %75.5 = StaticCall         !v    .getGeneric[0x560a5dc621b0](%75.3, missingArg, %75.4) e2.3   <cls>
dependent slot

Type#19 [unused] (nil|cls) (polluted)
val?            %7.0  = Phi                      %6.6:BB6, %75.5:BB75   <(nil|cls)>
dependent slot

Type#20 [used] env-
val?            %10.3 = CallBuiltin        !v    baseenv() e2.3   <env->
void                    Assume             D     %14.0, %12.4 (Typecheck@0x560a574f80c0[Type#20])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [used] str$-
val?            %12.2 = Force!<wrapped>    !v    %12.1, e2.3   <str$->
void                    Assume             D     %12.3, %12.4 (Typecheck@0x560a574f80c0[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#23 [unused] blt-
val?            %14.5 = Extract2_1D        wed   %14.2, %14.4, elided   <blt->
dependent slot

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [used] blt-
val?^ | miss    %45.3 = LdVar              eR    baseDef, e2.3
void                    Assume             D     %45.4, %15.1 (Typecheck@0x560a574f80c0[Type#25])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: blt-, expected: blt-, required: val?^ | miss

Type#26 [unused] lgl$-
lgl$#-          %45.8 = CallSafeBuiltin    wed   is.function(%45.7)    <lgl$->
dependent slot

Type#27 [unused] str$-
optimized away (dependency)

Type#28 [unused] cls
val?            %49.4 = StaticCall         !v    genericForBasic[0x560a5cc92e60](%49.3, missingArg, false) { 0 2n } e2.3   <cls>
dependent slot

Type#29 [unused] cls
optimized away (dependency)

Type#30 [used] lgl$-
val?            %51.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%51.3, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %51.5, %51.6 (Typecheck@0x560a574f80c0[Type#30])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#31 [unused] str$-
optimized away (dependency)

Type#32 [unused] cls
optimized away (dependency)

Type#33 [unused] cls
val?            %73.3 = PopContext         C     %73.2, %55.5   <cls>
dependent slot

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] cls
val?            %21.4 = Force!<value>      !v    %21.3, e2.3   <cls>
dependent slot

Type#36 [used] lgl$-
val?            %21.5 = CallBuiltin        !v    is.function(%21.4) e2.3   <lgl$->
void                    Assume             D     %21.6, %21.7 (Typecheck@0x560a574f80c0[Type#36])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] cls
val?            %44.2 = Force!<value>      !     %44.0, e2.3   <cls>
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %69.9 = Force!<lazy>       !vL   %69.7, e69.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %69.10 = Force!<lazy>       !vL   %69.6, e69.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: .cacheGenericTable [0x560a59442440]
referenced: 56
referenced non-empty: 11
read non-empty: 11
used: 4
present non-empty: 5

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 2
dependent: 7
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
val?            %57.12 = Force!<lazy>       !vL   %57.9, e57.11   <cls>
dependent slot

Type#1 [used] env-
val?            %57.14 = Force!<lazy>       !vL   %57.8, e57.11   <env->
void                    Assume             D     %61.0, %59.3 (Typecheck@0x560a594db2c0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] str$-
val?            %59.1 = Force!<lazy>       !vL   %57.10, e57.11   <str$->
void                    Assume             D     %59.2, %59.3 (Typecheck@0x560a594db2c0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#4 [unused] cls
val?            %61.5 = Extract2_1D        wed   %61.2, %61.4, elided   <cls>
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %63.3 = Call               !v    %63.0(%63.1, %63.2) e57.11   <str$->
dependent slot

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] cls
val?            %65.4 = Force!<value>      !v    %65.3, e57.11   <cls>
dependent slot

Type#10 [used] lgl$-
val?            %65.5 = CallBuiltin        !v    is.function(%65.4) e57.11   <lgl$->
void                    Assume             D     %65.6, %65.7 (Typecheck@0x560a594db2c0[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] cls
optimized away (dependency)

Type#12 [unused] cls
optimized away (dependency)

Type#13 [used] lgl$-
val?            %69.12 = PopContext         C     %69.11, %69.5   <lgl$->
void                    Assume             D     %69.13, %69.14 (Typecheck@0x560a594db2c0[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#14 [unused] cls
val?            %73.1 = Force!<value>      !v    %73.0, e57.11   <cls>
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: .cacheGeneric [0x560a54a9d440]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] cls
optimized away (dependency)

Type#2 [unused] env-
optimized away

Type#3 [unused] cls
val?            %73.2 = PopContext         C     %73.1, %57.7   <cls>
dependent slot

*********************** Compilation session for: parent.frame (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0,SimpleInt0) ***********************
======================= ClosureVersion: parent.frame (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0,SimpleInt0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
parent.frame [0x560a55e7fb30]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (int|real)$- (polluted)
int$-           %1.1  = Force<lazy>              %1.0,    <(int|real)$->
other unused reason

*********************** Compilation session for: .checkGroupSigLength (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: .getGeneric (CorrOrd,!TMany,Argmatch;Eager1,NonRefl1) =======================
referenced: 50
referenced non-empty: 31
read non-empty: 31
used: 5
present non-empty: 17

Used
exact match: 3
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 9
dependent: 15
other reasons unused non-empty: 11

Polluted
polluted: 8
used polluted: 1

----------------------
.getGeneric [0x560a553ad2f0]
referenced: 41
referenced non-empty: 23
read non-empty: 23
used: 4
present non-empty: 15

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 4
dependent: 15
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$+
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] cls
val?            %57.9 = PopContext         C     %57.8, %55.6   <cls>
other unused reason

Type#5 [unused] (nil|cls) (polluted)
val?            %9.0  = Phi                      nil:BB8, %57.9:BB57   <(nil|cls)>
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %14.4 = Force!<lazy>       !v    %14.3, e1.5   <str$->
dependent slot

Type#8 [unused] lgl$-
lgl$#-          %14.5 = CallSafeBuiltin    wed   is.character(%14.4)    <lgl$->
dependent slot

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %52.3 = PopContext         C     %52.2, %50.4   <lgl$->
void                    Assume             D     %52.4, %52.5 (Typecheck@0x560a553a6140[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$-
val?            %22.4 = Force!<wrapped>    !v    %22.3, e1.5   <str$->
dependent slot

Type#13 [unused] lgl$-
lgl$#-          %22.5 = CallSafeBuiltin    wed   is.character(%22.4)    <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] str$-
val?            %46.4 = Force!<wrapped>    !v    %46.3, e1.5   <str$->
dependent slot

Type#16 [used] lgl$-
val?            %46.5 = CallBuiltin        !v    nzchar(%46.4) e1.5   <lgl$->
void                    Assume             D     %46.6, %46.7 (Typecheck@0x560a553a6140[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] vec
val?            %30.4 = Force!<value>      !v    %30.3, e1.5   <vec>
other unused reason

Type#24 [unused] str$-
val?            %30.6 = Force!<wrapped>    !v    %30.5, e1.5   <str$->
dependent slot

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] env-
val?            %32.4 = Force!<lazy>       !v    %32.3, e1.5   <env->
dependent slot

Type#27 [unused] env-
val?            %32.5 = CallBuiltin        !v    as.environment(%32.4) e1.5   <env->
dependent slot

Type#28 [unused] str$-
val?            %32.7 = Force!<lazy>       !v    %32.6, e1.5   <str$->
dependent slot

Type#29 [unused] (nil|cls) (polluted)
val?            %32.8 = CallBuiltin        !v    .Call(%30.4, %30.6, false, %32.5, %32.7) e1.5   <(nil|cls)>
dependent slot

Type#30 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#31 [used] env-
val?^ | miss    %35.0 = LdVar              eR    .GlobalEnv, e1.5
void                    Assume             D     %35.1, %32.11 (Typecheck@0x560a553a6140[Type#31])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [used] str$-
val?            %35.8 = Force!<wrapped>    !v    %35.7, e1.5   <str$->
void                    Assume             D     %35.9, %35.10 (Typecheck@0x560a553a6140[Type#33])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#34 [unused] nil-
val?            %37.2 = Extract2_1D        wed   %35.4, %37.1, elided   <nil->
other unused reason

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] (nil|cls) (polluted)
val?            %13.2 = Force!<value>      !     %13.0, e1.5   <(nil|cls)>
dependent slot

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away

Type#1 [unused] (nil|str)- (polluted)
optimized away

Type#2 [used] int- (polluted)
val?            %50.9 = StaticCall         !v    match[0x560a5dd66f10](%50.7, %50.8, 0L) { 0 1 2n } e50.6   <int->
void                    Assume             D     %50.10, %50.11 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %52.2 = Gt                 wed   %52.1, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: .getGenericFromCache [0x560a5a356500]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away

Type#3 [unused] env-
optimized away

Type#4 [unused] cls
val?            %57.8 = StaticCall         !v    .getGenericFromCacheTable[0x560a5d481180](%57.4, %57.5, %57.6, %57.7) e57.3   <cls>
other unused reason

======================= ClosureVersion: lapply (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1 miss: 1) =======================
referenced: 17
referenced non-empty: 16
read non-empty: 15
used: 0
present non-empty: 9

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 16
optimized away non-empty: 7
dependent: 13
other reasons unused non-empty: 3

Polluted
polluted: 9
used polluted: 0

----------------------
lapply [0x560a55e69d00]
referenced: 15
referenced non-empty: 14
read non-empty: 14
used: 0
present non-empty: 9

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 5
dependent: 13
other reasons unused non-empty: 1

Polluted
polluted: 8
used polluted: 0

Type#0 [unused] (cls|blt)- (polluted)
optimized away (dependency)

Type#1 [unused] (cls|blt)- (polluted)
val?            %1.4  = StaticCall         !v    match.fun[0x560a5deafa40](%1.3) e1.2   <(cls|blt)->
dependent slot

Type#2 [unused] (str|vec) (polluted)
val?            %2.4  = Force!<lazy>       !v    %2.3, e1.2   <(str|vec)>
dependent slot

Type#3 [unused] lgl$-
lgl$#-          %2.5  = CallSafeBuiltin    wed   is.vector(%2.4, "any")    <lgl$->
dependent slot

Type#4 [unused] $#-
optimized away

Type#5 [unused] (str|vec)+ (polluted)
val?            %15.4 = Force!<wrapped>    !v    %15.3, e1.2   <(str|vec)+>
other unused reason

Type#6 [unused] lgl$-
lgl$#-          %15.5 = CallSafeBuiltin    wed   is.object(%15.4)    <lgl$->
dependent slot

Type#7 [unused] vec
val?            %14.4 = Force!<wrapped>    !v    %14.3, e1.2   <vec>
dependent slot

Type#8 [unused] vec
val?            %14.5 = StaticCall         !v    as.list[0x560a5dec2a20](%14.4) { 0 } e1.2   <vec>
dependent slot

Type#9 [unused] (str|vec) (polluted)
val?            %10.1 = Force!<wrapped>    !v    %10.0, e1.2   <(str|vec)>
dependent slot

Type#10 [unused] (str|vec) (polluted)
optimized away (dependency)

Type#11 [unused] int$-
optimized away (dependency)

Type#12 [unused] int$-
optimized away (dependency)

Type#13 [unused] val? (polluted)
optimized away (dependency)

Type#14 [unused] val? (polluted)
val?            %12.5 = NamedCall          !v    %12.1(%12.2, .xpandDotsTrigger=%12.4) e1.2   <val?>
dependent slot

----------------------
Inlinee: is.vector [0x560a55e6f180]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (str|vec) (polluted)
optimized away

Type#1 [unused] str$-
optimized away

======================= ClosureVersion: environment (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
environment [0x560a55e84a10]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|cls) (polluted)
val+            %1.1  = Force!<lazy>             %1.0,    <(nil|cls)>
other unused reason

======================= ClosureVersion: environment (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
environment [0x560a55e84a10]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|cls) (polluted)
val?            %1.1  = Force!<lazy>             %1.0,    <(nil|cls)>
other unused reason

======================= ClosureVersion: genericForBasic (CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj2) =======================
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
genericForBasic [0x560a5685bec0]
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] vec+
val?            %3.1  = Force!<wrapped>    !v    %3.0, e1.4   <vec+>
void                    Assume             D     %7.0, %5.4 (Typecheck@0x560a55ff3030[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str$-
val?            %5.2  = Force!<lazy>       !v    %5.1, e1.4   <str$->
void                    Assume             D     %5.3, %5.4 (Typecheck@0x560a55ff3030[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#5 [unused] cls
val?            %7.5  = Extract2_1D        wed   %7.2, %7.4, elided   <cls>
dependent slot

Type#6 [unused] lgl$-
val?            %7.8  = Force!<value>      !v    %7.7, e1.4   <lgl$->
other unused reason

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] cls
val?            %11.2 = Force!<value>      !     %11.0, e1.4   <cls>
dependent slot

======================= ClosureVersion: .checkGroupSigLength (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 194
referenced non-empty: 82
read non-empty: 82
used: 37
present non-empty: 22

Used
exact match: 21
widened: 16
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 45
optimized away non-empty: 23
dependent: 41
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

----------------------
.checkGroupSigLength [0x560a5883e850]
referenced: 192
referenced non-empty: 81
read non-empty: 81
used: 37
present non-empty: 21

Used
exact match: 21
widened: 16
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 44
optimized away non-empty: 23
dependent: 41
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] vec$-
val?            %1.3  = Force!<lazy>       !v    %1.1, e1.2   <vec$->
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a586bffc0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] vec$-
val?            %4.4  = Force!<wrapped>    !v    %4.3, e1.2   <vec$->
dependent slot

Type#6 [used] int$-
val?            %4.5  = CallBuiltin        !v    seq_along(%4.4) e1.2   <int$->
void                    Assume             D     %4.6, %4.7 (Typecheck@0x560a586bffc0[Type#6])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#7 [used] vec$-
val?            %6.9  = Force!<wrapped>    !v    %6.8, e1.2   <vec$->
void                    Assume             D     %6.11, %6.12 (Typecheck@0x560a586bffc0[Type#7])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [used] int$-
val?^ | miss    %8.1  = LdVar              eR    i, e1.2
void                    Assume             D     %8.2, %6.12 (Typecheck@0x560a586bffc0[Type#9])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#10 [unused] str$+
val?            %8.7  = Extract2_1D        wed   %8.6, %8.4, elided   <str$+>
dependent slot

Type#11 [used] vec$-
val?            %8.10 = Force!<lazy>       !v    %8.9, e1.2   <vec$->
void                    Assume             D     %8.12, %8.13 (Typecheck@0x560a586bffc0[Type#11])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [used] int$-
val?^ | miss    %10.1 = LdVar              eR    i, e1.2
void                    Assume             D     %10.2, %8.13 (Typecheck@0x560a586bffc0[Type#13])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#14 [unused] cls
val?            %10.7 = Extract2_1D        wed   %10.6, %10.4, elided   <cls>
dependent slot

Type#15 [unused] cls
optimized away (dependency)

Type#16 [used] lgl$-
val?            %12.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%12.3, "groupGenericFunction") e1.2   <lgl$->
void                    Assume             D     %12.5, %12.6 (Typecheck@0x560a586bffc0[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [used] vec-
val?            %15.6 = Call               !v    %15.3(%15.4, %15.5) e1.2   <vec->
void                    Assume             D     %15.7, %15.8 (Typecheck@0x560a586bffc0[Type#24])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#25 [used] int$-
(int|real)$-    %17.2 = CallSafeBuiltin    wed   length(%17.1)    <int$->
void                    Assume             D     %17.3, %17.4 (Typecheck@0x560a586bffc0[Type#25])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [used] vec$-
val?            %103.3 = Call               !v    %103.0(%103.1, %103.2) e1.2   <vec$->
void                    Assume             D     %103.7, %103.8 (Typecheck@0x560a586bffc0[Type#28])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#29 [used] vec$-
val?            %103.5 = Force!<wrapped>    !v    %103.4, e1.2   <vec$->
void                    Assume             D     %103.6, %103.8 (Typecheck@0x560a586bffc0[Type#29])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#30 [used] int$-
val?^ | miss    %105.0 = LdVar              eR    i, e1.2
void                    Assume             D     %105.1, %103.8 (Typecheck@0x560a586bffc0[Type#30])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] vec$-
optimized away (dependency)

Type#34 [unused] cls-
optimized away

Type#35 [used] vec$-
val?            %107.5 = StaticCall         !v    lapply[0x560a5d78bec0](%107.3, %107.4) { 0 1 } e1.2   <vec$->
void                    Assume             D     %107.9, %107.10 (Typecheck@0x560a586bffc0[Type#35])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#36 [used] vec$-
val?            %107.7 = Force!<wrapped>    !v    %107.6, e1.2   <vec$->
void                    Assume             D     %107.8, %107.10 (Typecheck@0x560a586bffc0[Type#36])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#37 [used] int$-
val?^ | miss    %109.0 = LdVar              eR    i, e1.2
void                    Assume             D     %109.1, %107.10 (Typecheck@0x560a586bffc0[Type#37])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [used] vec$-
val?^ | miss    %20.3 = LdVar              eR    funs, e1.2
void                    Assume             D     %20.4, %17.4 (Typecheck@0x560a586bffc0[Type#41])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#42 [unused] cls
optimized away (dependency)

Type#43 [used] vec-
val?            %20.12 = StaticCall         !v    getGroupMembers[0x560a5d9d4700](%20.11, true, false) e1.2   <vec->
void                    Assume             D     %20.13, %20.14 (Typecheck@0x560a586bffc0[Type#43])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#44 [unused] vec-
val+            %22.2 = CallSafeBuiltin    wed   c(%20.7, %22.1)    <vec->
dependent slot

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [used] lgl$-
val?^ | miss    %33.0 = LdVar              eR    recall, e1.2
void                    Assume             D     %33.1, %23.0 (Typecheck@0x560a586bffc0[Type#83])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#84 [unused] vec$-
optimized away (dependency)

Type#85 [unused] vec$-
optimized away (dependency)

Type#86 [unused] vec$-
optimized away (dependency)

Type#87 [unused] vec$-
optimized away (dependency)

Type#88 [unused] vec-
val?            %102.10 = PopContext         C     %102.9, %102.6   <vec->
dependent slot

Type#89 [used] vec-
val?^ | miss    %34.3 = LdVar              eR    funs, e1.2
void                    Assume             D     %34.4, %23.0 (Typecheck@0x560a586bffc0[Type#89])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#90 [unused] vec-
val?            %34.8 = StaticCall         !v    unique[0x560a5de9d700](%34.7) { 0 } e1.2   <vec->
dependent slot

Type#91 [unused] vec-
optimized away (dependency)

Type#92 [unused] vec-
val?            %36.6 = StaticCall         !v    lapply[0x560a5d78c0e0](%36.3, %36.5) { 0 1 } e1.2   <vec->
dependent slot

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] real-
val?            %36.10 = Call               !v    %36.8(0, %36.9) e1.2   <real->
dependent slot

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] real-
optimized away (dependency)

Type#98 [unused] int-
val?            %38.4 = CallBuiltin        !v    seq_along(%36.10) e1.2   <int->
other unused reason

Type#99 [used] vec-
val?^ | miss    %42.0 = LdVar              eR    funs, e1.2
void                    Assume             D     %42.1, %40.7 (Typecheck@0x560a586bffc0[Type#99])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [used] int$-
val             %42.7 = ChkMissing         e     %40.5
void                    Assume             D     %42.8, %40.7 (Typecheck@0x560a586bffc0[Type#101])
exact match
checkFor: int$-, static: val, feedback: int$-, expected: int$-, required: val?^ | miss

Type#102 [unused] str$+
val?            %42.11 = Extract2_1D        wed   %42.4, %42.10, elided   <str$+>
dependent slot

Type#103 [used] vec-
val?^ | miss    %44.0 = LdVar              eR    fdefs, e1.2
void                    Assume             D     %44.1, %42.13 (Typecheck@0x560a586bffc0[Type#103])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] int$-
optimized away (dependency)

Type#106 [unused] cls
val?            %44.7 = Extract2_1D        wed   %44.4, %42.10, elided   <cls>
dependent slot

Type#107 [unused] cls
optimized away (dependency)

Type#108 [unused] cls
optimized away (dependency)

Type#109 [used] lgl$-
val?            %47.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%47.3, "genericFunction") e1.2   <lgl$->
void                    Assume             D     %47.5, %47.6 (Typecheck@0x560a586bffc0[Type#109])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#110 [unused] cls
val?            %50.4 = Force!<value>      !v    %50.3, e1.2   <cls>
dependent slot

Type#111 [unused] env-
val?            %50.6 = StaticCall         !v    environment[0x560a5d69daf0](%50.5) e1.2   <env->
dependent slot

Type#112 [unused] env-
optimized away (dependency)

Type#113 [unused] $#-
optimized away (dependency)

Type#114 [used] int$-
val?            %50.11 = Call               !v    %50.8(%50.9, %50.10) e1.2   <int$->
void                    Assume             D     %50.13, %50.14 (Typecheck@0x560a586bffc0[Type#114])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

Type#117 [unused] $#-
optimized away (dependency)

Type#118 [unused] int$-
optimized away (dependency)

Type#119 [used] real-
val?^ | miss    %55.0 = LdVar              eR    sigs !upd, e1.2
void                    Assume             D     %55.1, %52.3 (Typecheck@0x560a586bffc0[Type#119])
exact match
checkFor: real-, static: val?^ | miss, feedback: real-, expected: real-, required: val?^ | miss

Type#120 [used] int$-
val?^ | miss    %55.4 = LdVar              eR    i, e1.2
void                    Assume             D     %55.5, %52.3 (Typecheck@0x560a586bffc0[Type#120])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#121 [unused] $#-
optimized away (dependency)

Type#122 [unused] $#-
optimized away (dependency)

Type#123 [unused] $#-
optimized away (dependency)

Type#124 [unused] $#-
optimized away (dependency)

Type#125 [unused] $#-
optimized away (dependency)

Type#126 [unused] $#-
optimized away (dependency)

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] $#-
optimized away (dependency)

Type#129 [unused] $#-
optimized away (dependency)

Type#130 [used] vec-
val?^ | miss    %61.0 = LdVar              eR    funs, e1.2
void                    Assume             D     %61.1, %59.2 (Typecheck@0x560a586bffc0[Type#130])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#131 [unused] $#-
optimized away (dependency)

Type#132 [used] int$-
val             %61.7 = ChkMissing         e     %59.0
void                    Assume             D     %61.8, %59.2 (Typecheck@0x560a586bffc0[Type#132])
exact match
checkFor: int$-, static: val, feedback: int$-, expected: int$-, required: val?^ | miss

Type#133 [unused] str$-
val?            %61.11 = Extract2_1D        wed   %61.4, %61.10, elided   <str$->
other unused reason

Type#134 [used] vec-
val?^ | miss    %63.0 = LdVar              eR    fdefs, e1.2
void                    Assume             D     %63.1, %61.13 (Typecheck@0x560a586bffc0[Type#134])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#135 [unused] $#-
optimized away (dependency)

Type#136 [used] int$-
val             %63.7 = ChkMissing         e     %59.0
void                    Assume             D     %63.8, %61.13 (Typecheck@0x560a586bffc0[Type#136])
exact match
checkFor: int$-, static: val, feedback: int$-, expected: int$-, required: val?^ | miss

Type#137 [unused] cls
val?            %63.11 = Extract2_1D        wed   %63.4, %63.10, elided   <cls>
dependent slot

Type#138 [unused] cls
optimized away (dependency)

Type#139 [unused] cls
optimized away (dependency)

Type#140 [used] lgl$-
val?            %66.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%66.3, "genericFunction") e1.2   <lgl$->
void                    Assume             D     %66.5, %66.6 (Typecheck@0x560a586bffc0[Type#140])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#141 [unused] cls
val?            %69.4 = Force!<value>      !v    %69.3, e1.2   <cls>
dependent slot

Type#142 [unused] env-
val?            %69.6 = StaticCall         !v    environment[0x560a5d69daf0](%69.5) e1.2   <env->
dependent slot

Type#143 [unused] env-
optimized away (dependency)

Type#144 [unused] $#-
optimized away (dependency)

Type#145 [used] real$-
val?            %69.11 = Call               !v    %69.8(%69.9, %69.10) e1.2   <real$->
void                    Assume             D     %69.13, %69.14 (Typecheck@0x560a586bffc0[Type#145])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?^ | miss

Type#146 [unused] $#-
optimized away (dependency)

Type#147 [unused] $#-
optimized away (dependency)

Type#148 [unused] $#-
optimized away (dependency)

Type#149 [unused] real$-
optimized away (dependency)

Type#150 [used] real-
val?^ | miss    %74.0 = LdVar              eR    sigs !upd, e1.2
void                    Assume             D     %74.1, %71.3 (Typecheck@0x560a586bffc0[Type#150])
exact match
checkFor: real-, static: val?^ | miss, feedback: real-, expected: real-, required: val?^ | miss

Type#151 [used] int$-
val?^ | miss    %74.4 = LdVar              eR    i, e1.2
void                    Assume             D     %74.5, %71.3 (Typecheck@0x560a586bffc0[Type#151])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#152 [unused] $#-
optimized away (dependency)

Type#153 [unused] $#-
optimized away (dependency)

Type#154 [unused] $#-
optimized away (dependency)

Type#155 [unused] $#-
optimized away (dependency)

Type#156 [unused] $#-
optimized away (dependency)

Type#157 [unused] $#-
optimized away (dependency)

Type#158 [unused] $#-
optimized away (dependency)

Type#159 [unused] $#-
optimized away (dependency)

Type#160 [unused] $#-
optimized away (dependency)

Type#161 [unused] $#-
optimized away (dependency)

Type#162 [used] real-
val?^ | miss    %78.3 = LdVar              eR    sigs, e1.2
void                    Assume             D     %78.4, %56.2 (Typecheck@0x560a586bffc0[Type#162])
exact match
checkFor: real-, static: val?^ | miss, feedback: real-, expected: real-, required: val?^ | miss

Type#163 [unused] real$-
real$-          %78.7 = CallSafeBuiltin    wed   max(%78.6)    <real$->
dependent slot

Type#164 [unused] $#-
optimized away (dependency)

Type#165 [unused] $#-
optimized away (dependency)

Type#166 [unused] $#-
optimized away (dependency)

Type#167 [unused] $#-
optimized away (dependency)

Type#168 [unused] $#-
optimized away (dependency)

Type#169 [unused] real-
optimized away (dependency)

Type#170 [unused] real$-
optimized away (dependency)

Type#171 [unused] lgl-
lgl-            %80.3 = Lt                 wed   %78.6, %78.7, elided   <lgl->
dependent slot

Type#172 [unused] real-
optimized away (dependency)

Type#173 [unused] lgl-
lgl-            %80.4 = Gt                 wed   %78.6, 0, elided   <lgl->
dependent slot

Type#174 [unused] lgl-
val+            %80.5 = CallSafeBuiltin    wed   &(%80.3, %80.4)    <lgl->
dependent slot

Type#175 [unused] $#-
optimized away (dependency)

Type#176 [unused] lgl-
optimized away (dependency)

Type#177 [used] lgl$-
val?            %82.3 = CallBuiltin        !v    any(%80.5) e1.2   <lgl$->
void                    Assume             D     %82.4, %82.5 (Typecheck@0x560a586bffc0[Type#177])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#178 [unused] $#-
optimized away (dependency)

Type#179 [unused] $#-
optimized away (dependency)

Type#180 [unused] $#-
optimized away (dependency)

Type#181 [unused] $#-
optimized away (dependency)

Type#182 [unused] $#-
optimized away (dependency)

Type#183 [unused] $#-
optimized away (dependency)

Type#184 [unused] $#-
optimized away (dependency)

Type#185 [unused] $#-
optimized away (dependency)

Type#186 [unused] $#-
optimized away (dependency)

Type#187 [unused] $#-
optimized away (dependency)

Type#188 [unused] $#-
optimized away (dependency)

Type#189 [unused] $#-
optimized away (dependency)

Type#190 [unused] $#-
optimized away (dependency)

Type#191 [used] vec-
val?^ | miss    %88.0 = LdVar              eR    funs, e1.2
void                    Assume             D     %88.1, %86.0 (Typecheck@0x560a586bffc0[Type#191])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

----------------------
Inlinee: Recall [0x560a5a3adf30]
referenced: 2
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (lgl|vec)- (polluted)
val?            %102.9 = Call               !     <spec .Internal>(%102.8) e102.7   <(lgl|vec)->
other unused reason

======================= ClosureVersion: getGroupMembers (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj1,!Obj2) =======================
referenced: 38
referenced non-empty: 25
read non-empty: 18
used: 3
present non-empty: 7

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 22
optimized away non-empty: 15
dependent: 20
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

----------------------
getGroupMembers [0x560a5a44b620]
referenced: 30
referenced non-empty: 17
read non-empty: 17
used: 3
present non-empty: 7

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 7
dependent: 12
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
optimized away (dependency)

Type#1 [unused] cls
val?            %2.4  = StaticCall         !v    getGeneric[0x560a5d7a46a0](%2.3) e1.3   <cls>
dependent slot

Type#2 [unused] cls
optimized away (dependency)

Type#3 [unused] cls
optimized away (dependency)

Type#4 [used] lgl$-
val?            %5.4  = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%5.3, "groupGenericFunction") e1.3   <lgl$->
void                    Assume             D     %5.5, %5.6 (Typecheck@0x560a59e504c0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] vec-
val?            %8.3  = Call               !v    %8.0(%8.1, %8.2) e1.3   <vec->
dependent slot

Type#8 [unused] lgl$-
val?            %8.6  = Force!<lazy>       !v    %8.5, e1.3   <lgl$->
dependent slot

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] str$-
val?            %16.3 = Call               !v    %16.0(%16.1, %16.2) e1.3   <str$->
dependent slot

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [used] lgl$-
val?            %18.8 = PopContext         C     %18.7, %18.4   <lgl$->
void                    Assume             D     %18.9, %18.10 (Typecheck@0x560a59e504c0[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] vec-
optimized away (dependency)

Type#19 [unused] env-
optimized away

Type#20 [unused] vec-
val?            %24.5 = StaticCall         !v    .recMembers[0x560a5d3a0140](%24.3, %24.4) from %1.4 e1.3   <vec->
dependent slot

Type#21 [unused] lgl$-
val?            %10.2 = Force!<lazy>       !     %10.0, e1.3   <lgl$->
dependent slot

Type#22 [used] vec-
val?^ | miss    %13.0 = LdVar              eR    members, e1.3
void                    Assume             D     %13.1, %10.4 (Typecheck@0x560a59e504c0[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#23 [unused] vec-
optimized away (dependency)

Type#24 [unused] str-
val?            %15.6 = StaticCall         !     sapply[0x560a5deaf340](%15.3, %15.5) { 0 1 } e1.3   <str->
other unused reason

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 8
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away (dependency)

Type#1 [unused] val? (polluted)
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: vector (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) ***********************
======================= ClosureVersion: vector (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) =======================
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

----------------------
vector [0x560a55e99e90]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] str$-
val+            %1.2  = Force<value>             %1.1,    <str$->
other unused reason

Type#1 [used] (int|real)$- (polluted)
val?            %1.4  = Force!<lazy>       !vL   %1.0, e1.3   <(int|real)$->
void                    Assume             D     %1.5, %1.6 (Typecheck@0x560a55e9a7b0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (int|real)$-, expected: (int|real)$-, required: val?^ | miss

*********************** Compilation session for: setdiff (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: setdiff (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 22
referenced non-empty: 18
read non-empty: 18
used: 2
present non-empty: 11

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 16
optimized away non-empty: 5
dependent: 13
other reasons unused non-empty: 3

Polluted
polluted: 11
used polluted: 2

----------------------
setdiff [0x560a57925c20]
referenced: 20
referenced non-empty: 16
read non-empty: 16
used: 1
present non-empty: 11

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 4
dependent: 13
other reasons unused non-empty: 2

Polluted
polluted: 10
used polluted: 1

Type#0 [unused] str- (polluted)
val+            %1.3  = Force!<lazy>       !vr   %1.1,    <str->
dependent slot

Type#1 [used] str- (polluted)
val             %2.2  = CallSafeBuiltin    wed   as.vector(%2.1, "any")    <str->
void                    Assume             D     %6.0, %4.4 (Typecheck@0x560a56c3e230[Type#1])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: str-, expected: str-, required: val+

Type#2 [unused] str- (polluted)
val+            %2.4  = Force!<lazy>       !vr   %1.0,    <str->
dependent slot

Type#3 [unused] str- (polluted)
val             %4.2  = CallSafeBuiltin    wed   as.vector(%4.1, "any")    <str->
dependent slot

Type#4 [unused] str- (polluted)
optimized away (dependency)

Type#5 [unused] int$-
(int|real)$-    %6.3  = CallSafeBuiltin    wed   length(%6.2)    <int$->
dependent slot

Type#6 [unused] str-
optimized away (dependency)

Type#7 [unused] int$-
val?            %7.3  = CallBuiltin        !v    length(%7.2) e1.2   <int$->
dependent slot

Type#8 [unused] str-
val?            %9.2  = Force!<value>      !     %9.0, e1.2   <str->
dependent slot

Type#9 [unused] str- (polluted)
val?            %11.1 = Force<value>       !v    %11.0, e1.2   <str->
dependent slot

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] str- (polluted)
optimized away (dependency)

Type#15 [unused] str- (polluted)
optimized away (dependency)

Type#16 [unused] int- (polluted)
val?            %14.3 = Call               !v    %14.0(%14.1, %14.2, 0L) e1.2   <int->
other unused reason

Type#17 [unused] lgl- (polluted)
val?            %14.4 = Eq                 !v    %14.3, 0L, e1.2   <lgl->
other unused reason

Type#18 [unused] str-
val?            %13.1 = Extract1_1D        !v    %11.1, %13.0, e1.2   <str->
dependent slot

Type#19 [unused] str-
val?            %10.1 = StaticCall         !     unique[0x560a5d83c8b0](%10.0) { 0 } e1.2   <str->
dependent slot

----------------------
Inlinee: as.vector [0x560a577b6aa0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

Type#0 [used] str- (polluted)
val+            %2.4  = Force!<lazy>       !vr   %1.0,    <str->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a56c848c0[Type#0])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: str-, expected: str-, required: val?+

Type#1 [unused] str$-
optimized away

*********************** Compilation session for: .recMembers (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: .getGeneric (CorrOrd,!TMany,Argmatch;Eager1,NonRefl1) =======================
referenced: 50
referenced non-empty: 31
read non-empty: 31
used: 5
present non-empty: 17

Used
exact match: 3
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 9
dependent: 15
other reasons unused non-empty: 11

Polluted
polluted: 8
used polluted: 1

----------------------
.getGeneric [0x560a553ad2f0]
referenced: 41
referenced non-empty: 23
read non-empty: 23
used: 4
present non-empty: 15

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 4
dependent: 15
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$+
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] cls
val?            %57.9 = PopContext         C     %57.8, %55.6   <cls>
other unused reason

Type#5 [unused] (nil|cls) (polluted)
val?            %9.0  = Phi                      nil:BB8, %57.9:BB57   <(nil|cls)>
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %14.4 = Force!<lazy>       !v    %14.3, e1.5   <str$->
dependent slot

Type#8 [unused] lgl$-
lgl$#-          %14.5 = CallSafeBuiltin    wed   is.character(%14.4)    <lgl$->
dependent slot

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %52.3 = PopContext         C     %52.2, %50.4   <lgl$->
void                    Assume             D     %52.4, %52.5 (Typecheck@0x560a553a6140[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$-
val?            %22.4 = Force!<wrapped>    !v    %22.3, e1.5   <str$->
dependent slot

Type#13 [unused] lgl$-
lgl$#-          %22.5 = CallSafeBuiltin    wed   is.character(%22.4)    <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] str$-
val?            %46.4 = Force!<wrapped>    !v    %46.3, e1.5   <str$->
dependent slot

Type#16 [used] lgl$-
val?            %46.5 = CallBuiltin        !v    nzchar(%46.4) e1.5   <lgl$->
void                    Assume             D     %46.6, %46.7 (Typecheck@0x560a553a6140[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] vec
val?            %30.4 = Force!<value>      !v    %30.3, e1.5   <vec>
other unused reason

Type#24 [unused] str$-
val?            %30.6 = Force!<wrapped>    !v    %30.5, e1.5   <str$->
dependent slot

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] env-
val?            %32.4 = Force!<lazy>       !v    %32.3, e1.5   <env->
dependent slot

Type#27 [unused] env-
val?            %32.5 = CallBuiltin        !v    as.environment(%32.4) e1.5   <env->
dependent slot

Type#28 [unused] str$-
val?            %32.7 = Force!<lazy>       !v    %32.6, e1.5   <str$->
dependent slot

Type#29 [unused] (nil|cls) (polluted)
val?            %32.8 = CallBuiltin        !v    .Call(%30.4, %30.6, false, %32.5, %32.7) e1.5   <(nil|cls)>
dependent slot

Type#30 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#31 [used] env-
val?^ | miss    %35.0 = LdVar              eR    .GlobalEnv, e1.5
void                    Assume             D     %35.1, %32.11 (Typecheck@0x560a553a6140[Type#31])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [used] str$-
val?            %35.8 = Force!<wrapped>    !v    %35.7, e1.5   <str$->
void                    Assume             D     %35.9, %35.10 (Typecheck@0x560a553a6140[Type#33])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#34 [unused] nil-
val?            %37.2 = Extract2_1D        wed   %35.4, %37.1, elided   <nil->
other unused reason

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] (nil|cls) (polluted)
val?            %13.2 = Force!<value>      !     %13.0, e1.5   <(nil|cls)>
dependent slot

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away

Type#1 [unused] (nil|str)- (polluted)
optimized away

Type#2 [used] int- (polluted)
val?            %50.9 = StaticCall         !v    match[0x560a5de6b520](%50.7, %50.8, 0L) { 0 1 2n } e50.6   <int->
void                    Assume             D     %50.10, %50.11 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %52.2 = Gt                 wed   %52.1, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: .getGenericFromCache [0x560a5a356500]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away

Type#3 [unused] env-
optimized away

Type#4 [unused] cls
val?            %57.8 = StaticCall         !v    .getGenericFromCacheTable[0x560a5d4248f0](%57.4, %57.5, %57.6, %57.7) e57.3   <cls>
other unused reason

======================= ClosureVersion: genericForBasic (CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj2) =======================
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
genericForBasic [0x560a5685bec0]
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] vec+
val?            %3.1  = Force!<wrapped>    !v    %3.0, e1.4   <vec+>
void                    Assume             D     %7.0, %5.4 (Typecheck@0x560a55ff3030[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str$-
val?            %5.2  = Force!<lazy>       !v    %5.1, e1.4   <str$->
void                    Assume             D     %5.3, %5.4 (Typecheck@0x560a55ff3030[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#5 [unused] cls
val?            %7.5  = Extract2_1D        wed   %7.2, %7.4, elided   <cls>
dependent slot

Type#6 [unused] lgl$-
val?            %7.8  = Force!<value>      !v    %7.7, e1.4   <lgl$->
other unused reason

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] cls
val?            %11.2 = Force!<value>      !     %11.0, e1.4   <cls>
dependent slot

======================= ClosureVersion: .recMembers (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 61
referenced non-empty: 45
read non-empty: 44
used: 18
present non-empty: 12

Used
exact match: 7
widened: 11
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 27
optimized away non-empty: 15
dependent: 23
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

----------------------
.recMembers [0x560a58e55040]
referenced: 57
referenced non-empty: 42
read non-empty: 42
used: 18
present non-empty: 11

Used
exact match: 7
widened: 11
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 24
optimized away non-empty: 13
dependent: 23
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec-
val+            %2.7  = Force!<lazy>       !vr   %1.1,    <vec->
dependent slot

Type#1 [used] int$-
(int|real)$-    %2.8  = CallSafeBuiltin    wed   length(%2.7)    <int$->
void                    Assume             D     %2.9, %2.10 (Typecheck@0x560a58731950[Type#1])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#2 [unused] vec-
vec-            %4.2  = CallSafeBuiltin    wed   vector("list", %4.1)    <vec->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] vec-
optimized away (dependency)

Type#5 [unused] int-
val?            %6.3  = CallBuiltin        !v    seq_along(%2.7) e2.6   <int->
other unused reason

Type#6 [used] vec-
val?            %8.9  = Force!<wrapped>    !v    %8.8, e2.6   <vec->
void                    Assume             D     %8.11, %8.12 (Typecheck@0x560a58731950[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] int$-
val?^ | miss    %10.1 = LdVar              eR    i, e2.6
void                    Assume             D     %10.2, %8.12 (Typecheck@0x560a58731950[Type#8])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#9 [unused] str$-
val?            %10.7 = Extract2_1D        wed   %10.6, %10.4, elided   <str$->
dependent slot

Type#10 [unused] str$-
optimized away (dependency)

Type#11 [unused] env-
optimized away (dependency)

Type#12 [unused] cls
val?            %12.5 = StaticCall         !v    getGeneric[0x560a5cc5ac80](%12.3, false, %12.4) e2.6   <cls>
dependent slot

Type#13 [unused] cls
optimized away (dependency)

Type#14 [used] str$-
val?^ | miss    %52.0 = LdVar              eR    what, e2.6
void                    Assume             D     %52.1, %12.8 (Typecheck@0x560a58731950[Type#14])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#15 [used] vec-
val?^ | miss    %52.5 = LdVar              eR    all !upd, e2.6
void                    Assume             D     %52.6, %12.8 (Typecheck@0x560a58731950[Type#15])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#16 [used] int$-
val?^ | miss    %52.10 = LdVar              eR    i, e2.6
void                    Assume             D     %52.11, %12.8 (Typecheck@0x560a58731950[Type#16])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#17 [unused] cls
optimized away (dependency)

Type#18 [used] lgl$-
val?            %18.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%18.3, "groupGenericFunction") e2.6   <lgl$->
void                    Assume             D     %18.5, %18.6 (Typecheck@0x560a58731950[Type#18])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] vec-
val?            %47.3 = Call               !v    %47.0(%47.1, %47.2) e2.6   <vec->
dependent slot

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [used] vec-
val?^ | miss    %49.3 = LdVar              eR    all, e2.6
void                    Assume             D     %49.4, %47.5 (Typecheck@0x560a58731950[Type#26])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#27 [unused] vec-
optimized away (dependency)

Type#28 [unused] env-
optimized away (dependency)

Type#29 [used] vec-
val?            %49.18 = PopContext         C     %49.17, %49.14   <vec->
void                    Assume             D     %49.19, %49.20 (Typecheck@0x560a58731950[Type#29])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#30 [unused] vec-
val+            %51.2 = CallSafeBuiltin    wed   c(%49.7, %51.1)    <vec->
dependent slot

Type#31 [used] vec-
val?            %25.3 = Force!<wrapped>    !v    %25.2, e2.6   <vec->
void                    Assume             D     %25.5, %25.6 (Typecheck@0x560a58731950[Type#31])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [used] int$-
val?^ | miss    %27.1 = LdVar              eR    i, e2.6
void                    Assume             D     %27.2, %25.6 (Typecheck@0x560a58731950[Type#33])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#34 [unused] str$-
val?            %27.7 = Extract2_1D        wed   %27.6, %27.4, elided   <str$->
dependent slot

Type#35 [unused] str$-
optimized away (dependency)

Type#36 [unused] env-
optimized away (dependency)

Type#37 [unused] cls
val?            %29.5 = StaticCall         !v    getGeneric[0x560a5cc5ac80](%29.3, false, %29.4) e2.6   <cls>
dependent slot

Type#38 [unused] cls
optimized away (dependency)

Type#39 [used] str$-
val?^ | miss    %45.0 = LdVar              eR    what, e2.6
void                    Assume             D     %45.1, %29.8 (Typecheck@0x560a58731950[Type#39])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#40 [used] vec-
val?^ | miss    %45.5 = LdVar              eR    all !upd, e2.6
void                    Assume             D     %45.6, %29.8 (Typecheck@0x560a58731950[Type#40])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#41 [used] int$-
val?^ | miss    %45.10 = LdVar              eR    i, e2.6
void                    Assume             D     %45.11, %29.8 (Typecheck@0x560a58731950[Type#41])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#42 [unused] cls
optimized away (dependency)

Type#43 [used] lgl$-
val?            %35.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%35.3, "groupGenericFunction") e2.6   <lgl$->
void                    Assume             D     %35.5, %35.6 (Typecheck@0x560a58731950[Type#43])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] vec-
val?            %40.3 = Call               !v    %40.0(%40.1, %40.2) e2.6   <vec->
dependent slot

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [used] vec-
val?^ | miss    %42.3 = LdVar              eR    all, e2.6
void                    Assume             D     %42.4, %40.5 (Typecheck@0x560a58731950[Type#51])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#52 [unused] vec-
optimized away (dependency)

Type#53 [unused] env-
optimized away (dependency)

Type#54 [used] vec-
val?            %42.18 = PopContext         C     %42.17, %42.14   <vec->
void                    Assume             D     %42.19, %42.20 (Typecheck@0x560a58731950[Type#54])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#55 [unused] vec-
val+            %44.2 = CallSafeBuiltin    wed   c(%42.7, %44.1)    <vec->
dependent slot

Type#56 [used] vec-
val?^ | miss    %46.0 = LdVar              eR    all, e2.6
void                    Assume             D     %46.1, %22.2 (Typecheck@0x560a58731950[Type#56])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

----------------------
Inlinee: Recall [0x560a5a3adf30]
referenced: 2
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (lgl|vec)- (polluted)
val?            %42.17 = Call               !v    <spec .Internal>(%42.16) e42.15   <(lgl|vec)->
other unused reason

----------------------
Inlinee: vector [0x560a55e99e90]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] (int|real)$- (polluted)
optimized away

*********************** Compilation session for: sys.call (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: sys.call (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
sys.call [0x560a5a4dbdb0]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] int$-
val?            %1.2  = Force!<lazy>       !v    %1.0, e1.1   <int$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a5a3eae10[Type#0])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

*********************** Compilation session for: .checkGroupSigLength (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: .getGeneric (CorrOrd,!TMany,Argmatch;Eager1,NonRefl1) =======================
referenced: 50
referenced non-empty: 31
read non-empty: 31
used: 5
present non-empty: 17

Used
exact match: 3
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 9
dependent: 15
other reasons unused non-empty: 11

Polluted
polluted: 8
used polluted: 1

----------------------
.getGeneric [0x560a553ad2f0]
referenced: 41
referenced non-empty: 23
read non-empty: 23
used: 4
present non-empty: 15

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 4
dependent: 15
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$+
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] cls
val?            %57.9 = PopContext         C     %57.8, %55.6   <cls>
other unused reason

Type#5 [unused] (nil|cls) (polluted)
val?            %9.0  = Phi                      nil:BB8, %57.9:BB57   <(nil|cls)>
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %14.4 = Force!<lazy>       !v    %14.3, e1.5   <str$->
dependent slot

Type#8 [unused] lgl$-
lgl$#-          %14.5 = CallSafeBuiltin    wed   is.character(%14.4)    <lgl$->
dependent slot

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %52.3 = PopContext         C     %52.2, %50.4   <lgl$->
void                    Assume             D     %52.4, %52.5 (Typecheck@0x560a553a6140[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$-
val?            %22.4 = Force!<wrapped>    !v    %22.3, e1.5   <str$->
dependent slot

Type#13 [unused] lgl$-
lgl$#-          %22.5 = CallSafeBuiltin    wed   is.character(%22.4)    <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] str$-
val?            %46.4 = Force!<wrapped>    !v    %46.3, e1.5   <str$->
dependent slot

Type#16 [used] lgl$-
val?            %46.5 = CallBuiltin        !v    nzchar(%46.4) e1.5   <lgl$->
void                    Assume             D     %46.6, %46.7 (Typecheck@0x560a553a6140[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] vec
val?            %30.4 = Force!<value>      !v    %30.3, e1.5   <vec>
other unused reason

Type#24 [unused] str$-
val?            %30.6 = Force!<wrapped>    !v    %30.5, e1.5   <str$->
dependent slot

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] env-
val?            %32.4 = Force!<lazy>       !v    %32.3, e1.5   <env->
dependent slot

Type#27 [unused] env-
val?            %32.5 = CallBuiltin        !v    as.environment(%32.4) e1.5   <env->
dependent slot

Type#28 [unused] str$-
val?            %32.7 = Force!<lazy>       !v    %32.6, e1.5   <str$->
dependent slot

Type#29 [unused] (nil|cls) (polluted)
val?            %32.8 = CallBuiltin        !v    .Call(%30.4, %30.6, false, %32.5, %32.7) e1.5   <(nil|cls)>
dependent slot

Type#30 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#31 [used] env-
val?^ | miss    %35.0 = LdVar              eR    .GlobalEnv, e1.5
void                    Assume             D     %35.1, %32.11 (Typecheck@0x560a553a6140[Type#31])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [used] str$-
val?            %35.8 = Force!<wrapped>    !v    %35.7, e1.5   <str$->
void                    Assume             D     %35.9, %35.10 (Typecheck@0x560a553a6140[Type#33])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#34 [unused] nil-
val?            %37.2 = Extract2_1D        wed   %35.4, %37.1, elided   <nil->
other unused reason

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] (nil|cls) (polluted)
val?            %13.2 = Force!<value>      !     %13.0, e1.5   <(nil|cls)>
dependent slot

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away

Type#1 [unused] (nil|str)- (polluted)
optimized away

Type#2 [used] int- (polluted)
val?            %50.9 = StaticCall         !v    match[0x560a5df0ee90](%50.7, %50.8, 0L) { 0 1 2n } e50.6   <int->
void                    Assume             D     %50.10, %50.11 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %52.2 = Gt                 wed   %52.1, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: .getGenericFromCache [0x560a5a356500]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away

Type#3 [unused] env-
optimized away

Type#4 [unused] cls
val?            %57.8 = StaticCall         !v    .getGenericFromCacheTable[0x560a5dfcc100](%57.4, %57.5, %57.6, %57.7) e57.3   <cls>
other unused reason

======================= ClosureVersion: environment (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
environment [0x560a55e84a10]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|cls) (polluted)
val+            %1.1  = Force!<lazy>             %1.0,    <(nil|cls)>
other unused reason

======================= ClosureVersion: genericForBasic (CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj2) =======================
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
genericForBasic [0x560a5685bec0]
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] vec+
val?            %3.1  = Force!<wrapped>    !v    %3.0, e1.4   <vec+>
void                    Assume             D     %7.0, %5.4 (Typecheck@0x560a55ff3030[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str$-
val?            %5.2  = Force!<lazy>       !v    %5.1, e1.4   <str$->
void                    Assume             D     %5.3, %5.4 (Typecheck@0x560a55ff3030[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#5 [unused] cls
val?            %7.5  = Extract2_1D        wed   %7.2, %7.4, elided   <cls>
dependent slot

Type#6 [unused] lgl$-
val?            %7.8  = Force!<value>      !v    %7.7, e1.4   <lgl$->
other unused reason

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] cls
val?            %11.2 = Force!<value>      !     %11.0, e1.4   <cls>
dependent slot

======================= ClosureVersion: .checkGroupSigLength (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 194
referenced non-empty: 82
read non-empty: 82
used: 36
present non-empty: 22

Used
exact match: 21
widened: 15
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 46
optimized away non-empty: 24
dependent: 42
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

----------------------
.checkGroupSigLength [0x560a5883e850]
referenced: 192
referenced non-empty: 81
read non-empty: 81
used: 36
present non-empty: 21

Used
exact match: 21
widened: 15
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 45
optimized away non-empty: 24
dependent: 42
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec$-
val+            %1.3  = Force!<lazy>       !vr   %1.1,    <vec$->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] vec$-
optimized away (dependency)

Type#6 [used] int$-
val?            %2.3  = CallBuiltin        !v    seq_along(%1.3) e1.2   <int$->
void                    Assume             D     %2.4, %2.5 (Typecheck@0x560a586bffc0[Type#6])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#7 [used] vec$-
val?            %4.9  = Force!<wrapped>    !v    %4.8, e1.2   <vec$->
void                    Assume             D     %4.11, %4.12 (Typecheck@0x560a586bffc0[Type#7])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [used] int$-
val?^ | miss    %6.1  = LdVar              eR    i, e1.2
void                    Assume             D     %6.2, %4.12 (Typecheck@0x560a586bffc0[Type#9])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#10 [unused] str$+
val?            %6.7  = Extract2_1D        wed   %6.6, %6.4, elided   <str$+>
dependent slot

Type#11 [used] vec$-
val?            %6.10 = Force!<lazy>       !v    %6.9, e1.2   <vec$->
void                    Assume             D     %6.12, %6.13 (Typecheck@0x560a586bffc0[Type#11])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [used] int$-
val?^ | miss    %8.1  = LdVar              eR    i, e1.2
void                    Assume             D     %8.2, %6.13 (Typecheck@0x560a586bffc0[Type#13])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#14 [unused] cls
val?            %8.7  = Extract2_1D        wed   %8.6, %8.4, elided   <cls>
dependent slot

Type#15 [unused] cls
optimized away (dependency)

Type#16 [used] lgl$-
val?            %10.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%10.3, "groupGenericFunction") e1.2   <lgl$->
void                    Assume             D     %10.5, %10.6 (Typecheck@0x560a586bffc0[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [used] vec-
val?            %13.6 = Call               !v    %13.3(%13.4, %13.5) e1.2   <vec->
void                    Assume             D     %13.7, %13.8 (Typecheck@0x560a586bffc0[Type#24])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#25 [used] int$-
(int|real)$-    %15.2 = CallSafeBuiltin    wed   length(%15.1)    <int$->
void                    Assume             D     %15.3, %15.4 (Typecheck@0x560a586bffc0[Type#25])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [used] vec$-
val?            %101.3 = Call               !v    %101.0(%101.1, %101.2) e1.2   <vec$->
void                    Assume             D     %101.7, %101.8 (Typecheck@0x560a586bffc0[Type#28])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#29 [used] vec$-
val?            %101.5 = Force!<wrapped>    !v    %101.4, e1.2   <vec$->
void                    Assume             D     %101.6, %101.8 (Typecheck@0x560a586bffc0[Type#29])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#30 [used] int$-
val?^ | miss    %103.0 = LdVar              eR    i, e1.2
void                    Assume             D     %103.1, %101.8 (Typecheck@0x560a586bffc0[Type#30])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] vec$-
optimized away (dependency)

Type#34 [unused] cls-
optimized away

Type#35 [used] vec$-
val?            %105.5 = StaticCall         !v    lapply[0x560a5e0feb00](%105.3, %105.4) { 0 1 } e1.2   <vec$->
void                    Assume             D     %105.9, %105.10 (Typecheck@0x560a586bffc0[Type#35])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#36 [used] vec$-
val?            %105.7 = Force!<wrapped>    !v    %105.6, e1.2   <vec$->
void                    Assume             D     %105.8, %105.10 (Typecheck@0x560a586bffc0[Type#36])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#37 [used] int$-
val?^ | miss    %107.0 = LdVar              eR    i, e1.2
void                    Assume             D     %107.1, %105.10 (Typecheck@0x560a586bffc0[Type#37])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [used] vec$-
val?^ | miss    %18.3 = LdVar              eR    funs, e1.2
void                    Assume             D     %18.4, %15.4 (Typecheck@0x560a586bffc0[Type#41])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#42 [unused] cls
optimized away (dependency)

Type#43 [used] vec-
val?            %18.12 = StaticCall         !v    getGroupMembers[0x560a5d9bf480](%18.11, true, false) e1.2   <vec->
void                    Assume             D     %18.13, %18.14 (Typecheck@0x560a586bffc0[Type#43])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#44 [unused] vec-
val+            %20.2 = CallSafeBuiltin    wed   c(%18.7, %20.1)    <vec->
dependent slot

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [used] lgl$-
val?^ | miss    %31.0 = LdVar              eR    recall, e1.2
void                    Assume             D     %31.1, %21.0 (Typecheck@0x560a586bffc0[Type#83])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#84 [unused] vec$-
optimized away (dependency)

Type#85 [unused] vec$-
optimized away (dependency)

Type#86 [unused] vec$-
optimized away (dependency)

Type#87 [unused] vec$-
optimized away (dependency)

Type#88 [unused] vec-
val?            %100.10 = PopContext         C     %100.9, %100.6   <vec->
dependent slot

Type#89 [used] vec-
val?^ | miss    %32.3 = LdVar              eR    funs, e1.2
void                    Assume             D     %32.4, %21.0 (Typecheck@0x560a586bffc0[Type#89])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#90 [unused] vec-
val?            %32.8 = StaticCall         !v    unique[0x560a5e164ed0](%32.7) { 0 } e1.2   <vec->
dependent slot

Type#91 [unused] vec-
optimized away (dependency)

Type#92 [unused] vec-
val?            %34.6 = StaticCall         !v    lapply[0x560a5e163f30](%34.3, %34.5) { 0 1 } e1.2   <vec->
dependent slot

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] real-
val?            %34.10 = Call               !v    %34.8(0, %34.9) e1.2   <real->
dependent slot

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] real-
optimized away (dependency)

Type#98 [unused] int-
val?            %36.4 = CallBuiltin        !v    seq_along(%34.10) e1.2   <int->
other unused reason

Type#99 [used] vec-
val?^ | miss    %40.0 = LdVar              eR    funs, e1.2
void                    Assume             D     %40.1, %38.7 (Typecheck@0x560a586bffc0[Type#99])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [used] int$-
val             %40.7 = ChkMissing         e     %38.5
void                    Assume             D     %40.8, %38.7 (Typecheck@0x560a586bffc0[Type#101])
exact match
checkFor: int$-, static: val, feedback: int$-, expected: int$-, required: val?^ | miss

Type#102 [unused] str$+
val?            %40.11 = Extract2_1D        wed   %40.4, %40.10, elided   <str$+>
dependent slot

Type#103 [used] vec-
val?^ | miss    %42.0 = LdVar              eR    fdefs, e1.2
void                    Assume             D     %42.1, %40.13 (Typecheck@0x560a586bffc0[Type#103])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] int$-
optimized away (dependency)

Type#106 [unused] cls
val?            %42.7 = Extract2_1D        wed   %42.4, %40.10, elided   <cls>
dependent slot

Type#107 [unused] cls
optimized away (dependency)

Type#108 [unused] cls
optimized away (dependency)

Type#109 [used] lgl$-
val?            %45.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%45.3, "genericFunction") e1.2   <lgl$->
void                    Assume             D     %45.5, %45.6 (Typecheck@0x560a586bffc0[Type#109])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#110 [unused] cls
val?            %48.4 = Force!<value>      !v    %48.3, e1.2   <cls>
dependent slot

Type#111 [unused] env-
val?            %48.6 = StaticCall         !v    environment[0x560a5e0f98f0](%48.5) e1.2   <env->
dependent slot

Type#112 [unused] env-
optimized away (dependency)

Type#113 [unused] $#-
optimized away (dependency)

Type#114 [used] int$-
val?            %48.11 = Call               !v    %48.8(%48.9, %48.10) e1.2   <int$->
void                    Assume             D     %48.13, %48.14 (Typecheck@0x560a586bffc0[Type#114])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

Type#117 [unused] $#-
optimized away (dependency)

Type#118 [unused] int$-
optimized away (dependency)

Type#119 [used] real-
val?^ | miss    %53.0 = LdVar              eR    sigs !upd, e1.2
void                    Assume             D     %53.1, %50.3 (Typecheck@0x560a586bffc0[Type#119])
exact match
checkFor: real-, static: val?^ | miss, feedback: real-, expected: real-, required: val?^ | miss

Type#120 [used] int$-
val?^ | miss    %53.4 = LdVar              eR    i, e1.2
void                    Assume             D     %53.5, %50.3 (Typecheck@0x560a586bffc0[Type#120])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#121 [unused] $#-
optimized away (dependency)

Type#122 [unused] $#-
optimized away (dependency)

Type#123 [unused] $#-
optimized away (dependency)

Type#124 [unused] $#-
optimized away (dependency)

Type#125 [unused] $#-
optimized away (dependency)

Type#126 [unused] $#-
optimized away (dependency)

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] $#-
optimized away (dependency)

Type#129 [unused] $#-
optimized away (dependency)

Type#130 [used] vec-
val?^ | miss    %59.0 = LdVar              eR    funs, e1.2
void                    Assume             D     %59.1, %57.2 (Typecheck@0x560a586bffc0[Type#130])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#131 [unused] $#-
optimized away (dependency)

Type#132 [used] int$-
val             %59.7 = ChkMissing         e     %57.0
void                    Assume             D     %59.8, %57.2 (Typecheck@0x560a586bffc0[Type#132])
exact match
checkFor: int$-, static: val, feedback: int$-, expected: int$-, required: val?^ | miss

Type#133 [unused] str$-
val?            %59.11 = Extract2_1D        wed   %59.4, %59.10, elided   <str$->
other unused reason

Type#134 [used] vec-
val?^ | miss    %61.0 = LdVar              eR    fdefs, e1.2
void                    Assume             D     %61.1, %59.13 (Typecheck@0x560a586bffc0[Type#134])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#135 [unused] $#-
optimized away (dependency)

Type#136 [used] int$-
val             %61.7 = ChkMissing         e     %57.0
void                    Assume             D     %61.8, %59.13 (Typecheck@0x560a586bffc0[Type#136])
exact match
checkFor: int$-, static: val, feedback: int$-, expected: int$-, required: val?^ | miss

Type#137 [unused] cls
val?            %61.11 = Extract2_1D        wed   %61.4, %61.10, elided   <cls>
dependent slot

Type#138 [unused] cls
optimized away (dependency)

Type#139 [unused] cls
optimized away (dependency)

Type#140 [used] lgl$-
val?            %64.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%64.3, "genericFunction") e1.2   <lgl$->
void                    Assume             D     %64.5, %64.6 (Typecheck@0x560a586bffc0[Type#140])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#141 [unused] cls
val?            %67.4 = Force!<value>      !v    %67.3, e1.2   <cls>
dependent slot

Type#142 [unused] env-
val?            %67.6 = StaticCall         !v    environment[0x560a5e0f98f0](%67.5) e1.2   <env->
dependent slot

Type#143 [unused] env-
optimized away (dependency)

Type#144 [unused] $#-
optimized away (dependency)

Type#145 [used] real$-
val?            %67.11 = Call               !v    %67.8(%67.9, %67.10) e1.2   <real$->
void                    Assume             D     %67.13, %67.14 (Typecheck@0x560a586bffc0[Type#145])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?^ | miss

Type#146 [unused] $#-
optimized away (dependency)

Type#147 [unused] $#-
optimized away (dependency)

Type#148 [unused] $#-
optimized away (dependency)

Type#149 [unused] real$-
optimized away (dependency)

Type#150 [used] real-
val?^ | miss    %72.0 = LdVar              eR    sigs !upd, e1.2
void                    Assume             D     %72.1, %69.3 (Typecheck@0x560a586bffc0[Type#150])
exact match
checkFor: real-, static: val?^ | miss, feedback: real-, expected: real-, required: val?^ | miss

Type#151 [used] int$-
val?^ | miss    %72.4 = LdVar              eR    i, e1.2
void                    Assume             D     %72.5, %69.3 (Typecheck@0x560a586bffc0[Type#151])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#152 [unused] $#-
optimized away (dependency)

Type#153 [unused] $#-
optimized away (dependency)

Type#154 [unused] $#-
optimized away (dependency)

Type#155 [unused] $#-
optimized away (dependency)

Type#156 [unused] $#-
optimized away (dependency)

Type#157 [unused] $#-
optimized away (dependency)

Type#158 [unused] $#-
optimized away (dependency)

Type#159 [unused] $#-
optimized away (dependency)

Type#160 [unused] $#-
optimized away (dependency)

Type#161 [unused] $#-
optimized away (dependency)

Type#162 [used] real-
val?^ | miss    %76.3 = LdVar              eR    sigs, e1.2
void                    Assume             D     %76.4, %54.2 (Typecheck@0x560a586bffc0[Type#162])
exact match
checkFor: real-, static: val?^ | miss, feedback: real-, expected: real-, required: val?^ | miss

Type#163 [unused] real$-
real$-          %76.7 = CallSafeBuiltin    wed   max(%76.6)    <real$->
dependent slot

Type#164 [unused] $#-
optimized away (dependency)

Type#165 [unused] $#-
optimized away (dependency)

Type#166 [unused] $#-
optimized away (dependency)

Type#167 [unused] $#-
optimized away (dependency)

Type#168 [unused] $#-
optimized away (dependency)

Type#169 [unused] real-
optimized away (dependency)

Type#170 [unused] real$-
optimized away (dependency)

Type#171 [unused] lgl-
lgl-            %78.3 = Lt                 wed   %76.6, %76.7, elided   <lgl->
dependent slot

Type#172 [unused] real-
optimized away (dependency)

Type#173 [unused] lgl-
lgl-            %78.4 = Gt                 wed   %76.6, 0, elided   <lgl->
dependent slot

Type#174 [unused] lgl-
val+            %78.5 = CallSafeBuiltin    wed   &(%78.3, %78.4)    <lgl->
dependent slot

Type#175 [unused] $#-
optimized away (dependency)

Type#176 [unused] lgl-
optimized away (dependency)

Type#177 [used] lgl$-
val?            %80.3 = CallBuiltin        !v    any(%78.5) e1.2   <lgl$->
void                    Assume             D     %80.4, %80.5 (Typecheck@0x560a586bffc0[Type#177])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#178 [unused] $#-
optimized away (dependency)

Type#179 [unused] $#-
optimized away (dependency)

Type#180 [unused] $#-
optimized away (dependency)

Type#181 [unused] $#-
optimized away (dependency)

Type#182 [unused] $#-
optimized away (dependency)

Type#183 [unused] $#-
optimized away (dependency)

Type#184 [unused] $#-
optimized away (dependency)

Type#185 [unused] $#-
optimized away (dependency)

Type#186 [unused] $#-
optimized away (dependency)

Type#187 [unused] $#-
optimized away (dependency)

Type#188 [unused] $#-
optimized away (dependency)

Type#189 [unused] $#-
optimized away (dependency)

Type#190 [unused] $#-
optimized away (dependency)

Type#191 [used] vec-
val?^ | miss    %86.0 = LdVar              eR    funs, e1.2
void                    Assume             D     %86.1, %84.0 (Typecheck@0x560a586bffc0[Type#191])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

----------------------
Inlinee: Recall [0x560a5a3adf30]
referenced: 2
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (lgl|vec)- (polluted)
val?            %100.9 = Call               !     <spec .Internal>(%100.8) e100.7   <(lgl|vec)->
other unused reason

======================= ClosureVersion: getGroupMembers (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj1,!Obj2) =======================
referenced: 38
referenced non-empty: 25
read non-empty: 18
used: 3
present non-empty: 7

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 22
optimized away non-empty: 15
dependent: 20
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

----------------------
getGroupMembers [0x560a5a44b620]
referenced: 30
referenced non-empty: 17
read non-empty: 17
used: 3
present non-empty: 7

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 7
dependent: 12
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
optimized away (dependency)

Type#1 [unused] cls
val?            %2.4  = StaticCall         !v    getGeneric[0x560a5de9c680](%2.3) e1.3   <cls>
dependent slot

Type#2 [unused] cls
optimized away (dependency)

Type#3 [unused] cls
optimized away (dependency)

Type#4 [used] lgl$-
val?            %5.4  = Call               !     function(object, class2) <(rir::DispatchTable*|...(%5.3, "groupGenericFunction") e1.3   <lgl$->
void                    Assume             D     %5.5, %5.6 (Typecheck@0x560a59e504c0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] vec-
val?            %8.3  = Call               !v    %8.0(%8.1, %8.2) e1.3   <vec->
dependent slot

Type#8 [unused] lgl$-
val?            %8.6  = Force!<lazy>       !v    %8.5, e1.3   <lgl$->
dependent slot

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] str$-
val?            %18.3 = Call               !v    %18.0(%18.1, %18.2) e1.3   <str$->
dependent slot

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [used] lgl$-
val?            %20.8 = PopContext         C     %20.7, %20.4   <lgl$->
void                    Assume             D     %20.9, %20.10 (Typecheck@0x560a59e504c0[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] vec-
optimized away (dependency)

Type#19 [unused] env-
optimized away

Type#20 [unused] vec-
val?            %26.5 = StaticCall         !v    .recMembers[0x560a5e485d40](%26.3, %26.4) from %1.4 e1.3   <vec->
dependent slot

Type#21 [unused] lgl$-
val?            %10.2 = Force!<lazy>       !     %10.0, e1.3   <lgl$->
dependent slot

Type#22 [used] vec-
val?^ | miss    %13.0 = LdVar              eR    members, e1.3
void                    Assume             D     %13.1, %10.4 (Typecheck@0x560a59e504c0[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#23 [unused] vec-
optimized away (dependency)

Type#24 [unused] str-
val?            %17.6 = StaticCall         !     sapply[0x560a5e5778f0](%17.3, %17.5) { 0 1 } e1.3   <str->
other unused reason

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 8
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away (dependency)

Type#1 [unused] val? (polluted)
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: cacheGenericsMetaData (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,NonRefl5,!Obj0,!Obj2,!Obj3,!Obj5) ***********************
======================= ClosureVersion: .getGeneric (CorrOrd,!TMany,Argmatch;Eager1,NonRefl1) =======================
referenced: 50
referenced non-empty: 31
read non-empty: 31
used: 5
present non-empty: 17

Used
exact match: 3
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 9
dependent: 15
other reasons unused non-empty: 11

Polluted
polluted: 8
used polluted: 1

----------------------
.getGeneric [0x560a553ad2f0]
referenced: 41
referenced non-empty: 23
read non-empty: 23
used: 4
present non-empty: 15

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 4
dependent: 15
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$+
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] cls
val?            %57.9 = PopContext         C     %57.8, %55.6   <cls>
other unused reason

Type#5 [unused] (nil|cls) (polluted)
val?            %9.0  = Phi                      nil:BB8, %57.9:BB57   <(nil|cls)>
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %14.4 = Force!<lazy>       !v    %14.3, e1.5   <str$->
dependent slot

Type#8 [unused] lgl$-
lgl$#-          %14.5 = CallSafeBuiltin    wed   is.character(%14.4)    <lgl$->
dependent slot

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %52.3 = PopContext         C     %52.2, %50.4   <lgl$->
void                    Assume             D     %52.4, %52.5 (Typecheck@0x560a553a6140[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$-
val?            %22.4 = Force!<wrapped>    !v    %22.3, e1.5   <str$->
dependent slot

Type#13 [unused] lgl$-
lgl$#-          %22.5 = CallSafeBuiltin    wed   is.character(%22.4)    <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] str$-
val?            %46.4 = Force!<wrapped>    !v    %46.3, e1.5   <str$->
dependent slot

Type#16 [used] lgl$-
val?            %46.5 = CallBuiltin        !v    nzchar(%46.4) e1.5   <lgl$->
void                    Assume             D     %46.6, %46.7 (Typecheck@0x560a553a6140[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] vec
val?            %30.4 = Force!<value>      !v    %30.3, e1.5   <vec>
other unused reason

Type#24 [unused] str$-
val?            %30.6 = Force!<wrapped>    !v    %30.5, e1.5   <str$->
dependent slot

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] env-
val?            %32.4 = Force!<lazy>       !v    %32.3, e1.5   <env->
dependent slot

Type#27 [unused] env-
val?            %32.5 = CallBuiltin        !v    as.environment(%32.4) e1.5   <env->
dependent slot

Type#28 [unused] str$-
val?            %32.7 = Force!<lazy>       !v    %32.6, e1.5   <str$->
dependent slot

Type#29 [unused] (nil|cls) (polluted)
val?            %32.8 = CallBuiltin        !v    .Call(%30.4, %30.6, false, %32.5, %32.7) e1.5   <(nil|cls)>
dependent slot

Type#30 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#31 [used] env-
val?^ | miss    %35.0 = LdVar              eR    .GlobalEnv, e1.5
void                    Assume             D     %35.1, %32.11 (Typecheck@0x560a553a6140[Type#31])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [used] str$-
val?            %35.8 = Force!<wrapped>    !v    %35.7, e1.5   <str$->
void                    Assume             D     %35.9, %35.10 (Typecheck@0x560a553a6140[Type#33])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#34 [unused] nil-
val?            %37.2 = Extract2_1D        wed   %35.4, %37.1, elided   <nil->
other unused reason

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] (nil|cls) (polluted)
val?            %13.2 = Force!<value>      !     %13.0, e1.5   <(nil|cls)>
dependent slot

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away

Type#1 [unused] (nil|str)- (polluted)
optimized away

Type#2 [used] int- (polluted)
val?            %50.9 = StaticCall         !v    match[0x560a5e6954c0](%50.7, %50.8, 0L) { 0 1 2n } e50.6   <int->
void                    Assume             D     %50.10, %50.11 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %52.2 = Gt                 wed   %52.1, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: .getGenericFromCache [0x560a5a356500]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away

Type#3 [unused] env-
optimized away

Type#4 [unused] cls
val?            %57.8 = StaticCall         !v    .getGenericFromCacheTable[0x560a5e7b24e0](%57.4, %57.5, %57.6, %57.7) e57.3   <cls>
other unused reason

======================= ClosureVersion: genericForBasic (CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj2) =======================
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
genericForBasic [0x560a5685bec0]
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] vec+
val?            %3.1  = Force!<wrapped>    !v    %3.0, e1.4   <vec+>
void                    Assume             D     %7.0, %5.4 (Typecheck@0x560a55ff3030[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str$-
val?            %5.2  = Force!<lazy>       !v    %5.1, e1.4   <str$->
void                    Assume             D     %5.3, %5.4 (Typecheck@0x560a55ff3030[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#5 [unused] cls
val?            %7.5  = Extract2_1D        wed   %7.2, %7.4, elided   <cls>
dependent slot

Type#6 [unused] lgl$-
val?            %7.8  = Force!<value>      !v    %7.7, e1.4   <lgl$->
other unused reason

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] cls
val?            %11.2 = Force!<value>      !     %11.0, e1.4   <cls>
dependent slot

======================= ClosureVersion: getGeneric (CorrOrd,!TMany,Argmatch;Eager1,NonRefl1 miss: 1) =======================
referenced: 132
referenced non-empty: 51
read non-empty: 45
used: 11
present non-empty: 19

Used
exact match: 6
widened: 5
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 40
optimized away non-empty: 21
dependent: 36
other reasons unused non-empty: 4

Polluted
polluted: 5
used polluted: 0

----------------------
getGeneric [0x560a54ffa020]
referenced: 64
referenced non-empty: 28
read non-empty: 28
used: 7
present non-empty: 11

Used
exact match: 4
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 21
optimized away non-empty: 10
dependent: 19
other reasons unused non-empty: 2

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|cls) (polluted)
val?            %5.4  = Force!<lazy>       !v    %5.3, e1.4   <(str|cls)>
other unused reason

Type#2 [used] lgl$-
val?            %5.5  = CallBuiltin        !v    is.function(%5.4) e1.4   <lgl$->
void                    Assume             D     %5.6, %5.7 (Typecheck@0x560a574f80c0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] cls
optimized away (dependency)

Type#4 [used] lgl$-
val?            %79.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%79.3, "genericFunction") e1.4   <lgl$->
void                    Assume             D     %79.5, %79.6 (Typecheck@0x560a574f80c0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] cls
val?            %83.2 = Force!<wrapped>    !     %83.0, e1.4   <cls>
dependent slot

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] env-
optimized away (dependency)

Type#14 [unused] str$-
optimized away (dependency)

Type#15 [unused] (nil|cls) (polluted)
val?            %9.6  = StaticCall         !v    .getGeneric[0x560a5db74c30](%9.3, %9.4, %9.5) e1.4   <(nil|cls)>
dependent slot

Type#16 [unused] str$+
optimized away

Type#17 [unused] str$-
optimized away (dependency)

Type#18 [unused] cls
val?            %78.5 = StaticCall         !v    .getGeneric[0x560a5e159dc0](%78.3, missingArg, %78.4) e1.4   <cls>
dependent slot

Type#19 [unused] (nil|cls) (polluted)
val?            %10.0 = Phi                      %9.6:BB9, %78.5:BB78   <(nil|cls)>
dependent slot

Type#20 [used] env-
val?            %13.3 = CallBuiltin        !v    baseenv() e1.4   <env->
void                    Assume             D     %17.0, %15.4 (Typecheck@0x560a574f80c0[Type#20])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [used] str$-
val?            %15.2 = Force!<wrapped>    !v    %15.1, e1.4   <str$->
void                    Assume             D     %15.3, %15.4 (Typecheck@0x560a574f80c0[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#23 [unused] blt-
val?            %17.5 = Extract2_1D        wed   %17.2, %17.4, elided   <blt->
dependent slot

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [used] blt-
val?^ | miss    %48.3 = LdVar              eR    baseDef, e1.4
void                    Assume             D     %48.4, %18.1 (Typecheck@0x560a574f80c0[Type#25])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: blt-, expected: blt-, required: val?^ | miss

Type#26 [unused] lgl$-
lgl$#-          %48.8 = CallSafeBuiltin    wed   is.function(%48.7)    <lgl$->
dependent slot

Type#27 [unused] str$-
optimized away (dependency)

Type#28 [unused] cls
val?            %52.4 = StaticCall         !v    genericForBasic[0x560a5e3cfb40](%52.3, missingArg, false) { 0 2n } e1.4   <cls>
dependent slot

Type#29 [unused] cls
optimized away (dependency)

Type#30 [used] lgl$-
val?            %54.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%54.3, "genericFunction") e1.4   <lgl$->
void                    Assume             D     %54.5, %54.6 (Typecheck@0x560a574f80c0[Type#30])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#31 [unused] str$-
optimized away (dependency)

Type#32 [unused] cls
optimized away (dependency)

Type#33 [unused] cls
val?            %76.3 = PopContext         C     %76.2, %58.5   <cls>
dependent slot

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] cls
val?            %24.4 = Force!<value>      !v    %24.3, e1.4   <cls>
dependent slot

Type#36 [used] lgl$-
val?            %24.5 = CallBuiltin        !v    is.function(%24.4) e1.4   <lgl$->
void                    Assume             D     %24.6, %24.7 (Typecheck@0x560a574f80c0[Type#36])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] cls
val?            %47.2 = Force!<value>      !     %47.0, e1.4   <cls>
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %72.9 = Force!<lazy>       !vL   %72.7, e72.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %72.10 = Force!<lazy>       !vL   %72.6, e72.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: .cacheGenericTable [0x560a59442440]
referenced: 56
referenced non-empty: 11
read non-empty: 11
used: 4
present non-empty: 5

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 2
dependent: 7
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
val?            %60.12 = Force!<lazy>       !vL   %60.9, e60.11   <cls>
dependent slot

Type#1 [used] env-
val?            %60.14 = Force!<lazy>       !vL   %60.8, e60.11   <env->
void                    Assume             D     %64.0, %62.3 (Typecheck@0x560a594db2c0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] str$-
val?            %62.1 = Force!<lazy>       !vL   %60.10, e60.11   <str$->
void                    Assume             D     %62.2, %62.3 (Typecheck@0x560a594db2c0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#4 [unused] cls
val?            %64.5 = Extract2_1D        wed   %64.2, %64.4, elided   <cls>
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %66.3 = Call               !v    %66.0(%66.1, %66.2) e60.11   <str$->
dependent slot

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] cls
val?            %68.4 = Force!<value>      !v    %68.3, e60.11   <cls>
dependent slot

Type#10 [used] lgl$-
val?            %68.5 = CallBuiltin        !v    is.function(%68.4) e60.11   <lgl$->
void                    Assume             D     %68.6, %68.7 (Typecheck@0x560a594db2c0[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] cls
optimized away (dependency)

Type#12 [unused] cls
optimized away (dependency)

Type#13 [used] lgl$-
val?            %72.12 = PopContext         C     %72.11, %72.5   <lgl$->
void                    Assume             D     %72.13, %72.14 (Typecheck@0x560a594db2c0[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#14 [unused] cls
val?            %76.1 = Force!<value>      !v    %76.0, e60.11   <cls>
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: .cacheGeneric [0x560a54a9d440]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] cls
optimized away (dependency)

Type#2 [unused] env-
optimized away

Type#3 [unused] cls
val?            %76.2 = PopContext         C     %76.1, %60.7   <cls>
dependent slot

======================= ClosureVersion: isGroup (CorrOrd,!TMany,Argmatch;Eager1,NonRefl1) =======================
referenced: 7
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
isGroup [0x560a5927e870]
referenced: 7
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] cls
optimized away

Type#6 [used] lgl$-
val?            %7.4  = Call               !     function(object, class2) <(rir::DispatchTable*|...(%7.3, "groupGenericFunction") e1.5   <lgl$->
void                    Assume             D     %7.5, %7.6 (Typecheck@0x560a5927e770[Type#6])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

======================= ClosureVersion: cacheGenericsMetaData (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,NonRefl5,!Obj0,!Obj2,!Obj3,!Obj5) =======================
referenced: 107
referenced non-empty: 53
read non-empty: 53
used: 7
present non-empty: 16

Used
exact match: 6
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 46
optimized away non-empty: 30
dependent: 34
other reasons unused non-empty: 12

Polluted
polluted: 7
used polluted: 1

----------------------
cacheGenericsMetaData [0x560a5523bcf0]
referenced: 52
referenced non-empty: 35
read non-empty: 35
used: 5
present non-empty: 5

Used
exact match: 5
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 30
optimized away non-empty: 25
dependent: 29
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] cls
optimized away (dependency)

Type#3 [used] lgl$-
val?            %2.5  = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%2.4, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %2.6, %2.7 (Typecheck@0x560a5a7d7b70[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] str$-
val?            %69.3 = Call               !v    %69.0(%69.1, %69.2) e2.3   <str$->
dependent slot

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] (nil|blt)- (polluted)
val?            %9.9  = Call               !v    %9.6(%9.7, %9.8) e2.3   <(nil|blt)->
dependent slot

Type#13 [unused] (nil|blt)- (polluted)
optimized away (dependency)

Type#14 [unused] cls
optimized away (dependency)

Type#15 [used] lgl$-
val?            %29.1 = PopContext         C     %29.0, %17.4   <lgl$->
void                    Assume             D     %29.2, %29.3 (Typecheck@0x560a5a7d7b70[Type#15])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] cls
optimized away (dependency)

Type#18 [used] lgl$-
val?            %32.5 = StaticCall         !v    isGroup[0x560a5d6045f0](%32.3, missingArg, %32.4) { 0 2n } e2.3   <lgl$->
void                    Assume             D     %32.6, %32.7 (Typecheck@0x560a5a7d7b70[Type#18])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] vec-
val?            %38.3 = Call               !v    %38.0(%38.1, %38.2) e2.3   <vec->
dependent slot

Type#22 [unused] vec-
optimized away (dependency)

Type#23 [unused] str$-
optimized away (dependency)

Type#24 [unused] env-
optimized away (dependency)

Type#25 [unused] cls
val?            %42.5 = StaticCall         !v    getGeneric[0x560a5dfc6f50](%42.3, missingArg, %42.4) { 0 2n } e2.3   <cls>
dependent slot

Type#26 [unused] cls
optimized away (dependency)

Type#27 [used] lgl$-
val?            %44.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%44.3, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %44.5, %44.6 (Typecheck@0x560a5a7d7b70[Type#27])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#28 [unused] str$-
optimized away (dependency)

Type#29 [unused] cls
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] env-
optimized away (dependency)

Type#32 [unused] cls
optimized away (dependency)

Type#33 [unused] env-
optimized away (dependency)

Type#34 [unused] str$-
optimized away (dependency)

Type#35 [unused] env-
optimized away (dependency)

Type#36 [unused] cls
val?            %51.5 = StaticCall         !v    getGeneric[0x560a5dfc6f50](%51.3, missingArg, %51.4) { 0 2n } e2.3   <cls>
dependent slot

Type#37 [unused] cls
optimized away (dependency)

Type#38 [used] lgl$-
val?            %53.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%53.3, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %53.5, %53.6 (Typecheck@0x560a5a7d7b70[Type#38])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#39 [unused] str$-
optimized away (dependency)

Type#40 [unused] cls
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] env-
optimized away (dependency)

Type#43 [unused] cls
optimized away (dependency)

Type#44 [unused] env-
optimized away (dependency)

Type#45 [unused] str$-
optimized away (dependency)

Type#46 [unused] blt-
optimized away

Type#47 [unused] cls
optimized away (dependency)

Type#48 [unused] env-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: is.primitive [0x560a54179310]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|blt)- (polluted)
optimized away

Type#1 [unused] str$-
str$-           %19.8 = CallSafeBuiltin    wed   typeof(%19.7)    <str$->
other unused reason

----------------------
Inlinee: dispatchIsInternal [0x560a54161fa0]
referenced: 8
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 1
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] (nil|blt)- (polluted)
val?            %19.7 = Call               !v    %19.4(%19.5, %19.6) e19.3   <(nil|blt)->
other unused reason

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] nil-
optimized away

Type#7 [used] lgl$-
val?            %26.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%26.3, "internalDispatchMethod") e19.3   <lgl$->
void                    Assume             D     %26.5, %26.6 (Typecheck@0x560a54632920[Type#7])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: Recall [0x560a5a3adf30]
referenced: 2
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (lgl|vec)- (polluted)
val?            %58.12 = Call               !v    <spec .Internal>(%58.11) e58.10   <(lgl|vec)->
other unused reason

----------------------
Inlinee: setPrimitiveMethods [0x560a54311ba0]
referenced: 16
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 7

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 0
dependent: 3
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] vec
val?            %64.3 = Force!<value>      !v    %64.1, e64.2   <vec>
other unused reason

Type#10 [unused] str$-
val?            %64.5 = Force!<lazy>       !v    %64.4, e64.2   <str$->
dependent slot

Type#11 [unused] blt-
val?            %64.7 = Force!<lazy>       !v    %64.6, e64.2   <blt->
other unused reason

Type#12 [unused] str$-
val?            %64.9 = Force!<value>      !v    %64.8, e64.2   <str$->
dependent slot

Type#13 [unused] cls
val?            %64.11 = Force!<lazy>       !v    %64.10, e64.2   <cls>
other unused reason

Type#14 [unused] env-
val?            %64.13 = Force!<lazy>       !v    %64.12, e64.2   <env->
other unused reason

Type#15 [unused] str$-
val?            %64.14 = CallBuiltin        !v    .Call(%64.3, %64.5, %64.7, %64.9, %64.11, %64.13) e64.2   <str$->
dependent slot

----------------------
Inlinee: finalDefaultMethod [0x560a55a5e230]
referenced: 27
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 1
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] (nil|blt)- (polluted)
val?            %9.9  = Call               !v    %9.6(%9.7, %9.8) e2.3   <(nil|blt)->
void                    Assume             D     %9.12, %9.13 (Typecheck@0x560a54337ae0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (nil|blt)-, expected: (nil|blt)-, required: val?+

Type#2 [unused] lgl$-
lgl$#-          %11.2 = CallSafeBuiltin    wed   is.function(%11.1)    <lgl$->
other unused reason

Type#3 [unused] nil-
optimized away

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] (nil|blt)- (polluted)
optimized away (dependency)

*********************** Compilation session for: finalDefaultMethod (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: finalDefaultMethod (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 27
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 1
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 1

----------------------
finalDefaultMethod [0x560a55a5e230]
referenced: 27
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 1
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] (nil|blt)- (polluted)
val?            %2.4  = Force!<lazy>       !vL   %1.0, e2.3   <(nil|blt)->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a54337ae0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (nil|blt)-, expected: (nil|blt)-, required: val?^ | miss

Type#2 [unused] lgl$-
lgl$#-          %4.4  = CallSafeBuiltin    wed   is.function(%4.1)    <lgl$->
other unused reason

Type#3 [unused] nil-
optimized away

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] (nil|blt)- (polluted)
optimized away (dependency)

*********************** Compilation session for: dispatchIsInternal (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) ***********************
======================= ClosureVersion: dispatchIsInternal (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) =======================
referenced: 11
referenced non-empty: 7
read non-empty: 7
used: 1
present non-empty: 2

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 4
dependent: 1
other reasons unused non-empty: 5

Polluted
polluted: 3
used polluted: 0

----------------------
dispatchIsInternal [0x560a54161fa0]
referenced: 8
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 1
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] (nil|blt)- (polluted)
val?            %2.7  = Call               !v    %2.4(%2.5, %2.6) e2.3   <(nil|blt)->
other unused reason

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] nil-
optimized away

Type#7 [used] lgl$-
val?            %9.4  = Call               !     function(object, class2) <(rir::DispatchTable*|...(%9.3, "internalDispatchMethod") e2.3   <lgl$->
void                    Assume             D     %9.5, %9.6 (Typecheck@0x560a54632920[Type#7])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val?- (polluted)
optimized away

----------------------
Inlinee: is.primitive [0x560a54179310]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|blt)- (polluted)
optimized away

Type#1 [unused] str$-
str$-           %2.8  = CallSafeBuiltin    wed   typeof(%2.7)    <str$->
other unused reason

*********************** Compilation session for: .cacheGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0) ***********************
======================= ClosureVersion: .cacheGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0) =======================
referenced: 68
referenced non-empty: 23
read non-empty: 17
used: 4
present non-empty: 8

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 11
dependent: 17
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

----------------------
.cacheGeneric [0x560a54a9d440]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] cls
optimized away (dependency)

Type#2 [unused] env-
optimized away

Type#3 [unused] cls
val?            %18.3 = PopContext         C     %18.2, %2.7   <cls>
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %14.9 = Force!<lazy>       !vL   %14.7, e14.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %14.10 = Force!<lazy>       !vL   %14.6, e14.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: .cacheGenericTable [0x560a59442440]
referenced: 56
referenced non-empty: 11
read non-empty: 11
used: 4
present non-empty: 5

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 2
dependent: 7
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
val?            %2.12 = Force!<lazy>       !vr   %2.9,    <cls>
dependent slot

Type#1 [used] env-
val?            %2.14 = Force!<lazy>       !vL   %2.8, e2.11   <env->
void                    Assume             D     %6.0, %4.3 (Typecheck@0x560a594db2c0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] str$-
val?            %4.1  = Force!<lazy>       !vrL  %2.10, e2.11   <str$->
void                    Assume             D     %4.2, %4.3 (Typecheck@0x560a594db2c0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#4 [unused] cls
val?            %6.5  = Extract2_1D        wed   %6.2, %6.4, elided   <cls>
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %8.3  = Call               !v    %8.0(%8.1, %8.2) e2.11   <str$->
dependent slot

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] cls
val?            %10.4 = Force!<value>      !v    %10.3, e2.11   <cls>
dependent slot

Type#10 [used] lgl$-
val?            %10.5 = CallBuiltin        !v    is.function(%10.4) e2.11   <lgl$->
void                    Assume             D     %10.6, %10.7 (Typecheck@0x560a594db2c0[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] cls
optimized away (dependency)

Type#12 [unused] cls
optimized away (dependency)

Type#13 [used] lgl$-
val?            %14.12 = PopContext         C     %14.11, %14.5   <lgl$->
void                    Assume             D     %14.13, %14.14 (Typecheck@0x560a594db2c0[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#14 [unused] cls
val?            %18.2 = Force!<value>      !     %18.0, e2.11   <cls>
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: setPrimitiveMethods (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2) ***********************
======================= ClosureVersion: setPrimitiveMethods (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2) =======================
referenced: 16
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 7

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 0
dependent: 3
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

----------------------
setPrimitiveMethods [0x560a54311ba0]
referenced: 16
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 7

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 0
dependent: 3
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] vec
val?            %2.5  = Force!<value>      !v    %2.3, e2.4   <vec>
other unused reason

Type#10 [unused] str$-
val?            %2.7  = Force!<lazy>       !v    %2.6, e2.4   <str$->
dependent slot

Type#11 [unused] blt-
val?            %2.9  = Force!<lazy>       !v    %2.8, e2.4   <blt->
other unused reason

Type#12 [unused] str$-
val?            %2.11 = Force!<value>      !v    %2.10, e2.4   <str$->
dependent slot

Type#13 [unused] cls
val?            %2.13 = Force!<lazy>       !v    %2.12, e2.4   <cls>
other unused reason

Type#14 [unused] env-
val?            %2.15 = Force!<lazy>       !v    %2.14, e2.4   <env->
other unused reason

Type#15 [unused] str$-
val?            %2.16 = CallBuiltin        !     .Call(%2.5, %2.7, %2.9, %2.11, %2.13, %2.15) e2.4   <str$->
dependent slot

*********************** Compilation session for: .getMethodsTable (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 3) ***********************
======================= ClosureVersion: .getMethodsTable (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 3) =======================
referenced: 14
referenced non-empty: 10
read non-empty: 9
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 8
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
.getMethodsTable [0x560a58690090]
referenced: 14
referenced non-empty: 10
read non-empty: 9
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 8
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
optimized away

Type#1 [unused] env-
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] str$-
optimized away (dependency)

Type#5 [unused] env-
optimized away (dependency)

Type#6 [used] lgl$-
val?            %2.6  = StaticCall         !     exists[0x560a5e2b20f0](%2.4, missingArg, %2.5, missingArg, missingArg, false) { 0 2n 5n } e1.1   <lgl$->
void                    Assume             D     %2.7, %2.8 (Typecheck@0x560a5868ff80[Type#6])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [unused] env-
optimized away (dependency)

Type#13 [unused] env-
val?            %5.5  = StaticCall         !     get[0x560a5e2ec450](%5.3, missingArg, %5.4) { 0 2n } e1.1   <env->
dependent slot

*********************** Compilation session for: Sys.getenv (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 1) ***********************
======================= ClosureVersion: Sys.getenv (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 1) =======================
referenced: 59
referenced non-empty: 19
read non-empty: 18
used: 6
present non-empty: 7

Used
exact match: 4
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 13
optimized away non-empty: 6
dependent: 11
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
Sys.getenv [0x560a56393c00]
referenced: 48
referenced non-empty: 11
read non-empty: 11
used: 3
present non-empty: 6

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 2
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val+            %1.2  = Force<wrapped>           %1.1,    <str$->
dependent slot

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] str$-
val+            %3.0  = CallSafeBuiltin    wed   as.character(%1.2)    <str$->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] str$-
val+            %1.5  = Force!<lazy>             %1.0,    <str$->
dependent slot

Type#6 [unused] str$-
val+            %3.1  = CallSafeBuiltin    wed   as.character(%1.5)    <str$->
dependent slot

Type#7 [unused] lgl$-
val?            %4.4  = Force!<lazy>       !v    %4.3, e3.2   <lgl$->
dependent slot

Type#8 [unused] lgl$-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [used] str$-
val?            %15.4 = Force!<wrapped>    !v    %15.3, e3.2   <str$->
void                    Assume             D     %15.5, %15.6 (Typecheck@0x560a562d4e50[Type#10])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#11 [used] int$-
(int|real)$-    %17.2 = CallSafeBuiltin    wed   length(%17.1)    <int$->
void                    Assume             D     %17.3, %17.4 (Typecheck@0x560a562d4e50[Type#11])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#12 [unused] lgl$-
lgl$-           %19.2 = Gt                 d     %19.1, 1L, elided   <lgl$->
dependent slot

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [used] str$-
val?^ | miss    %25.0 = LdVar              eR    v, e3.2
void                    Assume             D     %25.1, %22.1 (Typecheck@0x560a562d4e50[Type#15])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: isTRUE [0x560a55e9e1e0]
referenced: 11
referenced non-empty: 8
read non-empty: 7
used: 3
present non-empty: 1

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 4
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (nil|lgl)- (polluted)
optimized away

Type#2 [used] lgl$-
val+            %4.5  = CallSafeBuiltin    wed   is.logical(%4.4)    <lgl$->
void                    Assume             D     %4.6, %4.7 (Typecheck@0x560a55e9bc50[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %4.4  = Force!<lazy>       !v    %4.3, e3.2   <lgl$->
void                    Assume             D     %7.0, %4.7 (Typecheck@0x560a55e9bc50[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %4.4  = Force!<lazy>       !v    %4.3, e3.2   <lgl$->
void                    Assume             D     %9.0, %4.7 (Typecheck@0x560a55e9bc50[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %9.3  = CallSafeBuiltin    wed   is.na(%9.2)    <lgl$->
dependent slot

Type#10 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: find.package (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2 miss: 1) ***********************
======================= ClosureVersion: find.package (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2 miss: 1) =======================
referenced: 310
referenced non-empty: 87
read non-empty: 87
used: 32
present non-empty: 24

Used
exact match: 17
widened: 15
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 55
optimized away non-empty: 31
dependent: 43
other reasons unused non-empty: 12

Polluted
polluted: 17
used polluted: 5

----------------------
find.package [0x560a55e46870]
referenced: 276
referenced non-empty: 75
read non-empty: 75
used: 30
present non-empty: 19

Used
exact match: 16
widened: 14
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 45
optimized away non-empty: 26
dependent: 41
other reasons unused non-empty: 4

Polluted
polluted: 12
used polluted: 4

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$-
val+            %1.7  = Force!<lazy>       !vr   %1.2,    <str$->
dependent slot

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [used] str$-
val?            %10.4 = Force!<wrapped>    !v    %10.3, e1.3   <str$->
void                    Assume             D     %10.5, %10.6 (Typecheck@0x560a548ad120[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#7 [used] int$-
(int|real)$-    %12.2 = CallSafeBuiltin    wed   length(%12.1)    <int$->
void                    Assume             D     %12.3, %12.4 (Typecheck@0x560a548ad120[Type#7])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#8 [unused] lgl$-
lgl$-           %14.2 = Eq                 d     %14.1, 1L, elided   <lgl$->
dependent slot

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [unused] str-
optimized away (dependency)

Type#11 [used] lgl$-
val?            %17.3 = PopContext         C     %17.2, %15.5   <lgl$->
void                    Assume             D     %17.4, %17.5 (Typecheck@0x560a548ad120[Type#11])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] str$-
optimized away (dependency)

Type#14 [unused] str$-
val?            %145.18 = PopContext         C     %145.17, %145.6   <str$->
dependent slot

Type#15 [unused] str$-
val?            %23.1 = Force!<wrapped>    !v    %23.0, e1.3   <str$->
dependent slot

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [used] str$-
val?            %26.4 = Force!<wrapped>    !v    %26.3, e1.3   <str$->
void                    Assume             D     %26.5, %26.6 (Typecheck@0x560a548ad120[Type#18])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#19 [used] int$-
(int|real)$-    %28.2 = CallSafeBuiltin    wed   length(%28.1)    <int$->
void                    Assume             D     %28.3, %28.4 (Typecheck@0x560a548ad120[Type#19])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] (nil|str)- (polluted)
val?            %31.1 = Force!<lazy>       !v    %31.0, e1.3   <(nil|str)->
other unused reason

Type#22 [unused] str$-
optimized away (dependency)

Type#23 [unused] str-
str-            %37.3 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
dependent slot

Type#24 [unused] str-
str-            %37.5 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
dependent slot

Type#25 [unused] str$-
val?            %37.8 = Force!<wrapped>    !v    %37.7, e1.3   <str$->
dependent slot

Type#26 [unused] str- (polluted)
optimized away (dependency)

Type#27 [unused] str$-
optimized away (dependency)

Type#28 [used] str- (polluted)
val?            %41.18 = PopContext         C     %41.17, %41.6   <str->
void                    Assume             D     %45.0, %43.15 (Typecheck@0x560a548ad120[Type#28])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#29 [unused] str- (polluted)
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] str- (polluted)
optimized away (dependency)

Type#34 [unused] str- (polluted)
optimized away (dependency)

Type#35 [used] lgl- (polluted)
val?            %43.13 = PopContext         C     %43.12, %43.7   <lgl->
void                    Assume             D     %43.14, %43.15 (Typecheck@0x560a548ad120[Type#35])
exact match
checkFor: lgl-, static: val?, feedback: lgl-, expected: lgl-, required: val?+

Type#36 [unused] str- (polluted)
val?            %45.5 = Extract1_1D        wed   %45.2, %45.4, elided   <str->
dependent slot

Type#37 [used] lgl$-
val?^ | miss    %47.0 = LdVar              eR    use_loaded, e1.3
void                    Assume             D     %47.1, %45.7 (Typecheck@0x560a548ad120[Type#37])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#38 [unused] str$-
optimized away (dependency)

Type#39 [used] lgl$-
val?            %48.9 = PopContext         C     %48.8, %48.4   <lgl$->
void                    Assume             D     %48.10, %48.11 (Typecheck@0x560a548ad120[Type#39])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [used] str- (polluted)
val?^ | miss    %54.3 = LdVar              eR    paths, e1.3
void                    Assume             D     %54.4, %51.1 (Typecheck@0x560a548ad120[Type#52])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#53 [used] int$-
(int|real)$-    %54.8 = CallSafeBuiltin    wed   length(%54.7)    <int$->
void                    Assume             D     %54.9, %54.10 (Typecheck@0x560a548ad120[Type#53])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#54 [unused] str- (polluted)
optimized away (dependency)

Type#55 [unused] str$-
optimized away (dependency)

Type#56 [unused] str$-
optimized away (dependency)

Type#57 [used] lgl$-
val?            %57.11 = PopContext         C     %57.10, %57.5   <lgl$->
void                    Assume             D     %57.12, %57.13 (Typecheck@0x560a548ad120[Type#57])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [used] str- (polluted)
val?^ | miss    %63.3 = LdVar              eR    paths, e1.3
void                    Assume             D     %63.4, %60.1 (Typecheck@0x560a548ad120[Type#64])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#65 [used] int$-
(int|real)$-    %63.8 = CallSafeBuiltin    wed   length(%63.7)    <int$->
void                    Assume             D     %63.9, %63.10 (Typecheck@0x560a548ad120[Type#65])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#66 [unused] str- (polluted)
optimized away (dependency)

Type#67 [unused] str$-
val?            %111.3 = StaticCall         !v    unique[0x560a5ed28450](%63.7) { 0 } e1.3   <str$->
dependent slot

Type#68 [unused] vec+
optimized away

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] str$-
val?            %111.8 = Call               !v    %111.5(%111.6, %111.7) e1.3   <str$->
dependent slot

Type#71 [unused] str$-
optimized away (dependency)

Type#72 [unused] vec$-
val?            %113.6 = StaticCall         !v    lapply[0x560a5ece7250](%113.3, %113.5) { 0 1 } e1.3   <vec$->
dependent slot

Type#73 [unused] vec$-
optimized away (dependency)

Type#74 [unused] str+
val?            %115.4 = StaticCall         !v    do.call[0x560a5eb410e0]("rbind", %115.3) e1.3   <str+>
dependent slot

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] $#-
optimized away (dependency)

Type#87 [unused] $#-
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] $#-
optimized away (dependency)

Type#90 [unused] $#-
optimized away (dependency)

Type#91 [unused] $#-
optimized away (dependency)

Type#92 [unused] $#-
optimized away (dependency)

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] str+
optimized away (dependency)

Type#97 [unused] lgl+
optimized away

Type#98 [unused] blt-
optimized away

Type#99 [used] lgl$-
val?            %117.8 = Call               !v    function(X, MARGIN, FUN, ..., simplify=TRUE) <|...(%117.6, 1L, %117.7) e1.3   <lgl$->
void                    Assume             D     %117.9, %117.10 (Typecheck@0x560a548ad120[Type#99])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#100 [used] str+
val?^ | miss    %119.2 = LdVar              eR    db, e1.3
void                    Assume             D     %119.3, %117.10 (Typecheck@0x560a548ad120[Type#100])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str+, expected: str+, required: val?^ | miss

Type#101 [used] str$+
val?            %119.9 = Extract1_2D        wed   %119.6, missingArg, "Package", elided   <str$+>
void                    Assume             D     %119.10, %119.11 (Typecheck@0x560a548ad120[Type#101])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?+

Type#102 [used] str$-
val?^ | miss    %121.0 = LdVar              eR    pkg, e1.3
void                    Assume             D     %121.1, %119.11 (Typecheck@0x560a548ad120[Type#102])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#103 [used] lgl$+
lgl             %121.7 = Eq                 wed   %121.6, %121.4, elided   <lgl$+>
void                    Assume             D     %121.8, %121.9 (Typecheck@0x560a548ad120[Type#103])
exact match
checkFor: lgl$+, static: lgl, feedback: lgl$+, expected: lgl$+, required: lgl+

Type#104 [unused] lgl$+
val+            %123.2 = CallSafeBuiltin    wed   &(%119.1, %123.1)    <lgl$+>
dependent slot

Type#105 [unused] str$-
optimized away (dependency)

Type#106 [unused] str+
optimized away (dependency)

Type#107 [unused] str$+
optimized away (dependency)

Type#108 [used] lgl$-
val?            %125.5 = StaticCall         !v    grepl[0x560a5e1fe660](%125.3, %125.4) e1.3   <lgl$->
void                    Assume             D     %125.6, %125.7 (Typecheck@0x560a548ad120[Type#108])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#109 [unused] lgl$+
val+            %127.2 = CallSafeBuiltin    wed   &(%123.2, %127.1)    <lgl$+>
dependent slot

Type#110 [used] str$-
val?^ | miss    %129.0 = LdVar              eR    paths, e1.3
void                    Assume             D     %129.1, %127.5 (Typecheck@0x560a548ad120[Type#110])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [used] lgl$+
val+            %127.2 = CallSafeBuiltin    wed   &(%123.2, %127.1)    <lgl$+>
void                    Assume             D     %127.4, %127.5 (Typecheck@0x560a548ad120[Type#112])
exact match
checkFor: lgl$+, static: val+, feedback: lgl$+, expected: lgl$+, required: val?^ | miss

Type#113 [unused] str$-
val?            %129.9 = Extract1_1D        wed   %129.4, %129.8, elided   <str$->
dependent slot

Type#114 [unused] $#-
optimized away (dependency)

Type#115 [used] str$-
val?^ | miss    %69.3 = LdVar              eR    paths, e1.3
void                    Assume             D     %69.4, %67.0 (Typecheck@0x560a548ad120[Type#115])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#116 [used] int$-
(int|real)$-    %69.8 = CallSafeBuiltin    wed   length(%69.7)    <int$->
void                    Assume             D     %69.9, %69.10 (Typecheck@0x560a548ad120[Type#116])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#117 [unused] lgl$-
lgl$-           %71.2 = Eq                 d     %71.1, 0L, elided   <lgl$->
dependent slot

Type#118 [unused] $#-
optimized away (dependency)

Type#119 [unused] $#-
optimized away (dependency)

Type#120 [unused] $#-
optimized away (dependency)

Type#121 [unused] $#-
optimized away (dependency)

Type#122 [unused] $#-
optimized away (dependency)

Type#123 [unused] $#-
optimized away (dependency)

Type#124 [unused] str$-
optimized away (dependency)

Type#125 [unused] int$-
optimized away (dependency)

Type#126 [unused] lgl$-
lgl$-           %72.0 = Gt                 d     %71.1, 1L, elided   <lgl$->
dependent slot

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] $#-
optimized away (dependency)

Type#129 [unused] $#-
optimized away (dependency)

Type#130 [unused] $#-
optimized away (dependency)

Type#131 [unused] $#-
optimized away (dependency)

Type#132 [unused] $#-
optimized away (dependency)

Type#133 [unused] $#-
optimized away (dependency)

Type#134 [unused] $#-
optimized away (dependency)

Type#135 [unused] $#-
optimized away (dependency)

Type#136 [unused] $#-
optimized away (dependency)

Type#137 [unused] $#-
optimized away (dependency)

Type#138 [used] str-
val?^ | miss    %76.3 = LdVar              eR    out, e1.3
void                    Assume             D     %76.4, %74.0 (Typecheck@0x560a548ad120[Type#138])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#139 [used] str$-
val?^ | miss    %76.8 = LdVar              eR    paths, e1.3
void                    Assume             D     %76.9, %74.0 (Typecheck@0x560a548ad120[Type#139])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#140 [unused] str$-
val+            %76.13 = CallSafeBuiltin    wed   c(%76.7, %76.12)    <str$->
dependent slot

Type#141 [unused] $#-
optimized away (dependency)

Type#142 [unused] $#-
optimized away (dependency)

Type#143 [unused] $#-
optimized away (dependency)

Type#144 [unused] $#-
optimized away (dependency)

Type#145 [unused] $#-
optimized away (dependency)

Type#146 [unused] $#-
optimized away (dependency)

Type#147 [unused] $#-
optimized away (dependency)

Type#148 [unused] $#-
optimized away (dependency)

Type#149 [unused] $#-
optimized away (dependency)

Type#150 [unused] $#-
optimized away (dependency)

Type#151 [unused] $#-
optimized away (dependency)

Type#152 [unused] $#-
optimized away (dependency)

Type#153 [unused] $#-
optimized away (dependency)

Type#154 [unused] $#-
optimized away (dependency)

Type#155 [unused] $#-
optimized away (dependency)

Type#156 [unused] $#-
optimized away (dependency)

Type#157 [unused] $#-
optimized away (dependency)

Type#158 [unused] $#-
optimized away (dependency)

Type#159 [unused] $#-
optimized away (dependency)

Type#160 [unused] $#-
optimized away (dependency)

Type#161 [unused] $#-
optimized away (dependency)

Type#162 [unused] $#-
optimized away (dependency)

Type#163 [unused] $#-
optimized away (dependency)

Type#164 [unused] $#-
optimized away (dependency)

Type#165 [unused] $#-
optimized away (dependency)

Type#166 [unused] $#-
optimized away (dependency)

Type#167 [unused] $#-
optimized away (dependency)

Type#168 [unused] $#-
optimized away (dependency)

Type#169 [unused] $#-
optimized away (dependency)

Type#170 [unused] $#-
optimized away (dependency)

Type#171 [unused] $#-
optimized away (dependency)

Type#172 [unused] $#-
optimized away (dependency)

Type#173 [unused] $#-
optimized away (dependency)

Type#174 [unused] $#-
optimized away (dependency)

Type#175 [unused] $#-
optimized away (dependency)

Type#176 [unused] $#-
optimized away (dependency)

Type#177 [unused] $#-
optimized away (dependency)

Type#178 [unused] $#-
optimized away (dependency)

Type#179 [unused] $#-
optimized away (dependency)

Type#180 [unused] $#-
optimized away (dependency)

Type#181 [unused] $#-
optimized away (dependency)

Type#182 [unused] $#-
optimized away (dependency)

Type#183 [unused] $#-
optimized away (dependency)

Type#184 [unused] $#-
optimized away (dependency)

Type#185 [unused] $#-
optimized away (dependency)

Type#186 [unused] $#-
optimized away (dependency)

Type#187 [unused] $#-
optimized away (dependency)

Type#188 [unused] $#-
optimized away (dependency)

Type#189 [unused] $#-
optimized away (dependency)

Type#190 [unused] $#-
optimized away (dependency)

Type#191 [unused] $#-
optimized away (dependency)

Type#192 [unused] $#-
optimized away (dependency)

Type#193 [unused] $#-
optimized away (dependency)

Type#194 [unused] $#-
optimized away (dependency)

Type#195 [unused] $#-
optimized away (dependency)

Type#196 [unused] $#-
optimized away (dependency)

Type#197 [unused] $#-
optimized away (dependency)

Type#198 [unused] $#-
optimized away (dependency)

Type#199 [unused] $#-
optimized away (dependency)

Type#200 [unused] $#-
optimized away (dependency)

Type#201 [unused] $#-
optimized away (dependency)

Type#202 [unused] $#-
optimized away (dependency)

Type#203 [unused] $#-
optimized away (dependency)

Type#204 [unused] $#-
optimized away (dependency)

Type#205 [unused] $#-
optimized away (dependency)

Type#206 [unused] $#-
optimized away (dependency)

Type#207 [unused] $#-
optimized away (dependency)

Type#208 [unused] $#-
optimized away (dependency)

Type#209 [unused] $#-
optimized away (dependency)

Type#210 [unused] $#-
optimized away (dependency)

Type#211 [unused] $#-
optimized away (dependency)

Type#212 [unused] $#-
optimized away (dependency)

Type#213 [unused] $#-
optimized away (dependency)

Type#214 [unused] $#-
optimized away (dependency)

Type#215 [unused] $#-
optimized away (dependency)

Type#216 [unused] $#-
optimized away (dependency)

Type#217 [unused] $#-
optimized away (dependency)

Type#218 [unused] $#-
optimized away (dependency)

Type#219 [unused] $#-
optimized away (dependency)

Type#220 [unused] $#-
optimized away (dependency)

Type#221 [unused] $#-
optimized away (dependency)

Type#222 [unused] $#-
optimized away (dependency)

Type#223 [unused] $#-
optimized away (dependency)

Type#224 [unused] $#-
optimized away (dependency)

Type#225 [unused] $#-
optimized away (dependency)

Type#226 [unused] $#-
optimized away (dependency)

Type#227 [unused] $#-
optimized away (dependency)

Type#228 [unused] $#-
optimized away (dependency)

Type#229 [unused] $#-
optimized away (dependency)

Type#230 [unused] $#-
optimized away (dependency)

Type#231 [unused] $#-
optimized away (dependency)

Type#232 [unused] $#-
optimized away (dependency)

Type#233 [unused] $#-
optimized away (dependency)

Type#234 [unused] $#-
optimized away (dependency)

Type#235 [unused] $#-
optimized away (dependency)

Type#236 [unused] $#-
optimized away (dependency)

Type#237 [unused] $#-
optimized away (dependency)

Type#238 [unused] $#-
optimized away (dependency)

Type#239 [unused] $#-
optimized away (dependency)

Type#240 [unused] $#-
optimized away (dependency)

Type#241 [unused] $#-
optimized away (dependency)

Type#242 [unused] $#-
optimized away (dependency)

Type#243 [unused] $#-
optimized away (dependency)

Type#244 [unused] $#-
optimized away (dependency)

Type#245 [unused] $#-
optimized away (dependency)

Type#246 [unused] $#-
optimized away (dependency)

Type#247 [unused] $#-
optimized away (dependency)

Type#248 [unused] $#-
optimized away (dependency)

Type#249 [unused] $#-
optimized away (dependency)

Type#250 [unused] $#-
optimized away (dependency)

Type#251 [unused] $#-
optimized away (dependency)

Type#252 [unused] $#-
optimized away (dependency)

Type#253 [unused] $#-
optimized away (dependency)

Type#254 [unused] $#-
optimized away (dependency)

Type#255 [unused] $#-
optimized away (dependency)

Type#256 [used] lgl$-
val?            %79.1 = Force!<lazy>       !v    %79.0, e1.3   <lgl$->
void                    Assume             D     %79.2, %79.3 (Typecheck@0x560a548ad120[Type#256])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#257 [unused] $#-
optimized away (dependency)

Type#258 [used] str-
val?^ | miss    %82.3 = LdVar              eR    bad, e1.3
void                    Assume             D     %82.4, %79.3 (Typecheck@0x560a548ad120[Type#258])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#259 [used] int$-
(int|real)$-    %82.8 = CallSafeBuiltin    wed   length(%82.7)    <int$->
void                    Assume             D     %82.9, %82.10 (Typecheck@0x560a548ad120[Type#259])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#260 [unused] $#-
optimized away (dependency)

Type#261 [unused] $#-
optimized away (dependency)

Type#262 [unused] $#-
optimized away (dependency)

Type#263 [unused] $#-
optimized away (dependency)

Type#264 [unused] $#-
optimized away (dependency)

Type#265 [unused] $#-
optimized away (dependency)

Type#266 [unused] $#-
optimized away (dependency)

Type#267 [unused] $#-
optimized away (dependency)

Type#268 [unused] $#-
optimized away (dependency)

Type#269 [unused] $#-
optimized away (dependency)

Type#270 [unused] $#-
optimized away (dependency)

Type#271 [unused] $#-
optimized away (dependency)

Type#272 [unused] $#-
optimized away (dependency)

Type#273 [unused] $#-
optimized away (dependency)

Type#274 [unused] $#-
optimized away (dependency)

Type#275 [used] str$-
val?^ | miss    %89.0 = LdVar              eR    out, e1.3
void                    Assume             D     %89.1, %87.0 (Typecheck@0x560a548ad120[Type#275])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

----------------------
Inlinee: .libPaths [0x560a57d650b0]
referenced: 22
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] str$-
val?^ | miss    %142.3 = LdVar              eR    .lib.loc, <env 0x560a5438b6b8>
void                    Assume             D     %142.4, %31.4 (Typecheck@0x560a57ef4160[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: isNamespaceLoaded [0x560a5907d3f0]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val?            %48.7 = Force!<lazy>       !vL   %48.5, e48.6   <str$->
other unused reason

----------------------
Inlinee: file.exists [0x560a55e49350]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str- (polluted)
val?            %57.9 = CallBuiltin        !v    c(%57.8) e57.7   <str->
other unused reason

----------------------
Inlinee: character [0x560a55e4c150]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] int$-
optimized away

----------------------
Inlinee: file.path [0x560a55e4c6a0]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec+
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] vec-
val+            %41.15 = CallSafeBuiltin    wed   list(%41.13, %41.14)    <vec->
other unused reason

Type#4 [unused] str$-
val?            %41.16 = Force!<lazy>       !v    %41.9, e41.7   <str$->
dependent slot

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away

Type#1 [unused] (nil|str)- (polluted)
optimized away

Type#2 [used] int- (polluted)
val?            %15.11 = StaticCall         !v    match[0x560a5eda4a60](%15.9, %15.10, 0L) { 0 1 2n } e15.8   <int->
void                    Assume             D     %15.12, %15.13 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %17.2 = Gt                 wed   %17.1, 0L, elided   <lgl->
other unused reason

======================= ClosureVersion: tryCatch (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1 miss: 1) =======================
referenced: 53
referenced non-empty: 26
read non-empty: 26
used: 7
present non-empty: 7

Used
exact match: 3
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 12
dependent: 15
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

----------------------
tryCatch [0x560a55e7cc60]
referenced: 18
referenced non-empty: 14
read non-empty: 14
used: 5
present non-empty: 4

Used
exact match: 2
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 5
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] vec$+
val?            %1.8  = NamedCall          !v    <blt list>(.xpandDotsTrigger=%1.5) e1.2   <vec$+>
void                    Assume             D     %1.10, %1.11 (Typecheck@0x560a55e7cb60[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec$+, expected: vec$+, required: val?+

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec$+
optimized away (dependency)

Type#4 [unused] str$-
val+            %2.6  = CallSafeBuiltin    wed   names(%2.5)    <str$->
dependent slot

Type#5 [unused] env-
val?            %4.3  = StaticCall         !v    parent.frame[0x560a5eb134b0]() e1.2   <env->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [used] str$-
val?^ | miss    %6.3  = LdVar              eR    classes, e1.2
void                    Assume             D     %6.4, %4.5 (Typecheck@0x560a55e7cb60[Type#7])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#8 [used] int$-
(int|real)$-    %6.8  = CallSafeBuiltin    wed   length(%6.7)    <int$->
void                    Assume             D     %6.9, %6.10 (Typecheck@0x560a55e7cb60[Type#8])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [used] vec$+
val?^ | miss    %8.2  = LdVar              eR    handlers, e1.2
void                    Assume             D     %8.3, %6.10 (Typecheck@0x560a55e7cb60[Type#10])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: vec$+, expected: vec$+, required: val?^ | miss

Type#11 [used] int$-
(int|real)$-    %8.7  = CallSafeBuiltin    wed   length(%8.6)    <int$->
void                    Assume             D     %8.8, %8.9 (Typecheck@0x560a55e7cb60[Type#11])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#12 [unused] lgl$-
lgl$-           %10.2 = Neq                d     %8.1, %10.1, elided   <lgl$->
other unused reason

Type#13 [unused] val?+ (polluted)
optimized away (dependency)

Type#14 [unused] str$-
optimized away (dependency)

Type#15 [unused] env-
optimized away (dependency)

Type#16 [unused] vec$+
optimized away (dependency)

Type#17 [unused] val?+ (polluted)
val?            %20.1 = PopContext         C     %20.0, %11.7   <val?+>
dependent slot

----------------------
Inlinee: tryCatchList [0x560a55e78ea0]
referenced: 35
referenced non-empty: 12
read non-empty: 12
used: 2
present non-empty: 3

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 10
optimized away non-empty: 7
dependent: 7
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str$-
val?            %11.13 = Force!<lazy>       !vL   %11.10, e11.12   <str$->
void                    Assume             D     %11.14, %11.15 (Typecheck@0x560a55e78d90[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#2 [used] int$-
(int|real)$-    %13.2 = CallSafeBuiltin    wed   length(%13.1)    <int$->
void                    Assume             D     %13.3, %13.4 (Typecheck@0x560a55e78d90[Type#2])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#3 [unused] int$-
optimized away (dependency)

Type#4 [unused] lgl$-
lgl$-           %17.0 = Gt                 d     %15.1, 1L, elided   <lgl$->
dependent slot

Type#5 [unused] int$-
optimized away (dependency)

Type#6 [unused] lgl$-
lgl$-           %18.1 = Eq                 vd    %15.1, 1L, elided   <lgl$->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] val?+ (polluted)
optimized away (dependency)

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [unused] env-
optimized away

Type#11 [unused] vec$+
optimized away

Type#12 [unused] cls-
optimized away

Type#13 [unused] val?+ (polluted)
val?            %21.11 = StaticCall         !     tryCatchOne[0x560a5ea72da0](%21.6, %21.7, %21.8, %21.9) from %21.10 e11.12   <val?+>
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

======================= ClosureVersion: do.call (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0 miss: 2) =======================
referenced: 9
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 3
used polluted: 1

----------------------
do.call [0x560a55e919d0]
referenced: 9
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 3
used polluted: 1

Type#0 [unused] env-
optimized away (dependency)

Type#1 [used] vec+ (polluted)
val?            %1.6  = Force!<lazy>       !v    %1.0, e1.2   <vec+>
void                    Assume             D     %1.8, %1.9 (Typecheck@0x560a55e918c0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?^ | miss

Type#2 [unused] lgl$-
val?            %3.1  = Force!<lazy>       !v    %3.0, e1.2   <lgl$->
other unused reason

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] (str|cls)- (polluted)
val?            %4.1  = Force!<lazy>       !v    %4.0, e1.2   <(str|cls)->
other unused reason

Type#7 [unused] vec+ (polluted)
val?            %4.3  = Force!<wrapped>    !v    %4.2, e1.2   <vec+>
dependent slot

Type#8 [unused] env-
val?            %4.6  = Force!<lazy>       !     %4.4, e1.2   <env->
dependent slot

======================= ClosureVersion: grepl (!ExpMi,CorrOrd,!TMany,Argmatch miss: 4) =======================
referenced: 56
referenced non-empty: 16
read non-empty: 16
used: 3
present non-empty: 9

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 13
optimized away non-empty: 4
dependent: 9
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

----------------------
grepl [0x560a55ec7ff0]
referenced: 51
referenced non-empty: 11
read non-empty: 11
used: 2
present non-empty: 8

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 1
dependent: 9
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away (dependency)

Type#1 [used] lgl$-
val?            %2.2  = PopContext         C     %2.1, %1.4   <lgl$->
void                    Assume             D     %2.3, %2.4 (Typecheck@0x560a55ec7ed0[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$+
val?            %9.4  = Force!<wrapped>    !v    %9.3, e1.2   <str$+>
dependent slot

Type#13 [unused] lgl$-
lgl$#-          %9.5  = CallSafeBuiltin    wed   is.character(%9.4)    <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [used] str$-
val?            %17.4 = Force!<lazy>       !v    %17.3, e1.2   <str$->
void                    Assume             D     %17.5, %17.6 (Typecheck@0x560a55ec7ed0[Type#18])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#19 [unused] str$-
val+            %19.2 = CallSafeBuiltin    wed   as.character(%19.1)    <str$->
dependent slot

Type#20 [unused] str$+
val?            %19.4 = Force!<wrapped>    !v    %19.3, e1.2   <str$+>
dependent slot

Type#21 [unused] lgl$-
val?            %19.6 = Force!<lazy>       !v    %19.5, e1.2   <lgl$->
dependent slot

Type#22 [unused] lgl$-
val?            %19.8 = Force!<lazy>       !v    %19.7, e1.2   <lgl$->
dependent slot

Type#23 [unused] lgl$-
val?            %19.10 = Force!<lazy>       !v    %19.9, e1.2   <lgl$->
dependent slot

Type#24 [unused] lgl$-
val?            %19.12 = Force!<lazy>       !v    %19.11, e1.2   <lgl$->
dependent slot

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %1.11 = Force!<lazy>       !vr   %1.9,    <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: is.factor [0x560a55ec8200]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (int|str)+ (polluted)
optimized away

Type#1 [used] lgl$-
val?            %1.13 = PopContext         C     %1.12, %1.8   <lgl$->
void                    Assume             D     %1.14, %1.15 (Typecheck@0x560a55ec8110[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: ncol (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: ncol (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 4
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
ncol [0x560a56753160]
referenced: 4
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] str_
val+            %1.1  = Force!<lazy>       !vr   %1.0,    <str_>
other unused reason

Type#2 [unused] int-
val+            %1.2  = CallSafeBuiltin    wed   dim(%1.1)    <int->
other unused reason

Type#3 [used] int$-
val?            %1.3  = Extract1_1D        wed   %1.2, 2L, elided   <int$->
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a5698ab30[Type#3])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

*********************** Compilation session for: methodsPackageMetaName (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 1) ***********************
======================= ClosureVersion: methodsPackageMetaName (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 1) =======================
referenced: 9
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 0
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
methodsPackageMetaName [0x560a595b46a0]
referenced: 9
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 0
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] vec
val?            %2.5  = Force!<value>      !v    %2.3, e2.4   <vec>
other unused reason

Type#5 [unused] str$-
val?            %2.7  = Force!<value>      !v    %2.6, e2.4   <str$->
dependent slot

Type#6 [unused] str$-
val?            %2.9  = Force!<lazy>       !v    %2.8, e2.4   <str$->
dependent slot

Type#7 [unused] str$-
val?            %2.11 = Force!<lazy>       !v    %2.10, e2.4   <str$->
dependent slot

Type#8 [unused] str$-
val?            %2.12 = CallBuiltin        !     .Call(%2.5, %2.7, %2.9, %2.11) e2.4   <str$->
dependent slot

*********************** Compilation session for: classMetaName (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: classMetaName (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 11
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 6

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 1
dependent: 6
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
classMetaName [0x560a59d31030]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] str$-
val?            %4.13 = PopContext         C     %4.12, %2.5   <str$->
dependent slot

----------------------
Inlinee: methodsPackageMetaName [0x560a595b46a0]
referenced: 9
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 0
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] vec
val?            %4.5  = Force!<value>      !v    %4.3, e4.4   <vec>
other unused reason

Type#5 [unused] str$-
val?            %4.7  = Force!<value>      !v    %4.6, e4.4   <str$->
dependent slot

Type#6 [unused] str$-
val?            %4.9  = Force!<lazy>       !v    %4.8, e4.4   <str$->
dependent slot

Type#7 [unused] str$-
val?            %4.11 = Force!<lazy>       !v    %4.10, e4.4   <str$->
dependent slot

Type#8 [unused] str$-
val?            %4.12 = CallBuiltin        !     .Call(%4.5, %4.7, %4.9, %4.11) e4.4   <str$->
dependent slot

*********************** Compilation session for: getGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2,!Obj3) ***********************
======================= ClosureVersion: .getGeneric (CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,NonRefl2) =======================
referenced: 50
referenced non-empty: 31
read non-empty: 30
used: 5
present non-empty: 17

Used
exact match: 3
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 9
dependent: 15
other reasons unused non-empty: 11

Polluted
polluted: 8
used polluted: 1

----------------------
.getGeneric [0x560a553ad2f0]
referenced: 41
referenced non-empty: 23
read non-empty: 22
used: 4
present non-empty: 15

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 4
dependent: 15
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$+
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] cls
val?            %57.9 = PopContext         C     %57.8, %55.6   <cls>
other unused reason

Type#5 [unused] (nil|cls) (polluted)
val?            %9.0  = Phi                      nil:BB8, %57.9:BB57   <(nil|cls)>
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %14.4 = Force!<lazy>       !v    %14.3, e1.5   <str$->
dependent slot

Type#8 [unused] lgl$-
lgl$#-          %14.5 = CallSafeBuiltin    wed   is.character(%14.4)    <lgl$->
dependent slot

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %52.3 = PopContext         C     %52.2, %50.4   <lgl$->
void                    Assume             D     %52.4, %52.5 (Typecheck@0x560a553a6140[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$-
val?            %22.4 = Force!<wrapped>    !v    %22.3, e1.5   <str$->
dependent slot

Type#13 [unused] lgl$-
lgl$#-          %22.5 = CallSafeBuiltin    wed   is.character(%22.4)    <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] str$-
val?            %46.4 = Force!<wrapped>    !v    %46.3, e1.5   <str$->
dependent slot

Type#16 [used] lgl$-
val?            %46.5 = CallBuiltin        !v    nzchar(%46.4) e1.5   <lgl$->
void                    Assume             D     %46.6, %46.7 (Typecheck@0x560a553a6140[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] vec
val?            %30.4 = Force!<value>      !v    %30.3, e1.5   <vec>
other unused reason

Type#24 [unused] str$-
val?            %30.6 = Force!<wrapped>    !v    %30.5, e1.5   <str$->
dependent slot

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] env-
val?            %32.4 = Force!<lazy>       !v    %32.3, e1.5   <env->
dependent slot

Type#27 [unused] env-
val?            %32.5 = CallBuiltin        !v    as.environment(%32.4) e1.5   <env->
dependent slot

Type#28 [unused] str$-
val?            %32.7 = Force!<lazy>       !v    %32.6, e1.5   <str$->
dependent slot

Type#29 [unused] (nil|cls) (polluted)
val?            %32.8 = CallBuiltin        !v    .Call(%30.4, %30.6, false, %32.5, %32.7) e1.5   <(nil|cls)>
dependent slot

Type#30 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#31 [used] env-
val?^ | miss    %35.0 = LdVar              eR    .GlobalEnv, e1.5
void                    Assume             D     %35.1, %32.11 (Typecheck@0x560a553a6140[Type#31])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [used] str$-
val?            %35.8 = Force!<wrapped>    !v    %35.7, e1.5   <str$->
void                    Assume             D     %35.9, %35.10 (Typecheck@0x560a553a6140[Type#33])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#34 [unused] nil-
val?            %37.2 = Extract2_1D        wed   %35.4, %37.1, elided   <nil->
other unused reason

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] (nil|cls) (polluted)
val?            %13.2 = Force!<value>      !     %13.0, e1.5   <(nil|cls)>
dependent slot

----------------------
Inlinee: .getGenericFromCache [0x560a5a356500]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away

Type#3 [unused] env-
optimized away

Type#4 [unused] cls
val?            %57.8 = StaticCall         !v    .getGenericFromCacheTable[0x560a5f2bdc40](%57.4, %57.5, %57.6, %57.7) e57.3   <cls>
other unused reason

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away

Type#1 [unused] (nil|str)- (polluted)
optimized away

Type#2 [used] int- (polluted)
val?            %50.9 = StaticCall         !v    match[0x560a5d8c4c80](%50.7, %50.8, 0L) { 0 1 2n } e50.6   <int->
void                    Assume             D     %50.10, %50.11 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %52.2 = Gt                 wed   %52.1, 0L, elided   <lgl->
other unused reason

======================= ClosureVersion: genericForBasic (CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj2) =======================
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
genericForBasic [0x560a5685bec0]
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] vec+
val?            %3.1  = Force!<wrapped>    !v    %3.0, e1.4   <vec+>
void                    Assume             D     %7.0, %5.4 (Typecheck@0x560a55ff3030[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str$-
val?            %5.2  = Force!<lazy>       !v    %5.1, e1.4   <str$->
void                    Assume             D     %5.3, %5.4 (Typecheck@0x560a55ff3030[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#5 [unused] cls
val?            %7.5  = Extract2_1D        wed   %7.2, %7.4, elided   <cls>
dependent slot

Type#6 [unused] lgl$-
val?            %7.8  = Force!<value>      !v    %7.7, e1.4   <lgl$->
other unused reason

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] cls
val?            %11.2 = Force!<value>      !     %11.0, e1.4   <cls>
dependent slot

======================= ClosureVersion: getGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2,!Obj3) =======================
referenced: 132
referenced non-empty: 51
read non-empty: 45
used: 10
present non-empty: 20

Used
exact match: 5
widened: 5
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 41
optimized away non-empty: 21
dependent: 37
other reasons unused non-empty: 4

Polluted
polluted: 5
used polluted: 0

----------------------
getGeneric [0x560a54ffa020]
referenced: 64
referenced non-empty: 28
read non-empty: 28
used: 6
present non-empty: 12

Used
exact match: 3
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 22
optimized away non-empty: 10
dependent: 20
other reasons unused non-empty: 2

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|cls) (polluted)
val+            %2.2  = Force!<lazy>       !vr   %1.3,    <(str|cls)>
other unused reason

Type#2 [unused] lgl$-
lgl$#-          %2.3  = CallSafeBuiltin    wed   is.function(%2.2)    <lgl$->
dependent slot

Type#3 [unused] cls
optimized away (dependency)

Type#4 [used] lgl$-
val?            %76.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%76.3, "genericFunction") e2.1   <lgl$->
void                    Assume             D     %76.5, %76.6 (Typecheck@0x560a574f80c0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] cls
val?            %80.2 = Force!<wrapped>    !     %80.0, e2.1   <cls>
dependent slot

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] env-
optimized away (dependency)

Type#14 [unused] str$-
optimized away (dependency)

Type#15 [unused] (nil|cls) (polluted)
val?            %6.6  = StaticCall         !v    .getGeneric[0x560a5f2362f0](%6.3, %6.4, %6.5) e2.1   <(nil|cls)>
dependent slot

Type#16 [unused] str$+
optimized away

Type#17 [unused] str$-
optimized away (dependency)

Type#18 [unused] cls
val?            %75.5 = StaticCall         !v    .getGeneric[0x560a5f2b69c0](%75.3, missingArg, %75.4) e2.1   <cls>
dependent slot

Type#19 [unused] (nil|cls) (polluted)
val?            %7.0  = Phi                      %6.6:BB6, %75.5:BB75   <(nil|cls)>
dependent slot

Type#20 [used] env-
val?            %10.3 = CallBuiltin        !v    baseenv() e2.1   <env->
void                    Assume             D     %14.0, %12.4 (Typecheck@0x560a574f80c0[Type#20])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [used] str$-
val?            %12.2 = Force!<wrapped>    !v    %12.1, e2.1   <str$->
void                    Assume             D     %12.3, %12.4 (Typecheck@0x560a574f80c0[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#23 [unused] blt-
val?            %14.5 = Extract2_1D        wed   %14.2, %14.4, elided   <blt->
dependent slot

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [used] blt-
val?^ | miss    %45.3 = LdVar              eR    baseDef, e2.1
void                    Assume             D     %45.4, %15.1 (Typecheck@0x560a574f80c0[Type#25])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: blt-, expected: blt-, required: val?^ | miss

Type#26 [unused] lgl$-
lgl$#-          %45.8 = CallSafeBuiltin    wed   is.function(%45.7)    <lgl$->
dependent slot

Type#27 [unused] str$-
optimized away (dependency)

Type#28 [unused] cls
val?            %49.4 = StaticCall         !v    genericForBasic[0x560a5f310090](%49.3, missingArg, false) { 0 2n } e2.1   <cls>
dependent slot

Type#29 [unused] cls
optimized away (dependency)

Type#30 [used] lgl$-
val?            %51.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%51.3, "genericFunction") e2.1   <lgl$->
void                    Assume             D     %51.5, %51.6 (Typecheck@0x560a574f80c0[Type#30])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#31 [unused] str$-
optimized away (dependency)

Type#32 [unused] cls
optimized away (dependency)

Type#33 [unused] cls
val?            %73.3 = PopContext         C     %73.2, %55.5   <cls>
dependent slot

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] cls
val?            %21.4 = Force!<value>      !v    %21.3, e2.1   <cls>
dependent slot

Type#36 [used] lgl$-
val?            %21.5 = CallBuiltin        !v    is.function(%21.4) e2.1   <lgl$->
void                    Assume             D     %21.6, %21.7 (Typecheck@0x560a574f80c0[Type#36])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] cls
val?            %44.2 = Force!<value>      !     %44.0, e2.1   <cls>
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %69.9 = Force!<lazy>       !vL   %69.7, e69.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %69.10 = Force!<lazy>       !vL   %69.6, e69.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: .cacheGenericTable [0x560a59442440]
referenced: 56
referenced non-empty: 11
read non-empty: 11
used: 4
present non-empty: 5

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 2
dependent: 7
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
val?            %57.12 = Force!<lazy>       !vL   %57.9, e57.11   <cls>
dependent slot

Type#1 [used] env-
val?            %57.14 = Force!<lazy>       !vL   %57.8, e57.11   <env->
void                    Assume             D     %61.0, %59.3 (Typecheck@0x560a594db2c0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] str$-
val?            %59.1 = Force!<lazy>       !vL   %57.10, e57.11   <str$->
void                    Assume             D     %59.2, %59.3 (Typecheck@0x560a594db2c0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#4 [unused] cls
val?            %61.5 = Extract2_1D        wed   %61.2, %61.4, elided   <cls>
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %63.3 = Call               !v    %63.0(%63.1, %63.2) e57.11   <str$->
dependent slot

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] cls
val?            %65.4 = Force!<value>      !v    %65.3, e57.11   <cls>
dependent slot

Type#10 [used] lgl$-
val?            %65.5 = CallBuiltin        !v    is.function(%65.4) e57.11   <lgl$->
void                    Assume             D     %65.6, %65.7 (Typecheck@0x560a594db2c0[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] cls
optimized away (dependency)

Type#12 [unused] cls
optimized away (dependency)

Type#13 [used] lgl$-
val?            %69.12 = PopContext         C     %69.11, %69.5   <lgl$->
void                    Assume             D     %69.13, %69.14 (Typecheck@0x560a594db2c0[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#14 [unused] cls
val?            %73.1 = Force!<value>      !v    %73.0, e57.11   <cls>
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: .cacheGeneric [0x560a54a9d440]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] cls
optimized away (dependency)

Type#2 [unused] env-
optimized away

Type#3 [unused] cls
val?            %73.2 = PopContext         C     %73.1, %57.7   <cls>
dependent slot

*********************** Compilation session for: simplify2array (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: lengths (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

----------------------
lengths [0x560a55e997d0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

Type#0 [used] vec+ (polluted)
val?            %1.2  = Force!<lazy>       !v    %1.0, e1.1   <vec+>
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a55e6dc60[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?^ | miss

Type#1 [unused] lgl$-
val?            %2.3  = Force!<lazy>       !v    %2.2, e1.1   <lgl$->
other unused reason

======================= ClosureVersion: simplify2array (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 151
referenced non-empty: 23
read non-empty: 22
used: 8
present non-empty: 8

Used
exact match: 5
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 7
dependent: 14
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

----------------------
simplify2array [0x560a55ec8530]
referenced: 124
referenced non-empty: 18
read non-empty: 17
used: 8
present non-empty: 4

Used
exact match: 5
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 10
optimized away non-empty: 6
dependent: 9
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] vec-
val+            %1.3  = Force!<lazy>       !vr   %1.1,    <vec->
dependent slot

Type#2 [used] int$-
(int|real)$-    %1.4  = CallSafeBuiltin    wed   length(%1.3)    <int$->
void                    Assume             D     %1.5, %1.6 (Typecheck@0x560a586efe30[Type#2])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] vec-
optimized away (dependency)

Type#8 [unused] int-
val?            %3.1  = StaticCall         !v    unknown--fromConstant[0x560a5f81f5e0](%3.0) from function(x, use.names=TRUE) <(rir::DispatchTab|... { 0 } e1.2   <int->
other unused reason

Type#9 [used] int$-
val?            %3.2  = StaticCall         !v    unique[0x560a5f77af70](%3.1) { 0 } e1.2   <int$->
void                    Assume             D     %3.3, %3.4 (Typecheck@0x560a586efe30[Type#9])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#10 [unused] int$-
optimized away (dependency)

Type#11 [unused] lgl$-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] int$-
optimized away (dependency)

Type#14 [unused] lgl$-
lgl$-           %7.0  = Eq                 d     %5.1, 1L, elided   <lgl$->
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] $#-
optimized away (dependency)

Type#87 [unused] $#-
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] $#-
optimized away (dependency)

Type#90 [unused] $#-
optimized away (dependency)

Type#91 [unused] $#-
optimized away (dependency)

Type#92 [unused] $#-
optimized away (dependency)

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] $#-
optimized away (dependency)

Type#99 [unused] $#-
optimized away (dependency)

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [unused] $#-
optimized away (dependency)

Type#102 [unused] $#-
optimized away (dependency)

Type#103 [unused] $#-
optimized away (dependency)

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] $#-
optimized away (dependency)

Type#106 [unused] $#-
optimized away (dependency)

Type#107 [unused] $#-
optimized away (dependency)

Type#108 [unused] $#-
optimized away (dependency)

Type#109 [unused] $#-
optimized away (dependency)

Type#110 [unused] $#-
optimized away (dependency)

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] $#-
optimized away (dependency)

Type#113 [used] vec-
val?            %17.4 = Force!<wrapped>    !v    %17.3, e1.2   <vec->
void                    Assume             D     %17.5, %17.6 (Typecheck@0x560a586efe30[Type#113])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#114 [used] int$-
(int|real)$-    %19.2 = CallSafeBuiltin    wed   length(%19.1)    <int$->
void                    Assume             D     %19.3, %19.4 (Typecheck@0x560a586efe30[Type#114])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#115 [unused] vec-
optimized away (dependency)

Type#116 [used] str-
val?            %24.7 = PopContext         C     %24.6, %23.4   <str->
void                    Assume             D     %24.9, %24.10 (Typecheck@0x560a586efe30[Type#116])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#117 [unused] $#-
optimized away (dependency)

Type#118 [unused] str-
optimized away (dependency)

Type#119 [used] int$-
(int|real)$-    %26.6 = CallSafeBuiltin    wed   length(%26.5)    <int$->
void                    Assume             D     %26.7, %26.8 (Typecheck@0x560a586efe30[Type#119])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#120 [used] int$-
val?^ | miss    %28.2 = LdVar              eR    n, e1.2
void                    Assume             D     %28.3, %26.8 (Typecheck@0x560a586efe30[Type#120])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#121 [unused] lgl$-
lgl$-           %28.6 = Eq                 d     %28.1, %28.5, elided   <lgl$->
dependent slot

Type#122 [unused] $#-
optimized away (dependency)

Type#123 [used] str-
val             %26.3 = ChkMissing         e     %24.7
void                    Assume             D     %30.0, %26.8 (Typecheck@0x560a586efe30[Type#123])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: str-, expected: str-, required: val?^ | miss

----------------------
Inlinee: unlist [0x560a55eb29b0]
referenced: 27
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 5
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec+ (polluted)
val?            %23.9 = Force!<lazy>       !vL   %23.5, e23.6   <vec+>
dependent slot

Type#1 [unused] lgl$-
optimized away (dependency)

Type#2 [unused] vec+ (polluted)
val?            %24.1 = Force!<wrapped>    !v    %24.0, e23.6   <vec+>
dependent slot

Type#3 [unused] lgl$-
val?            %24.3 = Force!<wrapped>    !v    %24.2, e23.6   <lgl$->
dependent slot

Type#4 [unused] lgl$-
val?            %24.5 = Force!<lazy>       !v    %24.4, e23.6   <lgl$->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: character (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0,SimpleInt0) ***********************
======================= ClosureVersion: character (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0,SimpleInt0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
character [0x560a55e4c150]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] int$-
int$-           %1.1  = Force<lazy>              %1.0,    <int$->
other unused reason

*********************** Compilation session for: FUN (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: FUN (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 36
referenced non-empty: 15
read non-empty: 15
used: 2
present non-empty: 4

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 13
optimized away non-empty: 9
dependent: 8
other reasons unused non-empty: 5

Polluted
polluted: 1
used polluted: 0

----------------------
FUN [0x560a555ba860]
referenced: 30
referenced non-empty: 10
read non-empty: 10
used: 2
present non-empty: 1

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 7
dependent: 6
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [used] str$-
val?            %2.16 = PopContext         C     %2.15, %2.6   <str$->
void                    Assume             D     %6.0, %4.6 (Typecheck@0x560a555b0e40[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [used] lgl$-
val?            %6.6  = PopContext         C     %6.5, %4.5   <lgl$->
void                    Assume             D     %6.7, %6.8 (Typecheck@0x560a555b0e40[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] str$-
optimized away (dependency)

Type#23 [unused] vec
optimized away

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] str+
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] str-
optimized away

Type#28 [unused] str+
optimized away (dependency)

Type#29 [unused] str+
val?            %10.7 = StaticCall         !v    tryCatch[0x560a5f8daf20](%10.3, %10.6) { 0 1n } e2.3   <str+>
dependent slot

----------------------
Inlinee: file.exists [0x560a55e49350]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str- (polluted)
val+            %6.3  = CallSafeBuiltin    wed   c(%6.2)    <str->
other unused reason

----------------------
Inlinee: file.path [0x560a55e4c6a0]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec+
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] vec-
val+            %2.13 = CallSafeBuiltin    wed   list(%2.12, "Meta", "package.rds")    <vec->
other unused reason

Type#4 [unused] str$-
val?            %2.14 = Force!<lazy>       !v    %2.9, e2.7   <str$->
dependent slot

======================= ClosureVersion: tryCatch (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1 miss: 1) =======================
referenced: 53
referenced non-empty: 26
read non-empty: 26
used: 7
present non-empty: 7

Used
exact match: 3
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 12
dependent: 15
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

----------------------
tryCatch [0x560a55e7cc60]
referenced: 18
referenced non-empty: 14
read non-empty: 14
used: 5
present non-empty: 4

Used
exact match: 2
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 5
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] vec$+
val?            %1.8  = NamedCall          !v    <blt list>(.xpandDotsTrigger=%1.5) e1.2   <vec$+>
void                    Assume             D     %1.10, %1.11 (Typecheck@0x560a55e7cb60[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec$+, expected: vec$+, required: val?+

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec$+
optimized away (dependency)

Type#4 [unused] str$-
val+            %2.6  = CallSafeBuiltin    wed   names(%2.5)    <str$->
dependent slot

Type#5 [unused] env-
val?            %4.3  = StaticCall         !v    parent.frame[0x560a5f29a6d0]() e1.2   <env->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [used] str$-
val?^ | miss    %6.3  = LdVar              eR    classes, e1.2
void                    Assume             D     %6.4, %4.5 (Typecheck@0x560a55e7cb60[Type#7])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#8 [used] int$-
(int|real)$-    %6.8  = CallSafeBuiltin    wed   length(%6.7)    <int$->
void                    Assume             D     %6.9, %6.10 (Typecheck@0x560a55e7cb60[Type#8])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [used] vec$+
val?^ | miss    %8.2  = LdVar              eR    handlers, e1.2
void                    Assume             D     %8.3, %6.10 (Typecheck@0x560a55e7cb60[Type#10])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: vec$+, expected: vec$+, required: val?^ | miss

Type#11 [used] int$-
(int|real)$-    %8.7  = CallSafeBuiltin    wed   length(%8.6)    <int$->
void                    Assume             D     %8.8, %8.9 (Typecheck@0x560a55e7cb60[Type#11])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#12 [unused] lgl$-
lgl$-           %10.2 = Neq                d     %8.1, %10.1, elided   <lgl$->
other unused reason

Type#13 [unused] val?+ (polluted)
optimized away (dependency)

Type#14 [unused] str$-
optimized away (dependency)

Type#15 [unused] env-
optimized away (dependency)

Type#16 [unused] vec$+
optimized away (dependency)

Type#17 [unused] val?+ (polluted)
val?            %25.1 = PopContext         C     %25.0, %14.7   <val?+>
dependent slot

----------------------
Inlinee: tryCatchList [0x560a55e78ea0]
referenced: 35
referenced non-empty: 12
read non-empty: 12
used: 2
present non-empty: 3

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 10
optimized away non-empty: 7
dependent: 7
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str$-
val?            %16.2 = Force!<lazy>       !vL   %14.10, e16.1   <str$->
void                    Assume             D     %16.3, %16.4 (Typecheck@0x560a55e78d90[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#2 [used] int$-
(int|real)$-    %18.2 = CallSafeBuiltin    wed   length(%18.1)    <int$->
void                    Assume             D     %18.3, %18.4 (Typecheck@0x560a55e78d90[Type#2])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#3 [unused] int$-
optimized away (dependency)

Type#4 [unused] lgl$-
lgl$-           %22.0 = Gt                 d     %20.1, 1L, elided   <lgl$->
dependent slot

Type#5 [unused] int$-
optimized away (dependency)

Type#6 [unused] lgl$-
lgl$-           %23.1 = Eq                 vd    %20.1, 1L, elided   <lgl$->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] val?+ (polluted)
optimized away (dependency)

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [unused] env-
optimized away

Type#11 [unused] vec$+
optimized away

Type#12 [unused] cls-
optimized away

Type#13 [unused] val?+ (polluted)
val?            %26.11 = StaticCall         !     tryCatchOne[0x560a5f88d350](%26.6, %26.7, %26.8, %26.9) from %26.10 e16.1   <val?+>
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: apply (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1,SimpleInt1 miss: 2) ***********************
======================= ClosureVersion: aperm (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0 miss: 1) =======================
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
aperm [0x560a55e99b70]
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

======================= ClosureVersion: apply (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1,SimpleInt1 miss: 2) =======================
referenced: 375
referenced non-empty: 126
read non-empty: 121
used: 48
present non-empty: 32

Used
exact match: 39
widened: 9
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 78
optimized away non-empty: 46
dependent: 73
other reasons unused non-empty: 5

Polluted
polluted: 4
used polluted: 0

----------------------
apply [0x560a55e9cbd0]
referenced: 335
referenced non-empty: 111
read non-empty: 108
used: 45
present non-empty: 27

Used
exact match: 36
widened: 9
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 66
optimized away non-empty: 39
dependent: 65
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] blt-
optimized away (dependency)

Type#1 [unused] blt-
val?            %1.5  = StaticCall         !v    match.fun[0x560a5f4a76b0](%1.4) e1.3   <blt->
dependent slot

Type#2 [unused] lgl$-
val?            %2.4  = Force!<lazy>       !v    %2.3, e1.3   <lgl$->
dependent slot

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [used] lgl+
val?            %12.7 = Force!<lazy>       !v    %12.6, e1.3   <lgl+>
void                    Assume             D     %12.8, %12.9 (Typecheck@0x560a55e9f3c0[Type#7])
exact match
checkFor: lgl+, static: val?, feedback: lgl+, expected: lgl+, required: val?+

Type#8 [unused] int-
val+            %14.2 = CallSafeBuiltin    wed   dim(%14.1)    <int->
dependent slot

Type#9 [used] int$-
(int|real)$-    %14.3 = CallSafeBuiltin    wed   length(%14.2)    <int$->
void                    Assume             D     %14.4, %14.5 (Typecheck@0x560a55e9f3c0[Type#9])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#10 [unused] int$-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] lgl+
val?            %19.4 = Force!<wrapped>    !v    %19.3, e1.3   <lgl+>
dependent slot

Type#13 [unused] lgl$-
lgl$#-          %19.5 = CallSafeBuiltin    wed   is.object(%19.4)    <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [used] lgl+
val?^ | miss    %22.3 = LdVar              eR    X, e1.3
void                    Assume             D     %22.4, %19.6 (Typecheck2@0x560a55e9f3c0[Type#21])
narrowed with static type: no
widened: yes
checkFor: lgl~+, static: val?^ | miss, feedback: lgl+, expected: lgl+, required: val?+

Type#22 [unused] int-
val+            %22.8 = CallSafeBuiltin    wed   dim(%22.7)    <int->
dependent slot

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] lgl+
optimized away (dependency)

Type#25 [unused] vec-
val?            %24.3 = CallBuiltin        !v    dimnames(%22.7) e1.3   <vec->
dependent slot

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [used] int$-
val?^ | miss    %26.3 = LdVar              eR    dl, e1.3
void                    Assume             D     %26.4, %24.5 (Typecheck@0x560a55e9f3c0[Type#27])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#28 [unused] int-
val+            %26.7 = CallSafeBuiltin    wed   seq_len(%26.6)    <int->
dependent slot

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] int$-
val?            %28.4 = Force!<value>      !v    %28.3, e1.3   <int$->
dependent slot

Type#31 [unused] lgl$-
lgl$#-          %28.5 = CallSafeBuiltin    wed   is.character(%28.4)    <lgl$->
dependent slot

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [used] int-
val?^ | miss    %31.0 = LdVar              eR    d, e1.3
void                    Assume             D     %31.1, %28.6 (Typecheck@0x560a55e9f3c0[Type#41])
exact match
checkFor: int-, static: val?^ | miss, feedback: int-, expected: int-, required: val?^ | miss

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [used] int$-
val?^ | miss    %31.4 = LdVar              eR    MARGIN, e1.3
void                    Assume             D     %31.5, %28.6 (Typecheck2@0x560a55e9f3c0[Type#43])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?+

Type#44 [used] int$-
int-            %31.9 = Extract1_1D        wed   %31.3, %31.8, elided   <int$->
void                    Assume             D     %31.10, %31.11 (Typecheck@0x560a55e9f3c0[Type#44])
exact match
checkFor: int$-, static: int-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#45 [unused] int-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] int$-
optimized away (dependency)

Type#48 [used] int$-
int-            %33.3 = Extract1_1D        wed   %31.3, %31.7, elided   <int$->
void                    Assume             D     %33.4, %33.5 (Typecheck@0x560a55e9f3c0[Type#48])
exact match
checkFor: int$-, static: int-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] int$-
optimized away (dependency)

Type#51 [used] lgl$-
val+            %37.3 = CallSafeBuiltin    wed   anyNA(%33.1)    <lgl$->
void                    Assume             D     %37.4, %37.5 (Typecheck@0x560a55e9f3c0[Type#51])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] int$-
optimized away (dependency)

Type#54 [used] lgl$-
val+            %40.0 = CallSafeBuiltin    wed   anyNA(%35.1)    <lgl$->
void                    Assume             D     %40.1, %40.2 (Typecheck@0x560a55e9f3c0[Type#54])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#55 [used] int-
val?^ | miss    %46.0 = LdVar              eR    ds, e1.3
void                    Assume             D     %46.1, %43.1 (Typecheck@0x560a55e9f3c0[Type#55])
exact match
checkFor: int-, static: val?^ | miss, feedback: int-, expected: int-, required: val?^ | miss

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] int$-
optimized away (dependency)

Type#58 [used] int$-
int-            %46.4 = Extract1_1D        wed   %46.3, %31.8, elided   <int$->
void                    Assume             D     %46.5, %46.6 (Typecheck@0x560a55e9f3c0[Type#58])
exact match
checkFor: int$-, static: int-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#59 [unused] int-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] int$-
optimized away (dependency)

Type#62 [used] int$-
int-            %48.3 = Extract1_1D        wed   %46.3, %31.7, elided   <int$->
void                    Assume             D     %48.4, %48.5 (Typecheck@0x560a55e9f3c0[Type#62])
exact match
checkFor: int$-, static: int-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#63 [used] vec-
val?^ | miss    %52.0 = LdVar              eR    dn, e1.3
void                    Assume             D     %52.1, %50.3 (Typecheck@0x560a55e9f3c0[Type#63])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] int$-
optimized away (dependency)

Type#66 [unused] vec$-
val?            %52.7 = Extract1_1D        wed   %52.4, %31.8, elided   <vec$->
dependent slot

Type#67 [unused] vec-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] int$-
optimized away (dependency)

Type#70 [unused] vec$-
val?            %52.9 = Extract1_1D        wed   %52.4, %31.7, elided   <vec$->
dependent slot

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] int$-
optimized away (dependency)

Type#73 [unused] real$-
real$-          %54.3 = CallSafeBuiltin    wed   prod(%35.1)    <real$->
dependent slot

Type#74 [unused] real$-
optimized away (dependency)

Type#75 [unused] lgl$-
lgl$-           %56.0 = Eq                 d     %54.3, 0L, elided   <lgl$->
dependent slot

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] $#-
optimized away (dependency)

Type#87 [unused] $#-
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] $#-
optimized away (dependency)

Type#90 [unused] $#-
optimized away (dependency)

Type#91 [unused] $#-
optimized away (dependency)

Type#92 [unused] $#-
optimized away (dependency)

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] $#-
optimized away (dependency)

Type#99 [unused] $#-
optimized away (dependency)

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [unused] $#-
optimized away (dependency)

Type#102 [unused] $#-
optimized away (dependency)

Type#103 [unused] $#-
optimized away (dependency)

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] $#-
optimized away (dependency)

Type#106 [unused] $#-
optimized away (dependency)

Type#107 [unused] $#-
optimized away (dependency)

Type#108 [unused] lgl+
val?            %57.5 = Force!<wrapped>    !v    %57.4, e1.3   <lgl+>
dependent slot

Type#109 [unused] int$-
optimized away (dependency)

Type#110 [unused] int$-
optimized away (dependency)

Type#111 [unused] int-
optimized away (dependency)

Type#112 [unused] lgl+
val?            %57.7 = StaticCall         !v    aperm[0x560a5f4e8060](%57.6, %57.3) { 0 1 } e1.3   <lgl+>
dependent slot

Type#113 [unused] $#-
optimized away (dependency)

Type#114 [unused] $#-
optimized away (dependency)

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

Type#117 [used] int$-
val?^ | miss    %59.6 = LdVar              eR    d.call, e1.3
void                    Assume             D     %59.7, %57.9 (Typecheck@0x560a55e9f3c0[Type#117])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#118 [unused] real$-
real$-          %59.10 = CallSafeBuiltin    wed   prod(%59.9)    <real$->
dependent slot

Type#119 [used] real$-
val?^ | miss    %61.0 = LdVar              eR    d2, e1.3
void                    Assume             D     %61.1, %59.11 (Typecheck@0x560a55e9f3c0[Type#119])
exact match
checkFor: real$-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?^ | miss

Type#120 [unused] real-
real-           %61.4 = CallSafeBuiltin    wed   c(%59.10, %61.3)    <real->
other unused reason

Type#121 [used] lgl+
val?^ | miss    %63.0 = LdVar              eR    newX, e1.3
void                    Assume             D     %63.1, %61.6 (Typecheck@0x560a55e9f3c0[Type#121])
exact match
checkFor: lgl+, static: val?^ | miss, feedback: lgl+, expected: lgl+, required: val?^ | miss

Type#122 [used] real$-
val?^ | miss    %65.3 = LdVar              eR    d2, e1.3
void                    Assume             D     %65.4, %63.6 (Typecheck@0x560a55e9f3c0[Type#122])
exact match
checkFor: real$-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?^ | miss

Type#123 [unused] vec$-
vec-            %65.7 = CallSafeBuiltin    wed   vector("list", %65.6)    <vec$->
dependent slot

Type#124 [unused] $#-
optimized away (dependency)

Type#125 [used] int$-
val?^ | miss    %67.3 = LdVar              eR    d.call, e1.3
void                    Assume             D     %67.4, %65.9 (Typecheck@0x560a55e9f3c0[Type#125])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#126 [unused] int$-
optimized away (dependency)

Type#127 [unused] lgl$-
optimized away (dependency)

Type#128 [unused] $#-
optimized away (dependency)

Type#129 [unused] $#-
optimized away (dependency)

Type#130 [unused] $#-
optimized away (dependency)

Type#131 [unused] $#-
optimized away (dependency)

Type#132 [unused] $#-
optimized away (dependency)

Type#133 [unused] $#-
optimized away (dependency)

Type#134 [unused] $#-
optimized away (dependency)

Type#135 [unused] $#-
optimized away (dependency)

Type#136 [unused] $#-
optimized away (dependency)

Type#137 [unused] $#-
optimized away (dependency)

Type#138 [unused] $#-
optimized away (dependency)

Type#139 [unused] $#-
optimized away (dependency)

Type#140 [unused] $#-
optimized away (dependency)

Type#141 [unused] $#-
optimized away (dependency)

Type#142 [unused] $#-
optimized away (dependency)

Type#143 [unused] $#-
optimized away (dependency)

Type#144 [unused] $#-
optimized away (dependency)

Type#145 [unused] $#-
optimized away (dependency)

Type#146 [unused] $#-
optimized away (dependency)

Type#147 [unused] $#-
optimized away (dependency)

Type#148 [unused] $#-
optimized away (dependency)

Type#149 [unused] $#-
optimized away (dependency)

Type#150 [unused] $#-
optimized away (dependency)

Type#151 [unused] $#-
optimized away (dependency)

Type#152 [unused] $#-
optimized away (dependency)

Type#153 [unused] $#-
optimized away (dependency)

Type#154 [unused] $#-
optimized away (dependency)

Type#155 [unused] $#-
optimized away (dependency)

Type#156 [unused] $#-
optimized away (dependency)

Type#157 [unused] $#-
optimized away (dependency)

Type#158 [unused] $#-
optimized away (dependency)

Type#159 [unused] $#-
optimized away (dependency)

Type#160 [unused] $#-
optimized away (dependency)

Type#161 [unused] $#-
optimized away (dependency)

Type#162 [unused] $#-
optimized away (dependency)

Type#163 [unused] $#-
optimized away (dependency)

Type#164 [unused] $#-
optimized away (dependency)

Type#165 [unused] $#-
optimized away (dependency)

Type#166 [unused] $#-
optimized away (dependency)

Type#167 [unused] $#-
optimized away (dependency)

Type#168 [unused] $#-
optimized away (dependency)

Type#169 [unused] $#-
optimized away (dependency)

Type#170 [unused] $#-
optimized away (dependency)

Type#171 [unused] $#-
optimized away (dependency)

Type#172 [unused] $#-
optimized away (dependency)

Type#173 [used] vec$-
val?^ | miss    %67.6 = LdVar              eR    dn.call, e1.3
void                    Assume             D     %67.7, %65.9 (Typecheck@0x560a55e9f3c0[Type#173])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#174 [used] int$-
(int|real)$-    %67.11 = CallSafeBuiltin    wed   length(%67.10)    <int$->
void                    Assume             D     %67.12, %67.13 (Typecheck@0x560a55e9f3c0[Type#174])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#175 [unused] $#-
optimized away (dependency)

Type#176 [unused] $#-
optimized away (dependency)

Type#177 [unused] vec$-
optimized away (dependency)

Type#178 [unused] vec$-
val+            %192.6 = CallSafeBuiltin    wed   list(nil)    <vec$->
dependent slot

Type#179 [unused] vec-
val+            %192.7 = CallSafeBuiltin    wed   c(%67.10, %192.6)    <vec->
dependent slot

Type#180 [used] lgl_
val?^ | miss    %194.0 = LdVar              eR    newX, e1.3
void                    Assume             D     %194.1, %192.9 (Typecheck@0x560a55e9f3c0[Type#180])
exact match
checkFor: lgl_, static: val?^ | miss, feedback: lgl_, expected: lgl_, required: val?^ | miss

Type#181 [used] real$-
val?^ | miss    %73.0 = LdVar              eR    d2, e1.3
void                    Assume             D     %73.1, %71.0 (Typecheck@0x560a55e9f3c0[Type#181])
exact match
checkFor: real$-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?^ | miss

Type#182 [unused] $#-
optimized away (dependency)

Type#183 [unused] $#-
optimized away (dependency)

Type#184 [unused] $#-
optimized away (dependency)

Type#185 [unused] $#-
optimized away (dependency)

Type#186 [unused] $#-
optimized away (dependency)

Type#187 [unused] $#-
optimized away (dependency)

Type#188 [unused] $#-
optimized away (dependency)

Type#189 [unused] $#-
optimized away (dependency)

Type#190 [unused] $#-
optimized away (dependency)

Type#191 [unused] $#-
optimized away (dependency)

Type#192 [unused] $#-
optimized away (dependency)

Type#193 [unused] $#-
optimized away (dependency)

Type#194 [unused] int$-
optimized away (dependency)

Type#195 [unused] int$-
int$#-          %73.6 = ColonCastRhs       e     1L, %73.3   <int$->
dependent slot

Type#196 [unused] blt-
val?            %75.4 = Force!<value>      !v    %75.3, e1.3   <blt->
dependent slot

Type#197 [unused] lgl+
optimized away (dependency)

Type#198 [unused] $#-
optimized away (dependency)

Type#199 [unused] int$-
optimized away (dependency)

Type#200 [unused] lgl+
optimized away (dependency)

Type#201 [used] lgl$-
val?            %75.8 = NamedCall          !v    <spec forceAndCall>(1, %75.4, %75.5, .xpandDotsTrigger=%75.7) e1.3   <lgl$->
void                    Assume             D     %75.10, %75.11 (Typecheck@0x560a55e9f3c0[Type#201])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#202 [unused] lgl$-
optimized away (dependency)

Type#203 [unused] lgl$-
optimized away (dependency)

Type#204 [used] vec$-
val?^ | miss    %191.0 = LdVar              eR    ans !upd, e1.3
void                    Assume             D     %191.1, %77.3 (Typecheck@0x560a55e9f3c0[Type#204])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#205 [used] int$-
val?^ | miss    %191.5 = LdVar              eR    i, e1.3
void                    Assume             D     %191.6, %77.3 (Typecheck@0x560a55e9f3c0[Type#205])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#206 [unused] $#-
optimized away (dependency)

Type#207 [unused] $#-
optimized away (dependency)

Type#208 [unused] $#-
optimized away (dependency)

Type#209 [unused] $#-
optimized away (dependency)

Type#210 [unused] $#-
optimized away (dependency)

Type#211 [unused] $#-
optimized away (dependency)

Type#212 [unused] $#-
optimized away (dependency)

Type#213 [unused] $#-
optimized away (dependency)

Type#214 [unused] $#-
optimized away (dependency)

Type#215 [unused] $#-
optimized away (dependency)

Type#216 [used] lgl$-
val?            %82.1 = Force!<value>      !v    %82.0, e1.3   <lgl$->
void                    Assume             D     %82.2, %82.3 (Typecheck@0x560a55e9f3c0[Type#216])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#217 [unused] $#-
optimized away (dependency)

Type#218 [unused] $#-
optimized away (dependency)

Type#219 [used] vec$-
val?^ | miss    %85.3 = LdVar              eR    ans, e1.3
void                    Assume             D     %85.4, %82.3 (Typecheck@0x560a55e9f3c0[Type#219])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#220 [used] lgl$-
val?            %85.10 = Extract2_1D        wed   %85.7, 1L, elided   <lgl$->
void                    Assume             D     %85.11, %85.12 (Typecheck@0x560a55e9f3c0[Type#220])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#221 [unused] lgl$-
lgl$#-          %87.2 = CallSafeBuiltin    wed   is.recursive(%87.1)    <lgl$->
dependent slot

Type#222 [unused] $#-
optimized away (dependency)

Type#223 [unused] $#-
optimized away (dependency)

Type#224 [used] vec$-
val?^ | miss    %90.3 = LdVar              eR    ans, e1.3
void                    Assume             D     %90.4, %88.2 (Typecheck@0x560a55e9f3c0[Type#224])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#225 [used] lgl$-
val?            %90.10 = Extract2_1D        wed   %90.7, 1L, elided   <lgl$->
void                    Assume             D     %90.11, %90.12 (Typecheck@0x560a55e9f3c0[Type#225])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#226 [unused] int$-
optimized away (dependency)

Type#227 [unused] $#-
optimized away (dependency)

Type#228 [unused] $#-
optimized away (dependency)

Type#229 [unused] vec$-
optimized away (dependency)

Type#230 [unused] lgl$-
optimized away (dependency)

Type#231 [unused] nil-
val+            %94.4 = CallSafeBuiltin    wed   names(%94.3)    <nil->
dependent slot

Type#232 [unused] lgl$-
optimized away (dependency)

Type#233 [unused] $#-
optimized away (dependency)

Type#234 [unused] $#-
optimized away (dependency)

Type#235 [unused] $#-
optimized away (dependency)

Type#236 [unused] $#-
optimized away (dependency)

Type#237 [unused] vec$-
optimized away (dependency)

Type#238 [used] int$-
val?            %184.7 = StaticCall         !v    lengths[0x560a5fac9160](%184.6) e1.3   <int$->
void                    Assume             D     %184.8, %184.9 (Typecheck@0x560a55e9f3c0[Type#238])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#239 [used] int$-
val?^ | miss    %186.2 = LdVar              eR    l.ans, e1.3
void                    Assume             D     %186.3, %184.9 (Typecheck@0x560a55e9f3c0[Type#239])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#240 [unused] lgl$-
lgl$-           %186.6 = Neq                d     %186.1, %186.5, elided   <lgl$->
dependent slot

Type#241 [used] lgl$-
val?            %186.7 = CallBuiltin        !v    any(%186.6) e1.3   <lgl$->
void                    Assume             D     %186.8, %186.9 (Typecheck@0x560a55e9f3c0[Type#241])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#242 [unused] lgl$-
optimized away (dependency)

Type#243 [unused] $#-
optimized away (dependency)

Type#244 [used] nil-
val?^ | miss    %101.3 = LdVar              eR    ans.names, e1.3
void                    Assume             D     %101.4, %98.1 (Typecheck@0x560a55e9f3c0[Type#244])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: nil-, expected: nil-, required: val?^ | miss

Type#245 [used] int$-
(int|real)$-    %101.8 = CallSafeBuiltin    wed   length(%101.7)    <int$->
void                    Assume             D     %101.9, %101.10 (Typecheck@0x560a55e9f3c0[Type#245])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#246 [unused] $#-
optimized away (dependency)

Type#247 [unused] $#-
optimized away (dependency)

Type#248 [unused] $#-
optimized away (dependency)

Type#249 [unused] $#-
optimized away (dependency)

Type#250 [unused] $#-
optimized away (dependency)

Type#251 [unused] lgl$-
optimized away (dependency)

Type#252 [unused] $#-
optimized away (dependency)

Type#253 [unused] $#-
optimized away (dependency)

Type#254 [unused] vec$-
optimized away (dependency)

Type#255 [used] lgl$-
val?            %109.7 = PopContext         C     %109.6, %108.7   <lgl$->
void                    Assume             D     %109.8, %109.9 (Typecheck@0x560a55e9f3c0[Type#255])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#256 [unused] int$-
optimized away (dependency)

Type#257 [unused] $#-
optimized away (dependency)

Type#258 [unused] $#-
optimized away (dependency)

Type#259 [used] int$-
val?^ | miss    %114.3 = LdVar              eR    MARGIN, e1.3
void                    Assume             D     %114.4, %112.2 (Typecheck2@0x560a55e9f3c0[Type#259])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?+

Type#260 [unused] int$-
optimized away (dependency)

Type#261 [unused] lgl$-
optimized away (dependency)

Type#262 [used] int$-
val             %114.6 = ChkMissing         e     %112.0
void                    Assume             D     %114.7, %112.2 (Typecheck@0x560a55e9f3c0[Type#262])
exact match
checkFor: int$-, static: val, feedback: int$-, expected: int$-, required: val?^ | miss

Type#263 [used] real$-
val?^ | miss    %114.10 = LdVar              eR    d2, e1.3
void                    Assume             D     %114.11, %112.2 (Typecheck@0x560a55e9f3c0[Type#263])
exact match
checkFor: real$-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?^ | miss

Type#264 [unused] lgl$-
lgl$-           %114.14 = Eq                 d     %114.9, %114.13, elided   <lgl$->
dependent slot

Type#265 [unused] $#-
optimized away (dependency)

Type#266 [unused] $#-
optimized away (dependency)

Type#267 [unused] $#-
optimized away (dependency)

Type#268 [unused] $#-
optimized away (dependency)

Type#269 [unused] $#-
optimized away (dependency)

Type#270 [unused] $#-
optimized away (dependency)

Type#271 [unused] $#-
optimized away (dependency)

Type#272 [unused] $#-
optimized away (dependency)

Type#273 [unused] $#-
optimized away (dependency)

Type#274 [unused] $#-
optimized away (dependency)

Type#275 [unused] $#-
optimized away (dependency)

Type#276 [unused] $#-
optimized away (dependency)

Type#277 [unused] $#-
optimized away (dependency)

Type#278 [unused] $#-
optimized away (dependency)

Type#279 [unused] $#-
optimized away (dependency)

Type#280 [unused] $#-
optimized away (dependency)

Type#281 [unused] $#-
optimized away (dependency)

Type#282 [unused] $#-
optimized away (dependency)

Type#283 [unused] $#-
optimized away (dependency)

Type#284 [unused] $#-
optimized away (dependency)

Type#285 [unused] $#-
optimized away (dependency)

Type#286 [unused] $#-
optimized away (dependency)

Type#287 [unused] $#-
optimized away (dependency)

Type#288 [unused] $#-
optimized away (dependency)

Type#289 [unused] $#-
optimized away (dependency)

Type#290 [unused] $#-
optimized away (dependency)

Type#291 [unused] $#-
optimized away (dependency)

Type#292 [unused] $#-
optimized away (dependency)

Type#293 [unused] $#-
optimized away (dependency)

Type#294 [unused] $#-
optimized away (dependency)

Type#295 [unused] $#-
optimized away (dependency)

Type#296 [unused] $#-
optimized away (dependency)

Type#297 [unused] $#-
optimized away (dependency)

Type#298 [unused] $#-
optimized away (dependency)

Type#299 [unused] $#-
optimized away (dependency)

Type#300 [unused] $#-
optimized away (dependency)

Type#301 [unused] $#-
optimized away (dependency)

Type#302 [unused] $#-
optimized away (dependency)

Type#303 [unused] $#-
optimized away (dependency)

Type#304 [unused] $#-
optimized away (dependency)

Type#305 [unused] $#-
optimized away (dependency)

Type#306 [unused] $#-
optimized away (dependency)

Type#307 [unused] $#-
optimized away (dependency)

Type#308 [unused] $#-
optimized away (dependency)

Type#309 [unused] $#-
optimized away (dependency)

Type#310 [unused] $#-
optimized away (dependency)

Type#311 [unused] $#-
optimized away (dependency)

Type#312 [unused] $#-
optimized away (dependency)

Type#313 [unused] $#-
optimized away (dependency)

Type#314 [unused] $#-
optimized away (dependency)

Type#315 [unused] $#-
optimized away (dependency)

Type#316 [unused] $#-
optimized away (dependency)

Type#317 [unused] $#-
optimized away (dependency)

Type#318 [unused] $#-
optimized away (dependency)

Type#319 [unused] $#-
optimized away (dependency)

Type#320 [unused] $#-
optimized away (dependency)

Type#321 [unused] $#-
optimized away (dependency)

Type#322 [unused] $#-
optimized away (dependency)

Type#323 [unused] $#-
optimized away (dependency)

Type#324 [unused] $#-
optimized away (dependency)

Type#325 [unused] $#-
optimized away (dependency)

Type#326 [unused] $#-
optimized away (dependency)

Type#327 [unused] $#-
optimized away (dependency)

Type#328 [used] vec$-
val?^ | miss    %165.0 = LdVar              eR    dn.ans, e1.3
void                    Assume             D     %165.1, %112.2 (Typecheck@0x560a55e9f3c0[Type#328])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#329 [used] nil-
val?            %165.7 = Extract2_1D        wed   %165.4, 1L, elided   <nil->
void                    Assume             D     %165.8, %165.9 (Typecheck@0x560a55e9f3c0[Type#329])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: nil-, expected: nil-, required: val?+

Type#330 [used] int$-
(int|real)$-    %167.2 = CallSafeBuiltin    wed   length(%167.1)    <int$->
void                    Assume             D     %167.3, %167.4 (Typecheck@0x560a55e9f3c0[Type#330])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#331 [unused] $#-
optimized away (dependency)

Type#332 [unused] $#-
optimized away (dependency)

Type#333 [used] lgl$-
val?^ | miss    %173.0 = LdVar              eR    ans, e1.3
void                    Assume             D     %173.1, %171.2 (Typecheck@0x560a55e9f3c0[Type#333])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#334 [used] lgl$-
val?            %173.4 = NamedCall          !v    %171.1(%173.3, value=%171.0) e1.3   <lgl$->
void                    Assume             D     %173.5, %173.6 (Typecheck@0x560a55e9f3c0[Type#334])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: unlist [0x560a55eb29b0]
referenced: 27
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 5
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec+ (polluted)
val?            %108.12 = Force!<lazy>       !vL   %108.8, e108.9   <vec+>
dependent slot

Type#1 [unused] lgl$-
optimized away (dependency)

Type#2 [unused] vec+ (polluted)
val?            %109.1 = Force!<wrapped>    !v    %109.0, e108.9   <vec+>
dependent slot

Type#3 [unused] lgl$-
val?            %109.3 = Force!<wrapped>    !v    %109.2, e108.9   <lgl$->
dependent slot

Type#4 [unused] lgl$-
val?            %109.5 = Force!<lazy>       !v    %109.4, e108.9   <lgl$->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: vector [0x560a55e99e90]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] (int|real)$- (polluted)
optimized away

----------------------
Inlinee: isTRUE [0x560a55e9e1e0]
referenced: 11
referenced non-empty: 8
read non-empty: 7
used: 3
present non-empty: 1

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 4
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (nil|lgl)- (polluted)
optimized away

Type#2 [used] lgl$-
val+            %2.7  = CallSafeBuiltin    wed   is.logical(%2.4)    <lgl$->
void                    Assume             D     %2.8, %2.9 (Typecheck@0x560a55e9bc50[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %2.4  = Force!<lazy>       !v    %2.3, e1.3   <lgl$->
void                    Assume             D     %5.3, %2.9 (Typecheck@0x560a55e9bc50[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %2.4  = Force!<lazy>       !v    %2.3, e1.3   <lgl$->
void                    Assume             D     %7.3, %2.9 (Typecheck@0x560a55e9bc50[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %7.6  = CallSafeBuiltin    wed   is.na(%7.5)    <lgl$->
dependent slot

Type#10 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: normalizePath (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj1,!Obj2) ***********************
======================= ClosureVersion: normalizePath (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj1,!Obj2) =======================
referenced: 5
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
normalizePath [0x560a564cb990]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] str$-
val?            %1.10 = PopContext         C     %1.9, %1.5   <str$->
dependent slot

Type#2 [unused] str$-
val?            %1.12 = Force!<value>      !v    %1.11, e1.3   <str$->
dependent slot

Type#3 [unused] lgl$-
val?            %1.14 = Force!<value>      !v    %1.13, e1.3   <lgl$->
other unused reason

----------------------
Inlinee: path.expand [0x560a56619660]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val?            %1.8  = Force!<lazy>       !vL   %1.6, e1.7   <str$->
other unused reason

*********************** Compilation session for: matrix (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2,SimpleInt1,SimpleInt2 miss: 2) ***********************
======================= ClosureVersion: matrix (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2,SimpleInt1,SimpleInt2 miss: 2) =======================
referenced: 13
referenced non-empty: 9
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 5
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

----------------------
matrix [0x560a56720ee0]
referenced: 13
referenced non-empty: 9
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 5
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$-
val+            %1.3  = Force!<value>            %1.2,    <str$->
dependent slot

Type#5 [unused] lgl$-
lgl$#-          %1.4  = CallSafeBuiltin    wed   is.atomic(%1.3)    <lgl$->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] str$-
optimized away (dependency)

Type#9 [unused] (int|real)$- (polluted)
int$-           %1.5  = Force!<value>            %1.1,    <(int|real)$->
dependent slot

Type#10 [unused] (int|real)$- (polluted)
int$-           %1.6  = Force!<value>            %1.0,    <(int|real)$->
dependent slot

Type#11 [unused] lgl$-
optimized away (dependency)

Type#12 [unused] nil-
optimized away

*********************** Compilation session for: strsplit (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1 miss: 3) ***********************
======================= ClosureVersion: strsplit (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1 miss: 3) =======================
referenced: 7
referenced non-empty: 6
read non-empty: 3
used: 2
present non-empty: 1

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 4
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
strsplit [0x560a55f04d60]
referenced: 7
referenced non-empty: 6
read non-empty: 3
used: 2
present non-empty: 1

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 4
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] str$-
val?            %1.3  = Force!<lazy>       !vL   %1.1, e1.2   <str$->
void                    Assume             D     %1.4, %1.7 (Typecheck@0x560a55f05820[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

Type#1 [unused] $#-
optimized away

Type#2 [used] str$-
val?+           %1.5  = Force!<value>            %1.0,    <str$->
void                    Assume             D     %1.6, %1.7 (Typecheck@0x560a55f05820[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?+, feedback: str$-, expected: str$-, required: val?+

Type#3 [unused] str$-
val+            %2.6  = CallSafeBuiltin    wed   as.character(%2.5)    <str$->
dependent slot

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: nchar (!ExpMi,CorrOrd,!TMany,Argmatch miss: 3) ***********************
======================= ClosureVersion: nchar (!ExpMi,CorrOrd,!TMany,Argmatch miss: 3) =======================
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

----------------------
nchar [0x560a560bc4c0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

Type#0 [used] str+ (polluted)
val?            %1.2  = Force!<lazy>       !vL   %1.0, e1.1   <str+>
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a5601d340[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?^ | miss

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: vapply (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl0,NonRefl2,!Obj0,!Obj2 miss: 2) ***********************
======================= ClosureVersion: vapply (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl0,NonRefl2,!Obj0,!Obj2 miss: 2) =======================
referenced: 17
referenced non-empty: 11
read non-empty: 10
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 11
optimized away non-empty: 3
dependent: 4
other reasons unused non-empty: 7

Polluted
polluted: 7
used polluted: 0

----------------------
vapply [0x560a5607f4e0]
referenced: 15
referenced non-empty: 9
read non-empty: 9
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 1
dependent: 4
other reasons unused non-empty: 5

Polluted
polluted: 6
used polluted: 0

Type#0 [unused] (cls|blt)- (polluted)
optimized away (dependency)

Type#1 [unused] (cls|blt)- (polluted)
val?            %1.5  = StaticCall         !v    match.fun[0x560a5fbc40e0](%1.4) e1.3   <(cls|blt)->
dependent slot

Type#2 [unused] val? (polluted)
val?            %2.4  = Force!<lazy>       !v    %2.3, e1.3   <val?>
other unused reason

Type#3 [unused] lgl$-
lgl$#-          %2.5  = CallSafeBuiltin    vwed  is.vector(%2.4, "any")    <lgl$->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] (str|vec)+ (polluted)
val?            %12.4 = Force!<wrapped>    !v    %12.3, e1.3   <(str|vec)+>
other unused reason

Type#6 [unused] lgl$-
lgl$#-          %12.5 = CallSafeBuiltin    vwed  is.object(%12.4)    <lgl$->
dependent slot

Type#7 [unused] (nil|vec) (polluted)
val?            %11.5 = Force!<wrapped>    !     %11.3, e1.3   <(nil|vec)>
other unused reason

Type#8 [unused] vec
val?            %11.6 = StaticCall         !     as.list[0x560a5f579700](%11.5) { 0 } e1.3   <vec>
other unused reason

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] val?+ (polluted)
val?            %10.2 = Call               !     %10.0(%10.1) e1.3   <val?+>
other unused reason

----------------------
Inlinee: is.vector [0x560a55e6f180]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (str|vec) (polluted)
optimized away

Type#1 [unused] str$-
optimized away

*********************** Compilation session for: list2env (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,!Obj1) ***********************
======================= ClosureVersion: list2env (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,!Obj1) =======================
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
list2env [0x560a58761370]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [used] vec+
val?            %1.3  = Force!<lazy>       !v    %1.1, e1.2   <vec+>
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a5863a650[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?^ | miss

Type#1 [unused] env-
val?            %2.3  = Force!<lazy>       !v    %2.2, e1.2   <env->
other unused reason

*********************** Compilation session for: nrow (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: nrow (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 4
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
nrow [0x560a569e0e60]
referenced: 4
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (str|vec) (polluted)
val+            %1.1  = Force!<lazy>       !vr   %1.0,    <(str|vec)>
other unused reason

Type#2 [unused] int-
val+            %1.2  = CallSafeBuiltin    wed   dim(%1.1)    <int->
other unused reason

Type#3 [used] int$-
val?            %1.3  = Extract1_1D        wed   %1.2, 1L, elided   <int$->
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a56a77a90[Type#3])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

*********************** Compilation session for: lockEnvironment (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1) ***********************
======================= ClosureVersion: lockEnvironment (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1) =======================
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

----------------------
lockEnvironment [0x560a573e66d0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

Type#0 [used] env+ (polluted)
val?            %1.3  = Force!<lazy>       !v    %1.1, e1.2   <env+>
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a56217530[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: env+, expected: env+, required: val?^ | miss

Type#1 [unused] lgl$-
val?            %2.3  = Force!<value>      !v    %2.2, e1.2   <lgl$->
other unused reason

*********************** Compilation session for: packageEvent (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: packageEvent (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 21
referenced non-empty: 19
read non-empty: 13
used: 1
present non-empty: 6

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 18
optimized away non-empty: 12
dependent: 12
other reasons unused non-empty: 6

Polluted
polluted: 4
used polluted: 0

----------------------
packageEvent [0x560a570c4360]
referenced: 10
referenced non-empty: 9
read non-empty: 9
used: 1
present non-empty: 5

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 3
dependent: 6
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] str$-
val?            %1.4  = StaticCall         !v    match.arg[0x560a60163d70](%1.3, <str [1] "onLoad" "attach" "detach" "onUnload">) e1.2   <str$->
dependent slot

Type#3 [unused] str$+ (polluted)
val?            %2.4  = Force!<lazy>       !v    %2.3, e1.2   <str$+>
other unused reason

Type#4 [unused] vec$+ (polluted)
vec+            %2.5  = CallSafeBuiltin    wed   strsplit(%2.4, "_", true, false, false)    <vec$+>
other unused reason

Type#5 [used] str$-
val?            %2.6  = Extract2_1D        wed   %2.5, 1L, elided   <str$->
void                    Assume             D     %2.8, %2.9 (Typecheck@0x560a56c3dcb0[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#6 [unused] str$-
val?            %4.3  = Extract1_1D        wed   %4.2, 1L, elided   <str$->
dependent slot

Type#7 [unused] str$-
optimized away (dependency)

Type#8 [unused] str$-
optimized away (dependency)

Type#9 [unused] str$-
val+            %6.10 = CallSafeBuiltin    vwed  paste(%6.9, "::", nil, false)    <str$->
dependent slot

----------------------
Inlinee: paste [0x560a55fd8390]
referenced: 4
referenced non-empty: 4
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec- (polluted)
val+            %6.9  = CallSafeBuiltin    wed   list("UserHook", %4.3, %6.8)    <vec->
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] (nil|str)- (polluted)
optimized away

Type#3 [unused] lgl$-
optimized away

----------------------
Inlinee: strsplit [0x560a55f04d60]
referenced: 7
referenced non-empty: 6
read non-empty: 3
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 6
dependent: 6
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: try (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) ***********************
======================= ClosureVersion: tryCatch (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1 miss: 1) =======================
referenced: 53
referenced non-empty: 26
read non-empty: 26
used: 7
present non-empty: 7

Used
exact match: 3
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 12
dependent: 15
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

----------------------
tryCatch [0x560a55e7cc60]
referenced: 18
referenced non-empty: 14
read non-empty: 14
used: 5
present non-empty: 4

Used
exact match: 2
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 5
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] vec$+
val?            %1.8  = NamedCall          !v    <blt list>(.xpandDotsTrigger=%1.5) e1.2   <vec$+>
void                    Assume             D     %1.10, %1.11 (Typecheck@0x560a55e7cb60[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec$+, expected: vec$+, required: val?+

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec$+
optimized away (dependency)

Type#4 [unused] str$-
val+            %2.6  = CallSafeBuiltin    wed   names(%2.5)    <str$->
dependent slot

Type#5 [unused] env-
val?            %4.3  = StaticCall         !v    parent.frame[0x560a60d9b860]() e1.2   <env->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [used] str$-
val?^ | miss    %6.3  = LdVar              eR    classes, e1.2
void                    Assume             D     %6.4, %4.5 (Typecheck@0x560a55e7cb60[Type#7])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#8 [used] int$-
(int|real)$-    %6.8  = CallSafeBuiltin    wed   length(%6.7)    <int$->
void                    Assume             D     %6.9, %6.10 (Typecheck@0x560a55e7cb60[Type#8])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [used] vec$+
val?^ | miss    %8.2  = LdVar              eR    handlers, e1.2
void                    Assume             D     %8.3, %6.10 (Typecheck@0x560a55e7cb60[Type#10])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: vec$+, expected: vec$+, required: val?^ | miss

Type#11 [used] int$-
(int|real)$-    %8.7  = CallSafeBuiltin    wed   length(%8.6)    <int$->
void                    Assume             D     %8.8, %8.9 (Typecheck@0x560a55e7cb60[Type#11])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#12 [unused] lgl$-
lgl$-           %10.2 = Neq                d     %8.1, %10.1, elided   <lgl$->
other unused reason

Type#13 [unused] val?+ (polluted)
optimized away (dependency)

Type#14 [unused] str$-
optimized away (dependency)

Type#15 [unused] env-
optimized away (dependency)

Type#16 [unused] vec$+
optimized away (dependency)

Type#17 [unused] val?+ (polluted)
val?            %25.1 = PopContext         C     %25.0, %14.7   <val?+>
dependent slot

----------------------
Inlinee: tryCatchList [0x560a55e78ea0]
referenced: 35
referenced non-empty: 12
read non-empty: 12
used: 2
present non-empty: 3

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 10
optimized away non-empty: 7
dependent: 7
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str$-
val?            %16.2 = Force!<lazy>       !vL   %14.10, e16.1   <str$->
void                    Assume             D     %16.3, %16.4 (Typecheck@0x560a55e78d90[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#2 [used] int$-
(int|real)$-    %18.2 = CallSafeBuiltin    wed   length(%18.1)    <int$->
void                    Assume             D     %18.3, %18.4 (Typecheck@0x560a55e78d90[Type#2])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#3 [unused] int$-
optimized away (dependency)

Type#4 [unused] lgl$-
lgl$-           %22.0 = Gt                 d     %20.1, 1L, elided   <lgl$->
dependent slot

Type#5 [unused] int$-
optimized away (dependency)

Type#6 [unused] lgl$-
lgl$-           %23.1 = Eq                 vd    %20.1, 1L, elided   <lgl$->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] val?+ (polluted)
optimized away (dependency)

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [unused] env-
optimized away

Type#11 [unused] vec$+
optimized away

Type#12 [unused] cls-
optimized away

Type#13 [unused] val?+ (polluted)
val?            %26.11 = StaticCall         !     tryCatchOne[0x560a60db5590](%26.6, %26.7, %26.8, %26.9) from %26.10 e16.1   <val?+>
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

======================= ClosureVersion: try (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 4
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

----------------------
try [0x560a56e27790]
referenced: 4
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] (nil|vec)+ (polluted)
optimized away (dependency)

Type#3 [unused] (nil|vec)+ (polluted)
val?            %1.10 = StaticCall         !     tryCatch[0x560a60d9ac00](%1.7, %1.9) { 0 1n } e1.2   <(nil|vec)+>
dependent slot

*********************** Compilation session for: do.call (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2) ***********************
======================= ClosureVersion: do.call (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2) =======================
referenced: 9
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 3
used polluted: 1

----------------------
do.call [0x560a55e919d0]
referenced: 9
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 3
used polluted: 1

Type#0 [unused] env-
optimized away (dependency)

Type#1 [used] vec+ (polluted)
val?            %1.6  = Force!<lazy>       !v    %1.0, e1.2   <vec+>
void                    Assume             D     %1.8, %1.9 (Typecheck@0x560a55e918c0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?^ | miss

Type#2 [unused] lgl$-
val?            %3.1  = Force!<lazy>       !v    %3.0, e1.2   <lgl$->
other unused reason

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] (str|cls)- (polluted)
val?            %4.1  = Force!<lazy>       !v    %4.0, e1.2   <(str|cls)->
other unused reason

Type#7 [unused] vec+ (polluted)
val?            %4.3  = Force!<wrapped>    !v    %4.2, e1.2   <vec+>
dependent slot

Type#8 [unused] env-
val?            %4.6  = Force!<lazy>       !     %4.4, e1.2   <env->
dependent slot

*********************** Compilation session for: .make_numeric_version (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 1) ***********************
======================= ClosureVersion: .make_numeric_version (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 1) =======================
referenced: 51
referenced non-empty: 32
read non-empty: 31
used: 11
present non-empty: 9

Used
exact match: 4
widened: 6
narrowed: 1
widened narrowed: 0

Unused
unused non-empty: 21
optimized away non-empty: 12
dependent: 17
other reasons unused non-empty: 4

Polluted
polluted: 6
used polluted: 3

----------------------
.make_numeric_version [0x560a55ef49f0]
referenced: 48
referenced non-empty: 29
read non-empty: 29
used: 9
present non-empty: 9

Used
exact match: 4
widened: 5
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 20
optimized away non-empty: 11
dependent: 17
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$+ (polluted)
val+            %1.4  = Force!<lazy>       !vr   %1.2,    <str$+>
dependent slot

Type#2 [unused] (nil|str)- (polluted)
val+            %1.5  = CallSafeBuiltin    wed   names(%1.4)    <(nil|str)->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$+ (polluted)
optimized away (dependency)

Type#5 [unused] str$-
val+            %1.7  = CallSafeBuiltin    wed   as.character(%1.4)    <str$->
dependent slot

Type#6 [unused] int-
int-            %1.9  = StaticCall         !vr   unknown--fromConstant[0x560a6057b740]() from function(length=0L) <(rir::DispatchTable*)0x56|...    <int->
other unused reason

Type#7 [unused] vec$-
val+            %1.10 = CallSafeBuiltin    wed   list(%1.9)    <vec$->
dependent slot

Type#8 [unused] str$-
optimized away (dependency)

Type#9 [unused] int$-
int$-           %2.3  = CastType           d     dn %1.11   <int$->
dependent slot

Type#10 [unused] vec$-
val+            %2.4  = CallSafeBuiltin    wed   rep.int(%2.1, %2.3)    <vec$->
dependent slot

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [unused] str$-
val?            %2.13 = PopContext         C     %2.12, %2.8   <str$->
dependent slot

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [used] str$-
val?            %4.4  = Force!<value>      !v    %4.3, e1.3   <str$->
void                    Assume             D     %4.5, %4.6 (Typecheck@0x560a55ef48e0[Type#14])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#15 [used] int$-
(int|real)$-    %6.2  = CallSafeBuiltin    wed   length(%6.1)    <int$->
void                    Assume             D     %6.3, %6.4 (Typecheck@0x560a55ef48e0[Type#15])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#16 [unused] str$-
optimized away (dependency)

Type#17 [unused] str$-
optimized away (dependency)

Type#18 [used] lgl$-
val?            %15.5 = StaticCall         !v    grepl[0x560a60301200](%15.3, %15.4) e1.3   <lgl$->
void                    Assume             D     %15.6, %15.7 (Typecheck@0x560a55ef48e0[Type#18])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] lgl$-
optimized away (dependency)

Type#21 [used] lgl$-
val?            %19.3 = CallBuiltin        !v    all(%17.1) e1.3   <lgl$->
void                    Assume             D     %19.4, %19.5 (Typecheck@0x560a55ef48e0[Type#21])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] str$-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] lgl$-
optimized away (dependency)

Type#34 [unused] str$-
optimized away (dependency)

Type#35 [unused] vec$-
optimized away (dependency)

Type#36 [unused] blt-
optimized away

Type#37 [used] vec$-
val?            %26.5 = StaticCall         !v    lapply[0x560a604bdd50](%26.3, %26.4) { 0 1 } e1.3   <vec$->
void                    Assume             D     %26.6, %26.7 (Typecheck@0x560a55ef48e0[Type#37])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#38 [used] vec$-
val?^ | miss    %28.0 = LdVar              eR    y !upd, e1.3
void                    Assume             D     %28.1, %26.7 (Typecheck@0x560a55ef48e0[Type#38])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#39 [used] lgl$-
val?^ | miss    %28.5 = LdVar              eR    ok, e1.3
void                    Assume             D     %28.6, %26.7 (Typecheck@0x560a55ef48e0[Type#39])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#40 [used] (nil|str)- (polluted)
val?^ | miss    %12.0 = LdVar              eR    nms, e1.3
void                    Assume             D     %12.1, %10.0 (Typecheck@0x560a55ef48e0[Type#40])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: (nil|str)-, expected: (nil|str)-, required: val?^ | miss

Type#41 [used] vec$-
val?^ | miss    %14.0 = LdVar              eR    y, e1.3
void                    Assume             D     %14.1, %12.6 (Typecheck@0x560a55ef48e0[Type#41])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] vec$
val?            %14.13 = Force!<value>      !     %14.11, e1.3   <vec$>
other unused reason

----------------------
Inlinee: sprintf [0x560a55effc10]
referenced: 1
referenced non-empty: 1
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

----------------------
Inlinee: rep.int [0x560a55ef9c20]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 2
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 1
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 2

Type#0 [used] (int|vec)- (polluted)
val+            %1.10 = CallSafeBuiltin    wed   list(%1.9)    <vec$->
void                    Assume             D     %1.13, %1.14 (Typecheck@0x560a55ef47e0[Type#0])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: (int|vec)-, expected: (int|vec)-, required: val?+

Type#1 [used] int- (polluted)
(int|real)$-    %1.11 = CallSafeBuiltin    wed   length(%1.7)    <int$->
void                    Assume             D     %1.12, %1.14 (Typecheck@0x560a55ef47e0[Type#1])
narrowed with static type: yes
widened: no
checkFor: int$-, static: (int|real)$-, feedback: int-, expected: int$-, required: val?+

*********************** Compilation session for: which (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) ***********************
======================= ClosureVersion: which (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 12
referenced non-empty: 3
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 1

----------------------
which [0x560a56086380]
referenced: 12
referenced non-empty: 3
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 1

Type#0 [used] lgl+ (polluted)
val?            %1.2  = Force!<lazy>       !vL   %1.0, e1.1   <lgl+>
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a560cb7f0[Type#0])
exact match
checkFor: lgl+, static: val?, feedback: lgl+, expected: lgl+, required: val?^ | miss

Type#1 [unused] lgl$-
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] int+ (polluted)
val+            %2.4  = CallSafeBuiltin    wed   which(%2.1)    <int+>
other unused reason

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: NextMethod (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2) ***********************
======================= ClosureVersion: NextMethod (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2) =======================
referenced: 4
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
NextMethod [0x560a56115ce0]
referenced: 4
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] lgl$+ (polluted)
val?            %1.4  = Call               !     <spec .Internal>(%1.3) e1.2   <lgl$+>
other unused reason

*********************** Compilation session for: split (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) ***********************
======================= ClosureVersion: split (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
split [0x560a55f0cec0]
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

*********************** Compilation session for: .encode_numeric_version (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: .encode_numeric_version (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 158
referenced non-empty: 92
read non-empty: 87
used: 12
present non-empty: 38

Used
exact match: 7
widened: 5
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 80
optimized away non-empty: 42
dependent: 61
other reasons unused non-empty: 19

Polluted
polluted: 43
used polluted: 4

----------------------
.encode_numeric_version [0x560a55f1f1e0]
referenced: 39
referenced non-empty: 33
read non-empty: 33
used: 2
present non-empty: 13

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 31
optimized away non-empty: 18
dependent: 29
other reasons unused non-empty: 2

Polluted
polluted: 21
used polluted: 1

Type#0 [unused] vec
optimized away (dependency)

Type#1 [used] lgl$-
val?            %2.2  = PopContext         C     %2.1, %1.7   <lgl$->
void                    Assume             D     %2.3, %2.4 (Typecheck@0x560a55f1f0f0[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %5.4  = Force!<wrapped>    !v    %5.3, e1.1   <vec>
dependent slot

Type#4 [unused] str- (polluted)
val?            %5.5  = CallBuiltin        !v    class(%5.4) e1.1   <str->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] vec
val?            %7.4  = Force!<wrapped>    !v    %7.3, e1.1   <vec>
dependent slot

Type#7 [unused] (nil|str)- (polluted)
val?            %7.5  = CallBuiltin        !v    names(%7.4) e1.1   <(nil|str)->
dependent slot

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] vec
val?            %9.4  = Force!<wrapped>    !v    %9.3, e1.1   <vec>
dependent slot

Type#10 [unused] vec+ (polluted)
val?            %9.5  = CallBuiltin        !v    unclass(%9.4) e1.1   <vec+>
dependent slot

Type#11 [unused] vec+ (polluted)
optimized away (dependency)

Type#12 [unused] blt-
optimized away

Type#13 [unused] int+ (polluted)
val?            %21.3 = PopContext         C     %21.2, %11.5   <int+>
dependent slot

Type#14 [unused] vec+ (polluted)
optimized away (dependency)

Type#15 [unused] vec+ (polluted)
val?            %23.6 = StaticCall         !v    lapply[0x560a60a50dd0](%23.3, %23.5) { 0 1 } e1.1   <vec+>
dependent slot

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] vec+ (polluted)
optimized away (dependency)

Type#20 [unused] str+ (polluted)
val?            %26.7 = PopContext         C     %26.6, %25.10   <str+>
dependent slot

Type#21 [used] int+ (polluted)
val+            %28.2 = CallSafeBuiltin    wed   nchar(%28.1, "chars", false, na-lgl)    <int+>
void                    Assume             D     %28.3, %28.4 (Typecheck@0x560a55f1f0f0[Type#21])
exact match
checkFor: int+, static: val+, feedback: int+, expected: int+, required: val?+

Type#22 [unused] int$-
int$-           %30.2 = CallSafeBuiltin    wed   max(%30.1, 0L)    <int$->
dependent slot

Type#23 [unused] vec+ (polluted)
optimized away (dependency)

Type#24 [unused] str+ (polluted)
val?            %42.3 = PopContext         C     %42.2, %32.6   <str+>
dependent slot

Type#25 [unused] str+ (polluted)
optimized away (dependency)

Type#26 [unused] str+ (polluted)
optimized away (dependency)

Type#27 [unused] int+ (polluted)
optimized away (dependency)

Type#28 [unused] int$-
optimized away (dependency)

Type#29 [unused] str-
val?            %46.16 = PopContext         C     %46.15, %44.5   <str->
dependent slot

Type#30 [unused] int+ (polluted)
optimized away (dependency)

Type#31 [unused] lgl+ (polluted)
optimized away

Type#32 [unused] str-
optimized away (dependency)

Type#33 [unused] str+ (polluted)
optimized away (dependency)

Type#34 [unused] int$-
optimized away (dependency)

Type#35 [unused] int+ (polluted)
optimized away (dependency)

Type#36 [unused] str- (polluted)
optimized away (dependency)

Type#37 [unused] (nil|str)- (polluted)
optimized away (dependency)

Type#38 [unused] str+
val?            %55.3 = PopContext         C     %55.2, %48.9   <str+>
dependent slot

----------------------
Inlinee: unlist [0x560a55eb29b0]
referenced: 27
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 5
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec+ (polluted)
val?            %25.15 = Force!<lazy>       !vrL  %25.11, e25.12   <vec+>
dependent slot

Type#1 [unused] lgl$-
optimized away (dependency)

Type#2 [unused] vec+ (polluted)
val?            %26.1 = Force!<wrapped>    !v    %26.0, e25.12   <vec+>
dependent slot

Type#3 [unused] lgl$-
val?            %26.3 = Force!<wrapped>    !v    %26.2, e25.12   <lgl$->
dependent slot

Type#4 [unused] lgl$-
val?            %26.5 = Force!<lazy>       !v    %26.4, e25.12   <lgl$->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: paste0 [0x560a55fc8790]
referenced: 3
referenced non-empty: 3
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec-
val+            %46.13 = CallSafeBuiltin    wed   list(%46.11, %46.12)    <vec->
other unused reason

Type#1 [unused] nil-
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: is.vector [0x560a55e6f180]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (str|vec) (polluted)
optimized away

Type#1 [unused] str$-
optimized away

----------------------
Inlinee: strrpad [0x560a55f1a120]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 7
dependent: 6
other reasons unused non-empty: 2

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] str+ (polluted)
optimized away (dependency)

Type#1 [unused] str$-
optimized away

Type#2 [unused] int$-
optimized away

Type#3 [unused] str+ (polluted)
optimized away (dependency)

Type#4 [unused] int+ (polluted)
optimized away (dependency)

Type#5 [unused] int+ (polluted)
optimized away (dependency)

Type#6 [unused] str-
optimized away (dependency)

Type#7 [unused] str-
val?            %46.15 = PopContext         C     %46.14, %46.7   <str->
dependent slot

----------------------
Inlinee: nchar [0x560a560bc4c0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

Type#0 [used] str+ (polluted)
val?            %26.7 = PopContext         C     %26.6, %25.10   <str+>
void                    Assume             D     %26.8, %26.9 (Typecheck@0x560a5601d340[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?+

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %1.14 = Force!<lazy>       !vr   %1.12,    <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: vapply [0x560a5607f4e0]
referenced: 15
referenced non-empty: 9
read non-empty: 9
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 1
dependent: 4
other reasons unused non-empty: 5

Polluted
polluted: 6
used polluted: 0

Type#0 [unused] (cls|blt)- (polluted)
optimized away (dependency)

Type#1 [unused] (cls|blt)- (polluted)
val?            %32.11 = StaticCall         !v    match.fun[0x560a608d40f0](%32.10) e32.9   <(cls|blt)->
dependent slot

Type#2 [unused] val? (polluted)
val?            %34.4 = Force!<lazy>       !v    %34.3, e32.9   <val?>
other unused reason

Type#3 [unused] lgl$-
lgl$#-          %34.5 = CallSafeBuiltin    wed   is.vector(%34.4, "any")    <lgl$->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] (str|vec)+ (polluted)
val?            %83.4 = Force!<wrapped>    !v    %83.3, e32.9   <(str|vec)+>
other unused reason

Type#6 [unused] lgl$-
lgl$#-          %83.5 = CallSafeBuiltin    wed   is.object(%83.4)    <lgl$->
dependent slot

Type#7 [unused] (nil|vec) (polluted)
val?            %82.4 = Force!<wrapped>    !v    %82.3, e32.9   <(nil|vec)>
other unused reason

Type#8 [unused] vec
val?            %82.5 = StaticCall         !v    as.list[0x560a608554e0](%82.4) { 0 } e32.9   <vec>
other unused reason

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] val?+ (polluted)
val?            %42.2 = Call               !v    %42.0(%42.1) e32.9   <val?+>
other unused reason

----------------------
Inlinee: is.numeric_version [0x560a55f0ec30]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] vec (polluted)
optimized away

Type#1 [used] lgl$-
val?            %1.16 = PopContext         C     %1.15, %1.11   <lgl$->
void                    Assume             D     %1.17, %1.18 (Typecheck@0x560a55f0eb40[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: structure [0x560a55eda070]
referenced: 55
referenced non-empty: 23
read non-empty: 21
used: 8
present non-empty: 10

Used
exact match: 4
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 5
dependent: 15
other reasons unused non-empty: 0

Polluted
polluted: 6
used polluted: 2

Type#0 [unused] (str|vec) (polluted)
val?            %48.12 = Force!<lazy>       !vL   %48.10, e48.11   <(str|vec)>
dependent slot

Type#1 [used] vec+
val?            %49.0 = NamedCall          !v    <blt list>(width=%48.4, lens=%48.5, .classes=%48.6, names=%48.7) e48.11   <vec+>
void                    Assume             D     %49.2, %49.3 (Typecheck@0x560a55eda190[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec+
optimized away (dependency)

Type#4 [used] int$-
(int|real)$-    %51.6 = CallSafeBuiltin    wed   length(%51.5)    <int$->
void                    Assume             D     %51.7, %51.8 (Typecheck@0x560a55eda190[Type#4])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#5 [unused] str-
str-            %56.3 = CallSafeBuiltin    wed   c(".Dim", ".Dimnames", ".Names", ".Tsp", ".Label")    <str->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] vec+
optimized away (dependency)

Type#8 [unused] str-
val+            %58.3 = CallSafeBuiltin    wed   names(%51.5)    <str->
dependent slot

Type#9 [unused] str-
optimized away (dependency)

Type#10 [unused] str-
optimized away (dependency)

Type#11 [used] int-
val?            %60.5 = StaticCall         !v    match[0x560a60abc850](%60.3, %60.4) e48.11   <int->
void                    Assume             D     %60.7, %60.8 (Typecheck@0x560a55eda190[Type#11])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] int-
optimized away (dependency)

Type#14 [unused] lgl-
lgl-            %62.6 = CallSafeBuiltin    wed   is.na(%62.5)    <lgl->
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] lgl-
lgl-            %62.7 = Not                wed   %62.6, elided   <lgl->
dependent slot

Type#17 [used] lgl$-
val?            %64.3 = CallBuiltin        !v    any(%62.7) e48.11   <lgl$->
void                    Assume             D     %64.4, %64.5 (Typecheck@0x560a55eda190[Type#17])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [used] (nil|str)- (polluted)
val?            %67.5 = NamedCall          !v    %67.3(%67.4, "class", exact=true) e48.11   <(nil|str)->
void                    Assume             D     %67.6, %67.7 (Typecheck@0x560a55eda190[Type#38])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (nil|str)-, expected: (nil|str)-, required: val?+

Type#39 [unused] lgl-
lgl-            %69.2 = Eq                 wed   %69.1, "factor", elided   <lgl->
dependent slot

Type#40 [used] lgl$-
val?            %69.3 = CallBuiltin        !v    any(%69.2) e48.11   <lgl$->
void                    Assume             D     %69.4, %69.5 (Typecheck@0x560a55eda190[Type#40])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] (str|vec) (polluted)
val?            %74.7 = Force!<wrapped>    !v    %74.6, e48.11   <(str|vec)>
dependent slot

Type#50 [used] (nil|vec)+ (polluted)
val?            %74.8 = CallBuiltin        !v    attributes(%74.7) e48.11   <(nil|vec)+>
void                    Assume             D     %74.9, %74.10 (Typecheck@0x560a55eda190[Type#50])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: (nil|vec)+, expected: (nil|vec)+, required: val?+

Type#51 [used] vec+
val?^ | miss    %76.0 = LdVar              eR    attrib, e48.11
void                    Assume             D     %76.1, %74.10 (Typecheck@0x560a55eda190[Type#51])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: vec+, expected: vec+, required: val?^ | miss

Type#52 [unused] vec+
val+            %76.7 = CallSafeBuiltin    wed   c(%76.6, %76.4)    <vec+>
dependent slot

Type#53 [unused] (str|vec) (polluted)
val?            %76.10 = Force!<wrapped>    !v    %76.9, e48.11   <(str|vec)>
dependent slot

Type#54 [unused] (str|vec) (polluted)
val?            %55.2 = Force!<value>      !     %55.0, e48.11   <(str|vec)>
dependent slot

*********************** Compilation session for: ifelse (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl1,NonRefl2,!Obj1,!Obj2) ***********************
======================= ClosureVersion: ifelse (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl1,NonRefl2,!Obj1,!Obj2) =======================
referenced: 105
referenced non-empty: 31
read non-empty: 31
used: 15
present non-empty: 10

Used
exact match: 11
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 16
optimized away non-empty: 6
dependent: 12
other reasons unused non-empty: 4

Polluted
polluted: 18
used polluted: 9

----------------------
ifelse [0x560a55ff34f0]
referenced: 92
referenced non-empty: 27
read non-empty: 27
used: 14
present non-empty: 9

Used
exact match: 10
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 13
optimized away non-empty: 4
dependent: 12
other reasons unused non-empty: 1

Polluted
polluted: 15
used polluted: 8

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] lgl+ (polluted)
val?            %1.4  = Force!<lazy>       !v    %1.2, e1.3   <lgl+>
void                    Assume             D     %1.5, %1.6 (Typecheck@0x560a5612f5f0[Type#1])
exact match
checkFor: lgl+, static: val?, feedback: lgl+, expected: lgl+, required: val?^ | miss

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] lgl+ (polluted)
val?            %2.5  = Force!<wrapped>    !v    %2.4, e1.3   <lgl+>
dependent slot

Type#15 [unused] str$-
str$-           %2.6  = CallSafeBuiltin    wed   typeof(%2.5)    <str$->
other unused reason

Type#16 [unused] lgl$-
lgl$-           %4.0  = Neq                d     %2.6, "logical", elided   <lgl$->
dependent slot

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [used] lgl+ (polluted)
val?^ | miss    %5.3  = LdVar              eR    test, e1.3
void                    Assume             D     %5.4, %2.7 (Typecheck2@0x560a5612f5f0[Type#19])
narrowed with static type: no
widened: yes
checkFor: lgl~+, static: val?^ | miss, feedback: lgl+, expected: lgl+, required: val?+

Type#20 [used] int$-
(int|real)$-    %5.8  = CallSafeBuiltin    wed   length(%5.7)    <int$->
void                    Assume             D     %5.9, %5.10 (Typecheck@0x560a5612f5f0[Type#20])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#21 [unused] lgl$-
lgl$-           %7.2  = Eq                 d     %7.1, 1, elided   <lgl$->
dependent slot

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] lgl+ (polluted)
val?            %13.1 = Force!<wrapped>    !v    %13.0, e1.3   <lgl+>
dependent slot

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [used] lgl+ (polluted)
val             %15.3 = ChkMissing         e     %13.1   <lgl+>
void                    Assume             D     %15.4, %13.3 (Typecheck@0x560a5612f5f0[Type#61])
exact match
checkFor: lgl+, static: val, feedback: lgl+, expected: lgl+, required: val+

Type#62 [used] int$-
(int|real)$-    %15.7 = CallSafeBuiltin    wed   length(%15.6)    <int$->
void                    Assume             D     %15.8, %15.9 (Typecheck@0x560a5612f5f0[Type#62])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#63 [unused] lgl+ (polluted)
val?            %19.4 = Force!<wrapped>    !v    %19.3, e1.3   <lgl+>
dependent slot

Type#64 [unused] int+ (polluted)
optimized away (dependency)

Type#65 [unused] lgl+ (polluted)
val?            %23.4 = Force!<wrapped>    !v    %23.3, e1.3   <lgl+>
dependent slot

Type#66 [unused] int+ (polluted)
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [used] int+ (polluted)
val?^ | miss    %27.3 = LdVar              eR    ypos, e1.3
void                    Assume             D     %27.4, %25.3 (Typecheck@0x560a5612f5f0[Type#68])
exact match
checkFor: int+, static: val?^ | miss, feedback: int+, expected: int+, required: val?^ | miss

Type#69 [used] int$-
(int|real)$-    %27.7 = CallSafeBuiltin    wed   length(%27.6)    <int$->
void                    Assume             D     %27.8, %27.9 (Typecheck@0x560a5612f5f0[Type#69])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#70 [unused] lgl$-
lgl$-           %29.2 = Gt                 d     %29.1, 0L, elided   <lgl$->
dependent slot

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [used] str-
val?            %39.3 = NamedCall          !v    %39.0(%39.1, length.out=%39.2) e1.3   <str->
void                    Assume             D     %39.5, %39.6 (Typecheck@0x560a5612f5f0[Type#73])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [used] int+ (polluted)
val?^ | miss    %41.1 = LdVar              eR    ypos, e1.3
void                    Assume             D     %41.2, %39.6 (Typecheck@0x560a5612f5f0[Type#75])
exact match
checkFor: int+, static: val?^ | miss, feedback: int+, expected: int+, required: val?^ | miss

Type#76 [used] str-
val?            %41.7 = Extract1_1D        wed   %41.6, %41.4, elided   <str->
void                    Assume             D     %41.8, %41.9 (Typecheck@0x560a5612f5f0[Type#76])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#77 [used] lgl+ (polluted)
val?^ | miss    %43.0 = LdVar              eR    ans !upd, e1.3
void                    Assume             D     %43.1, %41.9 (Typecheck@0x560a5612f5f0[Type#77])
exact match
checkFor: lgl+, static: val?^ | miss, feedback: lgl+, expected: lgl+, required: val?^ | miss

Type#78 [unused] int+ (polluted)
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [used] int+ (polluted)
val?^ | miss    %33.3 = LdVar              eR    npos, e1.3
void                    Assume             D     %33.4, %31.0 (Typecheck@0x560a5612f5f0[Type#80])
exact match
checkFor: int+, static: val?^ | miss, feedback: int+, expected: int+, required: val?^ | miss

Type#81 [used] int$-
(int|real)$-    %33.7 = CallSafeBuiltin    wed   length(%33.6)    <int$->
void                    Assume             D     %33.8, %33.9 (Typecheck@0x560a5612f5f0[Type#81])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#82 [unused] lgl$-
lgl$-           %35.2 = Gt                 d     %35.1, 0L, elided   <lgl$->
dependent slot

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] $#-
optimized away (dependency)

Type#87 [unused] $#-
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] $#-
optimized away (dependency)

Type#90 [unused] $#-
optimized away (dependency)

Type#91 [used] str+ (polluted)
val?^ | miss    %36.0 = LdVar              eR    ans, e1.3
void                    Assume             D     %36.1, %33.9 (Typecheck@0x560a5612f5f0[Type#91])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str+, expected: str+, required: val?^ | miss

----------------------
Inlinee: which [0x560a56086380]
referenced: 12
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 1

Type#0 [unused] lgl+ (polluted)
val?            %23.5 = Not                !v    %23.4, e1.3   <lgl+>
other unused reason

Type#1 [unused] lgl$-
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [used] int+ (polluted)
val+            %23.6 = CallSafeBuiltin    wed   which(%23.5) 
void                    Assume             D     %23.7, %23.8 (Typecheck@0x560a560cb7f0[Type#5])
exact match
checkFor: int+, static: val+, feedback: int+, expected: int+, required: val?^ | miss

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val?- (polluted)
optimized away

*********************** Compilation session for: sort.int (!ExpMi,CorrOrd,!TMany,Argmatch miss: 5) ***********************
======================= ClosureVersion: sort.int (!ExpMi,CorrOrd,!TMany,Argmatch miss: 5) =======================
referenced: 239
referenced non-empty: 13
read non-empty: 11
used: 1
present non-empty: 7

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 5
dependent: 12
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
sort.int [0x560a55fd8d00]
referenced: 239
referenced non-empty: 13
read non-empty: 11
used: 1
present non-empty: 7

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 5
dependent: 12
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] nil-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [used] int-
val?            %1.7  = Force!<lazy>       !v    %1.0, e1.1   <int->
void                    Assume             D     %1.8, %1.9 (Typecheck@0x560a56098ea0[Type#7])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?^ | miss

Type#8 [unused] lgl$-
lgl$#-          %2.2  = CallSafeBuiltin    wed   is.numeric(%2.1)    <lgl$->
dependent slot

Type#9 [unused] int-
val?            %5.1  = Force!<wrapped>    !v    %5.0, e1.1   <int->
dependent slot

Type#10 [unused] lgl$-
val?            %5.3  = Force!<value>      !v    %5.2, e1.1   <lgl$->
dependent slot

Type#11 [unused] lgl$-
val?            %5.5  = Force!<lazy>       !v    %5.4, e1.1   <lgl$->
dependent slot

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] int-
val?            %9.4  = Force!<wrapped>    !v    %9.3, e1.1   <int->
dependent slot

Type#14 [unused] nil-
val?            %9.5  = CallBuiltin        !v    attributes(%9.4) e1.1   <nil->
dependent slot

Type#15 [unused] nil-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] int-
val?            %12.2 = Force!<wrapped>    !     %12.0, e1.1   <int->
dependent slot

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] $#-
optimized away (dependency)

Type#87 [unused] $#-
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] $#-
optimized away (dependency)

Type#90 [unused] $#-
optimized away (dependency)

Type#91 [unused] $#-
optimized away (dependency)

Type#92 [unused] $#-
optimized away (dependency)

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] $#-
optimized away (dependency)

Type#99 [unused] $#-
optimized away (dependency)

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [unused] $#-
optimized away (dependency)

Type#102 [unused] $#-
optimized away (dependency)

Type#103 [unused] $#-
optimized away (dependency)

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] $#-
optimized away (dependency)

Type#106 [unused] $#-
optimized away (dependency)

Type#107 [unused] $#-
optimized away (dependency)

Type#108 [unused] $#-
optimized away (dependency)

Type#109 [unused] $#-
optimized away (dependency)

Type#110 [unused] $#-
optimized away (dependency)

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] $#-
optimized away (dependency)

Type#113 [unused] $#-
optimized away (dependency)

Type#114 [unused] $#-
optimized away (dependency)

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

Type#117 [unused] $#-
optimized away (dependency)

Type#118 [unused] $#-
optimized away (dependency)

Type#119 [unused] $#-
optimized away (dependency)

Type#120 [unused] $#-
optimized away (dependency)

Type#121 [unused] $#-
optimized away (dependency)

Type#122 [unused] $#-
optimized away (dependency)

Type#123 [unused] $#-
optimized away (dependency)

Type#124 [unused] $#-
optimized away (dependency)

Type#125 [unused] $#-
optimized away (dependency)

Type#126 [unused] $#-
optimized away (dependency)

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] $#-
optimized away (dependency)

Type#129 [unused] $#-
optimized away (dependency)

Type#130 [unused] $#-
optimized away (dependency)

Type#131 [unused] $#-
optimized away (dependency)

Type#132 [unused] $#-
optimized away (dependency)

Type#133 [unused] $#-
optimized away (dependency)

Type#134 [unused] $#-
optimized away (dependency)

Type#135 [unused] $#-
optimized away (dependency)

Type#136 [unused] $#-
optimized away (dependency)

Type#137 [unused] $#-
optimized away (dependency)

Type#138 [unused] $#-
optimized away (dependency)

Type#139 [unused] $#-
optimized away (dependency)

Type#140 [unused] $#-
optimized away (dependency)

Type#141 [unused] $#-
optimized away (dependency)

Type#142 [unused] $#-
optimized away (dependency)

Type#143 [unused] $#-
optimized away (dependency)

Type#144 [unused] $#-
optimized away (dependency)

Type#145 [unused] $#-
optimized away (dependency)

Type#146 [unused] $#-
optimized away (dependency)

Type#147 [unused] $#-
optimized away (dependency)

Type#148 [unused] $#-
optimized away (dependency)

Type#149 [unused] $#-
optimized away (dependency)

Type#150 [unused] $#-
optimized away (dependency)

Type#151 [unused] $#-
optimized away (dependency)

Type#152 [unused] $#-
optimized away (dependency)

Type#153 [unused] $#-
optimized away (dependency)

Type#154 [unused] $#-
optimized away (dependency)

Type#155 [unused] $#-
optimized away (dependency)

Type#156 [unused] $#-
optimized away (dependency)

Type#157 [unused] $#-
optimized away (dependency)

Type#158 [unused] $#-
optimized away (dependency)

Type#159 [unused] $#-
optimized away (dependency)

Type#160 [unused] $#-
optimized away (dependency)

Type#161 [unused] $#-
optimized away (dependency)

Type#162 [unused] $#-
optimized away (dependency)

Type#163 [unused] $#-
optimized away (dependency)

Type#164 [unused] $#-
optimized away (dependency)

Type#165 [unused] $#-
optimized away (dependency)

Type#166 [unused] $#-
optimized away (dependency)

Type#167 [unused] $#-
optimized away (dependency)

Type#168 [unused] $#-
optimized away (dependency)

Type#169 [unused] $#-
optimized away (dependency)

Type#170 [unused] $#-
optimized away (dependency)

Type#171 [unused] $#-
optimized away (dependency)

Type#172 [unused] $#-
optimized away (dependency)

Type#173 [unused] $#-
optimized away (dependency)

Type#174 [unused] $#-
optimized away (dependency)

Type#175 [unused] $#-
optimized away (dependency)

Type#176 [unused] $#-
optimized away (dependency)

Type#177 [unused] $#-
optimized away (dependency)

Type#178 [unused] $#-
optimized away (dependency)

Type#179 [unused] $#-
optimized away (dependency)

Type#180 [unused] $#-
optimized away (dependency)

Type#181 [unused] $#-
optimized away (dependency)

Type#182 [unused] $#-
optimized away (dependency)

Type#183 [unused] $#-
optimized away (dependency)

Type#184 [unused] $#-
optimized away (dependency)

Type#185 [unused] $#-
optimized away (dependency)

Type#186 [unused] $#-
optimized away (dependency)

Type#187 [unused] $#-
optimized away (dependency)

Type#188 [unused] $#-
optimized away (dependency)

Type#189 [unused] $#-
optimized away (dependency)

Type#190 [unused] $#-
optimized away (dependency)

Type#191 [unused] $#-
optimized away (dependency)

Type#192 [unused] $#-
optimized away (dependency)

Type#193 [unused] $#-
optimized away (dependency)

Type#194 [unused] $#-
optimized away (dependency)

Type#195 [unused] $#-
optimized away (dependency)

Type#196 [unused] $#-
optimized away (dependency)

Type#197 [unused] $#-
optimized away (dependency)

Type#198 [unused] $#-
optimized away (dependency)

Type#199 [unused] $#-
optimized away (dependency)

Type#200 [unused] $#-
optimized away (dependency)

Type#201 [unused] $#-
optimized away (dependency)

Type#202 [unused] $#-
optimized away (dependency)

Type#203 [unused] $#-
optimized away (dependency)

Type#204 [unused] $#-
optimized away (dependency)

Type#205 [unused] $#-
optimized away (dependency)

Type#206 [unused] $#-
optimized away (dependency)

Type#207 [unused] $#-
optimized away (dependency)

Type#208 [unused] $#-
optimized away (dependency)

Type#209 [unused] $#-
optimized away (dependency)

Type#210 [unused] $#-
optimized away (dependency)

Type#211 [unused] $#-
optimized away (dependency)

Type#212 [unused] $#-
optimized away (dependency)

Type#213 [unused] $#-
optimized away (dependency)

Type#214 [unused] $#-
optimized away (dependency)

Type#215 [unused] $#-
optimized away (dependency)

Type#216 [unused] $#-
optimized away (dependency)

Type#217 [unused] $#-
optimized away (dependency)

Type#218 [unused] $#-
optimized away (dependency)

Type#219 [unused] $#-
optimized away (dependency)

Type#220 [unused] $#-
optimized away (dependency)

Type#221 [unused] $#-
optimized away (dependency)

Type#222 [unused] $#-
optimized away (dependency)

Type#223 [unused] $#-
optimized away (dependency)

Type#224 [unused] $#-
optimized away (dependency)

Type#225 [unused] $#-
optimized away (dependency)

Type#226 [unused] $#-
optimized away (dependency)

Type#227 [unused] $#-
optimized away (dependency)

Type#228 [unused] $#-
optimized away (dependency)

Type#229 [unused] $#-
optimized away (dependency)

Type#230 [unused] $#-
optimized away (dependency)

Type#231 [unused] $#-
optimized away (dependency)

Type#232 [unused] $#-
optimized away (dependency)

Type#233 [unused] $#-
optimized away (dependency)

Type#234 [unused] $#-
optimized away (dependency)

Type#235 [unused] $#-
optimized away (dependency)

Type#236 [unused] $#-
optimized away (dependency)

Type#237 [unused] $#-
optimized away (dependency)

Type#238 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: makeImportExportNames (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: makeImportExportNames (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 20
referenced non-empty: 9
read non-empty: 9
used: 3
present non-empty: 5

Used
exact match: 0
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 1
dependent: 5
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
makeImportExportNames [0x560a564cc560]
referenced: 20
referenced non-empty: 9
read non-empty: 9
used: 3
present non-empty: 5

Used
exact match: 0
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 1
dependent: 5
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str-
val+            %2.2  = Force!<lazy>       !vr   %1.0,    <str->
dependent slot

Type#2 [unused] str-
val+            %2.3  = CallSafeBuiltin    wed   as.character(%2.2)    <str->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str-
val+            %2.2  = Force!<lazy>       !vr   %1.0,    <str->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a564c8bc0[Type#4])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: str-, expected: str-, required: val?+

Type#5 [unused] nil-
val+            %4.5  = CallSafeBuiltin    wed   names(%4.4)    <nil->
dependent slot

Type#6 [unused] nil-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [used] str-
val+            %2.3  = CallSafeBuiltin    wed   as.character(%2.2)    <str->
void                    Assume             D     %20.0, %4.8 (Typecheck@0x560a564c8bc0[Type#16])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: str-, expected: str-, required: val?^ | miss

Type#17 [unused] str-
val+            %16.1 = ChkMissing         e     %16.0   <str->
dependent slot

Type#18 [used] str-
val?^ | miss    %18.0 = LdVar              eR    old, e2.1
void                    Assume             D     %18.1, %16.3 (Typecheck@0x560a564c8bc0[Type#18])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#19 [unused] str+
val?            %18.5 = NamedCall          !v    %16.2(%18.4, value=%16.1) e2.1   <str+>
other unused reason

*********************** Compilation session for: namespaceIsSealed (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: namespaceIsSealed (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
namespaceIsSealed [0x560a5652f440]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away

Type#1 [used] lgl$-
val?            %2.10 = PopContext         C     %2.9, %2.5   <lgl$->
void                    Assume             D     %2.11, %2.12 (Typecheck@0x560a5651a410[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: environmentIsLocked [0x560a566af530]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val?            %2.8  = Force!<lazy>       !vr   %2.6,    <env->
other unused reason

*********************** Compilation session for: whichMethodMetaNames (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: whichMethodMetaNames (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 12
referenced non-empty: 8
read non-empty: 8
used: 3
present non-empty: 3

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
whichMethodMetaNames [0x560a56530a80]
referenced: 10
referenced non-empty: 6
read non-empty: 6
used: 3
present non-empty: 2

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] lgl$-
val?            %2.2  = CallBuiltin        !v    .isMethodsDispatchOn() e2.1   <lgl$->
void                    Assume             D     %2.3, %2.4 (Typecheck@0x560a56544d90[Type#0])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str+
val?            %5.4  = Force!<lazy>       !v    %5.3, e2.1   <str+>
dependent slot

Type#4 [used] int-
val?            %5.5  = CallBuiltin        !v    seq_along(%5.4) e2.1   <int->
void                    Assume             D     %9.0, %7.12 (Typecheck@0x560a56544d90[Type#4])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str+
optimized away (dependency)

Type#8 [used] lgl-
val?            %7.10 = PopContext         C     %7.9, %7.5   <lgl->
void                    Assume             D     %7.11, %7.12 (Typecheck@0x560a56544d90[Type#8])
exact match
checkFor: lgl-, static: val?, feedback: lgl-, expected: lgl-, required: val?+

Type#9 [unused] int-
int-            %9.5  = Extract1_1D        wed   %9.2, %9.4, elided   <int->
dependent slot

----------------------
Inlinee: startsWith [0x560a5664e750]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str+
val?            %7.8  = Force!<lazy>       !vL   %7.6, e7.7   <str+>
other unused reason

Type#1 [unused] str$-
optimized away

*********************** Compilation session for: importIntoEnv (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2,!Obj3) ***********************
======================= ClosureVersion: asNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj1) =======================
referenced: 33
referenced non-empty: 27
read non-empty: 20
used: 5
present non-empty: 9

Used
exact match: 4
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 22
optimized away non-empty: 13
dependent: 19
other reasons unused non-empty: 3

Polluted
polluted: 3
used polluted: 1

----------------------
asNamespace [0x560a5662fe70]
referenced: 16
referenced non-empty: 12
read non-empty: 12
used: 4
present non-empty: 4

Used
exact match: 3
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 4
dependent: 7
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] (str|env)+ (polluted)
val?            %1.2  = Force!<lazy>             %1.1,    <(str|env)+>
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a566a7520[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: (str|env)+, expected: (str|env)+, required: val?^ | miss

Type#2 [unused] lgl$-
lgl$#-          %2.2  = CallSafeBuiltin    wed   is.character(%2.1)    <lgl$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] lgl$-
lgl$#-          %3.0  = CallSafeBuiltin    wed   is.symbol(%2.1)    <lgl$->
dependent slot

Type#6 [unused] str$+
optimized away

Type#7 [unused] env-
val?            %26.0 = PopContext         C     %24.5, %24.1   <env->
dependent slot

Type#8 [unused] env-
optimized away (dependency)

Type#9 [used] lgl$-
val?            %8.9  = PopContext         C     %8.8, %8.4   <lgl$->
void                    Assume             D     %8.10, %8.11 (Typecheck@0x560a566a7520[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [used] lgl$-
val?            %11.1 = Force!<lazy>       !v    %11.0, e2.3   <lgl$->
void                    Assume             D     %11.2, %11.3 (Typecheck@0x560a566a7520[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#11 [unused] env-
optimized away (dependency)

Type#12 [used] lgl$-
val?            %16.2 = PopContext         C     %16.1, %14.4   <lgl$->
void                    Assume             D     %16.3, %16.4 (Typecheck@0x560a566a7520[Type#12])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#13 [unused] env-
val?            %20.2 = Force!<wrapped>    !     %20.0, e2.3   <env->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val?            %8.7  = Force!<lazy>       !vrL  %8.5, e8.6   <env->
other unused reason

----------------------
Inlinee: getNamespace [0x560a572728f0]
referenced: 5
referenced non-empty: 3
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
val?            %24.4 = Force!<lazy>       !vr   %24.2,    <str$+>
other unused reason

Type#1 [unused] env-
val?            %24.5 = CallBuiltin        !v    getRegisteredNamespace(%24.4) e24.3   <env->
dependent slot

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

----------------------
Inlinee: isBaseNamespace [0x560a5643a450]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %14.16 = PopContext         C     %14.15, %14.9   <lgl$->
void                    Assume             D     %14.17, %14.18 (Typecheck@0x560a565938d0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %14.13 = Force!<lazy>       !vL   %14.11, e14.12   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %14.14 = Force!<lazy>       !vL   %14.10, e14.12   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

======================= ClosureVersion: importIntoEnv (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2,!Obj3) =======================
referenced: 90
referenced non-empty: 33
read non-empty: 33
used: 3
present non-empty: 17

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 30
optimized away non-empty: 13
dependent: 22
other reasons unused non-empty: 8

Polluted
polluted: 7
used polluted: 1

----------------------
importIntoEnv [0x560a56558d40]
referenced: 53
referenced non-empty: 18
read non-empty: 18
used: 2
present non-empty: 9

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 16
optimized away non-empty: 7
dependent: 13
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [used] env-
val?            %2.6  = PopContext         C     %2.5, %1.6   <env->
void                    Assume             D     %2.8, %2.9 (Typecheck@0x560a5688b390[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] env-
optimized away (dependency)

Type#4 [unused] str-
val+            %4.6  = CallSafeBuiltin    wed   names(%4.5)    <str->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] str+
optimized away (dependency)

Type#9 [unused] str-
optimized away (dependency)

Type#10 [unused] lgl-
val?            %8.3  = PopContext         C     %8.2, %6.8   <lgl->
other unused reason

Type#11 [used] lgl$-
val?            %8.5  = CallBuiltin        !v    all(%8.3) e1.4   <lgl$->
void                    Assume             D     %8.6, %8.7 (Typecheck@0x560a5688b390[Type#11])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] str+
optimized away (dependency)

Type#42 [unused] env-
optimized away (dependency)

Type#43 [unused] vec+
optimized away

Type#44 [unused] str+
val?            %12.7 = PopContext         C     %12.6, %11.4   <str+>
dependent slot

Type#45 [unused] str-
val?            %12.10 = Force!<lazy>       !v    %12.9, e1.4   <str->
dependent slot

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] str+
val?            %13.1 = Force!<value>      !v    %13.0, e1.4   <str+>
dependent slot

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] env+
val?            %14.1 = Force!<lazy>       !v    %14.0, e1.4   <env+>
other unused reason

Type#50 [unused] str-
val?            %14.3 = Force!<wrapped>    !v    %14.2, e1.4   <str->
dependent slot

Type#51 [unused] env-
val?            %14.5 = Force!<wrapped>    !v    %14.4, e1.4   <env->
dependent slot

Type#52 [unused] str+
val?            %14.7 = Force!<value>      !v    %14.6, e1.4   <str+>
dependent slot

----------------------
Inlinee: unlist [0x560a55eb29b0]
referenced: 27
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 5
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec+ (polluted)
val?            %11.9 = Force!<lazy>       !vL   %11.5, e11.6   <vec+>
dependent slot

Type#1 [unused] lgl$-
optimized away (dependency)

Type#2 [unused] vec+ (polluted)
val?            %12.1 = Force!<wrapped>    !v    %12.0, e11.6   <vec+>
dependent slot

Type#3 [unused] lgl$-
val?            %12.3 = Force!<wrapped>    !v    %12.2, e11.6   <lgl$->
dependent slot

Type#4 [unused] lgl$-
val?            %12.5 = Force!<lazy>       !v    %12.4, e11.6   <lgl$->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away

Type#1 [unused] (nil|str)- (polluted)
optimized away

Type#2 [used] int- (polluted)
val?            %6.14 = StaticCall         !v    match[0x560a61c2d450](%6.12, %6.13, 0L) { 0 1 2n } e6.11   <int->
void                    Assume             D     %6.15, %6.16 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %8.2  = Gt                 wed   %8.1, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: getNamespaceInfo [0x560a566d4080]
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 3
dependent: 4
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env-
val?            %1.9  = Force!<lazy>       !vr   %1.7,    <env->
dependent slot

Type#1 [unused] env-
val?            %1.11 = StaticCall         !v    asNamespace[0x560a61bef1d0](%1.10, false) { 0 1n } e1.8   <env->
dependent slot

Type#2 [unused] str$-
optimized away

Type#3 [unused] env-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] (str|env)_ (polluted)
val?            %2.5  = StaticCall         !v    get[0x560a61464340](%2.3, missingArg, %2.4) { 0 2n } e1.8   <(str|env)_>
other unused reason

*********************** Compilation session for: addImports (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: addImports (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 96
referenced non-empty: 63
read non-empty: 60
used: 16
present non-empty: 20

Used
exact match: 7
widened: 9
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 47
optimized away non-empty: 27
dependent: 41
other reasons unused non-empty: 6

Polluted
polluted: 13
used polluted: 3

----------------------
addImports [0x560a5656bfb0]
referenced: 12
referenced non-empty: 12
read non-empty: 12
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 9
dependent: 9
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] str+
optimized away

Type#1 [unused] vec$-
optimized away

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] str$+
optimized away

Type#4 [unused] vec$+
val?            %9.2  = PopContext         C     %9.1, %2.7   <vec$+>
dependent slot

Type#5 [unused] env-
optimized away (dependency)

Type#6 [unused] vec+ (polluted)
val?            %23.1 = PopContext         C     %23.0, %11.4   <vec+>
dependent slot

Type#7 [unused] env-
optimized away (dependency)

Type#8 [unused] vec+ (polluted)
optimized away (dependency)

Type#9 [unused] vec$+
optimized away (dependency)

Type#10 [unused] vec+
optimized away (dependency)

Type#11 [unused] vec+
val?            %31.8 = PopContext         C     %31.2, %25.5   <vec+>
dependent slot

----------------------
Inlinee: .getNamespaceInfo [0x560a5649a8c0]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 2
present non-empty: 1

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [used] env-
val?            %18.4 = Force!<value>      !v    %18.3, e11.6   <env->
void                    Assume             D     %18.6, %18.7 (Typecheck@0x560a56567c00[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#1 [used] env-
val?            %20.3 = Extract2_1D        wed   %20.2, ".__NAMESPACE__.", elided   <env->
void                    Assume             D     %20.5, %20.6 (Typecheck@0x560a56567c00[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] $#-
optimized away

Type#3 [unused] str$-
optimized away

Type#4 [unused] val?+ (polluted)
val?            %22.3 = Extract2_1D        wed   %22.2, "imports", elided   <val?+>
other unused reason

----------------------
Inlinee: isBaseNamespace [0x560a5643a450]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %13.16 = PopContext         C     %13.15, %13.9   <lgl$->
void                    Assume             D     %13.17, %13.18 (Typecheck@0x560a565938d0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: structure [0x560a55eda070]
referenced: 55
referenced non-empty: 23
read non-empty: 21
used: 8
present non-empty: 10

Used
exact match: 4
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 5
dependent: 15
other reasons unused non-empty: 0

Polluted
polluted: 6
used polluted: 2

Type#0 [unused] (str|vec) (polluted)
val?            %2.10 = Force!<lazy>       !vr   %2.8,    <(str|vec)>
dependent slot

Type#1 [used] vec+
val?            %3.0  = NamedCall          !v    <blt list>(names=%2.5) e2.9   <vec+>
void                    Assume             D     %3.2, %3.3 (Typecheck@0x560a55eda190[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec+
optimized away (dependency)

Type#4 [used] int$-
(int|real)$-    %5.6  = CallSafeBuiltin    wed   length(%5.5)    <int$->
void                    Assume             D     %5.7, %5.8 (Typecheck@0x560a55eda190[Type#4])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#5 [unused] str-
str-            %33.3 = CallSafeBuiltin    wed   c(".Dim", ".Dimnames", ".Names", ".Tsp", ".Label")    <str->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] vec+
optimized away (dependency)

Type#8 [unused] str-
val+            %35.3 = CallSafeBuiltin    wed   names(%5.5)    <str->
dependent slot

Type#9 [unused] str-
optimized away (dependency)

Type#10 [unused] str-
optimized away (dependency)

Type#11 [used] int-
val?            %37.5 = StaticCall         !v    match[0x560a61b43220](%37.3, %37.4) e2.9   <int->
void                    Assume             D     %37.7, %37.8 (Typecheck@0x560a55eda190[Type#11])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] int-
optimized away (dependency)

Type#14 [unused] lgl-
lgl-            %39.6 = CallSafeBuiltin    wed   is.na(%39.5)    <lgl->
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] lgl-
lgl-            %39.7 = Not                wed   %39.6, elided   <lgl->
dependent slot

Type#17 [used] lgl$-
val?            %41.3 = CallBuiltin        !v    any(%39.7) e2.9   <lgl$->
void                    Assume             D     %41.4, %41.5 (Typecheck@0x560a55eda190[Type#17])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [used] (nil|str)- (polluted)
val?            %44.5 = NamedCall          !v    %44.3(%44.4, "class", exact=true) e2.9   <(nil|str)->
void                    Assume             D     %44.6, %44.7 (Typecheck@0x560a55eda190[Type#38])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (nil|str)-, expected: (nil|str)-, required: val?+

Type#39 [unused] lgl-
lgl-            %46.2 = Eq                 wed   %46.1, "factor", elided   <lgl->
dependent slot

Type#40 [used] lgl$-
val?            %46.3 = CallBuiltin        !v    any(%46.2) e2.9   <lgl$->
void                    Assume             D     %46.4, %46.5 (Typecheck@0x560a55eda190[Type#40])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] (str|vec) (polluted)
val?            %51.7 = Force!<wrapped>    !v    %51.6, e2.9   <(str|vec)>
dependent slot

Type#50 [used] (nil|vec)+ (polluted)
val?            %51.8 = CallBuiltin        !v    attributes(%51.7) e2.9   <(nil|vec)+>
void                    Assume             D     %51.9, %51.10 (Typecheck@0x560a55eda190[Type#50])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: (nil|vec)+, expected: (nil|vec)+, required: val?+

Type#51 [used] vec+
val?^ | miss    %53.0 = LdVar              eR    attrib, e2.9
void                    Assume             D     %53.1, %51.10 (Typecheck@0x560a55eda190[Type#51])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: vec+, expected: vec+, required: val?^ | miss

Type#52 [unused] vec+
val+            %53.7 = CallSafeBuiltin    wed   c(%53.6, %53.4)    <vec+>
dependent slot

Type#53 [unused] (str|vec) (polluted)
val?            %53.10 = Force!<wrapped>    !v    %53.9, e2.9   <(str|vec)>
dependent slot

Type#54 [unused] (str|vec) (polluted)
val?            %9.1  = Force!<value>      !v    %9.0, e2.9   <(str|vec)>
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %13.13 = Force!<lazy>       !vL   %13.11, e13.12   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %13.14 = Force!<lazy>       !vL   %13.10, e13.12   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: getNamespaceImports [0x560a567c8bd0]
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 2

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 3
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
val?            %11.8 = StaticCall         !v    asNamespace[0x560a619de2b0](%11.7) e11.6   <env->
dependent slot

Type#2 [unused] env-
optimized away (dependency)

Type#3 [used] lgl$-
val?            %15.2 = PopContext         C     %15.1, %13.4   <lgl$->
void                    Assume             D     %15.3, %15.4 (Typecheck@0x560a567c7f60[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] env-
val?            %18.4 = Force!<value>      !v    %18.3, e11.6   <env->
dependent slot

Type#5 [unused] vec+ (polluted)
optimized away

----------------------
Inlinee: setNamespaceInfo [0x560a5678ac70]
referenced: 7
referenced non-empty: 7
read non-empty: 6
used: 4
present non-empty: 2

Used
exact match: 1
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] env-
val?            %25.9 = Force!<lazy>       !vL   %25.7, e25.8   <env->
dependent slot

Type#1 [used] env-
val?            %25.11 = StaticCall         !v    asNamespace[0x560a61b31cc0](%25.10, false) { 0 1n } e25.8   <env->
void                    Assume             D     %25.14, %25.15 (Typecheck@0x560a56367f30[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] env-
val?            %27.4 = Extract2_1D        wed   %27.3, ".__NAMESPACE__.", elided   <env->
dependent slot

Type#4 [used] val?+ (polluted)
val?            %27.7 = Force!<lazy>       !v    %27.6, e25.8   <val?+>
void                    Assume             D     %31.0, %29.8 (Typecheck@0x560a56367f30[Type#4])
exact match
checkFor: val?+, static: val?, feedback: val?+, expected: val?+, required: val?+

Type#5 [used] env-
val?^ | miss    %29.0 = LdVar              eR    info !upd, e25.8
void                    Assume             D     %29.1, %27.8 (Typecheck@0x560a56367f30[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#6 [used] str$-
val?            %29.6 = Force!<value>      !v    %29.5, e25.8   <str$->
void                    Assume             D     %29.7, %29.8 (Typecheck@0x560a56367f30[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

*********************** Compilation session for: new.env (!ExpMi,CorrOrd,!TMany,Argmatch miss: 3) ***********************
======================= ClosureVersion: new.env (!ExpMi,CorrOrd,!TMany,Argmatch miss: 3) =======================
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 2
present non-empty: 0

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

----------------------
new.env [0x560a5671c500]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 2
present non-empty: 0

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] env-
optimized away

Type#1 [unused] lgl$-
optimized away

Type#2 [used] env+ (polluted)
val?            %1.5  = Force!<lazy>       !vr   %1.2,    <env+>
void                    Assume             D     %1.9, %1.10 (Typecheck@0x560a56e31360[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: env+, expected: env+, required: val?+

Type#3 [used] int$-
val?            %1.7  = Force!<lazy>       !v    %1.6, e1.0   <int$->
void                    Assume             D     %1.8, %1.10 (Typecheck@0x560a56e31360[Type#3])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?+

*********************** Compilation session for: mkenv (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: mkenv (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
mkenv [0x560a58954360]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] env-
val?            %2.2  = CallBuiltin        !vL   baseenv() e2.1   <env->
void                    Assume             D     %2.3, %2.4 (Typecheck@0x560a5894e170[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

*********************** Compilation session for: as.name (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: as.name (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
as.name [0x560a564eda10]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val+            %1.1  = Force!<lazy>       !vr   %1.0,    <str$->
other unused reason

*********************** Compilation session for: lazyLoadDBexec (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1) ***********************
======================= ClosureVersion: lazyLoadDBexec (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1) =======================
referenced: 46
referenced non-empty: 36
read non-empty: 34
used: 7
present non-empty: 15

Used
exact match: 3
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 29
optimized away non-empty: 14
dependent: 24
other reasons unused non-empty: 5

Polluted
polluted: 0
used polluted: 0

----------------------
lazyLoadDBexec [0x560a587ebe00]
referenced: 40
referenced non-empty: 30
read non-empty: 30
used: 6
present non-empty: 12

Used
exact match: 3
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 24
optimized away non-empty: 12
dependent: 24
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val+            %1.19 = Force!<lazy>       !vr   %1.2,    <str$->
dependent slot

Type#1 [unused] str$-
val+            %1.21 = CallSafeBuiltin    wed   paste(%1.20, ".", nil, false)    <str$->
dependent slot

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] str$-
val+            %1.24 = CallSafeBuiltin    wed   paste(%1.23, ".", nil, false)    <str$->
dependent slot

Type#4 [unused] env-
val?            %2.5  = PopContext         C     %2.4, %1.26   <env->
dependent slot

Type#5 [unused] str$-
optimized away (dependency)

Type#6 [unused] vec+
val?            %4.4  = StaticCall         !v    readRDS[0x560a61de4e20](%4.3) from %1.5 e1.3   <vec+>
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] vec+
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [used] vec+
val?            %6.6  = Call               !v    %6.3(%6.4, %6.5) e1.3   <vec+>
void                    Assume             D     %6.7, %6.8 (Typecheck@0x560a58656100[Type#12])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#13 [unused] str-
val+            %8.2  = CallSafeBuiltin    wed   names(%8.1)    <str->
dependent slot

Type#14 [unused] vec+
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [used] lgl$-
val?            %8.7  = Call               !v    %8.4(%8.5, %8.6) e1.3   <lgl$->
void                    Assume             D     %8.8, %8.9 (Typecheck@0x560a58656100[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] vec+
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] vec+
optimized away (dependency)

Type#20 [unused] env-
optimized away (dependency)

Type#21 [unused] env-
val?            %16.5 = PopContext         C     %16.4, %14.3   <env->
dependent slot

Type#22 [unused] vec+
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] vec+
val?            %17.3 = Call               !v    %17.0(%17.1, %17.2) e1.3   <vec+>
dependent slot

Type#25 [unused] str-
optimized away (dependency)

Type#26 [unused] lgl-
val?            %19.2 = Call               !v    %19.0(%19.1) e1.3   <lgl->
dependent slot

Type#27 [used] str-
val?^ | miss    %21.0 = LdVar              eR    vars, e1.3
void                    Assume             D     %21.1, %19.4 (Typecheck@0x560a58656100[Type#27])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [used] lgl-
val             %21.7 = ChkMissing         e     %19.2
void                    Assume             D     %21.8, %19.4 (Typecheck@0x560a58656100[Type#29])
exact match
checkFor: lgl-, static: val, feedback: lgl-, expected: lgl-, required: val?^ | miss

Type#30 [unused] str-
val?            %21.11 = Extract1_1D        wed   %21.4, %21.10, elided   <str->
dependent slot

Type#31 [unused] vec+
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [used] vec+
val?            %21.16 = Call               !v    %21.13(%21.14, %21.15) e1.3   <vec+>
void                    Assume             D     %21.18, %21.19 (Typecheck@0x560a58656100[Type#33])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [used] lgl-
val?^ | miss    %23.1 = LdVar              eR    use, e1.3
void                    Assume             D     %23.2, %21.19 (Typecheck@0x560a58656100[Type#35])
exact match
checkFor: lgl-, static: val?^ | miss, feedback: lgl-, expected: lgl-, required: val?^ | miss

Type#36 [unused] vec+
val?            %23.7 = Extract1_1D        wed   %23.6, %23.4, elided   <vec+>
dependent slot

Type#37 [unused] env-
optimized away (dependency)

Type#38 [unused] nil-
val?            %18.2 = Call               !v    %18.0(%18.1) e1.3   <nil->
dependent slot

Type#39 [unused] nil-
optimized away (dependency)

----------------------
Inlinee: list2env [0x560a58761370]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec+
val?            %12.9 = Force!<lazy>       !vL   %12.7, e12.8   <vec+>
other unused reason

Type#1 [unused] env-
val?            %12.10 = Force!<lazy>       !vL   %12.6, e12.8   <env->
other unused reason

----------------------
Inlinee: mkenv [0x560a58954360]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] env-
val?            %14.8 = CallBuiltin        !vL   baseenv() e14.7   <env->
void                    Assume             D     %14.9, %14.10 (Typecheck@0x560a5894e170[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

----------------------
Inlinee: glue [0x560a587ab090]
referenced: 3
referenced non-empty: 3
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec-
val+            %1.23 = CallSafeBuiltin    wed   list(%1.19, "rdb")    <vec->
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] nil-
optimized away

*********************** Compilation session for: readRDS (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: readRDS (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 6

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 2
dependent: 6
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
readRDS [0x560a587309c0]
referenced: 9
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 1
dependent: 4
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$-
val+            %2.3  = Force!<lazy>       !vr   %1.0,    <str$->
dependent slot

Type#2 [unused] lgl$-
lgl$#-          %2.4  = CallSafeBuiltin    wed   is.character(%2.3)    <lgl$->
other unused reason

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] int$
val?            %4.6  = PopContext         C     %4.5, %4.1   <int$>
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] int$
val?            %4.12 = Force!<value>      !v    %4.11, e1.1   <int$>
dependent slot

Type#8 [unused] env-
val?            %6.3  = CallBuiltin        !v    baseenv() e1.1   <env->
other unused reason

----------------------
Inlinee: gzfile [0x560a58645490]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val?            %4.4  = Force!<lazy>       !vr   %4.2,    <str$->
dependent slot

Type#1 [unused] str$-
optimized away (dependency)

*********************** Compilation session for: close (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) ***********************
======================= ClosureVersion: close (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
close [0x560a58794b40]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] int$
val?            %1.2  = Force!<lazy>       !vr   %1.0,    <int$>
other unused reason

*********************** Compilation session for: environment (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: environment (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 0
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
environment [0x560a58f3d1e0]
referenced: 0
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

*********************** Compilation session for: .dynLibs (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: .dynLibs (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 4
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
.dynLibs [0x560a57032e90]
referenced: 4
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec
val?            %4.2  = Force!<value>      !     %4.0, e1.1   <vec>
dependent slot

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %2.4  = Force!<value>      !v    %2.3, e1.1   <vec>
dependent slot

*********************** Compilation session for: FUN (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) ***********************
======================= ClosureVersion: FUN (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) =======================
referenced: 6
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
FUN [0x560a5955ee30]
referenced: 6
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] sym-
val+            %1.3  = Force<wrapped>           %1.0,    <sym->
other unused reason

Type#2 [unused] lgl$-
lgl$#-          %2.1  = CallSafeBuiltin    vwed  is.symbol(%1.3)    <lgl$->
other unused reason

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: tolower (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: tolower (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 7
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 1
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 1

----------------------
tolower [0x560a5aa57fe0]
referenced: 7
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 1
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str- (polluted)
val?            %1.2  = Force!<lazy>       !v    %1.0, e1.1   <str->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a5aa57ef0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?^ | miss

Type#2 [unused] lgl$-
lgl$#-          %2.2  = CallSafeBuiltin    wed   is.character(%2.1)    <lgl$->
other unused reason

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] str- (polluted)
val?            %8.1  = Force!<wrapped>    !v    %8.0, e1.1   <str->
dependent slot

*********************** Compilation session for: pmatch (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) ***********************
======================= ClosureVersion: pmatch (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 2
present non-empty: 2

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
pmatch [0x560a57621820]
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 2
present non-empty: 2

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str$-
val?            %1.3  = Force!<lazy>       !vL   %1.1, e1.2   <str$->
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a57621710[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

Type#2 [unused] str$-
val+            %2.4  = CallSafeBuiltin    wed   as.character(%2.1)    <str$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str-
val?            %2.5  = Force!<lazy>       !vL   %1.0, e1.2   <str->
void                    Assume             D     %2.6, %2.7 (Typecheck@0x560a57621710[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?^ | miss

Type#5 [unused] str-
val+            %4.4  = CallSafeBuiltin    wed   as.character(%4.1)    <str->
dependent slot

Type#6 [unused] int$-
optimized away

Type#7 [unused] lgl$-
optimized away

*********************** Compilation session for: vector (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleInt1) ***********************
======================= ClosureVersion: vector (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleInt1) =======================
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
vector [0x560a55e99e90]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str$-
val+            %1.2  = Force<value>             %1.1,    <str$->
other unused reason

Type#1 [unused] (int|real)$- (polluted)
int$-           %1.3  = Force!<lazy>       !vr   %1.0,    <(int|real)$->
other unused reason

*********************** Compilation session for: unlist (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) ***********************
======================= ClosureVersion: unlist (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 27
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 4
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 1

----------------------
unlist [0x560a55eb29b0]
referenced: 27
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 4
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 1

Type#0 [used] vec+ (polluted)
val?            %1.4  = Force!<lazy>       !v    %1.0, e1.1   <vec+>
void                    Assume             D     %1.5, %1.6 (Typecheck@0x560a55eb27a0[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?^ | miss

Type#1 [unused] lgl$-
val?            %2.3  = Force!<lazy>       !v    %2.2, e1.1   <lgl$->
dependent slot

Type#2 [unused] vec+ (polluted)
val?            %3.1  = Force!<wrapped>    !v    %3.0, e1.1   <vec+>
dependent slot

Type#3 [unused] lgl$-
val?            %3.3  = Force!<wrapped>    !v    %3.2, e1.1   <lgl$->
dependent slot

Type#4 [unused] lgl$-
val?            %3.5  = Force!<lazy>       !v    %3.4, e1.1   <lgl$->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

*********************** Compilation session for:  (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 7) ***********************
======================= ClosureVersion: rm (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0 miss: 4) =======================
referenced: 46
referenced non-empty: 35
read non-empty: 34
used: 7
present non-empty: 15

Used
exact match: 3
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 28
optimized away non-empty: 13
dependent: 19
other reasons unused non-empty: 9

Polluted
polluted: 13
used polluted: 2

----------------------
rm [0x560a5951a330]
referenced: 28
referenced non-empty: 23
read non-empty: 23
used: 7
present non-empty: 7

Used
exact match: 3
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 16
optimized away non-empty: 9
dependent: 13
other reasons unused non-empty: 3

Polluted
polluted: 6
used polluted: 2

Type#0 [unused] str-
optimized away (dependency)

Type#1 [unused] real$-
optimized away

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] (nil|list)- (polluted)
val?            %1.14 = NamedCall          !v    <spec $>(%1.13, .xpandDotsTrigger=%1.12) e1.1   <(nil|list)->
void                    Assume             D     %1.16, %1.17 (Typecheck@0x560a595631b0[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (nil|list)-, expected: (nil|list)-, required: val?+

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] (nil|list)- (polluted)
optimized away (dependency)

Type#7 [used] int$-
(int|real)$-    %2.6  = CallSafeBuiltin    wed   length(%2.5)    <int$->
void                    Assume             D     %2.7, %2.8 (Typecheck@0x560a595631b0[Type#7])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] list-
optimized away

Type#11 [unused] lgl-
val?            %15.3 = PopContext         C     %15.2, %5.9   <lgl->
other unused reason

Type#12 [used] lgl$-
val?            %15.4 = CallBuiltin        !v    all(%15.3) e1.1   <lgl$->
void                    Assume             D     %15.5, %15.6 (Typecheck@0x560a595631b0[Type#12])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#13 [unused] (nil|list)- (polluted)
optimized away (dependency)

Type#14 [unused] blt-
optimized away (dependency)

Type#15 [used] str-
val?            %31.3 = PopContext         C     %31.2, %21.5   <str->
void                    Assume             D     %31.5, %31.6 (Typecheck@0x560a595631b0[Type#15])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] str-
optimized away (dependency)

Type#18 [used] int$-
(int|real)$-    %33.6 = CallSafeBuiltin    wed   length(%33.5)    <int$->
void                    Assume             D     %33.7, %33.8 (Typecheck@0x560a595631b0[Type#18])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#19 [unused] lgl$-
lgl$-           %35.2 = Eq                 d     %35.1, 0L, elided   <lgl$->
dependent slot

Type#20 [unused] str-
str-            %44.3 = CallSafeBuiltin    wed   vector("character", 0L)    <str->
dependent slot

Type#21 [unused] blt-
val?            %39.3 = CallBuiltin        !v    .Primitive("c") e1.1   <blt->
dependent slot

Type#22 [used] str- (polluted)
val?            %41.4 = Force!<lazy>       !v    %41.3, e1.1   <str->
void                    Assume             D     %41.5, %41.6 (Typecheck@0x560a595631b0[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#23 [used] str-
val?^ | miss    %43.0 = LdVar              eR    names, e1.1
void                    Assume             D     %43.1, %41.6 (Typecheck@0x560a595631b0[Type#23])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#24 [unused] str- (polluted)
val+            %43.7 = CallSafeBuiltin    wed   c(%43.6, %43.4)    <str->
dependent slot

Type#25 [unused] str- (polluted)
optimized away (dependency)

Type#26 [unused] env-
val?            %43.10 = Force!<lazy>       !v    %43.9, e1.1   <env->
dependent slot

Type#27 [unused] lgl$-
val?            %43.12 = Force!<lazy>       !v    %43.11, e1.1   <lgl$->
dependent slot

----------------------
Inlinee: is.vector [0x560a55e6f180]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (str|vec) (polluted)
optimized away

Type#1 [unused] str$-
optimized away

----------------------
Inlinee: character [0x560a55e4c150]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] int$-
optimized away

----------------------
Inlinee: vapply [0x560a5607f4e0]
referenced: 15
referenced non-empty: 9
read non-empty: 9
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 1
dependent: 6
other reasons unused non-empty: 3

Polluted
polluted: 6
used polluted: 0

Type#0 [unused] (cls|blt)- (polluted)
optimized away (dependency)

Type#1 [unused] (cls|blt)- (polluted)
val?            %21.10 = StaticCall         !v    match.fun[0x560a62cf7d80](%21.9) e21.8   <(cls|blt)->
dependent slot

Type#2 [unused] val? (polluted)
val?            %23.4 = Force!<lazy>       !v    %23.3, e21.8   <val?>
dependent slot

Type#3 [unused] lgl$-
lgl$#-          %23.5 = CallSafeBuiltin    wed   is.vector(%23.4, "any")    <lgl$->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] (str|vec)+ (polluted)
val?            %46.4 = Force!<wrapped>    !v    %46.3, e21.8   <(str|vec)+>
other unused reason

Type#6 [unused] lgl$-
lgl$#-          %46.5 = CallSafeBuiltin    wed   is.object(%46.4)    <lgl$->
dependent slot

Type#7 [unused] val? (polluted)
val?            %45.4 = Force!<wrapped>    !v    %45.3, e21.8   <val?>
dependent slot

Type#8 [unused] vec
val?            %45.5 = StaticCall         !v    as.list[0x560a62dde3b0](%45.4) { 0 } e21.8   <vec>
other unused reason

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] val?+ (polluted)
val?            %31.2 = Call               !v    %31.0(%31.1) e21.8   <val?+>
other unused reason

======================= ClosureVersion:  (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 7) =======================
referenced: 113
referenced non-empty: 64
read non-empty: 62
used: 9
present non-empty: 22

Used
exact match: 9
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 55
optimized away non-empty: 33
dependent: 50
other reasons unused non-empty: 5

Polluted
polluted: 0
used polluted: 0

----------------------
 [0x560a61ff4ab0]
referenced: 105
referenced non-empty: 58
read non-empty: 58
used: 9
present non-empty: 22

Used
exact match: 9
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 49
optimized away non-empty: 27
dependent: 46
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls-
optimized away (dependency)

Type#1 [unused] str$-
optimized away

Type#2 [unused] str-
str-            %2.6  = CallSafeBuiltin    wed   c("linear", "constant")    <str->
other unused reason

Type#3 [used] int$-
val+            %2.7  = CallSafeBuiltin    wed   pmatch("linear", %2.6, NA, false)    <int$->
void                    Assume             D     %2.8, %2.9 (Typecheck@0x560a61f413b0[Type#3])
exact match
checkFor: int$-, static: val+, feedback: int$-, expected: int$-, required: val?^ | miss

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] int$-
optimized away (dependency)

Type#6 [unused] lgl$-
lgl$-           %6.3  = CallSafeBuiltin    wed   is.na(%4.1)    <lgl$->
dependent slot

Type#7 [unused] real$-
optimized away (dependency)

Type#8 [unused] lgl$-
optimized away (dependency)

Type#9 [unused] real$-
optimized away (dependency)

Type#10 [unused] int$-
optimized away (dependency)

Type#11 [unused] lgl$-
optimized away (dependency)

Type#12 [unused] int$-
optimized away (dependency)

Type#13 [unused] lgl$-
optimized away (dependency)

Type#14 [used] int$-
val?^ | miss    %11.0 = LdVar              eR    lenR, e1.2
void                    Assume             D     %11.1, %9.7 (Typecheck@0x560a61f413b0[Type#14])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#15 [unused] lgl$-
lgl$-           %11.4 = Eq                 d     %11.3, 1, elided   <lgl$->
dependent slot

Type#16 [used] real$-
val?            %80.1 = Force!<wrapped>    !v    %80.0, e1.2   <real$->
void                    Assume             D     %84.0, %82.5 (Typecheck@0x560a61f413b0[Type#16])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?+

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] real-
real-           %82.4 = CallSafeBuiltin    wed   c(1, 1)    <real->
dependent slot

Type#19 [unused] real-
real-           %84.3 = Extract1_1D        wed   %84.2, %82.4, elided   <real->
dependent slot

Type#20 [unused] real-
optimized away (dependency)

Type#21 [unused] real-
optimized away (dependency)

Type#22 [unused] cls-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] vec+
val?            %13.6 = NamedCall          !v    %13.0(%13.1, %13.2, %13.3, %13.4, na.rm=%13.5) e1.2   <vec+>
dependent slot

Type#25 [unused] lgl$-
val?            %13.9 = Force!<lazy>       !v    %13.8, e1.2   <lgl$->
dependent slot

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] vec+
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [used] real-
val?            %21.6 = Call               !v    %21.3(%21.4, %21.5) e1.2   <real->
void                    Assume             D     %21.7, %21.8 (Typecheck@0x560a61f413b0[Type#41])
exact match
checkFor: real-, static: val?, feedback: real-, expected: real-, required: val?+

Type#42 [used] int$-
(int|real)$-    %23.2 = CallSafeBuiltin    wed   length(%23.1)    <int$->
void                    Assume             D     %23.3, %23.4 (Typecheck@0x560a61f413b0[Type#42])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] int$-
optimized away (dependency)

Type#45 [unused] lgl$-
lgl$-           %27.3 = CallSafeBuiltin    wed   is.na(%25.1)    <lgl$->
dependent slot

Type#46 [unused] int$-
optimized away (dependency)

Type#47 [unused] lgl$-
lgl$-           %28.0 = Lte                d     %25.1, 1, elided   <lgl$->
dependent slot

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] vec+
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] real-
val?            %30.3 = Call               !v    %30.0(%30.1, %30.2) e1.2   <real->
dependent slot

Type#55 [used] real-
val?            %62.1 = Force!<value>      !v    %62.0, e1.2   <real->
void                    Assume             D     %62.3, %62.4 (Typecheck@0x560a61f413b0[Type#55])
exact match
checkFor: real-, static: val?, feedback: real-, expected: real-, required: val?+

Type#56 [unused] real$-
real$-          %64.3 = Extract1_1D        wed   %64.2, 1L, elided   <real$->
dependent slot

Type#57 [unused] lgl$-
lgl$-           %64.4 = Eq                 d     %64.3, 1, elided   <lgl$->
dependent slot

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [used] real-
val?            %47.1 = Force!<value>      !v    %47.0, e1.2   <real->
void                    Assume             D     %47.3, %47.4 (Typecheck@0x560a61f413b0[Type#60])
exact match
checkFor: real-, static: val?, feedback: real-, expected: real-, required: val?+

Type#61 [unused] real$-
real$-          %49.3 = Extract1_1D        wed   %49.2, 2L, elided   <real$->
dependent slot

Type#62 [unused] lgl$-
lgl$-           %49.4 = Eq                 d     %49.3, 1, elided   <lgl$->
dependent slot

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] lgl$-
optimized away (dependency)

Type#71 [unused] int$-
optimized away (dependency)

Type#72 [unused] lgl$-
optimized away (dependency)

Type#73 [unused] lgl$-
optimized away (dependency)

Type#74 [unused] int$-
optimized away (dependency)

Type#75 [unused] lgl$-
optimized away (dependency)

Type#76 [unused] real$-
optimized away (dependency)

Type#77 [unused] int$-
optimized away (dependency)

Type#78 [unused] lgl$-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] vec+
optimized away (dependency)

Type#87 [unused] $#-
optimized away (dependency)

Type#88 [used] real-
val?            %40.6 = Call               !v    %40.3(%40.4, %40.5) e1.2   <real->
void                    Assume             D     %40.7, %40.8 (Typecheck@0x560a61f413b0[Type#88])
exact match
checkFor: real-, static: val?, feedback: real-, expected: real-, required: val?+

Type#89 [unused] real-
val+            %42.2 = CallSafeBuiltin    wed   as.double(%42.1)    <real->
dependent slot

Type#90 [unused] $#-
optimized away (dependency)

Type#91 [used] real-
val?^ | miss    %44.3 = LdVar              eR    y, e1.2
void                    Assume             D     %44.4, %42.4 (Typecheck2@0x560a61f413b0[Type#91])
exact match
checkFor: real-, static: val?^ | miss, feedback: real-, expected: real-, required: val?+

Type#92 [unused] real-
val+            %44.7 = CallSafeBuiltin    wed   as.double(%44.6)    <real->
dependent slot

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] $#-
optimized away (dependency)

Type#99 [unused] vec
val?            %46.4 = Force!<value>      !v    %46.3, e1.2   <vec>
other unused reason

Type#100 [unused] real-
val?            %46.6 = Force!<value>      !v    %46.5, e1.2   <real->
dependent slot

Type#101 [unused] real-
val?            %46.8 = Force!<value>      !v    %46.7, e1.2   <real->
dependent slot

Type#102 [unused] int$-
val?            %46.10 = Force!<value>      !v    %46.9, e1.2   <int$->
dependent slot

Type#103 [unused] real$-
val?            %46.12 = Force!<wrapped>    !v    %46.11, e1.2   <real$->
dependent slot

Type#104 [unused] lgl$-
val?            %46.14 = Force!<wrapped>    !v    %46.13, e1.2   <lgl$->
dependent slot

----------------------
Inlinee: pmatch [0x560a57621820]
referenced: 8
referenced non-empty: 6
read non-empty: 4
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 6
dependent: 4
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str-
optimized away (dependency)

Type#5 [unused] str-
optimized away (dependency)

Type#6 [unused] int$-
optimized away

Type#7 [unused] lgl$-
optimized away

*********************** Compilation session for: regularize.values (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl3,NonRefl4,!Obj0,!Obj4) ***********************
======================= ClosureVersion: regularize.values (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl3,NonRefl4,!Obj0,!Obj4) =======================
referenced: 152
referenced non-empty: 50
read non-empty: 48
used: 16
present non-empty: 13

Used
exact match: 14
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 34
optimized away non-empty: 21
dependent: 34
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

----------------------
regularize.values [0x560a6230e400]
referenced: 123
referenced non-empty: 33
read non-empty: 33
used: 12
present non-empty: 11

Used
exact match: 11
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 21
optimized away non-empty: 10
dependent: 21
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] real-
optimized away (dependency)

Type#1 [unused] real-
optimized away (dependency)

Type#2 [unused] vec+
val?            %1.9  = NamedCall          !v    %1.6(%1.7, %1.8, setLab=false) e1.5   <vec+>
dependent slot

Type#3 [unused] vec+
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] real-
val?            %1.14 = Call               !v    %1.11(%1.12, %1.13) e1.5   <real->
dependent slot

Type#6 [unused] vec+
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] real-
val?            %1.19 = Call               !v    %1.16(%1.17, %1.18) e1.5   <real->
void                    Assume             D     %1.22, %1.23 (Typecheck@0x560a62429810[Type#8])
exact match
checkFor: real-, static: val?, feedback: real-, expected: real-, required: val?+

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] real-
optimized away (dependency)

Type#20 [unused] lgl-
lgl-            %2.12 = CallSafeBuiltin    wed   is.na(%2.11)    <lgl->
dependent slot

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [used] real-
val?            %2.14 = Force!<value>      !v    %2.13, e1.5   <real->
void                    Assume             D     %2.15, %2.16 (Typecheck@0x560a62429810[Type#22])
exact match
checkFor: real-, static: val?, feedback: real-, expected: real-, required: val?+

Type#23 [unused] lgl-
lgl-            %4.2  = CallSafeBuiltin    wed   is.na(%4.1)    <lgl->
dependent slot

Type#24 [unused] lgl-
val+            %4.3  = CallSafeBuiltin    wed   |(%2.12, %4.2)    <lgl->
dependent slot

Type#25 [used] lgl$-
val?            %4.5  = CallBuiltin        !v    any(%4.3) e1.5   <lgl$->
void                    Assume             D     %4.6, %4.7 (Typecheck@0x560a62429810[Type#25])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [used] real-
val?^ | miss    %7.3  = LdVar              eR    x, e1.5
void                    Assume             D     %7.4, %4.7 (Typecheck2@0x560a62429810[Type#27])
exact match
checkFor: real-, static: val?^ | miss, feedback: real-, expected: real-, required: val?+

Type#28 [used] int$-
(int|real)$-    %7.7  = CallSafeBuiltin    wed   length(%7.6)    <int$->
void                    Assume             D     %7.8, %7.9 (Typecheck@0x560a62429810[Type#28])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] cls-
optimized away (dependency)

Type#46 [used] lgl$-
val?            %12.9 = PopContext         C     %12.8, %12.4   <lgl$->
void                    Assume             D     %12.10, %12.11 (Typecheck@0x560a62429810[Type#46])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [used] cls-
val?            %24.4 = Force!<wrapped>    !v    %24.3, e1.5   <cls->
void                    Assume             D     %24.5, %24.6 (Typecheck@0x560a62429810[Type#48])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: cls-, expected: cls-, required: val?+

Type#49 [unused] lgl$-
lgl$#-          %26.2 = CallSafeBuiltin    wed   is.function(%26.1)    <lgl$->
dependent slot

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] lgl$-
optimized away (dependency)

Type#70 [unused] lgl$-
optimized away (dependency)

Type#71 [unused] real-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [used] lgl$-
val?            %63.1 = PopContext         C     %63.0, %54.4   <lgl$->
void                    Assume             D     %63.2, %63.3 (Typecheck@0x560a62429810[Type#76])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] $#-
optimized away (dependency)

Type#87 [unused] $#-
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] real-
val?            %66.7 = Force!<value>      !v    %66.6, e1.5   <real->
dependent slot

Type#90 [used] real-
val?            %66.8 = StaticCall         !v    unique[0x560a62f7c7e0](%66.7) { 0 } e1.5   <real->
void                    Assume             D     %66.10, %66.11 (Typecheck@0x560a62429810[Type#90])
exact match
checkFor: real-, static: val?, feedback: real-, expected: real-, required: val?+

Type#91 [used] int$-
(int|real)$-    %68.2 = CallSafeBuiltin    wed   length(%68.1)    <int$->
void                    Assume             D     %68.3, %68.4 (Typecheck@0x560a62429810[Type#91])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#92 [used] int$-
val?^ | miss    %70.2 = LdVar              eR    nx, e1.5
void                    Assume             D     %70.3, %68.4 (Typecheck@0x560a62429810[Type#92])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#93 [unused] lgl$-
lgl$-           %70.6 = Lt                 d     %70.1, %70.5, elided   <lgl$->
dependent slot

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] $#-
optimized away (dependency)

Type#99 [unused] $#-
optimized away (dependency)

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [unused] $#-
optimized away (dependency)

Type#102 [unused] $#-
optimized away (dependency)

Type#103 [unused] $#-
optimized away (dependency)

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] $#-
optimized away (dependency)

Type#106 [unused] $#-
optimized away (dependency)

Type#107 [unused] $#-
optimized away (dependency)

Type#108 [unused] $#-
optimized away (dependency)

Type#109 [unused] $#-
optimized away (dependency)

Type#110 [unused] $#-
optimized away (dependency)

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] $#-
optimized away (dependency)

Type#113 [unused] $#-
optimized away (dependency)

Type#114 [unused] $#-
optimized away (dependency)

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

Type#117 [unused] real-
val?            %18.4 = Force!<value>      !v    %18.3, e1.5   <real->
dependent slot

Type#118 [unused] real-
val?            %18.6 = Force!<value>      !v    %18.5, e1.5   <real->
dependent slot

Type#119 [used] lgl$-
val?^ | miss    %20.0 = LdVar              eR    keptNA, e1.5
void                    Assume             D     %20.1, %18.7 (Typecheck@0x560a62429810[Type#119])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#120 [unused] lgl$-
optimized away (dependency)

Type#121 [unused] $#-
optimized away (dependency)

Type#122 [unused] vec+
val?            %22.1 = NamedCall          !     <blt list>(x=%18.4, y=%18.6, keptNA=%20.3, notNA=%22.0) e1.5   <vec+>
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 7
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %12.7 = Force!<lazy>       !vL   %12.5, e12.6   <val?>
dependent slot

Type#1 [unused] val? (polluted)
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: is.unsorted [0x560a623f6230]
referenced: 21
referenced non-empty: 9
read non-empty: 7
used: 4
present non-empty: 1

Used
exact match: 3
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 4
dependent: 5
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] real-
val?            %54.7 = Force!<lazy>       !vL   %54.5, e54.6   <real->
void                    Assume             D     %54.8, %54.9 (Typecheck@0x560a62420f90[Type#1])
exact match
checkFor: real-, static: val?, feedback: real-, expected: real-, required: val?^ | miss

Type#2 [used] int$-
(int|real)$-    %56.2 = CallSafeBuiltin    wed   length(%56.1)    <int$->
void                    Assume             D     %56.3, %56.4 (Typecheck@0x560a62420f90[Type#2])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#3 [unused] lgl$-
lgl$-           %58.2 = Lte                d     %58.1, 1L, elided   <lgl$->
dependent slot

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [used] real-
val?^           %54.5 = CastType                 up %54.3
void                    Assume             D     %59.0, %56.4 (Typecheck2@0x560a62420f90[Type#6])
narrowed with static type: no
widened: yes
checkFor: real~-, static: val?^, feedback: real-, expected: real-, required: val?+

Type#7 [used] lgl$-
val+            %59.2 = CallSafeBuiltin    wed   anyNA(%56.1)    <lgl$->
void                    Assume             D     %59.3, %59.4 (Typecheck@0x560a62420f90[Type#7])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#8 [unused] lgl$-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] real-
optimized away (dependency)

Type#20 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: fx (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: fx (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 10
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 5
other reasons unused non-empty: 1

Polluted
polluted: 5
used polluted: 0

----------------------
fx [0x560a62153220]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] str- (polluted)
optimized away (dependency)

Type#1 [unused] str- (polluted)
optimized away (dependency)

Type#2 [unused] str- (polluted)
val?            %6.3  = PopContext         C     %6.2, %2.5   <str->
dependent slot

----------------------
Inlinee: tolower [0x560a5aa57fe0]
referenced: 7
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str- (polluted)
val?            %2.8  = Force!<lazy>       !vr   %2.6,    <str->
dependent slot

Type#2 [unused] lgl$-
lgl$#-          %2.9  = CallSafeBuiltin    wed   is.character(%2.8)    <lgl$->
other unused reason

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] str- (polluted)
val?            %6.1  = Force!<wrapped>    !v    %6.0, e2.7   <str->
dependent slot

*********************** Compilation session for: gsub (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 4) ***********************
======================= ClosureVersion: gsub (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 4) =======================
referenced: 45
referenced non-empty: 18
read non-empty: 18
used: 4
present non-empty: 10

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 4
dependent: 10
other reasons unused non-empty: 4

Polluted
polluted: 5
used polluted: 0

----------------------
gsub [0x560a627349d0]
referenced: 40
referenced non-empty: 13
read non-empty: 13
used: 3
present non-empty: 9

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 10
optimized away non-empty: 1
dependent: 10
other reasons unused non-empty: 0

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] str- (polluted)
optimized away (dependency)

Type#1 [used] lgl$-
val?            %2.2  = PopContext         C     %2.1, %1.5   <lgl$->
void                    Assume             D     %2.3, %2.4 (Typecheck@0x560a6273fe30[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str- (polluted)
val?            %9.4  = Force!<wrapped>    !v    %9.3, e1.3   <str->
dependent slot

Type#13 [unused] lgl$-
lgl$#-          %9.5  = CallSafeBuiltin    wed   is.character(%9.4)    <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [used] str$-
val?            %17.4 = Force!<value>      !v    %17.3, e1.3   <str$->
void                    Assume             D     %17.5, %17.6 (Typecheck@0x560a6273fe30[Type#18])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#19 [unused] str$-
val+            %19.2 = CallSafeBuiltin    wed   as.character(%19.1)    <str$->
dependent slot

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [used] str$-
val?            %21.4 = Force!<value>      !v    %21.3, e1.3   <str$->
void                    Assume             D     %21.5, %21.6 (Typecheck@0x560a6273fe30[Type#21])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#22 [unused] str$-
val+            %23.2 = CallSafeBuiltin    wed   as.character(%23.1)    <str$->
dependent slot

Type#23 [unused] str- (polluted)
val?            %23.4 = Force!<wrapped>    !v    %23.3, e1.3   <str->
dependent slot

Type#24 [unused] lgl$-
val?            %23.6 = Force!<lazy>       !v    %23.5, e1.3   <lgl$->
dependent slot

Type#25 [unused] lgl$-
val?            %23.8 = Force!<lazy>       !v    %23.7, e1.3   <lgl$->
dependent slot

Type#26 [unused] lgl$-
val?            %23.10 = Force!<lazy>       !v    %23.9, e1.3   <lgl$->
dependent slot

Type#27 [unused] lgl$-
val?            %23.12 = Force!<lazy>       !v    %23.11, e1.3   <lgl$->
dependent slot

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %1.12 = Force!<lazy>       !vr   %1.10,    <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: is.factor [0x560a55ec8200]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (int|str)+ (polluted)
optimized away

Type#1 [used] lgl$-
val?            %1.14 = PopContext         C     %1.13, %1.9   <lgl$->
void                    Assume             D     %1.15, %1.16 (Typecheck@0x560a55ec8110[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: is.logint (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0,SimpleReal0) ***********************
======================= ClosureVersion: is.logint (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0,SimpleReal0) =======================
referenced: 9
referenced non-empty: 6
read non-empty: 5
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 5
dependent: 3
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

----------------------
is.logint [0x560a628c3820]
referenced: 9
referenced non-empty: 6
read non-empty: 5
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 5
dependent: 3
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (int|real)$- (polluted)
real$-          %2.1  = Force!<lazy>       !vr   %1.0,    <(int|real)$->
other unused reason

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] real$-
optimized away

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] int$-
optimized away

Type#8 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: lintrj (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,!Obj1,!Obj2,SimpleReal1,SimpleReal2) ***********************
======================= ClosureVersion: lintrj (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,!Obj1,!Obj2,SimpleReal1,SimpleReal2) =======================
referenced: 7
referenced non-empty: 7
read non-empty: 7
used: 1
present non-empty: 5

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 1
dependent: 6
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
lintrj [0x560a6241bb70]
referenced: 7
referenced non-empty: 7
read non-empty: 7
used: 1
present non-empty: 5

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 1
dependent: 6
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] real$-
real$-          %1.4  = Force!<lazy>       !vr   %1.0,    <real$->
dependent slot

Type#1 [unused] real$-
optimized away (dependency)

Type#2 [unused] real$-
real$-          %2.2  = Force!<lazy>       !vr   %1.1,    <real$->
dependent slot

Type#3 [unused] real$-
real$-          %4.2  = Sub                d     %1.4, %2.2, elided   <real$->
dependent slot

Type#4 [used] real-
val?            %4.4  = Force!<lazy>       !L    %1.2, e1.3   <real->
void                    Assume             D     %4.5, %4.6 (Typecheck@0x560a6262fac0[Type#4])
exact match
checkFor: real-, static: val?, feedback: real-, expected: real-, required: val?^ | miss

Type#5 [unused] real-
real-           %6.4  = Mul                vwed  %4.2, %6.1, elided   <real->
dependent slot

Type#6 [unused] real-
real-           %6.5  = Sub                vwed  %1.4, %6.4, elided   <real->
dependent slot

*********************** Compilation session for: colour_ramp (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) ***********************
======================= ClosureVersion: colour_ramp (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 101
referenced non-empty: 53
read non-empty: 52
used: 9
present non-empty: 25

Used
exact match: 7
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 44
optimized away non-empty: 19
dependent: 34
other reasons unused non-empty: 10

Polluted
polluted: 3
used polluted: 0

----------------------
colour_ramp [0x560a6231e270]
referenced: 62
referenced non-empty: 38
read non-empty: 38
used: 7
present non-empty: 15

Used
exact match: 5
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 31
optimized away non-empty: 16
dependent: 29
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str-
val?            %2.3  = Force!<lazy>       !v    %1.0, e1.1   <str->
void                    Assume             D     %2.4, %2.5 (Typecheck@0x560a62631cc0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?^ | miss

Type#2 [used] int$-
(int|real)$-    %4.2  = CallSafeBuiltin    wed   length(%4.1)    <int$->
void                    Assume             D     %4.3, %4.4 (Typecheck@0x560a62631cc0[Type#2])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#3 [unused] lgl$-
lgl$-           %6.2  = Eq                 d     %6.1, 0, elided   <lgl$->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] str-
val?            %7.4  = Force!<wrapped>    !v    %7.3, e1.1   <str->
void                    Assume             D     %7.5, %7.6 (Typecheck@0x560a62631cc0[Type#8])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#9 [used] int$-
(int|real)$-    %9.2  = CallSafeBuiltin    wed   length(%9.1)    <int$->
void                    Assume             D     %9.3, %9.4 (Typecheck@0x560a62631cc0[Type#9])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#10 [unused] lgl$-
lgl$-           %11.2 = Eq                 d     %11.1, 1, elided   <lgl$->
dependent slot

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str-
optimized away (dependency)

Type#13 [unused] str-
val?            %16.3 = PopContext         C     %16.2, %12.4   <str->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] cls-
val?            %16.8 = Call               !v    %16.5(%16.6, %16.7) e1.1   <cls->
dependent slot

Type#17 [unused] str-
optimized away (dependency)

Type#18 [unused] real+
val?            %18.4 = StaticCall         !v    [0x560a5df87300](%18.1, true, "lab", missingArg, "transparent") { 0n 1n 2n 4n } e1.1   <real+>
dependent slot

Type#19 [unused] str-
optimized away (dependency)

Type#20 [unused] int$-
optimized away (dependency)

Type#21 [unused] real-
val?            %20.4 = StaticCall         !v    unknown--fromOverride[0x560a6318e770](0, 1, missingArg, %20.3) from function(from=1, to=1, by=((/(((-(to, from)), |... { 0 1 3n } e1.1   <real->
dependent slot

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] cls-
val?            %20.9 = Call               !v    %20.6(%20.7, %20.8) e1.1   <cls->
dependent slot

Type#25 [unused] real-
optimized away (dependency)

Type#26 [unused] real+
optimized away (dependency)

Type#27 [unused] real-
optimized away (dependency)

Type#28 [unused] cls-
val?            %20.13 = Call               !v    %20.10(%20.11, %20.12) e1.1   <cls->
dependent slot

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] cls-
val?            %20.18 = Call               !v    %20.15(%20.16, %20.17) e1.1   <cls->
dependent slot

Type#32 [unused] real-
optimized away (dependency)

Type#33 [unused] real+
optimized away (dependency)

Type#34 [unused] real-
optimized away (dependency)

Type#35 [unused] cls-
val?            %20.22 = Call               !v    %20.19(%20.20, %20.21) e1.1   <cls->
dependent slot

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] cls-
val?            %20.27 = Call               !v    %20.24(%20.25, %20.26) e1.1   <cls->
dependent slot

Type#39 [unused] real-
optimized away (dependency)

Type#40 [unused] real+
optimized away (dependency)

Type#41 [unused] real-
optimized away (dependency)

Type#42 [unused] cls-
val?            %20.31 = Call               !v    %20.28(%20.29, %20.30) e1.1   <cls->
dependent slot

Type#43 [used] lgl$-
val?            %20.34 = Force!<lazy>       !v    %20.33, e1.1   <lgl$->
void                    Assume             D     %20.35, %20.36 (Typecheck@0x560a62631cc0[Type#43])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [used] real+
val?^ | miss    %23.3 = LdVar              eR    lab_in, e1.1
void                    Assume             D     %23.4, %20.36 (Typecheck@0x560a62631cc0[Type#47])
exact match
checkFor: real+, static: val?^ | miss, feedback: real+, expected: real+, required: val?^ | miss

Type#48 [unused] real-
real+           %23.7 = Extract1_2D        wed   %23.6, missingArg, 4, elided   <real->
dependent slot

Type#49 [unused] lgl-
lgl             %23.8 = Eq                 wed   %23.7, 1, elided   <lgl->
other unused reason

Type#50 [used] lgl$-
val?            %23.9 = CallBuiltin        !v    all(%23.8) e1.1   <lgl$->
void                    Assume             D     %23.10, %23.11 (Typecheck@0x560a62631cc0[Type#50])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] cls-
optimized away (dependency)

Type#59 [unused] lgl$-
optimized away (dependency)

Type#60 [unused] lgl$-
optimized away (dependency)

Type#61 [unused] cls
val?            %51.21 = PopContext         C     %51.17, %30.5   <cls>
other unused reason

----------------------
Inlinee: is_function [0x560a5a5fb670]
referenced: 5
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] vec
val?            %39.3 = Force!<value>      !v    %39.1, e39.2   <vec>
other unused reason

Type#3 [unused] val?- (polluted)
val?            %39.5 = Force!<lazy>       !v    %39.4, e39.2   <val?->
other unused reason

Type#4 [used] lgl$-
val?            %39.6 = CallBuiltin        !v    .Call(%39.3, %39.5) e39.2   <lgl$->
void                    Assume             D     %39.7, %39.8 (Typecheck@0x560a5a61bb80[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: check_function [0x560a62594d50]
referenced: 15
referenced non-empty: 3
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] cls-
optimized away

Type#4 [used] lgl$-
val?            %41.2 = PopContext         C     %41.1, %37.4   <lgl$->
void                    Assume             D     %41.3, %41.4 (Typecheck@0x560a62a44550[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] nil-
optimized away

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: new_continuous_palette [0x560a62a3dbf0]
referenced: 12
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls-
optimized away

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %51.6 = Force!<value>      !v    %51.5, e32.3   <str$->
other unused reason

Type#8 [unused] cls
val?            %51.9 = Force!<value>      !v    %51.8, e32.3   <cls>
dependent slot

Type#9 [unused] lgl$-
val?            %51.13 = Force!<lazy>       !v    %51.12, e32.3   <lgl$->
other unused reason

Type#10 [unused] cls
val?            %51.16 = Force!<value>      !v    %51.15, e32.3   <cls>
dependent slot

Type#11 [unused] cls
val?            %51.17 = NamedCall          !v    %51.14(%51.16, "na_safe", value=%51.13) e32.3   <cls>
dependent slot

----------------------
Inlinee: tolower [0x560a5aa57fe0]
referenced: 7
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str- (polluted)
val?            %12.7 = Force!<lazy>       !vL   %12.5, e12.6   <str->
dependent slot

Type#2 [unused] lgl$-
lgl$#-          %12.8 = CallSafeBuiltin    wed   is.character(%12.7)    <lgl$->
other unused reason

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] str- (polluted)
val?            %16.1 = Force!<wrapped>    !v    %16.0, e12.6   <str->
dependent slot

======================= ClosureVersion:  (CorrOrd,!TMany,Argmatch;Eager1,Eager2,Eager3,Eager4,NonRefl1,NonRefl2,NonRefl3,NonRefl4,!Obj1,!Obj2,!Obj4) =======================
referenced: 107
referenced non-empty: 45
read non-empty: 44
used: 10
present non-empty: 18

Used
exact match: 6
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 35
optimized away non-empty: 17
dependent: 26
other reasons unused non-empty: 9

Polluted
polluted: 3
used polluted: 0

----------------------
 [0x560a62792330]
referenced: 30
referenced non-empty: 21
read non-empty: 21
used: 5
present non-empty: 7

Used
exact match: 2
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 16
optimized away non-empty: 9
dependent: 15
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val+            %1.7  = Force<value>             %1.2,    <str$->
dependent slot

Type#1 [used] lgl$-
lgl             %3.0  = Neq                wed   %1.7, "rgb", elided   <lgl$->
void                    Assume             D     %3.1, %3.2 (Typecheck@0x560a62727770[Type#1])
exact match
checkFor: lgl$-, static: lgl, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] real+
val?            %73.4 = StaticCall         !v    as_white_ref[0x560a639ba130](%73.3) e1.6   <real+>
dependent slot

Type#4 [unused] lgl$-
val?            %9.4  = Force!<value>      !v    %9.3, e1.6   <lgl$->
dependent slot

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] str-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

Type#8 [unused] str$-
optimized away (dependency)

Type#9 [unused] int$-
optimized away

Type#10 [unused] real+
optimized away (dependency)

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [unused] real_
val?            %51.4 = PopContext         C     %51.3, %19.8   <real_>
dependent slot

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [used] vec+
val?            %53.4 = Force!<wrapped>    !v    %53.3, e1.6   <vec+>
void                    Assume             D     %61.0, %59.5 (Typecheck@0x560a62727770[Type#20])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] str$-
optimized away (dependency)

Type#24 [used] str$-
val?            %59.3 = PopContext         C     %59.2, %55.5   <str$->
void                    Assume             D     %59.4, %59.5 (Typecheck@0x560a62727770[Type#24])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#25 [used] str-
val?            %61.5 = Extract2_1D        wed   %61.2, %61.4, elided   <str->
void                    Assume             D     %65.1, %61.9 (Typecheck@0x560a62727770[Type#25])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#26 [unused] lgl$-
val?            %61.7 = Force!<value>      !v    %61.6, e1.6   <lgl$->
dependent slot

Type#27 [unused] str-
val+            %65.4 = CallSafeBuiltin    wed   c(%65.3, %65.0)    <str->
dependent slot

Type#28 [used] real_
val?^ | miss    %67.3 = LdVar              eR    colours, e1.6
void                    Assume             D     %67.4, %65.5 (Typecheck@0x560a62727770[Type#28])
exact match
checkFor: real_, static: val?^ | miss, feedback: real_, expected: real_, required: val?^ | miss

Type#29 [unused] real+
val?            %67.7 = StaticCall         !v    colnames<-[0x560a5df87980](%67.6, %65.4) { 0 1n } e1.6   <real+>
dependent slot

----------------------
Inlinee: tolower [0x560a5aa57fe0]
referenced: 7
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str- (polluted)
val?            %55.8 = Force!<lazy>       !vL   %55.6, e55.7   <str->
dependent slot

Type#2 [unused] lgl$-
lgl$#-          %55.9 = CallSafeBuiltin    wed   is.character(%55.8)    <lgl$->
other unused reason

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] str- (polluted)
val?            %59.1 = Force!<wrapped>    !v    %59.0, e55.7   <str->
dependent slot

----------------------
Inlinee: decode_c [0x560a621510f0]
referenced: 21
referenced non-empty: 10
read non-empty: 10
used: 2
present non-empty: 6

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 2
dependent: 4
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] vec
val?            %21.3 = Force!<value>      !v    %21.1, e21.2   <vec>
other unused reason

Type#10 [unused] str-
val?            %23.7 = Force!<lazy>       !v    %23.6, e21.2   <str->
dependent slot

Type#11 [unused] str-
optimized away (dependency)

Type#12 [unused] lgl$-
val?            %43.1 = Force!<lazy>       !v    %43.0, e21.2   <lgl$->
other unused reason

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [used] int$-
val?            %45.4 = Force!<lazy>       !v    %45.3, e21.2   <int$->
void                    Assume             D     %45.5, %45.6 (Typecheck@0x560a62150fe0[Type#14])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?+

Type#15 [unused] int$-
optimized away (dependency)

Type#16 [unused] real+
val?            %47.3 = Force!<lazy>       !v    %47.2, e21.2   <real+>
other unused reason

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [used] str$-
val?            %49.4 = Force!<lazy>       !v    %49.3, e21.2   <str$->
void                    Assume             D     %49.5, %49.6 (Typecheck@0x560a62150fe0[Type#18])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#19 [unused] str$-
val+            %51.2 = CallSafeBuiltin    wed   as.character(%51.1)    <str$->
dependent slot

Type#20 [unused] real_
val?            %51.3 = CallBuiltin        !v    .Call(%21.3, %23.7, %43.1, %47.1, %47.3, %51.2) e21.2   <real_>
other unused reason

----------------------
Inlinee: as_colour_code [0x560a6266f220]
referenced: 38
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str-
optimized away (dependency)

Type#2 [unused] lgl$-
lgl$#-          %23.10 = CallSafeBuiltin    wed   is.character(%23.7)    <lgl$->
other unused reason

Type#3 [unused] str-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: isTRUE [0x560a55e9e1e0]
referenced: 11
referenced non-empty: 8
read non-empty: 7
used: 3
present non-empty: 1

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 4
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (nil|lgl)- (polluted)
optimized away

Type#2 [used] lgl$-
val+            %9.5  = CallSafeBuiltin    wed   is.logical(%9.4)    <lgl$->
void                    Assume             D     %9.6, %9.7 (Typecheck@0x560a55e9bc50[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %9.4  = Force!<value>      !v    %9.3, e1.6   <lgl$->
void                    Assume             D     %12.0, %9.7 (Typecheck@0x560a55e9bc50[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %9.4  = Force!<value>      !v    %9.3, e1.6   <lgl$->
void                    Assume             D     %14.0, %9.7 (Typecheck@0x560a55e9bc50[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %14.3 = CallSafeBuiltin    wed   is.na(%14.2)    <lgl$->
dependent slot

Type#10 [unused] lgl$-
optimized away (dependency)

======================= ClosureVersion: as_white_ref (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 129
referenced non-empty: 59
read non-empty: 57
used: 15
present non-empty: 29

Used
exact match: 7
widened: 8
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 44
optimized away non-empty: 15
dependent: 41
other reasons unused non-empty: 3

Polluted
polluted: 6
used polluted: 2

----------------------
as_white_ref [0x560a627466f0]
referenced: 67
referenced non-empty: 33
read non-empty: 33
used: 7
present non-empty: 16

Used
exact match: 3
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 10
dependent: 24
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str$-
val?            %2.4  = Force!<lazy>       !v    %1.0, e2.3   <str$->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a627f0ab0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

Type#2 [unused] lgl$-
lgl$#-          %4.2  = CallSafeBuiltin    wed   is.character(%4.1)    <lgl$->
dependent slot

Type#3 [used] vec+
val?            %73.1 = Force!<wrapped>    !v    %73.0, e2.3   <vec+>
void                    Assume             D     %79.0, %77.3 (Typecheck@0x560a627f0ab0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [used] real$-
val?            %75.5 = Force!<lazy>       !v    %75.4, e2.3   <real$->
void                    Assume             D     %75.6, %75.7 (Typecheck@0x560a627f0ab0[Type#7])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?+

Type#8 [unused] str$-
val+            %77.2 = CallSafeBuiltin    wed   as.character(%77.1)    <str$->
dependent slot

Type#9 [used] vec+
val?            %79.3 = Extract2_1D        wed   %79.2, %77.2, elided   <vec+>
void                    Assume             D     %87.0, %85.5 (Typecheck@0x560a627f0ab0[Type#9])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [used] str$-
val?            %85.3 = PopContext         C     %85.2, %81.5   <str$->
void                    Assume             D     %85.4, %85.5 (Typecheck@0x560a627f0ab0[Type#13])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#14 [unused] real-
val?            %87.5 = Extract2_1D        wed   %87.2, %87.4, elided   <real->
dependent slot

Type#15 [unused] real-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] real-
val?            %8.4  = Force!<value>      !v    %8.3, e2.3   <real->
dependent slot

Type#18 [unused] lgl$-
lgl$#-          %8.5  = CallSafeBuiltin    wed   is.integer(%8.4)    <lgl$->
dependent slot

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [used] real-
val?^ | miss    %12.3 = LdVar              eR    x, e2.3
void                    Assume             D     %12.4, %10.0 (Typecheck2@0x560a627f0ab0[Type#23])
exact match
checkFor: real-, static: val?^ | miss, feedback: real-, expected: real-, required: val?+

Type#24 [unused] lgl$-
lgl$#-          %12.7 = CallSafeBuiltin    wed   is.numeric(%12.6)    <lgl$->
dependent slot

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] real-
optimized away (dependency)

Type#27 [used] int$-
(int|real)$-    %16.3 = CallSafeBuiltin    wed   length(%12.6)    <int$->
void                    Assume             D     %16.4, %16.5 (Typecheck@0x560a627f0ab0[Type#27])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#28 [unused] lgl$-
lgl$-           %18.2 = Eq                 d     %18.1, 2, elided   <lgl$->
dependent slot

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] real-
optimized away (dependency)

Type#42 [unused] real$-
real$-          %63.0 = Extract1_1D        wed   %12.6, 2, elided   <real$->
dependent slot

Type#43 [unused] real$-
real$-          %63.1 = Div                d     100, %63.0, elided   <real$->
dependent slot

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] real$-
optimized away (dependency)

Type#54 [unused] real-
optimized away (dependency)

Type#55 [unused] real$-
real$-          %65.3 = Extract1_1D        wed   %12.6, 1, elided   <real$->
dependent slot

Type#56 [unused] real$-
real$-          %67.0 = Mul                d     %63.1, %65.3, elided   <real$->
dependent slot

Type#57 [unused] real$-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] real-
optimized away (dependency)

Type#60 [unused] real$-
real$-          %67.4 = CallSafeBuiltin    wed   sum(%12.6)    <real$->
dependent slot

Type#61 [unused] real$-
real$-          %67.5 = Sub                d     1, %67.4, elided   <real$->
dependent slot

Type#62 [unused] real$-
real$-          %67.6 = Mul                d     %63.1, %67.5, elided   <real$->
dependent slot

Type#63 [unused] real-
real-           %67.7 = CallSafeBuiltin    wed   c(%67.0, 100, %67.6)    <real->
dependent slot

Type#64 [unused] real-
optimized away (dependency)

Type#65 [unused] str-
optimized away

Type#66 [unused] real+
val?            %35.3 = PopContext         C     %35.2, %28.6   <real+>
other unused reason

----------------------
Inlinee: structure [0x560a55eda070]
referenced: 55
referenced non-empty: 23
read non-empty: 21
used: 8
present non-empty: 10

Used
exact match: 4
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 5
dependent: 15
other reasons unused non-empty: 0

Polluted
polluted: 6
used polluted: 2

Type#0 [unused] val? (polluted)
val?            %28.9 = Force!<lazy>       !vL   %28.7, e28.8   <val?>
dependent slot

Type#1 [used] vec+
val?            %29.0 = NamedCall          !v    <blt list>(names=%28.4) e28.8   <vec+>
void                    Assume             D     %29.2, %29.3 (Typecheck@0x560a55eda190[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec+
optimized away (dependency)

Type#4 [used] int$-
(int|real)$-    %31.6 = CallSafeBuiltin    wed   length(%31.5)    <int$->
void                    Assume             D     %31.7, %31.8 (Typecheck@0x560a55eda190[Type#4])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#5 [unused] str-
str-            %36.3 = CallSafeBuiltin    wed   c(".Dim", ".Dimnames", ".Names", ".Tsp", ".Label")    <str->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] vec+
optimized away (dependency)

Type#8 [unused] str-
val+            %38.3 = CallSafeBuiltin    wed   names(%31.5)    <str->
dependent slot

Type#9 [unused] str-
optimized away (dependency)

Type#10 [unused] str-
optimized away (dependency)

Type#11 [used] int-
val?            %40.5 = StaticCall         !v    match[0x560a63995e20](%40.3, %40.4) e28.8   <int->
void                    Assume             D     %40.7, %40.8 (Typecheck@0x560a55eda190[Type#11])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] int-
optimized away (dependency)

Type#14 [unused] lgl-
lgl-            %42.6 = CallSafeBuiltin    wed   is.na(%42.5)    <lgl->
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] lgl-
lgl-            %42.7 = Not                wed   %42.6, elided   <lgl->
dependent slot

Type#17 [used] lgl$-
val?            %44.3 = CallBuiltin        !v    any(%42.7) e28.8   <lgl$->
void                    Assume             D     %44.4, %44.5 (Typecheck@0x560a55eda190[Type#17])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [used] (nil|str)- (polluted)
val?            %47.5 = NamedCall          !v    %47.3(%47.4, "class", exact=true) e28.8   <(nil|str)->
void                    Assume             D     %47.6, %47.7 (Typecheck@0x560a55eda190[Type#38])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (nil|str)-, expected: (nil|str)-, required: val?+

Type#39 [unused] lgl-
lgl-            %49.2 = Eq                 wed   %49.1, "factor", elided   <lgl->
dependent slot

Type#40 [used] lgl$-
val?            %49.3 = CallBuiltin        !v    any(%49.2) e28.8   <lgl$->
void                    Assume             D     %49.4, %49.5 (Typecheck@0x560a55eda190[Type#40])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] val? (polluted)
val?            %54.7 = Force!<wrapped>    !v    %54.6, e28.8   <val?>
dependent slot

Type#50 [used] (nil|vec)+ (polluted)
val?            %54.8 = CallBuiltin        !v    attributes(%54.7) e28.8   <(nil|vec)+>
void                    Assume             D     %54.9, %54.10 (Typecheck@0x560a55eda190[Type#50])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: (nil|vec)+, expected: (nil|vec)+, required: val?+

Type#51 [used] vec+
val?^ | miss    %56.0 = LdVar              eR    attrib, e28.8
void                    Assume             D     %56.1, %54.10 (Typecheck@0x560a55eda190[Type#51])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: vec+, expected: vec+, required: val?^ | miss

Type#52 [unused] vec+
val+            %56.7 = CallSafeBuiltin    wed   c(%56.6, %56.4)    <vec+>
dependent slot

Type#53 [unused] val? (polluted)
val?            %56.10 = Force!<wrapped>    !v    %56.9, e28.8   <val?>
dependent slot

Type#54 [unused] val? (polluted)
val?            %35.2 = Force!<value>      !     %35.0, e28.8   <val?>
dependent slot

----------------------
Inlinee: toupper [0x560a62742640]
referenced: 7
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$-
val?            %81.8 = Force!<lazy>       !vL   %81.6, e81.7   <str$->
dependent slot

Type#2 [unused] lgl$-
lgl$#-          %81.9 = CallSafeBuiltin    wed   is.character(%81.8)    <lgl$->
other unused reason

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] str$-
val?            %85.1 = Force!<wrapped>    !v    %85.0, e81.7   <str$->
dependent slot

======================= ClosureVersion: colnames<- (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1) =======================
referenced: 38
referenced non-empty: 28
read non-empty: 27
used: 8
present non-empty: 12

Used
exact match: 5
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 20
optimized away non-empty: 8
dependent: 12
other reasons unused non-empty: 8

Polluted
polluted: 3
used polluted: 0

----------------------
colnames<- [0x560a628bab30]
referenced: 31
referenced non-empty: 21
read non-empty: 21
used: 7
present non-empty: 11

Used
exact match: 4
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 3
dependent: 12
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] real_
optimized away (dependency)

Type#1 [used] lgl$-
val?            %2.2  = PopContext         C     %2.1, %1.4   <lgl$->
void                    Assume             D     %2.3, %2.4 (Typecheck@0x560a62848b90[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] real_
val?            %5.4  = Force!<value>      !v    %5.3, e1.2   <real_>
dependent slot

Type#4 [unused] nil-
val?            %5.5  = CallBuiltin        !v    dimnames(%5.4) e1.2   <nil->
dependent slot

Type#5 [unused] nil-
optimized away (dependency)

Type#6 [unused] str-
val?            %24.1 = Force!<wrapped>    !v    %24.0, e1.2   <str->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [used] real_
val?^ | miss    %27.6 = LdVar              eR    x, e1.2
void                    Assume             D     %27.7, %24.3 (Typecheck2@0x560a62848b90[Type#11])
exact match
checkFor: real_, static: val?^ | miss, feedback: real_, expected: real_, required: val?+

Type#12 [unused] int-
val+            %27.10 = CallSafeBuiltin    wed   dim(%27.9)    <int->
other unused reason

Type#13 [used] int$-
(int|real)$-    %27.11 = CallSafeBuiltin    wed   length(%27.10)    <int$->
void                    Assume             D     %27.12, %27.13 (Typecheck@0x560a62848b90[Type#13])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#14 [unused] lgl$-
lgl$-           %31.0 = Lt                 d     %29.1, 2L, elided   <lgl$->
dependent slot

Type#15 [unused] int$-
optimized away (dependency)

Type#16 [unused] vec-
vec-            %32.3 = CallSafeBuiltin    wed   vector("list", %29.1)    <vec->
dependent slot

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [used] vec-
val             %9.3  = ChkMissing         e     %7.0   <vec->
void                    Assume             D     %9.4, %7.1 (Typecheck@0x560a62848b90[Type#18])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: vec-, expected: vec-, required: val+

Type#19 [used] int$-
(int|real)$-    %9.7  = CallSafeBuiltin    wed   length(%9.6)    <int$->
void                    Assume             D     %9.8, %9.9 (Typecheck@0x560a62848b90[Type#19])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#20 [unused] lgl$-
lgl$-           %11.2 = Lt                 d     %11.1, 2L, elided   <lgl$->
dependent slot

Type#21 [unused] str-
val?            %12.1 = Force!<wrapped>    !v    %12.0, e1.2   <str->
dependent slot

Type#22 [used] str-
val?            %13.1 = Force!<wrapped>    !v    %13.0, e1.2   <str->
void                    Assume             D     %13.2, %13.3 (Typecheck@0x560a62848b90[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#23 [used] vec-
val?^ | miss    %15.0 = LdVar              eR    dn !upd, e1.2
void                    Assume             D     %15.1, %13.3 (Typecheck@0x560a62848b90[Type#23])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] vec-
val+            %16.1 = ChkMissing         e     %16.0   <vec->
dependent slot

Type#27 [unused] real_
val?            %16.4 = Force!<value>      !v    %16.3, e1.2   <real_>
dependent slot

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] real+
val?            %16.5 = NamedCall          !v    %16.2(%16.4, value=%16.1) e1.2   <real+>
other unused reason

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %1.11 = Force!<lazy>       !vr   %1.9,    <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: vector [0x560a55e99e90]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] (int|real)$- (polluted)
optimized away

----------------------
Inlinee: is.data.frame [0x560a55221df0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

Type#1 [used] lgl$-
val?            %1.13 = PopContext         C     %1.12, %1.8   <lgl$->
void                    Assume             D     %1.14, %1.15 (Typecheck@0x560a55221d00[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

======================= ClosureVersion: unknown--fromOverride (CorrOrd,!TMany,Argmatch;Eager0,Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,SimpleReal0,SimpleReal1 miss: 2) =======================
referenced: 489
referenced non-empty: 69
read non-empty: 66
used: 18
present non-empty: 31

Used
exact match: 15
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 51
optimized away non-empty: 20
dependent: 46
other reasons unused non-empty: 5

Polluted
polluted: 2
used polluted: 1

----------------------
unknown--fromOverride [0x560a6274dae0]
referenced: 478
referenced non-empty: 61
read non-empty: 58
used: 16
present non-empty: 29

Used
exact match: 14
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 45
optimized away non-empty: 16
dependent: 44
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [used] int$-
val?            %5.3  = CallBuiltin        !v    nargs() e1.6   <int$->
void                    Assume             D     %5.4, %5.5 (Typecheck@0x560a62a46410[Type#6])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#7 [unused] lgl$-
lgl$-           %7.2  = Eq                 d     %7.1, 1L, elided   <lgl$->
dependent slot

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [used] int$-
val?            %169.4 = Force!<lazy>       !v    %169.3, e1.6   <int$->
void                    Assume             D     %169.5, %169.6 (Typecheck@0x560a62a46410[Type#26])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?+

Type#27 [unused] int$-
optimized away (dependency)

Type#28 [unused] int$-
optimized away (dependency)

Type#29 [unused] int$-
optimized away (dependency)

Type#30 [unused] lgl$-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] int$-
val?            %173.7 = Force!<wrapped>    !v    %173.6, e1.6   <int$->
dependent slot

Type#34 [unused] lgl$-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [used] real$-
val?^ | miss    %21.3 = LdVar              eR    from, e1.6
void                    Assume             D     %21.4, %18.6 (Typecheck2@0x560a62a46410[Type#54])
exact match
checkFor: real$-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?+

Type#55 [unused] int$-
optimized away (dependency)

Type#56 [unused] lgl$-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [used] real$-
val?^ | miss    %24.3 = LdVar              eR    to, e1.6
void                    Assume             D     %24.4, %18.6 (Typecheck2@0x560a62a46410[Type#58])
exact match
checkFor: real$-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?+

Type#59 [unused] int$-
optimized away (dependency)

Type#60 [unused] lgl$-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] real$-
val?            %27.7 = Force!<value>      !v    %27.6, e1.6   <real$->
dependent slot

Type#68 [unused] lgl$-
lgl$#-          %27.8 = CallSafeBuiltin    wed   is.character(%27.7)    <lgl$->
dependent slot

Type#69 [unused] real$-
val?            %28.1 = Force!<value>      !v    %28.0, e1.6   <real$->
dependent slot

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [used] lgl$-
val?            %29.1 = CallBuiltin        !v    is.finite(%29.0) e1.6   <lgl$->
void                    Assume             D     %29.2, %29.3 (Typecheck@0x560a62a46410[Type#73])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] real$-
val?            %36.7 = Force!<value>      !v    %36.6, e1.6   <real$->
dependent slot

Type#81 [unused] lgl$-
lgl$#-          %36.8 = CallSafeBuiltin    wed   is.character(%36.7)    <lgl$->
dependent slot

Type#82 [unused] real$-
val?            %37.1 = Force!<value>      !v    %37.0, e1.6   <real$->
dependent slot

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [used] lgl$-
val?            %38.1 = CallBuiltin        !v    is.finite(%38.0) e1.6   <lgl$->
void                    Assume             D     %38.2, %38.3 (Typecheck@0x560a62a46410[Type#86])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#87 [unused] int$-
val?            %42.1 = Force!<wrapped>    !v    %42.0, e1.6   <int$->
dependent slot

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [used] int$-
val?^ | miss    %45.3 = LdVar              eR    length.out, e1.6
void                    Assume             D     %45.4, %42.3 (Typecheck2@0x560a62a46410[Type#89])
narrowed with static type: no
widened: yes
checkFor: int$~-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?+

Type#90 [unused] lgl$-
lgl$-           %45.8 = CallSafeBuiltin    wed   is.finite(%45.7)    <lgl$->
dependent slot

Type#91 [unused] int$-
optimized away (dependency)

Type#92 [unused] lgl$-
lgl$-           %46.0 = Lt                 d     %45.7, 0L, elided   <lgl$->
dependent slot

Type#93 [unused] int$-
optimized away (dependency)

Type#94 [unused] lgl$-
lgl$-           %50.0 = Eq                 d     %45.7, 0L, elided   <lgl$->
dependent slot

Type#95 [used] lgl$-
val?^ | miss    %51.0 = LdVar              eR    One, e1.6
void                    Assume             D     %51.1, %48.0 (Typecheck@0x560a62a46410[Type#95])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] $#-
optimized away (dependency)

Type#99 [unused] $#-
optimized away (dependency)

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [unused] $#-
optimized away (dependency)

Type#102 [unused] $#-
optimized away (dependency)

Type#103 [unused] $#-
optimized away (dependency)

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] $#-
optimized away (dependency)

Type#106 [unused] $#-
optimized away (dependency)

Type#107 [unused] $#-
optimized away (dependency)

Type#108 [unused] $#-
optimized away (dependency)

Type#109 [unused] $#-
optimized away (dependency)

Type#110 [unused] $#-
optimized away (dependency)

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] $#-
optimized away (dependency)

Type#113 [unused] $#-
optimized away (dependency)

Type#114 [unused] $#-
optimized away (dependency)

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

Type#117 [unused] $#-
optimized away (dependency)

Type#118 [unused] $#-
optimized away (dependency)

Type#119 [unused] $#-
optimized away (dependency)

Type#120 [unused] $#-
optimized away (dependency)

Type#121 [unused] $#-
optimized away (dependency)

Type#122 [unused] $#-
optimized away (dependency)

Type#123 [unused] $#-
optimized away (dependency)

Type#124 [unused] $#-
optimized away (dependency)

Type#125 [unused] $#-
optimized away (dependency)

Type#126 [unused] $#-
optimized away (dependency)

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] $#-
optimized away (dependency)

Type#129 [unused] $#-
optimized away (dependency)

Type#130 [unused] $#-
optimized away (dependency)

Type#131 [unused] $#-
optimized away (dependency)

Type#132 [unused] $#-
optimized away (dependency)

Type#133 [unused] $#-
optimized away (dependency)

Type#134 [unused] $#-
optimized away (dependency)

Type#135 [unused] $#-
optimized away (dependency)

Type#136 [unused] $#-
optimized away (dependency)

Type#137 [unused] $#-
optimized away (dependency)

Type#138 [unused] $#-
optimized away (dependency)

Type#139 [unused] $#-
optimized away (dependency)

Type#140 [unused] $#-
optimized away (dependency)

Type#141 [unused] $#-
optimized away (dependency)

Type#142 [unused] $#-
optimized away (dependency)

Type#143 [unused] $#-
optimized away (dependency)

Type#144 [unused] $#-
optimized away (dependency)

Type#145 [unused] $#-
optimized away (dependency)

Type#146 [unused] $#-
optimized away (dependency)

Type#147 [unused] $#-
optimized away (dependency)

Type#148 [unused] $#-
optimized away (dependency)

Type#149 [unused] $#-
optimized away (dependency)

Type#150 [unused] $#-
optimized away (dependency)

Type#151 [unused] $#-
optimized away (dependency)

Type#152 [unused] $#-
optimized away (dependency)

Type#153 [unused] $#-
optimized away (dependency)

Type#154 [unused] $#-
optimized away (dependency)

Type#155 [unused] $#-
optimized away (dependency)

Type#156 [unused] $#-
optimized away (dependency)

Type#157 [unused] $#-
optimized away (dependency)

Type#158 [unused] $#-
optimized away (dependency)

Type#159 [unused] $#-
optimized away (dependency)

Type#160 [unused] $#-
optimized away (dependency)

Type#161 [unused] $#-
optimized away (dependency)

Type#162 [unused] $#-
optimized away (dependency)

Type#163 [unused] $#-
optimized away (dependency)

Type#164 [unused] $#-
optimized away (dependency)

Type#165 [unused] $#-
optimized away (dependency)

Type#166 [unused] $#-
optimized away (dependency)

Type#167 [unused] $#-
optimized away (dependency)

Type#168 [unused] $#-
optimized away (dependency)

Type#169 [unused] $#-
optimized away (dependency)

Type#170 [unused] $#-
optimized away (dependency)

Type#171 [unused] $#-
optimized away (dependency)

Type#172 [unused] $#-
optimized away (dependency)

Type#173 [unused] $#-
optimized away (dependency)

Type#174 [unused] $#-
optimized away (dependency)

Type#175 [unused] $#-
optimized away (dependency)

Type#176 [unused] $#-
optimized away (dependency)

Type#177 [unused] $#-
optimized away (dependency)

Type#178 [unused] $#-
optimized away (dependency)

Type#179 [unused] $#-
optimized away (dependency)

Type#180 [unused] $#-
optimized away (dependency)

Type#181 [unused] $#-
optimized away (dependency)

Type#182 [unused] $#-
optimized away (dependency)

Type#183 [unused] $#-
optimized away (dependency)

Type#184 [unused] $#-
optimized away (dependency)

Type#185 [unused] $#-
optimized away (dependency)

Type#186 [unused] $#-
optimized away (dependency)

Type#187 [unused] $#-
optimized away (dependency)

Type#188 [unused] $#-
optimized away (dependency)

Type#189 [unused] $#-
optimized away (dependency)

Type#190 [unused] $#-
optimized away (dependency)

Type#191 [unused] $#-
optimized away (dependency)

Type#192 [unused] $#-
optimized away (dependency)

Type#193 [unused] $#-
optimized away (dependency)

Type#194 [unused] $#-
optimized away (dependency)

Type#195 [unused] $#-
optimized away (dependency)

Type#196 [unused] $#-
optimized away (dependency)

Type#197 [unused] $#-
optimized away (dependency)

Type#198 [unused] $#-
optimized away (dependency)

Type#199 [unused] $#-
optimized away (dependency)

Type#200 [unused] $#-
optimized away (dependency)

Type#201 [unused] $#-
optimized away (dependency)

Type#202 [unused] $#-
optimized away (dependency)

Type#203 [unused] $#-
optimized away (dependency)

Type#204 [unused] $#-
optimized away (dependency)

Type#205 [unused] $#-
optimized away (dependency)

Type#206 [unused] $#-
optimized away (dependency)

Type#207 [unused] $#-
optimized away (dependency)

Type#208 [unused] $#-
optimized away (dependency)

Type#209 [unused] $#-
optimized away (dependency)

Type#210 [unused] $#-
optimized away (dependency)

Type#211 [unused] $#-
optimized away (dependency)

Type#212 [unused] $#-
optimized away (dependency)

Type#213 [unused] $#-
optimized away (dependency)

Type#214 [unused] $#-
optimized away (dependency)

Type#215 [unused] $#-
optimized away (dependency)

Type#216 [unused] $#-
optimized away (dependency)

Type#217 [unused] real$-
val?            %59.7 = Force!<value>      !v    %59.6, e1.6   <real$->
dependent slot

Type#218 [unused] lgl$-
optimized away (dependency)

Type#219 [unused] $#-
optimized away (dependency)

Type#220 [unused] $#-
optimized away (dependency)

Type#221 [unused] $#-
optimized away (dependency)

Type#222 [unused] $#-
optimized away (dependency)

Type#223 [unused] $#-
optimized away (dependency)

Type#224 [unused] $#-
optimized away (dependency)

Type#225 [unused] $#-
optimized away (dependency)

Type#226 [unused] $#-
optimized away (dependency)

Type#227 [unused] $#-
optimized away (dependency)

Type#228 [unused] $#-
optimized away (dependency)

Type#229 [unused] $#-
optimized away (dependency)

Type#230 [unused] $#-
optimized away (dependency)

Type#231 [unused] $#-
optimized away (dependency)

Type#232 [unused] $#-
optimized away (dependency)

Type#233 [unused] lgl$-
optimized away (dependency)

Type#234 [unused] $#-
optimized away (dependency)

Type#235 [unused] $#-
optimized away (dependency)

Type#236 [unused] $#-
optimized away (dependency)

Type#237 [unused] $#-
optimized away (dependency)

Type#238 [unused] $#-
optimized away (dependency)

Type#239 [unused] $#-
optimized away (dependency)

Type#240 [unused] $#-
optimized away (dependency)

Type#241 [unused] $#-
optimized away (dependency)

Type#242 [unused] $#-
optimized away (dependency)

Type#243 [unused] $#-
optimized away (dependency)

Type#244 [unused] $#-
optimized away (dependency)

Type#245 [unused] $#-
optimized away (dependency)

Type#246 [unused] $#-
optimized away (dependency)

Type#247 [unused] $#-
optimized away (dependency)

Type#248 [unused] $#-
optimized away (dependency)

Type#249 [used] int$-
val?            %73.1 = Force!<wrapped>    !v    %73.0, e1.6   <int$->
void                    Assume             D     %73.2, %73.3 (Typecheck@0x560a62a46410[Type#249])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?+

Type#250 [unused] lgl$-
lgl$-           %75.2 = Gt                 d     %75.1, 2L, elided   <lgl$->
dependent slot

Type#251 [unused] $#-
optimized away (dependency)

Type#252 [unused] $#-
optimized away (dependency)

Type#253 [unused] $#-
optimized away (dependency)

Type#254 [unused] $#-
optimized away (dependency)

Type#255 [unused] $#-
optimized away (dependency)

Type#256 [unused] $#-
optimized away (dependency)

Type#257 [unused] $#-
optimized away (dependency)

Type#258 [unused] $#-
optimized away (dependency)

Type#259 [unused] $#-
optimized away (dependency)

Type#260 [unused] $#-
optimized away (dependency)

Type#261 [used] real$-
val?^ | miss    %77.0 = LdVar              eR    from, e1.6
void                    Assume             D     %77.1, %73.3 (Typecheck2@0x560a62a46410[Type#261])
exact match
checkFor: real$-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?+

Type#262 [used] real$-
val?^ | miss    %77.4 = LdVar              eR    to, e1.6
void                    Assume             D     %77.5, %73.3 (Typecheck2@0x560a62a46410[Type#262])
exact match
checkFor: real$-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?+

Type#263 [unused] lgl$-
lgl$-           %77.8 = Eq                 d     %77.3, %77.7, elided   <lgl$->
dependent slot

Type#264 [used] int$-
val?^ | miss    %78.0 = LdVar              eR    length.out, e1.6
void                    Assume             D     %78.1, %73.3 (Typecheck2@0x560a62a46410[Type#264])
narrowed with static type: no
widened: yes
checkFor: int$~-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?+

Type#265 [unused] int$-
int$-           %78.5 = Sub                d     %78.4, 1L, elided   <int$->
dependent slot

Type#266 [used] lgl$-
val?^ | miss    %80.0 = LdVar              eR    intdel, e1.6
void                    Assume             D     %80.1, %78.7 (Typecheck@0x560a62a46410[Type#266])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#267 [unused] $#-
optimized away (dependency)

Type#268 [unused] $#-
optimized away (dependency)

Type#269 [unused] $#-
optimized away (dependency)

Type#270 [unused] $#-
optimized away (dependency)

Type#271 [unused] $#-
optimized away (dependency)

Type#272 [unused] $#-
optimized away (dependency)

Type#273 [unused] $#-
optimized away (dependency)

Type#274 [unused] $#-
optimized away (dependency)

Type#275 [used] lgl$-
val?^ | miss    %91.0 = LdVar              eR    intdel, e1.6
void                    Assume             D     %91.1, %88.1 (Typecheck@0x560a62a46410[Type#275])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#276 [unused] $#-
optimized away (dependency)

Type#277 [used] real$-
val?^ | miss    %92.0 = LdVar              eR    to, e1.6
void                    Assume             D     %92.1, %88.1 (Typecheck2@0x560a62a46410[Type#277])
exact match
checkFor: real$-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?+

Type#278 [used] real$-
val?^ | miss    %92.4 = LdVar              eR    from, e1.6
void                    Assume             D     %92.5, %88.1 (Typecheck2@0x560a62a46410[Type#278])
exact match
checkFor: real$-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?+

Type#279 [unused] real$-
real$-          %92.8 = Sub                d     %92.3, %92.7, elided   <real$->
dependent slot

Type#280 [unused] $#-
optimized away (dependency)

Type#281 [unused] real$-
optimized away (dependency)

Type#282 [unused] lgl$-
lgl$-           %94.3 = CallSafeBuiltin    wed   is.finite(%92.8)    <lgl$->
dependent slot

Type#283 [unused] $#-
optimized away (dependency)

Type#284 [unused] $#-
optimized away (dependency)

Type#285 [unused] $#-
optimized away (dependency)

Type#286 [unused] $#-
optimized away (dependency)

Type#287 [unused] $#-
optimized away (dependency)

Type#288 [unused] $#-
optimized away (dependency)

Type#289 [unused] $#-
optimized away (dependency)

Type#290 [unused] $#-
optimized away (dependency)

Type#291 [unused] $#-
optimized away (dependency)

Type#292 [unused] $#-
optimized away (dependency)

Type#293 [unused] $#-
optimized away (dependency)

Type#294 [unused] $#-
optimized away (dependency)

Type#295 [unused] $#-
optimized away (dependency)

Type#296 [unused] $#-
optimized away (dependency)

Type#297 [unused] $#-
optimized away (dependency)

Type#298 [unused] $#-
optimized away (dependency)

Type#299 [unused] $#-
optimized away (dependency)

Type#300 [unused] $#-
optimized away (dependency)

Type#301 [unused] $#-
optimized away (dependency)

Type#302 [unused] $#-
optimized away (dependency)

Type#303 [unused] real$-
val?            %98.7 = Force!<value>      !v    %98.6, e1.6   <real$->
dependent slot

Type#304 [unused] real$-
val?            %98.9 = Force!<value>      !v    %98.8, e1.6   <real$->
dependent slot

Type#305 [unused] int$-
optimized away (dependency)

Type#306 [unused] int$-
optimized away (dependency)

Type#307 [unused] int-
val?            %98.12 = Call               !v    %98.10(%98.11) e1.6   <int->
other unused reason

Type#308 [unused] real$-
val?            %98.14 = Force!<value>      !v    %98.13, e1.6   <real$->
dependent slot

Type#309 [unused] int$-
val?            %98.16 = Force!<value>      !v    %98.15, e1.6   <int$->
dependent slot

Type#310 [unused] real$-
val?            %98.17 = Div                !v    %98.14, %98.16, e1.6   <real$->
dependent slot

Type#311 [unused] real-
val?            %98.18 = Mul                !v    %98.12, %98.17, e1.6   <real->
dependent slot

Type#312 [unused] real-
val?            %98.19 = Add                !v    %98.9, %98.18, e1.6   <real->
dependent slot

Type#313 [unused] real$-
val?            %98.21 = Force!<value>      !v    %98.20, e1.6   <real$->
dependent slot

Type#314 [unused] real-
val?            %98.22 = CallBuiltin        !v    c(%98.7, %98.19, %98.21) e1.6   <real->
dependent slot

Type#315 [unused] real-
val             %100.2 = CallSafeBuiltin    vwed  as.vector(%100.1, "any")    <real->
dependent slot

Type#316 [unused] $#-
optimized away (dependency)

Type#317 [unused] $#-
optimized away (dependency)

Type#318 [unused] $#-
optimized away (dependency)

Type#319 [unused] $#-
optimized away (dependency)

Type#320 [unused] $#-
optimized away (dependency)

Type#321 [unused] $#-
optimized away (dependency)

Type#322 [unused] $#-
optimized away (dependency)

Type#323 [unused] $#-
optimized away (dependency)

Type#324 [unused] $#-
optimized away (dependency)

Type#325 [unused] $#-
optimized away (dependency)

Type#326 [unused] $#-
optimized away (dependency)

Type#327 [unused] $#-
optimized away (dependency)

Type#328 [unused] $#-
optimized away (dependency)

Type#329 [unused] $#-
optimized away (dependency)

Type#330 [unused] $#-
optimized away (dependency)

Type#331 [unused] $#-
optimized away (dependency)

Type#332 [unused] $#-
optimized away (dependency)

Type#333 [unused] $#-
optimized away (dependency)

Type#334 [unused] $#-
optimized away (dependency)

Type#335 [unused] $#-
optimized away (dependency)

Type#336 [unused] $#-
optimized away (dependency)

Type#337 [unused] $#-
optimized away (dependency)

Type#338 [unused] $#-
optimized away (dependency)

Type#339 [unused] $#-
optimized away (dependency)

Type#340 [unused] $#-
optimized away (dependency)

Type#341 [unused] $#-
optimized away (dependency)

Type#342 [unused] $#-
optimized away (dependency)

Type#343 [unused] $#-
optimized away (dependency)

Type#344 [unused] $#-
optimized away (dependency)

Type#345 [unused] $#-
optimized away (dependency)

Type#346 [unused] $#-
optimized away (dependency)

Type#347 [unused] $#-
optimized away (dependency)

Type#348 [unused] $#-
optimized away (dependency)

Type#349 [unused] $#-
optimized away (dependency)

Type#350 [unused] $#-
optimized away (dependency)

Type#351 [unused] $#-
optimized away (dependency)

Type#352 [unused] $#-
optimized away (dependency)

Type#353 [unused] $#-
optimized away (dependency)

Type#354 [unused] $#-
optimized away (dependency)

Type#355 [unused] $#-
optimized away (dependency)

Type#356 [unused] $#-
optimized away (dependency)

Type#357 [unused] $#-
optimized away (dependency)

Type#358 [unused] $#-
optimized away (dependency)

Type#359 [unused] $#-
optimized away (dependency)

Type#360 [unused] $#-
optimized away (dependency)

Type#361 [unused] $#-
optimized away (dependency)

Type#362 [unused] $#-
optimized away (dependency)

Type#363 [unused] $#-
optimized away (dependency)

Type#364 [unused] $#-
optimized away (dependency)

Type#365 [unused] $#-
optimized away (dependency)

Type#366 [unused] $#-
optimized away (dependency)

Type#367 [unused] $#-
optimized away (dependency)

Type#368 [unused] $#-
optimized away (dependency)

Type#369 [unused] $#-
optimized away (dependency)

Type#370 [unused] $#-
optimized away (dependency)

Type#371 [unused] $#-
optimized away (dependency)

Type#372 [unused] $#-
optimized away (dependency)

Type#373 [unused] $#-
optimized away (dependency)

Type#374 [unused] $#-
optimized away (dependency)

Type#375 [unused] $#-
optimized away (dependency)

Type#376 [unused] $#-
optimized away (dependency)

Type#377 [unused] $#-
optimized away (dependency)

Type#378 [unused] $#-
optimized away (dependency)

Type#379 [unused] $#-
optimized away (dependency)

Type#380 [unused] $#-
optimized away (dependency)

Type#381 [unused] $#-
optimized away (dependency)

Type#382 [unused] $#-
optimized away (dependency)

Type#383 [unused] $#-
optimized away (dependency)

Type#384 [unused] $#-
optimized away (dependency)

Type#385 [unused] $#-
optimized away (dependency)

Type#386 [unused] $#-
optimized away (dependency)

Type#387 [unused] $#-
optimized away (dependency)

Type#388 [unused] $#-
optimized away (dependency)

Type#389 [unused] $#-
optimized away (dependency)

Type#390 [unused] $#-
optimized away (dependency)

Type#391 [unused] $#-
optimized away (dependency)

Type#392 [unused] $#-
optimized away (dependency)

Type#393 [unused] $#-
optimized away (dependency)

Type#394 [unused] $#-
optimized away (dependency)

Type#395 [unused] $#-
optimized away (dependency)

Type#396 [unused] $#-
optimized away (dependency)

Type#397 [unused] $#-
optimized away (dependency)

Type#398 [unused] $#-
optimized away (dependency)

Type#399 [unused] $#-
optimized away (dependency)

Type#400 [unused] $#-
optimized away (dependency)

Type#401 [unused] $#-
optimized away (dependency)

Type#402 [unused] $#-
optimized away (dependency)

Type#403 [unused] $#-
optimized away (dependency)

Type#404 [unused] $#-
optimized away (dependency)

Type#405 [unused] $#-
optimized away (dependency)

Type#406 [unused] $#-
optimized away (dependency)

Type#407 [unused] $#-
optimized away (dependency)

Type#408 [unused] $#-
optimized away (dependency)

Type#409 [unused] $#-
optimized away (dependency)

Type#410 [unused] $#-
optimized away (dependency)

Type#411 [unused] $#-
optimized away (dependency)

Type#412 [unused] $#-
optimized away (dependency)

Type#413 [unused] $#-
optimized away (dependency)

Type#414 [unused] $#-
optimized away (dependency)

Type#415 [unused] $#-
optimized away (dependency)

Type#416 [unused] $#-
optimized away (dependency)

Type#417 [unused] $#-
optimized away (dependency)

Type#418 [unused] $#-
optimized away (dependency)

Type#419 [unused] $#-
optimized away (dependency)

Type#420 [unused] $#-
optimized away (dependency)

Type#421 [unused] $#-
optimized away (dependency)

Type#422 [unused] $#-
optimized away (dependency)

Type#423 [unused] $#-
optimized away (dependency)

Type#424 [unused] $#-
optimized away (dependency)

Type#425 [unused] $#-
optimized away (dependency)

Type#426 [unused] $#-
optimized away (dependency)

Type#427 [unused] $#-
optimized away (dependency)

Type#428 [unused] $#-
optimized away (dependency)

Type#429 [unused] $#-
optimized away (dependency)

Type#430 [unused] $#-
optimized away (dependency)

Type#431 [unused] $#-
optimized away (dependency)

Type#432 [unused] $#-
optimized away (dependency)

Type#433 [unused] $#-
optimized away (dependency)

Type#434 [unused] $#-
optimized away (dependency)

Type#435 [unused] $#-
optimized away (dependency)

Type#436 [unused] $#-
optimized away (dependency)

Type#437 [unused] $#-
optimized away (dependency)

Type#438 [unused] $#-
optimized away (dependency)

Type#439 [unused] $#-
optimized away (dependency)

Type#440 [unused] $#-
optimized away (dependency)

Type#441 [unused] $#-
optimized away (dependency)

Type#442 [unused] $#-
optimized away (dependency)

Type#443 [unused] $#-
optimized away (dependency)

Type#444 [unused] $#-
optimized away (dependency)

Type#445 [unused] $#-
optimized away (dependency)

Type#446 [unused] $#-
optimized away (dependency)

Type#447 [unused] $#-
optimized away (dependency)

Type#448 [unused] $#-
optimized away (dependency)

Type#449 [unused] $#-
optimized away (dependency)

Type#450 [unused] $#-
optimized away (dependency)

Type#451 [unused] $#-
optimized away (dependency)

Type#452 [unused] $#-
optimized away (dependency)

Type#453 [unused] $#-
optimized away (dependency)

Type#454 [unused] $#-
optimized away (dependency)

Type#455 [unused] $#-
optimized away (dependency)

Type#456 [unused] $#-
optimized away (dependency)

Type#457 [unused] $#-
optimized away (dependency)

Type#458 [unused] $#-
optimized away (dependency)

Type#459 [unused] $#-
optimized away (dependency)

Type#460 [unused] $#-
optimized away (dependency)

Type#461 [unused] $#-
optimized away (dependency)

Type#462 [unused] $#-
optimized away (dependency)

Type#463 [unused] $#-
optimized away (dependency)

Type#464 [unused] $#-
optimized away (dependency)

Type#465 [unused] $#-
optimized away (dependency)

Type#466 [unused] $#-
optimized away (dependency)

Type#467 [unused] $#-
optimized away (dependency)

Type#468 [unused] $#-
optimized away (dependency)

Type#469 [unused] $#-
optimized away (dependency)

Type#470 [unused] $#-
optimized away (dependency)

Type#471 [unused] $#-
optimized away (dependency)

Type#472 [unused] $#-
optimized away (dependency)

Type#473 [unused] $#-
optimized away (dependency)

Type#474 [unused] $#-
optimized away (dependency)

Type#475 [unused] $#-
optimized away (dependency)

Type#476 [unused] $#-
optimized away (dependency)

Type#477 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: as.vector [0x560a577b6aa0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

Type#0 [used] str- (polluted)
val?            %98.22 = CallBuiltin        !v    c(%98.7, %98.19, %98.21) e1.6   <real->
void                    Assume             D     %98.23, %98.24 (Typecheck@0x560a56c848c0[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#1 [unused] str$-
optimized away

----------------------
Inlinee: is.logint [0x560a628c3820]
referenced: 9
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 2

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (int|real)$- (polluted)
optimized away

Type#2 [unused] lgl$-
lgl$#-          %59.10 = CallSafeBuiltin    wed   is.integer(%59.7)    <lgl$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] real$-
optimized away

Type#5 [used] lgl$-
val+            %62.3 = CallSafeBuiltin    wed   is.logical(%59.7)    <lgl$->
void                    Assume             D     %62.4, %62.5 (Typecheck@0x560a62a9b500[Type#5])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] int$-
optimized away

Type#8 [unused] lgl$-
lgl$#-          %68.3 = CallSafeBuiltin    wed   is.object(%59.7)    <lgl$->
dependent slot

*********************** Compilation session for:  (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleReal0 miss: 3) ***********************
======================= ClosureVersion:  (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleReal0 miss: 3) =======================
referenced: 409
referenced non-empty: 109
read non-empty: 109
used: 12
present non-empty: 47

Used
exact match: 8
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 97
optimized away non-empty: 50
dependent: 90
other reasons unused non-empty: 7

Polluted
polluted: 4
used polluted: 0

----------------------
 [0x560a62587de0]
referenced: 362
referenced non-empty: 92
read non-empty: 92
used: 10
present non-empty: 34

Used
exact match: 8
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 82
optimized away non-empty: 48
dependent: 80
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] real$-
real$-          %2.3  = Force!<lazy>       !vr   %1.1,    <real$->
dependent slot

Type#3 [unused] real$-
real$-          %2.4  = Extract1_1D        wed   %2.3, 1L, elided   <real$->
dependent slot

Type#4 [unused] int$-
int$-           %2.5  = CallSafeBuiltin    wed   as.integer(%2.4)    <int$->
dependent slot

Type#5 [unused] int$-
optimized away (dependency)

Type#6 [unused] lgl$-
lgl$-           %2.7  = Lt                 d     %2.5, 1L, elided   <lgl$->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] str$-
optimized away (dependency)

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [unused] vec
optimized away (dependency)

Type#11 [unused] str-
optimized away (dependency)

Type#12 [unused] str-
optimized away (dependency)

Type#13 [used] int$-
val?            %9.4  = PopContext         C     %9.3, %5.5   <int$->
void                    Assume             D     %9.5, %9.6 (Typecheck@0x560a62578f60[Type#13])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] int$-
optimized away (dependency)

Type#16 [unused] lgl$-
lgl$-           %13.3 = CallSafeBuiltin    wed   is.na(%11.1)    <lgl$->
dependent slot

Type#17 [unused] int$-
optimized away (dependency)

Type#18 [unused] lgl$-
lgl$-           %14.0 = Lt                 d     %11.1, 1L, elided   <lgl$->
dependent slot

Type#19 [unused] vec
val?            %15.1 = Force!<wrapped>    !v    %15.0, e1.2   <vec>
dependent slot

Type#20 [unused] int$-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] vec
val?            %17.2 = Extract1_2D        !v    %15.1, %17.1, missingArg, e1.2   <vec>
dependent slot

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] vec
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] int$
val?            %19.6 = Call               !v    %19.3(%19.4, %19.5) e1.2   <int$>
dependent slot

Type#30 [unused] int$
val?            %21.1 = Extract1_1D        !v    %19.6, 1L, e1.2   <int$>
dependent slot

Type#31 [unused] str$-
val?            %21.2 = CallBuiltin        !v    as.character(%21.1) e1.2   <str$->
dependent slot

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] vec+
optimized away

Type#34 [unused] real+
val?            %24.7 = PopContext         C     %24.6, %23.4   <real+>
dependent slot

Type#35 [used] str$-
val?^ | miss    %26.0 = LdVar              eR    p.type, e1.2
void                    Assume             D     %26.1, %24.12 (Typecheck@0x560a62578f60[Type#35])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [used] real+
val             %56.3 = ChkMissing         e     %24.7
void                    Assume             D     %56.4, %28.3 (Typecheck@0x560a62578f60[Type#38])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#39 [unused] real$-
real$-          %56.7 = Extract2_1D        wed   %56.6, "h2", elided   <real$->
dependent slot

Type#40 [unused] lgl$-
lgl$-           %56.8 = CallSafeBuiltin    wed   is.na(%56.7)    <lgl$->
dependent slot

Type#41 [unused] real+
optimized away (dependency)

Type#42 [unused] real$-
real$-          %68.0 = Extract2_1D        wed   %56.6, "h1", elided   <real$->
dependent slot

Type#43 [used] int$-
val?            %68.2 = Force!<value>      !v    %68.1, e1.2   <int$->
void                    Assume             D     %68.3, %68.4 (Typecheck@0x560a62578f60[Type#43])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?+

Type#44 [unused] int$-
int$-           %70.2 = Sub                d     %70.1, 1L, elided   <int$->
dependent slot

Type#45 [unused] real$-
real$-          %70.3 = Mul                d     360, %70.2, elided   <real$->
dependent slot

Type#46 [used] int$-
val?^ | miss    %70.4 = LdVar              eR    n, e1.2
void                    Assume             D     %70.5, %68.4 (Typecheck2@0x560a62578f60[Type#46])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?+

Type#47 [unused] real$-
real$-          %70.8 = Div                d     %70.3, %70.7, elided   <real$->
dependent slot

Type#48 [unused] real$-
real$-          %70.9 = Add                d     %68.0, %70.8, elided   <real$->
dependent slot

Type#49 [used] real+
val?^ | miss    %70.10 = LdVar              eR    p !upd, e1.2
void                    Assume             D     %70.11, %68.4 (Typecheck@0x560a62578f60[Type#49])
exact match
checkFor: real+, static: val?^ | miss, feedback: real+, expected: real+, required: val?^ | miss

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] int$-
val?            %60.4 = Force!<value>      !v    %60.3, e1.2   <int$->
dependent slot

Type#52 [unused] real-
val?            %60.5 = NamedCall          !v    <blt seq.int>(1, 0, length.out=%60.4) e1.2   <real->
dependent slot

Type#53 [unused] real-
optimized away (dependency)

Type#54 [unused] real+
optimized away (dependency)

Type#55 [unused] real$-
optimized away (dependency)

Type#56 [unused] real+
optimized away (dependency)

Type#57 [unused] real$-
optimized away (dependency)

Type#58 [unused] real-
optimized away (dependency)

Type#59 [unused] real+
optimized away (dependency)

Type#60 [unused] real$-
optimized away (dependency)

Type#61 [unused] real+
optimized away (dependency)

Type#62 [unused] real$-
optimized away (dependency)

Type#63 [unused] nil-
optimized away

Type#64 [unused] lgl$-
optimized away (dependency)

Type#65 [unused] str-
val?            %66.4 = PopContext         C     %66.3, %62.8   <str->
dependent slot

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [used] real+
val             %33.4 = ChkMissing         e     %24.7
void                    Assume             D     %33.5, %31.2 (Typecheck@0x560a62578f60[Type#68])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#69 [unused] real$-
real$-          %33.8 = Extract2_1D        wed   %33.7, "h2", elided   <real$->
dependent slot

Type#70 [unused] lgl$-
lgl$-           %33.9 = CallSafeBuiltin    wed   is.na(%33.8)    <lgl$->
dependent slot

Type#71 [unused] real+
optimized away (dependency)

Type#72 [unused] real$-
real$-          %55.0 = Extract2_1D        wed   %33.7, "h1", elided   <real$->
dependent slot

Type#73 [unused] real+
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [used] real+
val             %37.0 = ChkMissing         e     %35.0
void                    Assume             D     %37.1, %35.1 (Typecheck@0x560a62578f60[Type#76])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#77 [unused] real$-
real$-          %37.4 = Extract2_1D        wed   %37.3, "c2", elided   <real$->
dependent slot

Type#78 [unused] lgl$-
lgl$-           %37.5 = CallSafeBuiltin    wed   is.na(%37.4)    <lgl$->
dependent slot

Type#79 [unused] real+
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [used] real+
val             %41.0 = ChkMissing         e     %39.0
void                    Assume             D     %41.1, %39.1 (Typecheck@0x560a62578f60[Type#82])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#83 [unused] real$-
real$-          %41.4 = Extract2_1D        wed   %41.3, "p2", elided   <real$->
dependent slot

Type#84 [unused] lgl$-
lgl$-           %41.5 = CallSafeBuiltin    wed   is.na(%41.4)    <lgl$->
dependent slot

Type#85 [unused] real+
optimized away (dependency)

Type#86 [unused] real$-
real$-          %53.0 = Extract2_1D        wed   %41.3, "p1", elided   <real$->
dependent slot

Type#87 [unused] real+
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] int$-
val?            %45.4 = Force!<value>      !v    %45.3, e1.2   <int$->
dependent slot

Type#90 [unused] real-
val?            %45.5 = NamedCall          !v    <blt seq.int>(1, 0, length.out=%45.4) e1.2   <real->
dependent slot

Type#91 [unused] real-
optimized away (dependency)

Type#92 [unused] real+
optimized away (dependency)

Type#93 [unused] real$-
optimized away (dependency)

Type#94 [unused] real+
optimized away (dependency)

Type#95 [unused] real$-
optimized away (dependency)

Type#96 [unused] real+
optimized away (dependency)

Type#97 [unused] real$-
optimized away (dependency)

Type#98 [unused] real+
optimized away (dependency)

Type#99 [unused] real$-
optimized away (dependency)

Type#100 [unused] real+
optimized away (dependency)

Type#101 [unused] real$-
optimized away (dependency)

Type#102 [unused] real+
optimized away (dependency)

Type#103 [unused] real$-
optimized away (dependency)

Type#104 [unused] real+
optimized away (dependency)

Type#105 [unused] real$-
optimized away (dependency)

Type#106 [unused] real+
optimized away (dependency)

Type#107 [unused] real$-
optimized away (dependency)

Type#108 [unused] real+
optimized away (dependency)

Type#109 [unused] real$-
optimized away (dependency)

Type#110 [unused] str-
val?            %47.13 = StaticCall         !v    seqhcl[0x560a639bde80](%47.3, %47.4, %47.5, %47.6, %47.7, %47.8, %47.9, %47.10, %47.11, %47.12) from %1.6 e1.2   <str->
dependent slot

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] $#-
optimized away (dependency)

Type#113 [unused] $#-
optimized away (dependency)

Type#114 [unused] $#-
optimized away (dependency)

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

Type#117 [unused] $#-
optimized away (dependency)

Type#118 [unused] $#-
optimized away (dependency)

Type#119 [unused] $#-
optimized away (dependency)

Type#120 [unused] $#-
optimized away (dependency)

Type#121 [unused] $#-
optimized away (dependency)

Type#122 [unused] $#-
optimized away (dependency)

Type#123 [unused] $#-
optimized away (dependency)

Type#124 [unused] $#-
optimized away (dependency)

Type#125 [unused] $#-
optimized away (dependency)

Type#126 [unused] $#-
optimized away (dependency)

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] $#-
optimized away (dependency)

Type#129 [unused] $#-
optimized away (dependency)

Type#130 [unused] $#-
optimized away (dependency)

Type#131 [unused] $#-
optimized away (dependency)

Type#132 [unused] $#-
optimized away (dependency)

Type#133 [unused] $#-
optimized away (dependency)

Type#134 [unused] $#-
optimized away (dependency)

Type#135 [unused] $#-
optimized away (dependency)

Type#136 [unused] $#-
optimized away (dependency)

Type#137 [unused] $#-
optimized away (dependency)

Type#138 [unused] $#-
optimized away (dependency)

Type#139 [unused] $#-
optimized away (dependency)

Type#140 [unused] $#-
optimized away (dependency)

Type#141 [unused] $#-
optimized away (dependency)

Type#142 [unused] $#-
optimized away (dependency)

Type#143 [unused] $#-
optimized away (dependency)

Type#144 [unused] $#-
optimized away (dependency)

Type#145 [unused] $#-
optimized away (dependency)

Type#146 [unused] $#-
optimized away (dependency)

Type#147 [unused] $#-
optimized away (dependency)

Type#148 [unused] $#-
optimized away (dependency)

Type#149 [unused] $#-
optimized away (dependency)

Type#150 [unused] $#-
optimized away (dependency)

Type#151 [unused] $#-
optimized away (dependency)

Type#152 [unused] $#-
optimized away (dependency)

Type#153 [unused] $#-
optimized away (dependency)

Type#154 [unused] $#-
optimized away (dependency)

Type#155 [unused] $#-
optimized away (dependency)

Type#156 [unused] $#-
optimized away (dependency)

Type#157 [unused] $#-
optimized away (dependency)

Type#158 [unused] $#-
optimized away (dependency)

Type#159 [unused] $#-
optimized away (dependency)

Type#160 [unused] $#-
optimized away (dependency)

Type#161 [unused] $#-
optimized away (dependency)

Type#162 [unused] $#-
optimized away (dependency)

Type#163 [unused] $#-
optimized away (dependency)

Type#164 [unused] $#-
optimized away (dependency)

Type#165 [unused] $#-
optimized away (dependency)

Type#166 [unused] $#-
optimized away (dependency)

Type#167 [unused] $#-
optimized away (dependency)

Type#168 [unused] $#-
optimized away (dependency)

Type#169 [unused] $#-
optimized away (dependency)

Type#170 [unused] $#-
optimized away (dependency)

Type#171 [unused] $#-
optimized away (dependency)

Type#172 [unused] $#-
optimized away (dependency)

Type#173 [unused] $#-
optimized away (dependency)

Type#174 [unused] $#-
optimized away (dependency)

Type#175 [unused] $#-
optimized away (dependency)

Type#176 [unused] $#-
optimized away (dependency)

Type#177 [unused] $#-
optimized away (dependency)

Type#178 [unused] $#-
optimized away (dependency)

Type#179 [unused] $#-
optimized away (dependency)

Type#180 [unused] $#-
optimized away (dependency)

Type#181 [unused] $#-
optimized away (dependency)

Type#182 [unused] $#-
optimized away (dependency)

Type#183 [unused] $#-
optimized away (dependency)

Type#184 [unused] $#-
optimized away (dependency)

Type#185 [unused] $#-
optimized away (dependency)

Type#186 [unused] $#-
optimized away (dependency)

Type#187 [unused] $#-
optimized away (dependency)

Type#188 [unused] $#-
optimized away (dependency)

Type#189 [unused] $#-
optimized away (dependency)

Type#190 [unused] $#-
optimized away (dependency)

Type#191 [unused] $#-
optimized away (dependency)

Type#192 [unused] $#-
optimized away (dependency)

Type#193 [unused] $#-
optimized away (dependency)

Type#194 [unused] $#-
optimized away (dependency)

Type#195 [unused] $#-
optimized away (dependency)

Type#196 [unused] $#-
optimized away (dependency)

Type#197 [unused] $#-
optimized away (dependency)

Type#198 [unused] $#-
optimized away (dependency)

Type#199 [unused] $#-
optimized away (dependency)

Type#200 [unused] $#-
optimized away (dependency)

Type#201 [unused] $#-
optimized away (dependency)

Type#202 [unused] $#-
optimized away (dependency)

Type#203 [unused] $#-
optimized away (dependency)

Type#204 [unused] $#-
optimized away (dependency)

Type#205 [unused] $#-
optimized away (dependency)

Type#206 [unused] $#-
optimized away (dependency)

Type#207 [unused] $#-
optimized away (dependency)

Type#208 [unused] $#-
optimized away (dependency)

Type#209 [unused] $#-
optimized away (dependency)

Type#210 [unused] $#-
optimized away (dependency)

Type#211 [unused] $#-
optimized away (dependency)

Type#212 [unused] $#-
optimized away (dependency)

Type#213 [unused] $#-
optimized away (dependency)

Type#214 [unused] $#-
optimized away (dependency)

Type#215 [unused] $#-
optimized away (dependency)

Type#216 [unused] $#-
optimized away (dependency)

Type#217 [unused] $#-
optimized away (dependency)

Type#218 [unused] $#-
optimized away (dependency)

Type#219 [unused] $#-
optimized away (dependency)

Type#220 [unused] $#-
optimized away (dependency)

Type#221 [unused] $#-
optimized away (dependency)

Type#222 [unused] $#-
optimized away (dependency)

Type#223 [unused] $#-
optimized away (dependency)

Type#224 [unused] $#-
optimized away (dependency)

Type#225 [unused] $#-
optimized away (dependency)

Type#226 [unused] $#-
optimized away (dependency)

Type#227 [unused] $#-
optimized away (dependency)

Type#228 [unused] $#-
optimized away (dependency)

Type#229 [unused] $#-
optimized away (dependency)

Type#230 [unused] $#-
optimized away (dependency)

Type#231 [unused] $#-
optimized away (dependency)

Type#232 [unused] $#-
optimized away (dependency)

Type#233 [unused] $#-
optimized away (dependency)

Type#234 [unused] $#-
optimized away (dependency)

Type#235 [unused] $#-
optimized away (dependency)

Type#236 [unused] $#-
optimized away (dependency)

Type#237 [unused] $#-
optimized away (dependency)

Type#238 [unused] $#-
optimized away (dependency)

Type#239 [unused] $#-
optimized away (dependency)

Type#240 [unused] $#-
optimized away (dependency)

Type#241 [unused] $#-
optimized away (dependency)

Type#242 [unused] $#-
optimized away (dependency)

Type#243 [unused] $#-
optimized away (dependency)

Type#244 [unused] $#-
optimized away (dependency)

Type#245 [unused] $#-
optimized away (dependency)

Type#246 [unused] $#-
optimized away (dependency)

Type#247 [unused] $#-
optimized away (dependency)

Type#248 [unused] $#-
optimized away (dependency)

Type#249 [unused] $#-
optimized away (dependency)

Type#250 [unused] $#-
optimized away (dependency)

Type#251 [unused] $#-
optimized away (dependency)

Type#252 [unused] $#-
optimized away (dependency)

Type#253 [unused] $#-
optimized away (dependency)

Type#254 [unused] $#-
optimized away (dependency)

Type#255 [unused] $#-
optimized away (dependency)

Type#256 [unused] $#-
optimized away (dependency)

Type#257 [unused] $#-
optimized away (dependency)

Type#258 [unused] $#-
optimized away (dependency)

Type#259 [unused] $#-
optimized away (dependency)

Type#260 [unused] $#-
optimized away (dependency)

Type#261 [unused] $#-
optimized away (dependency)

Type#262 [unused] $#-
optimized away (dependency)

Type#263 [unused] $#-
optimized away (dependency)

Type#264 [unused] $#-
optimized away (dependency)

Type#265 [unused] $#-
optimized away (dependency)

Type#266 [unused] $#-
optimized away (dependency)

Type#267 [unused] $#-
optimized away (dependency)

Type#268 [unused] $#-
optimized away (dependency)

Type#269 [unused] $#-
optimized away (dependency)

Type#270 [unused] $#-
optimized away (dependency)

Type#271 [unused] $#-
optimized away (dependency)

Type#272 [unused] $#-
optimized away (dependency)

Type#273 [unused] $#-
optimized away (dependency)

Type#274 [unused] $#-
optimized away (dependency)

Type#275 [unused] $#-
optimized away (dependency)

Type#276 [unused] $#-
optimized away (dependency)

Type#277 [unused] $#-
optimized away (dependency)

Type#278 [unused] $#-
optimized away (dependency)

Type#279 [unused] $#-
optimized away (dependency)

Type#280 [unused] $#-
optimized away (dependency)

Type#281 [unused] $#-
optimized away (dependency)

Type#282 [unused] $#-
optimized away (dependency)

Type#283 [unused] $#-
optimized away (dependency)

Type#284 [unused] $#-
optimized away (dependency)

Type#285 [unused] $#-
optimized away (dependency)

Type#286 [unused] $#-
optimized away (dependency)

Type#287 [unused] $#-
optimized away (dependency)

Type#288 [unused] $#-
optimized away (dependency)

Type#289 [unused] $#-
optimized away (dependency)

Type#290 [unused] $#-
optimized away (dependency)

Type#291 [unused] $#-
optimized away (dependency)

Type#292 [unused] $#-
optimized away (dependency)

Type#293 [unused] $#-
optimized away (dependency)

Type#294 [unused] $#-
optimized away (dependency)

Type#295 [unused] $#-
optimized away (dependency)

Type#296 [unused] $#-
optimized away (dependency)

Type#297 [unused] $#-
optimized away (dependency)

Type#298 [unused] $#-
optimized away (dependency)

Type#299 [unused] $#-
optimized away (dependency)

Type#300 [unused] $#-
optimized away (dependency)

Type#301 [unused] $#-
optimized away (dependency)

Type#302 [unused] $#-
optimized away (dependency)

Type#303 [unused] $#-
optimized away (dependency)

Type#304 [unused] $#-
optimized away (dependency)

Type#305 [unused] $#-
optimized away (dependency)

Type#306 [unused] $#-
optimized away (dependency)

Type#307 [unused] $#-
optimized away (dependency)

Type#308 [unused] $#-
optimized away (dependency)

Type#309 [unused] $#-
optimized away (dependency)

Type#310 [unused] $#-
optimized away (dependency)

Type#311 [unused] $#-
optimized away (dependency)

Type#312 [unused] $#-
optimized away (dependency)

Type#313 [unused] $#-
optimized away (dependency)

Type#314 [unused] $#-
optimized away (dependency)

Type#315 [unused] $#-
optimized away (dependency)

Type#316 [unused] $#-
optimized away (dependency)

Type#317 [unused] $#-
optimized away (dependency)

Type#318 [unused] $#-
optimized away (dependency)

Type#319 [unused] $#-
optimized away (dependency)

Type#320 [unused] $#-
optimized away (dependency)

Type#321 [unused] $#-
optimized away (dependency)

Type#322 [unused] $#-
optimized away (dependency)

Type#323 [unused] $#-
optimized away (dependency)

Type#324 [unused] $#-
optimized away (dependency)

Type#325 [unused] $#-
optimized away (dependency)

Type#326 [unused] $#-
optimized away (dependency)

Type#327 [unused] $#-
optimized away (dependency)

Type#328 [unused] $#-
optimized away (dependency)

Type#329 [unused] $#-
optimized away (dependency)

Type#330 [unused] $#-
optimized away (dependency)

Type#331 [unused] $#-
optimized away (dependency)

Type#332 [unused] $#-
optimized away (dependency)

Type#333 [unused] $#-
optimized away (dependency)

Type#334 [unused] $#-
optimized away (dependency)

Type#335 [unused] $#-
optimized away (dependency)

Type#336 [unused] $#-
optimized away (dependency)

Type#337 [unused] $#-
optimized away (dependency)

Type#338 [unused] $#-
optimized away (dependency)

Type#339 [unused] $#-
optimized away (dependency)

Type#340 [unused] $#-
optimized away (dependency)

Type#341 [unused] $#-
optimized away (dependency)

Type#342 [unused] $#-
optimized away (dependency)

Type#343 [unused] $#-
optimized away (dependency)

Type#344 [unused] $#-
optimized away (dependency)

Type#345 [unused] $#-
optimized away (dependency)

Type#346 [unused] $#-
optimized away (dependency)

Type#347 [unused] $#-
optimized away (dependency)

Type#348 [unused] $#-
optimized away (dependency)

Type#349 [unused] $#-
optimized away (dependency)

Type#350 [unused] $#-
optimized away (dependency)

Type#351 [unused] $#-
optimized away (dependency)

Type#352 [unused] $#-
optimized away (dependency)

Type#353 [unused] $#-
optimized away (dependency)

Type#354 [unused] $#-
optimized away (dependency)

Type#355 [unused] $#-
optimized away (dependency)

Type#356 [unused] $#-
optimized away (dependency)

Type#357 [unused] $#-
optimized away (dependency)

Type#358 [unused] lgl$-
val?            %48.1 = Force!<lazy>       !v    %48.0, e1.2   <lgl$->
dependent slot

Type#359 [used] str-
val?^ | miss    %51.0 = LdVar              eR    col, e1.2
void                    Assume             D     %51.1, %48.3 (Typecheck@0x560a62578f60[Type#359])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#360 [unused] $#-
optimized away (dependency)

Type#361 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: hcl [0x560a62782ce0]
referenced: 13
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 7

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 0
dependent: 3
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] vec
val?            %64.3 = Force!<value>      !v    %64.1, e64.2   <vec>
other unused reason

Type#7 [unused] real-
val?            %64.5 = Force!<lazy>       !v    %64.4, e64.2   <real->
dependent slot

Type#8 [unused] real- (polluted)
val?            %64.7 = Force!<lazy>       !v    %64.6, e64.2   <real->
dependent slot

Type#9 [unused] real- (polluted)
val?            %64.9 = Force!<lazy>       !v    %64.8, e64.2   <real->
dependent slot

Type#10 [unused] nil-
val?            %65.1 = Force!<lazy>       !v    %65.0, e64.2   <nil->
other unused reason

Type#11 [unused] lgl$-
val?            %66.2 = Force!<lazy>       !v    %66.1, e64.2   <lgl$->
other unused reason

Type#12 [unused] str-
val?            %66.3 = CallBuiltin        !v    .Call(%64.3, %64.5, %64.7, %64.9, %66.0, %66.2) e64.2   <str->
other unused reason

----------------------
Inlinee: unlist [0x560a55eb29b0]
referenced: 27
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 5
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec+ (polluted)
val?            %23.9 = Force!<lazy>       !vL   %23.5, e23.6   <vec+>
dependent slot

Type#1 [unused] lgl$-
optimized away (dependency)

Type#2 [unused] vec+ (polluted)
val?            %24.1 = Force!<wrapped>    !v    %24.0, e23.6   <vec+>
dependent slot

Type#3 [unused] lgl$-
val?            %24.3 = Force!<wrapped>    !v    %24.2, e23.6   <lgl$->
dependent slot

Type#4 [unused] lgl$-
val?            %24.5 = Force!<lazy>       !v    %24.4, e23.6   <lgl$->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: charmatch [0x560a62579070]
referenced: 7
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 2

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str$-
val?            %5.9  = Force!<lazy>       !vr   %5.7,    <str$->
void                    Assume             D     %5.10, %5.11 (Typecheck@0x560a62613c50[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#2 [unused] str$-
val+            %7.2  = CallSafeBuiltin    wed   as.character(%7.1)    <str$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str-
val?            %7.3  = Force!<lazy>       !vL   %5.6, e5.8   <str->
void                    Assume             D     %7.4, %7.5 (Typecheck@0x560a62613c50[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#5 [unused] str-
val+            %9.2  = CallSafeBuiltin    wed   as.character(%9.1)    <str->
dependent slot

Type#6 [unused] int$-
optimized away

*********************** Compilation session for: rownames (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) ***********************
======================= ClosureVersion: rownames (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 17
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 3
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
rownames [0x560a6278b700]
referenced: 17
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 3
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] vec
val?            %1.2  = Force!<lazy>       !v    %1.0, e1.1   <vec>
other unused reason

Type#2 [used] vec-
val?            %1.3  = CallBuiltin        !v    dimnames(%1.2) e1.1   <vec->
void                    Assume             D     %1.6, %1.7 (Typecheck@0x560a62817040[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#3 [unused] vec-
optimized away (dependency)

Type#4 [unused] str-
val?            %2.4  = Extract2_1D        wed   %2.3, 1L, elided   <str->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] vec-
optimized away (dependency)

Type#16 [unused] str-
optimized away (dependency)

*********************** Compilation session for: hcl (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: hcl (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 13
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 7

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 0
dependent: 3
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

----------------------
hcl [0x560a62782ce0]
referenced: 13
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 7

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 0
dependent: 3
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] vec
val?            %2.5  = Force!<value>      !v    %2.3, e2.4   <vec>
other unused reason

Type#7 [unused] real-
val?            %2.7  = Force!<lazy>       !v    %2.6, e2.4   <real->
dependent slot

Type#8 [unused] real- (polluted)
val?            %2.9  = Force!<lazy>       !v    %2.8, e2.4   <real->
dependent slot

Type#9 [unused] real- (polluted)
val?            %2.11 = Force!<lazy>       !v    %2.10, e2.4   <real->
dependent slot

Type#10 [unused] nil-
val?            %3.1  = Force!<lazy>       !v    %3.0, e2.4   <nil->
other unused reason

Type#11 [unused] lgl$-
val?            %4.2  = Force!<lazy>       !v    %4.1, e2.4   <lgl$->
other unused reason

Type#12 [unused] str-
val?            %4.3  = CallBuiltin        !     .Call(%2.5, %2.7, %2.9, %2.11, %4.0, %4.2) e2.4   <str->
other unused reason

*********************** Compilation session for: colourspace_match (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: colourspace_match (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 23
referenced non-empty: 16
read non-empty: 16
used: 3
present non-empty: 7

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 13
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 5

Polluted
polluted: 2
used polluted: 0

----------------------
colourspace_match [0x560a6275a5a0]
referenced: 8
referenced non-empty: 7
read non-empty: 7
used: 1
present non-empty: 2

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 4
dependent: 4
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] str$-
val?            %6.3  = PopContext         C     %6.2, %2.12   <str$->
dependent slot

Type#2 [unused] str-
optimized away

Type#3 [used] int$-
val+            %10.5 = CallSafeBuiltin    wed   pmatch(%8.2, %10.4, NA, false)    <int$->
void                    Assume             D     %10.6, %10.7 (Typecheck@0x560a62719930[Type#3])
exact match
checkFor: int$-, static: val+, feedback: int$-, expected: int$-, required: val?^ | miss

Type#4 [unused] $#-
optimized away

Type#5 [unused] int$-
optimized away (dependency)

Type#6 [unused] lgl$-
lgl$-           %14.3 = CallSafeBuiltin    wed   is.na(%12.1)    <lgl$->
other unused reason

Type#7 [unused] int$-
optimized away (dependency)

----------------------
Inlinee: tolower [0x560a5aa57fe0]
referenced: 7
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str- (polluted)
val?            %2.16 = Force!<lazy>       !vr   %2.13,    <str->
dependent slot

Type#2 [unused] lgl$-
lgl$#-          %2.17 = CallSafeBuiltin    wed   is.character(%2.16)    <lgl$->
other unused reason

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] str- (polluted)
val?            %6.1  = Force!<wrapped>    !v    %6.0, e2.15   <str->
dependent slot

----------------------
Inlinee: pmatch [0x560a57621820]
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 2
present non-empty: 2

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str$-
val?            %6.3  = PopContext         C     %6.2, %2.12   <str$->
void                    Assume             D     %6.7, %6.8 (Typecheck@0x560a57621710[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#2 [unused] str$-
val+            %8.2  = CallSafeBuiltin    wed   as.character(%8.1)    <str$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str-
val?            %8.3  = Force!<lazy>       !vL   %2.6, e2.14   <str->
void                    Assume             D     %8.4, %8.5 (Typecheck@0x560a57621710[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#5 [unused] str-
val+            %10.4 = CallSafeBuiltin    wed   as.character(%10.3)    <str->
dependent slot

Type#6 [unused] int$-
optimized away

Type#7 [unused] lgl$-
optimized away

*********************** Compilation session for: chkDots (!ExpMi,CorrOrd,!TMany,Argmatch miss: 3) ***********************
======================= ClosureVersion: chkDots (!ExpMi,CorrOrd,!TMany,Argmatch miss: 3) =======================
referenced: 15
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
chkDots [0x560a62594b40]
referenced: 15
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] int$-
val?            %1.6  = CallBuiltin        !v    ...length() e1.2   <int$->
void                    Assume             D     %1.7, %1.8 (Typecheck@0x560a6292c1d0[Type#1])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: lintrj (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: lintrj (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 7
referenced non-empty: 7
read non-empty: 7
used: 3
present non-empty: 3

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 4
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
lintrj [0x560a6241bb70]
referenced: 7
referenced non-empty: 7
read non-empty: 7
used: 3
present non-empty: 3

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 4
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] real$-
val?            %1.4  = Force!<lazy>       !vL   %1.0, e1.3   <real$->
void                    Assume             D     %1.5, %1.6 (Typecheck@0x560a6262fac0[Type#0])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?^ | miss

Type#1 [unused] real$-
optimized away (dependency)

Type#2 [used] real$-
val?            %2.4  = Force!<lazy>       !vL   %1.1, e1.3   <real$->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a6262fac0[Type#2])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?^ | miss

Type#3 [unused] real$-
real$-          %4.4  = Sub                d     %2.1, %4.1, elided   <real$->
dependent slot

Type#4 [used] real-
val?            %4.6  = Force!<lazy>       !rL   %1.2,    <real->
void                    Assume             D     %4.7, %4.8 (Typecheck@0x560a6262fac0[Type#4])
exact match
checkFor: real-, static: val?, feedback: real-, expected: real-, required: val?^ | miss

Type#5 [unused] real-
real-           %6.4  = Mul                vwed  %4.4, %6.1, elided   <real->
dependent slot

Type#6 [unused] real-
real-           %6.5  = Sub                vwed  %2.1, %6.4, elided   <real->
dependent slot

*********************** Compilation session for: seqhcl (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: seqhcl (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 66
referenced non-empty: 53
read non-empty: 53
used: 4
present non-empty: 18

Used
exact match: 3
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 49
optimized away non-empty: 31
dependent: 43
other reasons unused non-empty: 6

Polluted
polluted: 2
used polluted: 0

----------------------
seqhcl [0x560a6257c630]
referenced: 53
referenced non-empty: 46
read non-empty: 46
used: 4
present non-empty: 11

Used
exact match: 3
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 42
optimized away non-empty: 31
dependent: 40
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] real$-
val?            %2.4  = Force!<lazy>       !v    %1.0, e2.3   <real$->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a6263db20[Type#3])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?^ | miss

Type#4 [used] real$-
val?            %4.3  = Force!<lazy>       !v    %4.2, e2.3   <real$->
void                    Assume             D     %4.4, %4.5 (Typecheck@0x560a6263db20[Type#4])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?+

Type#5 [unused] real$-
real$-          %6.2  = Sub                d     %4.1, %6.1, elided   <real$->
dependent slot

Type#6 [unused] real$-
real$-          %6.3  = CallSafeBuiltin    wed   abs(%6.2)    <real$->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [used] real$-
val?^ | miss    %8.3  = LdVar              eR    cmax, e2.3
void                    Assume             D     %8.4, %6.4 (Typecheck2@0x560a6263db20[Type#10])
narrowed with static type: no
widened: yes
checkFor: real$~-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?+

Type#11 [used] real$-
val?            %8.9  = Force!<lazy>       !v    %8.8, e2.3   <real$->
void                    Assume             D     %8.10, %8.11 (Typecheck@0x560a6263db20[Type#11])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?+

Type#12 [unused] real$-
real$-          %10.2 = Sub                d     %8.7, %10.1, elided   <real$->
dependent slot

Type#13 [unused] real$-
real$-          %10.3 = CallSafeBuiltin    wed   abs(%10.2)    <real$->
dependent slot

Type#14 [unused] real$-
real$-          %10.4 = Div                d     %6.3, %10.3, elided   <real$->
dependent slot

Type#15 [unused] real$-
real$-          %10.5 = Add                d     1, %10.4, elided   <real$->
dependent slot

Type#16 [unused] real$-
real$-          %10.6 = Div                d     1, %10.5, elided   <real$->
dependent slot

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] real$-
optimized away (dependency)

Type#19 [unused] lgl$-
lgl$-           %12.3 = CallSafeBuiltin    wed   is.na(%10.6)    <lgl$->
dependent slot

Type#20 [unused] real$-
optimized away (dependency)

Type#21 [unused] lgl$-
lgl$-           %13.0 = Lte                d     %10.6, 0, elided   <lgl$->
dependent slot

Type#22 [unused] real$-
optimized away (dependency)

Type#23 [unused] lgl$-
lgl$-           %14.0 = Lte                d     1, %10.6, elided   <lgl$->
dependent slot

Type#24 [unused] real-
optimized away (dependency)

Type#25 [unused] real$-
optimized away (dependency)

Type#26 [unused] real$-
optimized away (dependency)

Type#27 [unused] real-
optimized away (dependency)

Type#28 [unused] real$-
optimized away (dependency)

Type#29 [unused] lgl$-
optimized away (dependency)

Type#30 [unused] real-
optimized away (dependency)

Type#31 [unused] real$-
optimized away (dependency)

Type#32 [unused] real-
optimized away (dependency)

Type#33 [unused] real$-
optimized away (dependency)

Type#34 [unused] real$-
optimized away (dependency)

Type#35 [unused] real$-
optimized away (dependency)

Type#36 [unused] real$-
optimized away (dependency)

Type#37 [unused] real-
optimized away (dependency)

Type#38 [unused] real-
optimized away (dependency)

Type#39 [unused] real$-
optimized away (dependency)

Type#40 [unused] real-
optimized away (dependency)

Type#41 [unused] real$-
optimized away (dependency)

Type#42 [unused] real$-
optimized away (dependency)

Type#43 [unused] real-
optimized away (dependency)

Type#44 [unused] real-
optimized away (dependency)

Type#45 [unused] real$-
optimized away (dependency)

Type#46 [unused] real-
optimized away (dependency)

Type#47 [unused] real$-
optimized away (dependency)

Type#48 [unused] real$-
optimized away (dependency)

Type#49 [unused] real-
optimized away (dependency)

Type#50 [unused] nil-
optimized away

Type#51 [unused] lgl$-
optimized away (dependency)

Type#52 [unused] str-
val?            %24.4 = PopContext         C     %24.3, %20.8   <str->
other unused reason

----------------------
Inlinee: hcl [0x560a62782ce0]
referenced: 13
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 7

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 0
dependent: 3
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] vec
val?            %22.3 = Force!<value>      !v    %22.1, e22.2   <vec>
other unused reason

Type#7 [unused] real-
val?            %22.5 = Force!<lazy>       !v    %22.4, e22.2   <real->
dependent slot

Type#8 [unused] real- (polluted)
val?            %22.7 = Force!<lazy>       !v    %22.6, e22.2   <real->
dependent slot

Type#9 [unused] real- (polluted)
val?            %22.9 = Force!<lazy>       !v    %22.8, e22.2   <real->
dependent slot

Type#10 [unused] nil-
val?            %23.1 = Force!<lazy>       !v    %23.0, e22.2   <nil->
other unused reason

Type#11 [unused] lgl$-
val?            %24.2 = Force!<lazy>       !v    %24.1, e22.2   <lgl$->
other unused reason

Type#12 [unused] str-
val?            %24.3 = CallBuiltin        !     .Call(%22.3, %22.5, %22.7, %22.9, %24.0, %24.2) e22.2   <str->
other unused reason

*********************** Compilation session for: lintrj (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: lintrj (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 7
referenced non-empty: 7
read non-empty: 7
used: 3
present non-empty: 3

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 4
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
lintrj [0x560a6241bb70]
referenced: 7
referenced non-empty: 7
read non-empty: 7
used: 3
present non-empty: 3

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 4
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] real$-
val?            %1.4  = Force!<lazy>       !vL   %1.0, e1.3   <real$->
void                    Assume             D     %1.5, %1.6 (Typecheck@0x560a6262fac0[Type#0])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?^ | miss

Type#1 [unused] real$-
optimized away (dependency)

Type#2 [used] real$-
val?            %2.4  = Force!<lazy>       !vL   %1.1, e1.3   <real$->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a6262fac0[Type#2])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?^ | miss

Type#3 [unused] real$-
real$-          %4.4  = Sub                d     %2.1, %4.1, elided   <real$->
dependent slot

Type#4 [used] real-
val?            %4.6  = Force!<lazy>       !L    %1.2, e1.3   <real->
void                    Assume             D     %4.7, %4.8 (Typecheck@0x560a6262fac0[Type#4])
exact match
checkFor: real-, static: val?, feedback: real-, expected: real-, required: val?^ | miss

Type#5 [unused] real-
real-           %6.4  = Mul                vwed  %4.4, %6.1, elided   <real->
dependent slot

Type#6 [unused] real-
real-           %6.5  = Sub                vwed  %2.1, %6.4, elided   <real->
dependent slot

*********************** Compilation session for: tritrj (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,NonRefl3,NonRefl4,!Obj1,!Obj2,!Obj3,!Obj4,SimpleReal1,SimpleReal2,SimpleReal3,SimpleReal4) ***********************
======================= ClosureVersion: tritrj (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,NonRefl3,NonRefl4,!Obj1,!Obj2,!Obj3,!Obj4,SimpleReal1,SimpleReal2,SimpleReal3,SimpleReal4) =======================
referenced: 26
referenced non-empty: 26
read non-empty: 26
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 25
dependent: 25
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
tritrj [0x560a6243a4a0]
referenced: 26
referenced non-empty: 26
read non-empty: 26
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 25
dependent: 25
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] real-
optimized away (dependency)

Type#1 [unused] real$-
optimized away (dependency)

Type#2 [unused] lgl-
optimized away

Type#3 [unused] real$-
optimized away (dependency)

Type#4 [unused] real$-
optimized away (dependency)

Type#5 [unused] real$-
optimized away (dependency)

Type#6 [unused] real$-
optimized away (dependency)

Type#7 [unused] real-
optimized away (dependency)

Type#8 [unused] real-
optimized away (dependency)

Type#9 [unused] real$-
optimized away (dependency)

Type#10 [unused] real-
optimized away (dependency)

Type#11 [unused] real-
optimized away (dependency)

Type#12 [unused] real$-
optimized away (dependency)

Type#13 [unused] real$-
optimized away (dependency)

Type#14 [unused] real$-
optimized away (dependency)

Type#15 [unused] real$-
optimized away (dependency)

Type#16 [unused] real-
optimized away (dependency)

Type#17 [unused] real$-
optimized away (dependency)

Type#18 [unused] real-
optimized away (dependency)

Type#19 [unused] real$-
optimized away (dependency)

Type#20 [unused] real$-
optimized away (dependency)

Type#21 [unused] real-
optimized away (dependency)

Type#22 [unused] real-
optimized away (dependency)

Type#23 [unused] real-
optimized away (dependency)

Type#24 [unused] real-
optimized away (dependency)

Type#25 [unused] real-
val?            %2.7  = Call               !     function(test, yes, no) <(rir::DispatchTable*)|...(%2.4, %2.5, %2.6) e2.3   <real->
dependent slot

*********************** Compilation session for: ifelse (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: ifelse (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 105
referenced non-empty: 36
read non-empty: 35
used: 18
present non-empty: 11

Used
exact match: 13
widened: 5
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 18
optimized away non-empty: 7
dependent: 13
other reasons unused non-empty: 5

Polluted
polluted: 20
used polluted: 11

----------------------
ifelse [0x560a55ff34f0]
referenced: 92
referenced non-empty: 32
read non-empty: 32
used: 18
present non-empty: 9

Used
exact match: 13
widened: 5
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 5
dependent: 13
other reasons unused non-empty: 1

Polluted
polluted: 17
used polluted: 11

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] lgl+ (polluted)
val?            %1.4  = Force!<lazy>       !v    %1.2, e1.3   <lgl+>
void                    Assume             D     %1.5, %1.6 (Typecheck@0x560a5612f5f0[Type#1])
exact match
checkFor: lgl+, static: val?, feedback: lgl+, expected: lgl+, required: val?^ | miss

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] lgl+ (polluted)
val?            %2.5  = Force!<wrapped>    !v    %2.4, e1.3   <lgl+>
dependent slot

Type#15 [unused] str$-
str$-           %2.6  = CallSafeBuiltin    wed   typeof(%2.5)    <str$->
other unused reason

Type#16 [unused] lgl$-
lgl$-           %4.0  = Neq                d     %2.6, "logical", elided   <lgl$->
dependent slot

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [used] lgl+ (polluted)
val?^ | miss    %5.3  = LdVar              eR    test, e1.3
void                    Assume             D     %5.4, %2.7 (Typecheck2@0x560a5612f5f0[Type#19])
narrowed with static type: no
widened: yes
checkFor: lgl~+, static: val?^ | miss, feedback: lgl+, expected: lgl+, required: val?+

Type#20 [used] int$-
(int|real)$-    %5.8  = CallSafeBuiltin    wed   length(%5.7)    <int$->
void                    Assume             D     %5.9, %5.10 (Typecheck@0x560a5612f5f0[Type#20])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#21 [unused] lgl$-
lgl$-           %7.2  = Eq                 d     %7.1, 1, elided   <lgl$->
dependent slot

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] lgl+ (polluted)
val?            %13.1 = Force!<wrapped>    !v    %13.0, e1.3   <lgl+>
dependent slot

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [used] lgl+ (polluted)
val             %15.3 = ChkMissing         e     %13.1   <lgl+>
void                    Assume             D     %15.4, %13.3 (Typecheck@0x560a5612f5f0[Type#61])
exact match
checkFor: lgl+, static: val, feedback: lgl+, expected: lgl+, required: val+

Type#62 [used] int$-
(int|real)$-    %15.7 = CallSafeBuiltin    wed   length(%15.6)    <int$->
void                    Assume             D     %15.8, %15.9 (Typecheck@0x560a5612f5f0[Type#62])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#63 [unused] lgl+ (polluted)
val?            %19.4 = Force!<wrapped>    !v    %19.3, e1.3   <lgl+>
dependent slot

Type#64 [unused] int+ (polluted)
optimized away (dependency)

Type#65 [used] lgl+ (polluted)
val?^ | miss    %21.3 = LdVar              eR    test, e1.3
void                    Assume             D     %21.4, %19.7 (Typecheck2@0x560a5612f5f0[Type#65])
narrowed with static type: no
widened: yes
checkFor: lgl~+, static: val?^ | miss, feedback: lgl+, expected: lgl+, required: val?+

Type#66 [unused] int+ (polluted)
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [used] int+ (polluted)
val+            %19.5 = CallSafeBuiltin    wed   which(%19.4)    <int+>
void                    Assume             D     %23.3, %21.11 (Typecheck@0x560a5612f5f0[Type#68])
exact match
checkFor: int+, static: val+, feedback: int+, expected: int+, required: val?^ | miss

Type#69 [used] int$-
(int|real)$-    %23.6 = CallSafeBuiltin    wed   length(%23.5)    <int$->
void                    Assume             D     %23.7, %23.8 (Typecheck@0x560a5612f5f0[Type#69])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#70 [unused] lgl$-
lgl$-           %25.2 = Gt                 d     %25.1, 0L, elided   <lgl$->
dependent slot

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [used] (real|str)- (polluted)
val?            %42.3 = NamedCall          !v    %42.0(%42.1, length.out=%42.2) e1.3   <(real|str)->
void                    Assume             D     %42.5, %42.6 (Typecheck@0x560a5612f5f0[Type#73])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (real|str)-, expected: (real|str)-, required: val?+

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [used] int+ (polluted)
val?^ | miss    %44.1 = LdVar              eR    ypos, e1.3
void                    Assume             D     %44.2, %42.6 (Typecheck@0x560a5612f5f0[Type#75])
exact match
checkFor: int+, static: val?^ | miss, feedback: int+, expected: int+, required: val?^ | miss

Type#76 [used] (real|str)- (polluted)
val?            %44.7 = Extract1_1D        wed   %44.6, %44.4, elided   <(real|str)->
void                    Assume             D     %44.8, %44.9 (Typecheck@0x560a5612f5f0[Type#76])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (real|str)-, expected: (real|str)-, required: val?+

Type#77 [used] lgl+ (polluted)
val?^ | miss    %46.0 = LdVar              eR    ans !upd, e1.3
void                    Assume             D     %46.1, %44.9 (Typecheck@0x560a5612f5f0[Type#77])
exact match
checkFor: lgl+, static: val?^ | miss, feedback: lgl+, expected: lgl+, required: val?^ | miss

Type#78 [unused] int+ (polluted)
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [used] int+ (polluted)
val?^ | miss    %29.3 = LdVar              eR    npos, e1.3
void                    Assume             D     %29.4, %27.0 (Typecheck@0x560a5612f5f0[Type#80])
exact match
checkFor: int+, static: val?^ | miss, feedback: int+, expected: int+, required: val?^ | miss

Type#81 [used] int$-
(int|real)$-    %29.7 = CallSafeBuiltin    wed   length(%29.6)    <int$->
void                    Assume             D     %29.8, %29.9 (Typecheck@0x560a5612f5f0[Type#81])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#82 [unused] lgl$-
lgl$-           %31.2 = Gt                 d     %31.1, 0L, elided   <lgl$->
dependent slot

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [used] real-
val?            %37.3 = NamedCall          !v    %37.0(%37.1, length.out=%37.2) e1.3   <real->
void                    Assume             D     %37.5, %37.6 (Typecheck@0x560a5612f5f0[Type#85])
exact match
checkFor: real-, static: val?, feedback: real-, expected: real-, required: val?+

Type#86 [unused] $#-
optimized away (dependency)

Type#87 [used] int-
val?^ | miss    %39.1 = LdVar              eR    npos, e1.3
void                    Assume             D     %39.2, %37.6 (Typecheck@0x560a5612f5f0[Type#87])
exact match
checkFor: int-, static: val?^ | miss, feedback: int-, expected: int-, required: val?^ | miss

Type#88 [unused] real-
real-           %39.7 = Extract1_1D        wed   %39.6, %39.4, elided   <real->
dependent slot

Type#89 [used] real-
val?^ | miss    %41.0 = LdVar              eR    ans !upd, e1.3
void                    Assume             D     %41.1, %39.8 (Typecheck@0x560a5612f5f0[Type#89])
exact match
checkFor: real-, static: val?^ | miss, feedback: real-, expected: real-, required: val?^ | miss

Type#90 [unused] int-
optimized away (dependency)

Type#91 [used] (real|str)+ (polluted)
val?^ | miss    %35.0 = LdVar              eR    ans, e1.3
void                    Assume             D     %35.1, %33.0 (Typecheck@0x560a5612f5f0[Type#91])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: (real|str)+, expected: (real|str)+, required: val?^ | miss

----------------------
Inlinee: which [0x560a56086380]
referenced: 12
referenced non-empty: 3
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] lgl+ (polluted)
lgl             %21.8 = Not                wed   %21.7, elided   <lgl+>
other unused reason

Type#1 [unused] lgl$-
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] int+ (polluted)
val+            %21.9 = CallSafeBuiltin    wed   which(%21.8)    <int+>
other unused reason

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val?- (polluted)
optimized away

*********************** Compilation session for: charmatch (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: charmatch (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 7
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
charmatch [0x560a62579070]
referenced: 7
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str$-
val?            %1.3  = Force!<lazy>       !v    %1.1, e1.2   <str$->
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a62613c50[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

Type#2 [unused] str$-
val+            %2.2  = CallSafeBuiltin    wed   as.character(%2.1)    <str$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str-
val?            %4.4  = Force!<lazy>       !v    %4.3, e1.2   <str->
void                    Assume             D     %4.5, %4.6 (Typecheck@0x560a62613c50[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#5 [unused] str-
val+            %6.2  = CallSafeBuiltin    wed   as.character(%6.1)    <str->
dependent slot

Type#6 [unused] int$-
val?            %6.4  = Force!<lazy>       !v    %6.3, e1.2   <int$->
other unused reason

*********************** Compilation session for: seqhcl (!ExpMi,CorrOrd,!TMany,Argmatch;Eager4,NonRefl0,NonRefl4,!Obj0,!Obj4,SimpleReal4) ***********************
======================= ClosureVersion: seqhcl (!ExpMi,CorrOrd,!TMany,Argmatch;Eager4,NonRefl0,NonRefl4,!Obj0,!Obj4,SimpleReal4) =======================
referenced: 66
referenced non-empty: 53
read non-empty: 53
used: 4
present non-empty: 18

Used
exact match: 3
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 49
optimized away non-empty: 31
dependent: 43
other reasons unused non-empty: 6

Polluted
polluted: 2
used polluted: 0

----------------------
seqhcl [0x560a6257c630]
referenced: 53
referenced non-empty: 46
read non-empty: 46
used: 4
present non-empty: 11

Used
exact match: 3
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 42
optimized away non-empty: 31
dependent: 40
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] real$-
val?            %2.4  = Force!<lazy>       !v    %1.0, e2.3   <real$->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a6263db20[Type#3])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?^ | miss

Type#4 [used] real$-
val?            %4.3  = Force!<lazy>       !v    %4.2, e2.3   <real$->
void                    Assume             D     %4.4, %4.5 (Typecheck@0x560a6263db20[Type#4])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?+

Type#5 [unused] real$-
real$-          %6.2  = Sub                d     %4.1, %6.1, elided   <real$->
dependent slot

Type#6 [unused] real$-
real$-          %6.3  = CallSafeBuiltin    wed   abs(%6.2)    <real$->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [used] real$-
val?^ | miss    %8.3  = LdVar              eR    cmax, e2.3
void                    Assume             D     %8.4, %6.4 (Typecheck2@0x560a6263db20[Type#10])
narrowed with static type: no
widened: yes
checkFor: real$~-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?+

Type#11 [used] real$-
val?            %8.9  = Force!<lazy>       !v    %8.8, e2.3   <real$->
void                    Assume             D     %8.10, %8.11 (Typecheck@0x560a6263db20[Type#11])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?+

Type#12 [unused] real$-
real$-          %10.2 = Sub                d     %8.7, %10.1, elided   <real$->
dependent slot

Type#13 [unused] real$-
real$-          %10.3 = CallSafeBuiltin    wed   abs(%10.2)    <real$->
dependent slot

Type#14 [unused] real$-
real$-          %10.4 = Div                d     %6.3, %10.3, elided   <real$->
dependent slot

Type#15 [unused] real$-
real$-          %10.5 = Add                d     1, %10.4, elided   <real$->
dependent slot

Type#16 [unused] real$-
real$-          %10.6 = Div                d     1, %10.5, elided   <real$->
dependent slot

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] real$-
optimized away (dependency)

Type#19 [unused] lgl$-
lgl$-           %12.3 = CallSafeBuiltin    wed   is.na(%10.6)    <lgl$->
dependent slot

Type#20 [unused] real$-
optimized away (dependency)

Type#21 [unused] lgl$-
lgl$-           %13.0 = Lte                d     %10.6, 0, elided   <lgl$->
dependent slot

Type#22 [unused] real$-
optimized away (dependency)

Type#23 [unused] lgl$-
lgl$-           %14.0 = Lte                d     1, %10.6, elided   <lgl$->
dependent slot

Type#24 [unused] real-
optimized away (dependency)

Type#25 [unused] real$-
optimized away (dependency)

Type#26 [unused] real$-
optimized away (dependency)

Type#27 [unused] real-
optimized away (dependency)

Type#28 [unused] real$-
optimized away (dependency)

Type#29 [unused] lgl$-
optimized away (dependency)

Type#30 [unused] real-
optimized away (dependency)

Type#31 [unused] real$-
optimized away (dependency)

Type#32 [unused] real-
optimized away (dependency)

Type#33 [unused] real$-
optimized away (dependency)

Type#34 [unused] real$-
optimized away (dependency)

Type#35 [unused] real$-
optimized away (dependency)

Type#36 [unused] real$-
optimized away (dependency)

Type#37 [unused] real-
optimized away (dependency)

Type#38 [unused] real-
optimized away (dependency)

Type#39 [unused] real$-
optimized away (dependency)

Type#40 [unused] real-
optimized away (dependency)

Type#41 [unused] real$-
optimized away (dependency)

Type#42 [unused] real$-
optimized away (dependency)

Type#43 [unused] real-
optimized away (dependency)

Type#44 [unused] real-
optimized away (dependency)

Type#45 [unused] real$-
optimized away (dependency)

Type#46 [unused] real-
optimized away (dependency)

Type#47 [unused] real$-
optimized away (dependency)

Type#48 [unused] real$-
optimized away (dependency)

Type#49 [unused] real-
optimized away (dependency)

Type#50 [unused] nil-
optimized away

Type#51 [unused] lgl$-
optimized away (dependency)

Type#52 [unused] str-
val?            %24.4 = PopContext         C     %24.3, %20.8   <str->
other unused reason

----------------------
Inlinee: hcl [0x560a62782ce0]
referenced: 13
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 7

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 0
dependent: 3
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] vec
val?            %22.3 = Force!<value>      !v    %22.1, e22.2   <vec>
other unused reason

Type#7 [unused] real-
val?            %22.5 = Force!<lazy>       !v    %22.4, e22.2   <real->
dependent slot

Type#8 [unused] real- (polluted)
val?            %22.7 = Force!<lazy>       !v    %22.6, e22.2   <real->
dependent slot

Type#9 [unused] real- (polluted)
val?            %22.9 = Force!<lazy>       !v    %22.8, e22.2   <real->
dependent slot

Type#10 [unused] nil-
val?            %23.1 = Force!<lazy>       !v    %23.0, e22.2   <nil->
other unused reason

Type#11 [unused] lgl$-
val?            %24.2 = Force!<lazy>       !v    %24.1, e22.2   <lgl$->
other unused reason

Type#12 [unused] str-
val?            %24.3 = CallBuiltin        !     .Call(%22.3, %22.5, %22.7, %22.9, %24.0, %24.2) e22.2   <str->
other unused reason

*********************** Compilation session for: rev (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: rev (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
rev [0x560a64657590]
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

*********************** Compilation session for:  (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleReal0 miss: 3) ***********************
======================= ClosureVersion:  (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleReal0 miss: 3) =======================
referenced: 409
referenced non-empty: 168
read non-empty: 168
used: 20
present non-empty: 59

Used
exact match: 13
widened: 7
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 148
optimized away non-empty: 89
dependent: 141
other reasons unused non-empty: 7

Polluted
polluted: 4
used polluted: 0

----------------------
 [0x560a62587de0]
referenced: 362
referenced non-empty: 151
read non-empty: 151
used: 18
present non-empty: 46

Used
exact match: 13
widened: 5
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 133
optimized away non-empty: 87
dependent: 131
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] real$-
real$-          %2.3  = Force!<lazy>       !vr   %1.1,    <real$->
dependent slot

Type#3 [unused] real$-
real$-          %2.4  = Extract1_1D        wed   %2.3, 1L, elided   <real$->
dependent slot

Type#4 [unused] int$-
int$-           %2.5  = CallSafeBuiltin    wed   as.integer(%2.4)    <int$->
dependent slot

Type#5 [unused] int$-
optimized away (dependency)

Type#6 [unused] lgl$-
lgl$-           %2.7  = Lt                 d     %2.5, 1L, elided   <lgl$->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] str$-
optimized away (dependency)

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [unused] vec
optimized away (dependency)

Type#11 [unused] str-
optimized away (dependency)

Type#12 [unused] str-
optimized away (dependency)

Type#13 [used] int$-
val?            %9.4  = PopContext         C     %9.3, %5.5   <int$->
void                    Assume             D     %9.5, %9.6 (Typecheck@0x560a62578f60[Type#13])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] int$-
optimized away (dependency)

Type#16 [unused] lgl$-
lgl$-           %13.3 = CallSafeBuiltin    wed   is.na(%11.1)    <lgl$->
dependent slot

Type#17 [unused] int$-
optimized away (dependency)

Type#18 [unused] lgl$-
lgl$-           %14.0 = Lt                 d     %11.1, 1L, elided   <lgl$->
dependent slot

Type#19 [unused] vec
val?            %15.1 = Force!<wrapped>    !v    %15.0, e1.2   <vec>
dependent slot

Type#20 [unused] int$-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] vec
val?            %17.2 = Extract1_2D        !v    %15.1, %17.1, missingArg, e1.2   <vec>
dependent slot

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] vec
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] int$
val?            %19.6 = Call               !v    %19.3(%19.4, %19.5) e1.2   <int$>
dependent slot

Type#30 [unused] int$
val?            %21.1 = Extract1_1D        !v    %19.6, 1L, e1.2   <int$>
dependent slot

Type#31 [unused] str$-
val?            %21.2 = CallBuiltin        !v    as.character(%21.1) e1.2   <str$->
dependent slot

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] vec+
optimized away

Type#34 [unused] real+
val?            %24.7 = PopContext         C     %24.6, %23.4   <real+>
dependent slot

Type#35 [used] str$-
val?^ | miss    %26.0 = LdVar              eR    p.type, e1.2
void                    Assume             D     %26.1, %24.12 (Typecheck@0x560a62578f60[Type#35])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [used] real+
val             %80.3 = ChkMissing         e     %24.7
void                    Assume             D     %80.4, %28.3 (Typecheck@0x560a62578f60[Type#38])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#39 [unused] real$-
real$-          %80.7 = Extract2_1D        wed   %80.6, "h2", elided   <real$->
dependent slot

Type#40 [unused] lgl$-
lgl$-           %80.8 = CallSafeBuiltin    wed   is.na(%80.7)    <lgl$->
dependent slot

Type#41 [unused] real+
optimized away (dependency)

Type#42 [unused] real$-
real$-          %90.0 = Extract2_1D        wed   %80.6, "h1", elided   <real$->
dependent slot

Type#43 [used] int$-
val?            %90.2 = Force!<value>      !v    %90.1, e1.2   <int$->
void                    Assume             D     %90.3, %90.4 (Typecheck@0x560a62578f60[Type#43])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?+

Type#44 [unused] int$-
int$-           %92.2 = Sub                d     %92.1, 1L, elided   <int$->
dependent slot

Type#45 [unused] real$-
real$-          %92.3 = Mul                d     360, %92.2, elided   <real$->
dependent slot

Type#46 [used] int$-
val?^ | miss    %92.4 = LdVar              eR    n, e1.2
void                    Assume             D     %92.5, %90.4 (Typecheck2@0x560a62578f60[Type#46])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?+

Type#47 [unused] real$-
real$-          %92.8 = Div                d     %92.3, %92.7, elided   <real$->
dependent slot

Type#48 [unused] real$-
real$-          %92.9 = Add                d     %90.0, %92.8, elided   <real$->
dependent slot

Type#49 [used] real+
val?^ | miss    %92.10 = LdVar              eR    p !upd, e1.2
void                    Assume             D     %92.11, %90.4 (Typecheck@0x560a62578f60[Type#49])
exact match
checkFor: real+, static: val?^ | miss, feedback: real+, expected: real+, required: val?^ | miss

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] int$-
val?            %84.4 = Force!<value>      !v    %84.3, e1.2   <int$->
dependent slot

Type#52 [unused] real-
val?            %84.5 = NamedCall          !v    <blt seq.int>(1, 0, length.out=%84.4) e1.2   <real->
dependent slot

Type#53 [unused] real-
optimized away (dependency)

Type#54 [unused] real+
optimized away (dependency)

Type#55 [unused] real$-
optimized away (dependency)

Type#56 [unused] real+
optimized away (dependency)

Type#57 [unused] real$-
optimized away (dependency)

Type#58 [unused] real-
optimized away (dependency)

Type#59 [unused] real+
optimized away (dependency)

Type#60 [unused] real$-
optimized away (dependency)

Type#61 [unused] real+
optimized away (dependency)

Type#62 [unused] real$-
optimized away (dependency)

Type#63 [unused] nil-
optimized away

Type#64 [unused] lgl$-
optimized away (dependency)

Type#65 [unused] str-
val?            %88.4 = PopContext         C     %88.3, %86.8   <str->
dependent slot

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [used] real+
val             %62.3 = ChkMissing         e     %24.7
void                    Assume             D     %62.4, %31.2 (Typecheck@0x560a62578f60[Type#68])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#69 [unused] real$-
real$-          %62.7 = Extract2_1D        wed   %62.6, "h2", elided   <real$->
dependent slot

Type#70 [unused] lgl$-
lgl$-           %62.8 = CallSafeBuiltin    wed   is.na(%62.7)    <lgl$->
dependent slot

Type#71 [unused] real+
optimized away (dependency)

Type#72 [unused] real$-
real$-          %79.0 = Extract2_1D        wed   %62.6, "h1", elided   <real$->
dependent slot

Type#73 [unused] real+
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [used] real+
val             %66.0 = ChkMissing         e     %64.0
void                    Assume             D     %66.1, %64.1 (Typecheck@0x560a62578f60[Type#76])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#77 [unused] real$-
real$-          %66.4 = Extract2_1D        wed   %66.3, "c2", elided   <real$->
dependent slot

Type#78 [unused] lgl$-
lgl$-           %66.5 = CallSafeBuiltin    wed   is.na(%66.4)    <lgl$->
dependent slot

Type#79 [unused] real+
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [used] real+
val             %70.0 = ChkMissing         e     %68.0
void                    Assume             D     %70.1, %68.1 (Typecheck@0x560a62578f60[Type#82])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#83 [unused] real$-
real$-          %70.4 = Extract2_1D        wed   %70.3, "p2", elided   <real$->
dependent slot

Type#84 [unused] lgl$-
lgl$-           %70.5 = CallSafeBuiltin    wed   is.na(%70.4)    <lgl$->
dependent slot

Type#85 [unused] real+
optimized away (dependency)

Type#86 [unused] real$-
real$-          %77.0 = Extract2_1D        wed   %70.3, "p1", elided   <real$->
dependent slot

Type#87 [unused] real+
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] int$-
val?            %74.4 = Force!<value>      !v    %74.3, e1.2   <int$->
dependent slot

Type#90 [unused] real-
val?            %74.5 = NamedCall          !v    <blt seq.int>(1, 0, length.out=%74.4) e1.2   <real->
dependent slot

Type#91 [unused] real-
optimized away (dependency)

Type#92 [unused] real+
optimized away (dependency)

Type#93 [unused] real$-
optimized away (dependency)

Type#94 [unused] real+
optimized away (dependency)

Type#95 [unused] real$-
optimized away (dependency)

Type#96 [unused] real+
optimized away (dependency)

Type#97 [unused] real$-
optimized away (dependency)

Type#98 [unused] real+
optimized away (dependency)

Type#99 [unused] real$-
optimized away (dependency)

Type#100 [unused] real+
optimized away (dependency)

Type#101 [unused] real$-
optimized away (dependency)

Type#102 [unused] real+
optimized away (dependency)

Type#103 [unused] real$-
optimized away (dependency)

Type#104 [unused] real+
optimized away (dependency)

Type#105 [unused] real$-
optimized away (dependency)

Type#106 [unused] real+
optimized away (dependency)

Type#107 [unused] real$-
optimized away (dependency)

Type#108 [unused] real+
optimized away (dependency)

Type#109 [unused] real$-
optimized away (dependency)

Type#110 [unused] str-
val?            %76.13 = StaticCall         !v    seqhcl[0x560a64b85640](%76.3, %76.4, %76.5, %76.6, %76.7, %76.8, %76.9, %76.10, %76.11, %76.12) from %1.6 e1.2   <str->
dependent slot

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] $#-
optimized away (dependency)

Type#113 [used] real+
val             %36.4 = ChkMissing         e     %24.7
void                    Assume             D     %36.5, %34.2 (Typecheck@0x560a62578f60[Type#113])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#114 [unused] real$-
real$-          %36.8 = Extract2_1D        wed   %36.7, "p2", elided   <real$->
dependent slot

Type#115 [unused] lgl$-
lgl$-           %36.9 = CallSafeBuiltin    wed   is.na(%36.8)    <lgl$->
dependent slot

Type#116 [unused] real+
optimized away (dependency)

Type#117 [unused] real$-
real$-          %61.0 = Extract2_1D        wed   %36.7, "p1", elided   <real$->
dependent slot

Type#118 [unused] real+
optimized away (dependency)

Type#119 [unused] $#-
optimized away (dependency)

Type#120 [unused] $#-
optimized away (dependency)

Type#121 [used] int$-
val?^ | miss    %40.3 = LdVar              eR    n, e1.2
void                    Assume             D     %40.4, %38.0 (Typecheck2@0x560a62578f60[Type#121])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?+

Type#122 [unused] real$-
real$-          %40.7 = Div                d     %40.6, 2, elided   <real$->
dependent slot

Type#123 [used] real$-
val+            %40.8 = CallSafeBuiltin    wed   ceiling(%40.7)    <real$->
void                    Assume             D     %40.9, %40.10 (Typecheck@0x560a62578f60[Type#123])
exact match
checkFor: real$-, static: val+, feedback: real$-, expected: real$-, required: val?^ | miss

Type#124 [unused] $#-
optimized away (dependency)

Type#125 [unused] $#-
optimized away (dependency)

Type#126 [unused] $#-
optimized away (dependency)

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] int$-
optimized away (dependency)

Type#129 [unused] real$-
real$-          %44.3 = Sub                d     %40.6, 1, elided   <real$->
dependent slot

Type#130 [unused] real$-
real$-          %44.4 = Div                d     -2, %44.3, elided   <real$->
dependent slot

Type#131 [unused] real$-
optimized away (dependency)

Type#132 [unused] real-
val?            %44.5 = NamedCall          !v    <blt seq.int>(1, by=%44.4, length.out=%42.1) e1.2   <real->
dependent slot

Type#133 [unused] $#-
optimized away (dependency)

Type#134 [unused] $#-
optimized away (dependency)

Type#135 [unused] $#-
optimized away (dependency)

Type#136 [unused] $#-
optimized away (dependency)

Type#137 [unused] $#-
optimized away (dependency)

Type#138 [unused] $#-
optimized away (dependency)

Type#139 [unused] $#-
optimized away (dependency)

Type#140 [unused] $#-
optimized away (dependency)

Type#141 [unused] $#-
optimized away (dependency)

Type#142 [unused] $#-
optimized away (dependency)

Type#143 [unused] $#-
optimized away (dependency)

Type#144 [unused] $#-
optimized away (dependency)

Type#145 [unused] $#-
optimized away (dependency)

Type#146 [unused] $#-
optimized away (dependency)

Type#147 [unused] $#-
optimized away (dependency)

Type#148 [unused] $#-
optimized away (dependency)

Type#149 [unused] $#-
optimized away (dependency)

Type#150 [unused] $#-
optimized away (dependency)

Type#151 [unused] $#-
optimized away (dependency)

Type#152 [unused] $#-
optimized away (dependency)

Type#153 [unused] $#-
optimized away (dependency)

Type#154 [unused] $#-
optimized away (dependency)

Type#155 [unused] $#-
optimized away (dependency)

Type#156 [unused] $#-
optimized away (dependency)

Type#157 [unused] $#-
optimized away (dependency)

Type#158 [unused] $#-
optimized away (dependency)

Type#159 [unused] $#-
optimized away (dependency)

Type#160 [unused] $#-
optimized away (dependency)

Type#161 [unused] $#-
optimized away (dependency)

Type#162 [unused] $#-
optimized away (dependency)

Type#163 [unused] $#-
optimized away (dependency)

Type#164 [unused] $#-
optimized away (dependency)

Type#165 [unused] $#-
optimized away (dependency)

Type#166 [unused] $#-
optimized away (dependency)

Type#167 [unused] $#-
optimized away (dependency)

Type#168 [unused] $#-
optimized away (dependency)

Type#169 [unused] $#-
optimized away (dependency)

Type#170 [unused] real-
optimized away (dependency)

Type#171 [unused] real+
optimized away (dependency)

Type#172 [unused] real$-
optimized away (dependency)

Type#173 [unused] real+
optimized away (dependency)

Type#174 [unused] real$-
optimized away (dependency)

Type#175 [unused] real+
optimized away (dependency)

Type#176 [unused] real$-
optimized away (dependency)

Type#177 [unused] real+
optimized away (dependency)

Type#178 [unused] real$-
optimized away (dependency)

Type#179 [unused] real+
optimized away (dependency)

Type#180 [unused] real$-
optimized away (dependency)

Type#181 [unused] real+
optimized away (dependency)

Type#182 [unused] real$-
optimized away (dependency)

Type#183 [unused] real+
optimized away (dependency)

Type#184 [unused] real$-
optimized away (dependency)

Type#185 [unused] real+
optimized away (dependency)

Type#186 [unused] real$-
optimized away (dependency)

Type#187 [used] str-
val?            %46.15 = StaticCall         !v    seqhcl[0x560a6506c360](%46.6, %46.7, %46.8, %46.9, 0, %46.10, %46.11, %46.12, %46.13, %46.14) from %1.6 e1.2   <str->
void                    Assume             D     %50.0, %48.16 (Typecheck@0x560a62578f60[Type#187])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#188 [unused] real-
optimized away (dependency)

Type#189 [unused] real+
optimized away (dependency)

Type#190 [unused] real$-
optimized away (dependency)

Type#191 [unused] real+
optimized away (dependency)

Type#192 [unused] real$-
optimized away (dependency)

Type#193 [unused] real+
optimized away (dependency)

Type#194 [unused] real$-
optimized away (dependency)

Type#195 [unused] real+
optimized away (dependency)

Type#196 [unused] real$-
optimized away (dependency)

Type#197 [unused] real+
optimized away (dependency)

Type#198 [unused] real$-
optimized away (dependency)

Type#199 [unused] real+
optimized away (dependency)

Type#200 [unused] real$-
optimized away (dependency)

Type#201 [unused] real+
optimized away (dependency)

Type#202 [unused] real$-
optimized away (dependency)

Type#203 [unused] real+
optimized away (dependency)

Type#204 [unused] real$-
optimized away (dependency)

Type#205 [unused] str-
val?            %48.13 = Call               !v    %48.3(%48.4, %48.5, %48.6, %48.7, 0, %48.8, %48.9, %48.10, %48.11, %48.12) e1.2   <str->
dependent slot

Type#206 [used] str-
val?            %48.14 = StaticCall         !v    rev[0x560a64fbf9d0](%48.13) e1.2   <str->
void                    Assume             D     %48.15, %48.16 (Typecheck@0x560a62578f60[Type#206])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#207 [unused] str-
val+            %50.5 = CallSafeBuiltin    wed   c(%50.2, %50.4)    <str->
dependent slot

Type#208 [used] int$-
val?            %50.8 = Force!<value>      !v    %50.7, e1.2   <int$->
void                    Assume             D     %50.9, %50.10 (Typecheck@0x560a62578f60[Type#208])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?+

Type#209 [unused] real$-
real$-          %52.2 = IDiv               d     %52.1, 2, elided   <real$->
dependent slot

Type#210 [used] real$-
val?^ | miss    %52.3 = LdVar              eR    n2, e1.2
void                    Assume             D     %52.4, %50.10 (Typecheck@0x560a62578f60[Type#210])
exact match
checkFor: real$-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?^ | miss

Type#211 [unused] lgl$-
lgl$-           %52.7 = Lt                 d     %52.2, %52.6, elided   <lgl$->
dependent slot

Type#212 [used] str-
val?^ | miss    %60.0 = LdVar              eR    col, e1.2
void                    Assume             D     %60.1, %50.10 (Typecheck@0x560a62578f60[Type#212])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#213 [unused] $#-
optimized away (dependency)

Type#214 [unused] real$-
optimized away (dependency)

Type#215 [unused] str-
val?            %60.8 = Extract1_1D        wed   %60.4, %60.7, elided   <str->
dependent slot

Type#216 [unused] $#-
optimized away (dependency)

Type#217 [unused] $#-
optimized away (dependency)

Type#218 [unused] $#-
optimized away (dependency)

Type#219 [unused] $#-
optimized away (dependency)

Type#220 [unused] $#-
optimized away (dependency)

Type#221 [unused] $#-
optimized away (dependency)

Type#222 [unused] $#-
optimized away (dependency)

Type#223 [unused] $#-
optimized away (dependency)

Type#224 [unused] $#-
optimized away (dependency)

Type#225 [unused] $#-
optimized away (dependency)

Type#226 [unused] $#-
optimized away (dependency)

Type#227 [unused] $#-
optimized away (dependency)

Type#228 [unused] $#-
optimized away (dependency)

Type#229 [unused] $#-
optimized away (dependency)

Type#230 [unused] $#-
optimized away (dependency)

Type#231 [unused] $#-
optimized away (dependency)

Type#232 [unused] $#-
optimized away (dependency)

Type#233 [unused] $#-
optimized away (dependency)

Type#234 [unused] $#-
optimized away (dependency)

Type#235 [unused] $#-
optimized away (dependency)

Type#236 [unused] $#-
optimized away (dependency)

Type#237 [unused] $#-
optimized away (dependency)

Type#238 [unused] $#-
optimized away (dependency)

Type#239 [unused] $#-
optimized away (dependency)

Type#240 [unused] $#-
optimized away (dependency)

Type#241 [unused] $#-
optimized away (dependency)

Type#242 [unused] $#-
optimized away (dependency)

Type#243 [unused] $#-
optimized away (dependency)

Type#244 [unused] $#-
optimized away (dependency)

Type#245 [unused] $#-
optimized away (dependency)

Type#246 [unused] $#-
optimized away (dependency)

Type#247 [unused] $#-
optimized away (dependency)

Type#248 [unused] $#-
optimized away (dependency)

Type#249 [unused] $#-
optimized away (dependency)

Type#250 [unused] $#-
optimized away (dependency)

Type#251 [unused] $#-
optimized away (dependency)

Type#252 [unused] $#-
optimized away (dependency)

Type#253 [unused] $#-
optimized away (dependency)

Type#254 [unused] $#-
optimized away (dependency)

Type#255 [unused] $#-
optimized away (dependency)

Type#256 [unused] $#-
optimized away (dependency)

Type#257 [unused] $#-
optimized away (dependency)

Type#258 [unused] $#-
optimized away (dependency)

Type#259 [unused] $#-
optimized away (dependency)

Type#260 [unused] $#-
optimized away (dependency)

Type#261 [unused] $#-
optimized away (dependency)

Type#262 [unused] $#-
optimized away (dependency)

Type#263 [unused] $#-
optimized away (dependency)

Type#264 [unused] $#-
optimized away (dependency)

Type#265 [unused] $#-
optimized away (dependency)

Type#266 [unused] $#-
optimized away (dependency)

Type#267 [unused] $#-
optimized away (dependency)

Type#268 [unused] $#-
optimized away (dependency)

Type#269 [unused] $#-
optimized away (dependency)

Type#270 [unused] $#-
optimized away (dependency)

Type#271 [unused] $#-
optimized away (dependency)

Type#272 [unused] $#-
optimized away (dependency)

Type#273 [unused] $#-
optimized away (dependency)

Type#274 [unused] $#-
optimized away (dependency)

Type#275 [unused] $#-
optimized away (dependency)

Type#276 [unused] $#-
optimized away (dependency)

Type#277 [unused] $#-
optimized away (dependency)

Type#278 [unused] $#-
optimized away (dependency)

Type#279 [unused] $#-
optimized away (dependency)

Type#280 [unused] $#-
optimized away (dependency)

Type#281 [unused] $#-
optimized away (dependency)

Type#282 [unused] $#-
optimized away (dependency)

Type#283 [unused] $#-
optimized away (dependency)

Type#284 [unused] $#-
optimized away (dependency)

Type#285 [unused] $#-
optimized away (dependency)

Type#286 [unused] $#-
optimized away (dependency)

Type#287 [unused] $#-
optimized away (dependency)

Type#288 [unused] $#-
optimized away (dependency)

Type#289 [unused] $#-
optimized away (dependency)

Type#290 [unused] $#-
optimized away (dependency)

Type#291 [unused] $#-
optimized away (dependency)

Type#292 [unused] $#-
optimized away (dependency)

Type#293 [unused] $#-
optimized away (dependency)

Type#294 [unused] $#-
optimized away (dependency)

Type#295 [unused] $#-
optimized away (dependency)

Type#296 [unused] $#-
optimized away (dependency)

Type#297 [unused] $#-
optimized away (dependency)

Type#298 [unused] $#-
optimized away (dependency)

Type#299 [unused] $#-
optimized away (dependency)

Type#300 [unused] $#-
optimized away (dependency)

Type#301 [unused] $#-
optimized away (dependency)

Type#302 [unused] $#-
optimized away (dependency)

Type#303 [unused] $#-
optimized away (dependency)

Type#304 [unused] $#-
optimized away (dependency)

Type#305 [unused] $#-
optimized away (dependency)

Type#306 [unused] $#-
optimized away (dependency)

Type#307 [unused] $#-
optimized away (dependency)

Type#308 [unused] $#-
optimized away (dependency)

Type#309 [unused] $#-
optimized away (dependency)

Type#310 [unused] $#-
optimized away (dependency)

Type#311 [unused] $#-
optimized away (dependency)

Type#312 [unused] $#-
optimized away (dependency)

Type#313 [unused] $#-
optimized away (dependency)

Type#314 [unused] $#-
optimized away (dependency)

Type#315 [unused] $#-
optimized away (dependency)

Type#316 [unused] $#-
optimized away (dependency)

Type#317 [unused] $#-
optimized away (dependency)

Type#318 [unused] $#-
optimized away (dependency)

Type#319 [unused] $#-
optimized away (dependency)

Type#320 [unused] $#-
optimized away (dependency)

Type#321 [unused] $#-
optimized away (dependency)

Type#322 [unused] $#-
optimized away (dependency)

Type#323 [unused] $#-
optimized away (dependency)

Type#324 [unused] $#-
optimized away (dependency)

Type#325 [unused] $#-
optimized away (dependency)

Type#326 [unused] $#-
optimized away (dependency)

Type#327 [unused] $#-
optimized away (dependency)

Type#328 [unused] $#-
optimized away (dependency)

Type#329 [unused] $#-
optimized away (dependency)

Type#330 [unused] $#-
optimized away (dependency)

Type#331 [unused] $#-
optimized away (dependency)

Type#332 [unused] $#-
optimized away (dependency)

Type#333 [unused] $#-
optimized away (dependency)

Type#334 [unused] $#-
optimized away (dependency)

Type#335 [unused] $#-
optimized away (dependency)

Type#336 [unused] $#-
optimized away (dependency)

Type#337 [unused] $#-
optimized away (dependency)

Type#338 [unused] $#-
optimized away (dependency)

Type#339 [unused] $#-
optimized away (dependency)

Type#340 [unused] $#-
optimized away (dependency)

Type#341 [unused] $#-
optimized away (dependency)

Type#342 [unused] $#-
optimized away (dependency)

Type#343 [unused] $#-
optimized away (dependency)

Type#344 [unused] $#-
optimized away (dependency)

Type#345 [unused] $#-
optimized away (dependency)

Type#346 [unused] $#-
optimized away (dependency)

Type#347 [unused] $#-
optimized away (dependency)

Type#348 [unused] $#-
optimized away (dependency)

Type#349 [unused] $#-
optimized away (dependency)

Type#350 [unused] $#-
optimized away (dependency)

Type#351 [unused] $#-
optimized away (dependency)

Type#352 [unused] $#-
optimized away (dependency)

Type#353 [unused] $#-
optimized away (dependency)

Type#354 [unused] $#-
optimized away (dependency)

Type#355 [unused] $#-
optimized away (dependency)

Type#356 [unused] $#-
optimized away (dependency)

Type#357 [unused] $#-
optimized away (dependency)

Type#358 [unused] lgl$-
val?            %55.1 = Force!<lazy>       !v    %55.0, e1.2   <lgl$->
dependent slot

Type#359 [used] str-
val?^ | miss    %58.0 = LdVar              eR    col, e1.2
void                    Assume             D     %58.1, %55.3 (Typecheck@0x560a62578f60[Type#359])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#360 [unused] $#-
optimized away (dependency)

Type#361 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: hcl [0x560a62782ce0]
referenced: 13
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 7

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 0
dependent: 3
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] vec
val?            %86.19 = Force!<value>      !v    %86.17, e86.18   <vec>
other unused reason

Type#7 [unused] real-
val?            %86.21 = Force!<lazy>       !v    %86.20, e86.18   <real->
dependent slot

Type#8 [unused] real- (polluted)
val?            %86.23 = Force!<lazy>       !v    %86.22, e86.18   <real->
dependent slot

Type#9 [unused] real- (polluted)
val?            %86.25 = Force!<lazy>       !v    %86.24, e86.18   <real->
dependent slot

Type#10 [unused] nil-
val?            %87.1 = Force!<lazy>       !v    %87.0, e86.18   <nil->
other unused reason

Type#11 [unused] lgl$-
val?            %88.2 = Force!<lazy>       !v    %88.1, e86.18   <lgl$->
other unused reason

Type#12 [unused] str-
val?            %88.3 = CallBuiltin        !v    .Call(%86.19, %86.21, %86.23, %86.25, %88.0, %88.2) e86.18   <str->
other unused reason

----------------------
Inlinee: unlist [0x560a55eb29b0]
referenced: 27
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 5
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec+ (polluted)
val?            %23.9 = Force!<lazy>       !vL   %23.5, e23.6   <vec+>
dependent slot

Type#1 [unused] lgl$-
optimized away (dependency)

Type#2 [unused] vec+ (polluted)
val?            %24.1 = Force!<wrapped>    !v    %24.0, e23.6   <vec+>
dependent slot

Type#3 [unused] lgl$-
val?            %24.3 = Force!<wrapped>    !v    %24.2, e23.6   <lgl$->
dependent slot

Type#4 [unused] lgl$-
val?            %24.5 = Force!<lazy>       !v    %24.4, e23.6   <lgl$->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: charmatch [0x560a62579070]
referenced: 7
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 2

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str$-
val?            %5.9  = Force!<lazy>       !vr   %5.7,    <str$->
void                    Assume             D     %5.10, %5.11 (Typecheck@0x560a62613c50[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#2 [unused] str$-
val+            %7.2  = CallSafeBuiltin    wed   as.character(%7.1)    <str$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str-
val?            %7.3  = Force!<lazy>       !vL   %5.6, e5.8   <str->
void                    Assume             D     %7.4, %7.5 (Typecheck@0x560a62613c50[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#5 [unused] str-
val+            %9.2  = CallSafeBuiltin    wed   as.character(%9.1)    <str->
dependent slot

Type#6 [unused] int$-
optimized away

======================= ClosureVersion: rev (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
rev [0x560a64657590]
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

*********************** Compilation session for:  (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleReal0 miss: 3) ***********************
======================= ClosureVersion:  (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleReal0 miss: 3) =======================
referenced: 396
referenced non-empty: 234
read non-empty: 234
used: 29
present non-empty: 64

Used
exact match: 19
widened: 10
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 205
optimized away non-empty: 141
dependent: 202
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 0

----------------------
 [0x560a62587de0]
referenced: 362
referenced non-empty: 224
read non-empty: 224
used: 27
present non-empty: 58

Used
exact match: 19
widened: 8
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 197
optimized away non-empty: 139
dependent: 195
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] real$-
real$-          %2.3  = Force!<lazy>       !vr   %1.1,    <real$->
dependent slot

Type#3 [unused] real$-
real$-          %2.4  = Extract1_1D        wed   %2.3, 1L, elided   <real$->
dependent slot

Type#4 [unused] int$-
int$-           %2.5  = CallSafeBuiltin    wed   as.integer(%2.4)    <int$->
dependent slot

Type#5 [unused] int$-
optimized away (dependency)

Type#6 [unused] lgl$-
lgl$-           %2.7  = Lt                 d     %2.5, 1L, elided   <lgl$->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] str$-
optimized away (dependency)

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [unused] vec
optimized away (dependency)

Type#11 [unused] str-
optimized away (dependency)

Type#12 [unused] str-
optimized away (dependency)

Type#13 [used] int$-
val?            %9.4  = PopContext         C     %9.3, %5.5   <int$->
void                    Assume             D     %9.5, %9.6 (Typecheck@0x560a62578f60[Type#13])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] int$-
optimized away (dependency)

Type#16 [unused] lgl$-
lgl$-           %13.3 = CallSafeBuiltin    wed   is.na(%11.1)    <lgl$->
dependent slot

Type#17 [unused] int$-
optimized away (dependency)

Type#18 [unused] lgl$-
lgl$-           %14.0 = Lt                 d     %11.1, 1L, elided   <lgl$->
dependent slot

Type#19 [unused] vec
val?            %15.1 = Force!<wrapped>    !v    %15.0, e1.2   <vec>
dependent slot

Type#20 [unused] int$-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] vec
val?            %17.2 = Extract1_2D        !v    %15.1, %17.1, missingArg, e1.2   <vec>
dependent slot

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] vec
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] int$
val?            %19.6 = Call               !v    %19.3(%19.4, %19.5) e1.2   <int$>
dependent slot

Type#30 [unused] int$
val?            %21.1 = Extract1_1D        !v    %19.6, 1L, e1.2   <int$>
dependent slot

Type#31 [unused] str$-
val?            %21.2 = CallBuiltin        !v    as.character(%21.1) e1.2   <str$->
dependent slot

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] vec+
optimized away

Type#34 [unused] real+
val?            %24.7 = PopContext         C     %24.6, %23.4   <real+>
dependent slot

Type#35 [used] str$-
val?^ | miss    %26.0 = LdVar              eR    p.type, e1.2
void                    Assume             D     %26.1, %24.12 (Typecheck@0x560a62578f60[Type#35])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [used] real+
val             %111.3 = ChkMissing         e     %24.7
void                    Assume             D     %111.4, %28.3 (Typecheck@0x560a62578f60[Type#38])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#39 [unused] real$-
real$-          %111.7 = Extract2_1D        wed   %111.6, "h2", elided   <real$->
dependent slot

Type#40 [unused] lgl$-
lgl$-           %111.8 = CallSafeBuiltin    wed   is.na(%111.7)    <lgl$->
dependent slot

Type#41 [unused] real+
optimized away (dependency)

Type#42 [unused] real$-
real$-          %118.0 = Extract2_1D        wed   %111.6, "h1", elided   <real$->
dependent slot

Type#43 [used] int$-
val?            %118.2 = Force!<value>      !v    %118.1, e1.2   <int$->
void                    Assume             D     %118.3, %118.4 (Typecheck@0x560a62578f60[Type#43])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?+

Type#44 [unused] int$-
int$-           %120.2 = Sub                d     %120.1, 1L, elided   <int$->
dependent slot

Type#45 [unused] real$-
real$-          %120.3 = Mul                d     360, %120.2, elided   <real$->
dependent slot

Type#46 [used] int$-
val?^ | miss    %120.4 = LdVar              eR    n, e1.2
void                    Assume             D     %120.5, %118.4 (Typecheck2@0x560a62578f60[Type#46])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?+

Type#47 [unused] real$-
real$-          %120.8 = Div                d     %120.3, %120.7, elided   <real$->
dependent slot

Type#48 [unused] real$-
real$-          %120.9 = Add                d     %118.0, %120.8, elided   <real$->
dependent slot

Type#49 [used] real+
val?^ | miss    %120.10 = LdVar              eR    p !upd, e1.2
void                    Assume             D     %120.11, %118.4 (Typecheck@0x560a62578f60[Type#49])
exact match
checkFor: real+, static: val?^ | miss, feedback: real+, expected: real+, required: val?^ | miss

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] int$-
val?            %115.4 = Force!<value>      !v    %115.3, e1.2   <int$->
dependent slot

Type#52 [unused] real-
val?            %115.5 = NamedCall          !v    <blt seq.int>(1, 0, length.out=%115.4) e1.2   <real->
dependent slot

Type#53 [unused] real-
optimized away (dependency)

Type#54 [unused] real+
optimized away (dependency)

Type#55 [unused] real$-
optimized away (dependency)

Type#56 [unused] real+
optimized away (dependency)

Type#57 [unused] real$-
optimized away (dependency)

Type#58 [unused] real-
optimized away (dependency)

Type#59 [unused] real+
optimized away (dependency)

Type#60 [unused] real$-
optimized away (dependency)

Type#61 [unused] real+
optimized away (dependency)

Type#62 [unused] real$-
optimized away (dependency)

Type#63 [unused] nil-
optimized away

Type#64 [unused] lgl$-
optimized away (dependency)

Type#65 [unused] str-
val?            %117.8 = StaticCall         !v    hcl[0x560a65044410](%117.3, %117.4, %117.5, %117.6, %117.7) { 0n 1n 2n 3n 4n } e1.2   <str->
dependent slot

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [used] real+
val             %93.3 = ChkMissing         e     %24.7
void                    Assume             D     %93.4, %31.2 (Typecheck@0x560a62578f60[Type#68])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#69 [unused] real$-
real$-          %93.7 = Extract2_1D        wed   %93.6, "h2", elided   <real$->
dependent slot

Type#70 [unused] lgl$-
lgl$-           %93.8 = CallSafeBuiltin    wed   is.na(%93.7)    <lgl$->
dependent slot

Type#71 [unused] real+
optimized away (dependency)

Type#72 [unused] real$-
real$-          %110.0 = Extract2_1D        wed   %93.6, "h1", elided   <real$->
dependent slot

Type#73 [unused] real+
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [used] real+
val             %97.0 = ChkMissing         e     %95.0
void                    Assume             D     %97.1, %95.1 (Typecheck@0x560a62578f60[Type#76])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#77 [unused] real$-
real$-          %97.4 = Extract2_1D        wed   %97.3, "c2", elided   <real$->
dependent slot

Type#78 [unused] lgl$-
lgl$-           %97.5 = CallSafeBuiltin    wed   is.na(%97.4)    <lgl$->
dependent slot

Type#79 [unused] real+
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [used] real+
val             %101.0 = ChkMissing         e     %99.0
void                    Assume             D     %101.1, %99.1 (Typecheck@0x560a62578f60[Type#82])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#83 [unused] real$-
real$-          %101.4 = Extract2_1D        wed   %101.3, "p2", elided   <real$->
dependent slot

Type#84 [unused] lgl$-
lgl$-           %101.5 = CallSafeBuiltin    wed   is.na(%101.4)    <lgl$->
dependent slot

Type#85 [unused] real+
optimized away (dependency)

Type#86 [unused] real$-
real$-          %108.0 = Extract2_1D        wed   %101.3, "p1", elided   <real$->
dependent slot

Type#87 [unused] real+
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] int$-
val?            %105.4 = Force!<value>      !v    %105.3, e1.2   <int$->
dependent slot

Type#90 [unused] real-
val?            %105.5 = NamedCall          !v    <blt seq.int>(1, 0, length.out=%105.4) e1.2   <real->
dependent slot

Type#91 [unused] real-
optimized away (dependency)

Type#92 [unused] real+
optimized away (dependency)

Type#93 [unused] real$-
optimized away (dependency)

Type#94 [unused] real+
optimized away (dependency)

Type#95 [unused] real$-
optimized away (dependency)

Type#96 [unused] real+
optimized away (dependency)

Type#97 [unused] real$-
optimized away (dependency)

Type#98 [unused] real+
optimized away (dependency)

Type#99 [unused] real$-
optimized away (dependency)

Type#100 [unused] real+
optimized away (dependency)

Type#101 [unused] real$-
optimized away (dependency)

Type#102 [unused] real+
optimized away (dependency)

Type#103 [unused] real$-
optimized away (dependency)

Type#104 [unused] real+
optimized away (dependency)

Type#105 [unused] real$-
optimized away (dependency)

Type#106 [unused] real+
optimized away (dependency)

Type#107 [unused] real$-
optimized away (dependency)

Type#108 [unused] real+
optimized away (dependency)

Type#109 [unused] real$-
optimized away (dependency)

Type#110 [unused] str-
val?            %107.13 = StaticCall         !v    seqhcl[0x560a64fa6df0](%107.3, %107.4, %107.5, %107.6, %107.7, %107.8, %107.9, %107.10, %107.11, %107.12) from %1.6 e1.2   <str->
dependent slot

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] $#-
optimized away (dependency)

Type#113 [used] real+
val             %74.3 = ChkMissing         e     %24.7
void                    Assume             D     %74.4, %34.2 (Typecheck@0x560a62578f60[Type#113])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#114 [unused] real$-
real$-          %74.7 = Extract2_1D        wed   %74.6, "p2", elided   <real$->
dependent slot

Type#115 [unused] lgl$-
lgl$-           %74.8 = CallSafeBuiltin    wed   is.na(%74.7)    <lgl$->
dependent slot

Type#116 [unused] real+
optimized away (dependency)

Type#117 [unused] real$-
real$-          %92.0 = Extract2_1D        wed   %74.6, "p1", elided   <real$->
dependent slot

Type#118 [unused] real+
optimized away (dependency)

Type#119 [unused] $#-
optimized away (dependency)

Type#120 [unused] $#-
optimized away (dependency)

Type#121 [used] int$-
val?^ | miss    %78.3 = LdVar              eR    n, e1.2
void                    Assume             D     %78.4, %76.0 (Typecheck2@0x560a62578f60[Type#121])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?+

Type#122 [unused] real$-
real$-          %78.7 = Div                d     %78.6, 2, elided   <real$->
dependent slot

Type#123 [used] real$-
val+            %78.8 = CallSafeBuiltin    wed   ceiling(%78.7)    <real$->
void                    Assume             D     %78.9, %78.10 (Typecheck@0x560a62578f60[Type#123])
exact match
checkFor: real$-, static: val+, feedback: real$-, expected: real$-, required: val?^ | miss

Type#124 [unused] $#-
optimized away (dependency)

Type#125 [unused] $#-
optimized away (dependency)

Type#126 [unused] $#-
optimized away (dependency)

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] int$-
optimized away (dependency)

Type#129 [unused] real$-
real$-          %82.3 = Sub                d     %78.6, 1, elided   <real$->
dependent slot

Type#130 [unused] real$-
real$-          %82.4 = Div                d     -2, %82.3, elided   <real$->
dependent slot

Type#131 [unused] real$-
optimized away (dependency)

Type#132 [unused] real-
val?            %82.5 = NamedCall          !v    <blt seq.int>(1, by=%82.4, length.out=%80.1) e1.2   <real->
dependent slot

Type#133 [unused] $#-
optimized away (dependency)

Type#134 [unused] $#-
optimized away (dependency)

Type#135 [unused] $#-
optimized away (dependency)

Type#136 [unused] $#-
optimized away (dependency)

Type#137 [unused] $#-
optimized away (dependency)

Type#138 [unused] $#-
optimized away (dependency)

Type#139 [unused] $#-
optimized away (dependency)

Type#140 [unused] $#-
optimized away (dependency)

Type#141 [unused] $#-
optimized away (dependency)

Type#142 [unused] $#-
optimized away (dependency)

Type#143 [unused] $#-
optimized away (dependency)

Type#144 [unused] $#-
optimized away (dependency)

Type#145 [unused] $#-
optimized away (dependency)

Type#146 [unused] $#-
optimized away (dependency)

Type#147 [unused] $#-
optimized away (dependency)

Type#148 [unused] $#-
optimized away (dependency)

Type#149 [unused] $#-
optimized away (dependency)

Type#150 [unused] $#-
optimized away (dependency)

Type#151 [unused] $#-
optimized away (dependency)

Type#152 [unused] $#-
optimized away (dependency)

Type#153 [unused] $#-
optimized away (dependency)

Type#154 [unused] $#-
optimized away (dependency)

Type#155 [unused] $#-
optimized away (dependency)

Type#156 [unused] $#-
optimized away (dependency)

Type#157 [unused] $#-
optimized away (dependency)

Type#158 [unused] $#-
optimized away (dependency)

Type#159 [unused] $#-
optimized away (dependency)

Type#160 [unused] $#-
optimized away (dependency)

Type#161 [unused] $#-
optimized away (dependency)

Type#162 [unused] $#-
optimized away (dependency)

Type#163 [unused] $#-
optimized away (dependency)

Type#164 [unused] $#-
optimized away (dependency)

Type#165 [unused] $#-
optimized away (dependency)

Type#166 [unused] $#-
optimized away (dependency)

Type#167 [unused] $#-
optimized away (dependency)

Type#168 [unused] $#-
optimized away (dependency)

Type#169 [unused] $#-
optimized away (dependency)

Type#170 [unused] real-
optimized away (dependency)

Type#171 [unused] real+
optimized away (dependency)

Type#172 [unused] real$-
optimized away (dependency)

Type#173 [unused] real+
optimized away (dependency)

Type#174 [unused] real$-
optimized away (dependency)

Type#175 [unused] real+
optimized away (dependency)

Type#176 [unused] real$-
optimized away (dependency)

Type#177 [unused] real+
optimized away (dependency)

Type#178 [unused] real$-
optimized away (dependency)

Type#179 [unused] real+
optimized away (dependency)

Type#180 [unused] real$-
optimized away (dependency)

Type#181 [unused] real+
optimized away (dependency)

Type#182 [unused] real$-
optimized away (dependency)

Type#183 [unused] real+
optimized away (dependency)

Type#184 [unused] real$-
optimized away (dependency)

Type#185 [unused] real+
optimized away (dependency)

Type#186 [unused] real$-
optimized away (dependency)

Type#187 [used] str-
val?            %84.15 = StaticCall         !v    seqhcl[0x560a5d2933d0](%84.6, %84.7, %84.8, %84.9, 0, %84.10, %84.11, %84.12, %84.13, %84.14) from %1.6 e1.2   <str->
void                    Assume             D     %84.20, %84.21 (Typecheck@0x560a62578f60[Type#187])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#188 [unused] real-
optimized away (dependency)

Type#189 [unused] real+
optimized away (dependency)

Type#190 [unused] real$-
optimized away (dependency)

Type#191 [unused] real+
optimized away (dependency)

Type#192 [unused] real$-
optimized away (dependency)

Type#193 [unused] real+
optimized away (dependency)

Type#194 [unused] real$-
optimized away (dependency)

Type#195 [unused] real+
optimized away (dependency)

Type#196 [unused] real$-
optimized away (dependency)

Type#197 [unused] real+
optimized away (dependency)

Type#198 [unused] real$-
optimized away (dependency)

Type#199 [unused] real+
optimized away (dependency)

Type#200 [unused] real$-
optimized away (dependency)

Type#201 [unused] real+
optimized away (dependency)

Type#202 [unused] real$-
optimized away (dependency)

Type#203 [unused] real+
optimized away (dependency)

Type#204 [unused] real$-
optimized away (dependency)

Type#205 [unused] str-
optimized away (dependency)

Type#206 [used] str-
val?            %84.18 = Call               !v    %84.16(%84.17) e1.2   <str->
void                    Assume             D     %84.19, %84.21 (Typecheck@0x560a62578f60[Type#206])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#207 [unused] str-
val+            %86.4 = CallSafeBuiltin    wed   c(%86.1, %86.3)    <str->
dependent slot

Type#208 [used] int$-
val?            %86.7 = Force!<value>      !v    %86.6, e1.2   <int$->
void                    Assume             D     %86.8, %86.9 (Typecheck@0x560a62578f60[Type#208])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?+

Type#209 [unused] real$-
real$-          %88.2 = IDiv               d     %88.1, 2, elided   <real$->
dependent slot

Type#210 [used] real$-
val?^ | miss    %88.3 = LdVar              eR    n2, e1.2
void                    Assume             D     %88.4, %86.9 (Typecheck@0x560a62578f60[Type#210])
exact match
checkFor: real$-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?^ | miss

Type#211 [unused] lgl$-
lgl$-           %88.7 = Lt                 d     %88.2, %88.6, elided   <lgl$->
dependent slot

Type#212 [used] str-
val?^ | miss    %91.0 = LdVar              eR    col, e1.2
void                    Assume             D     %91.1, %86.9 (Typecheck@0x560a62578f60[Type#212])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#213 [unused] $#-
optimized away (dependency)

Type#214 [unused] real$-
optimized away (dependency)

Type#215 [unused] str-
val?            %91.8 = Extract1_1D        wed   %91.4, %91.7, elided   <str->
dependent slot

Type#216 [unused] $#-
optimized away (dependency)

Type#217 [unused] $#-
optimized away (dependency)

Type#218 [used] real+
val             %39.4 = ChkMissing         e     %24.7
void                    Assume             D     %39.5, %37.2 (Typecheck@0x560a62578f60[Type#218])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#219 [unused] real$-
real$-          %39.8 = Extract2_1D        wed   %39.7, "p2", elided   <real$->
dependent slot

Type#220 [unused] lgl$-
lgl$-           %39.9 = CallSafeBuiltin    wed   is.na(%39.8)    <lgl$->
dependent slot

Type#221 [unused] $#-
optimized away (dependency)

Type#222 [unused] $#-
optimized away (dependency)

Type#223 [unused] $#-
optimized away (dependency)

Type#224 [unused] $#-
optimized away (dependency)

Type#225 [unused] $#-
optimized away (dependency)

Type#226 [used] real+
val             %45.0 = ChkMissing         e     %43.0
void                    Assume             D     %45.1, %43.1 (Typecheck@0x560a62578f60[Type#226])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#227 [unused] real$-
real$-          %45.4 = Extract2_1D        wed   %45.3, "p4", elided   <real$->
dependent slot

Type#228 [unused] lgl$-
lgl$-           %45.5 = CallSafeBuiltin    wed   is.na(%45.4)    <lgl$->
dependent slot

Type#229 [unused] $#-
optimized away (dependency)

Type#230 [unused] $#-
optimized away (dependency)

Type#231 [unused] $#-
optimized away (dependency)

Type#232 [unused] $#-
optimized away (dependency)

Type#233 [unused] $#-
optimized away (dependency)

Type#234 [used] int$-
val?^ | miss    %49.3 = LdVar              eR    n, e1.2
void                    Assume             D     %49.4, %47.0 (Typecheck2@0x560a62578f60[Type#234])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?+

Type#235 [unused] real$-
real$-          %49.7 = Div                d     %49.6, 2, elided   <real$->
dependent slot

Type#236 [used] real$-
val+            %49.8 = CallSafeBuiltin    wed   ceiling(%49.7)    <real$->
void                    Assume             D     %49.9, %49.10 (Typecheck@0x560a62578f60[Type#236])
exact match
checkFor: real$-, static: val+, feedback: real$-, expected: real$-, required: val?^ | miss

Type#237 [unused] $#-
optimized away (dependency)

Type#238 [unused] $#-
optimized away (dependency)

Type#239 [unused] $#-
optimized away (dependency)

Type#240 [unused] $#-
optimized away (dependency)

Type#241 [unused] int$-
optimized away (dependency)

Type#242 [unused] real$-
real$-          %53.3 = Sub                d     %49.6, 1, elided   <real$->
dependent slot

Type#243 [unused] real$-
real$-          %53.4 = Div                d     -2, %53.3, elided   <real$->
dependent slot

Type#244 [unused] real$-
optimized away (dependency)

Type#245 [unused] real-
val?            %53.5 = NamedCall          !v    <blt seq.int>(1, by=%53.4, length.out=%51.1) e1.2   <real->
dependent slot

Type#246 [unused] $#-
optimized away (dependency)

Type#247 [unused] $#-
optimized away (dependency)

Type#248 [unused] $#-
optimized away (dependency)

Type#249 [unused] $#-
optimized away (dependency)

Type#250 [unused] $#-
optimized away (dependency)

Type#251 [unused] $#-
optimized away (dependency)

Type#252 [unused] $#-
optimized away (dependency)

Type#253 [unused] $#-
optimized away (dependency)

Type#254 [unused] $#-
optimized away (dependency)

Type#255 [unused] $#-
optimized away (dependency)

Type#256 [unused] $#-
optimized away (dependency)

Type#257 [unused] $#-
optimized away (dependency)

Type#258 [unused] $#-
optimized away (dependency)

Type#259 [unused] $#-
optimized away (dependency)

Type#260 [unused] $#-
optimized away (dependency)

Type#261 [unused] $#-
optimized away (dependency)

Type#262 [unused] $#-
optimized away (dependency)

Type#263 [unused] $#-
optimized away (dependency)

Type#264 [unused] $#-
optimized away (dependency)

Type#265 [unused] $#-
optimized away (dependency)

Type#266 [unused] $#-
optimized away (dependency)

Type#267 [unused] $#-
optimized away (dependency)

Type#268 [unused] $#-
optimized away (dependency)

Type#269 [unused] $#-
optimized away (dependency)

Type#270 [unused] $#-
optimized away (dependency)

Type#271 [unused] $#-
optimized away (dependency)

Type#272 [unused] $#-
optimized away (dependency)

Type#273 [unused] $#-
optimized away (dependency)

Type#274 [unused] $#-
optimized away (dependency)

Type#275 [unused] $#-
optimized away (dependency)

Type#276 [unused] $#-
optimized away (dependency)

Type#277 [unused] $#-
optimized away (dependency)

Type#278 [unused] $#-
optimized away (dependency)

Type#279 [unused] $#-
optimized away (dependency)

Type#280 [unused] $#-
optimized away (dependency)

Type#281 [unused] $#-
optimized away (dependency)

Type#282 [unused] $#-
optimized away (dependency)

Type#283 [unused] $#-
optimized away (dependency)

Type#284 [unused] $#-
optimized away (dependency)

Type#285 [unused] $#-
optimized away (dependency)

Type#286 [unused] $#-
optimized away (dependency)

Type#287 [unused] $#-
optimized away (dependency)

Type#288 [unused] $#-
optimized away (dependency)

Type#289 [unused] $#-
optimized away (dependency)

Type#290 [unused] $#-
optimized away (dependency)

Type#291 [unused] $#-
optimized away (dependency)

Type#292 [unused] $#-
optimized away (dependency)

Type#293 [unused] $#-
optimized away (dependency)

Type#294 [unused] $#-
optimized away (dependency)

Type#295 [unused] $#-
optimized away (dependency)

Type#296 [unused] $#-
optimized away (dependency)

Type#297 [unused] real-
optimized away (dependency)

Type#298 [unused] real+
optimized away (dependency)

Type#299 [unused] real$-
optimized away (dependency)

Type#300 [unused] real+
optimized away (dependency)

Type#301 [unused] real$-
optimized away (dependency)

Type#302 [unused] lgl$-
optimized away (dependency)

Type#303 [unused] real+
optimized away (dependency)

Type#304 [unused] real$-
optimized away (dependency)

Type#305 [unused] real+
optimized away (dependency)

Type#306 [unused] real$-
optimized away (dependency)

Type#307 [unused] real+
optimized away (dependency)

Type#308 [unused] real$-
optimized away (dependency)

Type#309 [unused] real+
optimized away (dependency)

Type#310 [unused] real$-
optimized away (dependency)

Type#311 [unused] real+
optimized away (dependency)

Type#312 [unused] real$-
optimized away (dependency)

Type#313 [unused] real+
optimized away (dependency)

Type#314 [unused] real$-
optimized away (dependency)

Type#315 [unused] real+
optimized away (dependency)

Type#316 [unused] real$-
optimized away (dependency)

Type#317 [unused] real+
optimized away (dependency)

Type#318 [unused] real$-
optimized away (dependency)

Type#319 [unused] real+
optimized away (dependency)

Type#320 [unused] real$-
optimized away (dependency)

Type#321 [used] str-
val?            %55.16 = StaticCall         !v    seqhcl[0x560a64fa6df0](%55.6, %55.7, %55.8, %55.9, %55.10, %55.11, %55.12, %55.13, %55.14, %55.15) from %1.6 e1.2   <str->
void                    Assume             D     %59.0, %57.17 (Typecheck@0x560a62578f60[Type#321])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#322 [unused] real-
optimized away (dependency)

Type#323 [unused] real+
optimized away (dependency)

Type#324 [unused] real$-
optimized away (dependency)

Type#325 [unused] real+
optimized away (dependency)

Type#326 [unused] real$-
optimized away (dependency)

Type#327 [unused] lgl$-
optimized away (dependency)

Type#328 [unused] real+
optimized away (dependency)

Type#329 [unused] real$-
optimized away (dependency)

Type#330 [unused] real+
optimized away (dependency)

Type#331 [unused] real$-
optimized away (dependency)

Type#332 [unused] real+
optimized away (dependency)

Type#333 [unused] real$-
optimized away (dependency)

Type#334 [unused] real+
optimized away (dependency)

Type#335 [unused] real$-
optimized away (dependency)

Type#336 [unused] real+
optimized away (dependency)

Type#337 [unused] real$-
optimized away (dependency)

Type#338 [unused] real+
optimized away (dependency)

Type#339 [unused] real$-
optimized away (dependency)

Type#340 [unused] real+
optimized away (dependency)

Type#341 [unused] real$-
optimized away (dependency)

Type#342 [unused] real+
optimized away (dependency)

Type#343 [unused] real$-
optimized away (dependency)

Type#344 [unused] real+
optimized away (dependency)

Type#345 [unused] real$-
optimized away (dependency)

Type#346 [unused] str-
val?            %57.14 = Call               !v    %57.3(%57.4, %57.5, %57.6, %57.7, %57.8, %57.9, %57.10, %57.11, %57.12, %57.13) e1.2   <str->
dependent slot

Type#347 [used] str-
val?            %57.15 = StaticCall         !v    rev[0x560a651ccf20](%57.14) e1.2   <str->
void                    Assume             D     %57.16, %57.17 (Typecheck@0x560a62578f60[Type#347])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#348 [unused] str-
val+            %59.5 = CallSafeBuiltin    wed   c(%59.2, %59.4)    <str->
dependent slot

Type#349 [used] int$-
val?            %59.8 = Force!<value>      !v    %59.7, e1.2   <int$->
void                    Assume             D     %59.9, %59.10 (Typecheck@0x560a62578f60[Type#349])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?+

Type#350 [unused] real$-
real$-          %61.2 = IDiv               d     %61.1, 2, elided   <real$->
dependent slot

Type#351 [used] real$-
val?^ | miss    %61.3 = LdVar              eR    n2, e1.2
void                    Assume             D     %61.4, %59.10 (Typecheck@0x560a62578f60[Type#351])
exact match
checkFor: real$-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?^ | miss

Type#352 [unused] lgl$-
lgl$-           %61.7 = Lt                 d     %61.2, %61.6, elided   <lgl$->
dependent slot

Type#353 [used] str-
val?^ | miss    %69.0 = LdVar              eR    col, e1.2
void                    Assume             D     %69.1, %59.10 (Typecheck@0x560a62578f60[Type#353])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#354 [unused] $#-
optimized away (dependency)

Type#355 [unused] real$-
optimized away (dependency)

Type#356 [unused] str-
val?            %69.8 = Extract1_1D        wed   %69.4, %69.7, elided   <str->
dependent slot

Type#357 [unused] $#-
optimized away (dependency)

Type#358 [unused] lgl$-
val?            %64.1 = Force!<lazy>       !v    %64.0, e1.2   <lgl$->
dependent slot

Type#359 [used] str-
val?^ | miss    %67.0 = LdVar              eR    col, e1.2
void                    Assume             D     %67.1, %64.3 (Typecheck@0x560a62578f60[Type#359])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#360 [unused] $#-
optimized away (dependency)

Type#361 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: unlist [0x560a55eb29b0]
referenced: 27
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 5
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec+ (polluted)
val?            %23.9 = Force!<lazy>       !vL   %23.5, e23.6   <vec+>
dependent slot

Type#1 [unused] lgl$-
optimized away (dependency)

Type#2 [unused] vec+ (polluted)
val?            %24.1 = Force!<wrapped>    !v    %24.0, e23.6   <vec+>
dependent slot

Type#3 [unused] lgl$-
val?            %24.3 = Force!<wrapped>    !v    %24.2, e23.6   <lgl$->
dependent slot

Type#4 [unused] lgl$-
val?            %24.5 = Force!<lazy>       !v    %24.4, e23.6   <lgl$->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: charmatch [0x560a62579070]
referenced: 7
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 2

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str$-
val?            %5.9  = Force!<lazy>       !vr   %5.7,    <str$->
void                    Assume             D     %5.10, %5.11 (Typecheck@0x560a62613c50[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#2 [unused] str$-
val+            %7.2  = CallSafeBuiltin    wed   as.character(%7.1)    <str$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str-
val?            %7.3  = Force!<lazy>       !vL   %5.6, e5.8   <str->
void                    Assume             D     %7.4, %7.5 (Typecheck@0x560a62613c50[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#5 [unused] str-
val+            %9.2  = CallSafeBuiltin    wed   as.character(%9.1)    <str->
dependent slot

Type#6 [unused] int$-
optimized away

======================= ClosureVersion: rev (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
rev [0x560a64657590]
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

*********************** Compilation session for:  (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleReal0 miss: 3) ***********************
======================= ClosureVersion:  (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleReal0 miss: 3) =======================
referenced: 396
referenced non-empty: 234
read non-empty: 234
used: 29
present non-empty: 63

Used
exact match: 19
widened: 10
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 205
optimized away non-empty: 142
dependent: 202
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 0

----------------------
 [0x560a62587de0]
referenced: 362
referenced non-empty: 224
read non-empty: 224
used: 27
present non-empty: 57

Used
exact match: 19
widened: 8
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 197
optimized away non-empty: 140
dependent: 195
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] real$-
real$-          %2.3  = Force!<lazy>       !vr   %1.1,    <real$->
dependent slot

Type#3 [unused] real$-
real$-          %2.4  = Extract1_1D        wed   %2.3, 1L, elided   <real$->
dependent slot

Type#4 [unused] int$-
int$-           %2.5  = CallSafeBuiltin    wed   as.integer(%2.4)    <int$->
dependent slot

Type#5 [unused] int$-
optimized away (dependency)

Type#6 [unused] lgl$-
lgl$-           %2.7  = Lt                 d     %2.5, 1L, elided   <lgl$->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] str$-
optimized away (dependency)

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [unused] vec
optimized away (dependency)

Type#11 [unused] str-
optimized away (dependency)

Type#12 [unused] str-
optimized away (dependency)

Type#13 [used] int$-
val?            %9.4  = PopContext         C     %9.3, %5.5   <int$->
void                    Assume             D     %9.5, %9.6 (Typecheck@0x560a62578f60[Type#13])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] int$-
optimized away (dependency)

Type#16 [unused] lgl$-
lgl$-           %13.3 = CallSafeBuiltin    wed   is.na(%11.1)    <lgl$->
dependent slot

Type#17 [unused] int$-
optimized away (dependency)

Type#18 [unused] lgl$-
lgl$-           %14.0 = Lt                 d     %11.1, 1L, elided   <lgl$->
dependent slot

Type#19 [unused] vec
val?            %15.1 = Force!<wrapped>    !v    %15.0, e1.2   <vec>
dependent slot

Type#20 [unused] int$-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] vec
val?            %17.2 = Extract1_2D        !v    %15.1, %17.1, missingArg, e1.2   <vec>
dependent slot

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] vec
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] int$
val?            %19.6 = Call               !v    %19.3(%19.4, %19.5) e1.2   <int$>
dependent slot

Type#30 [unused] int$
val?            %21.1 = Extract1_1D        !v    %19.6, 1L, e1.2   <int$>
dependent slot

Type#31 [unused] str$-
val?            %21.2 = CallBuiltin        !v    as.character(%21.1) e1.2   <str$->
dependent slot

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] vec+
optimized away

Type#34 [unused] real+
val?            %24.7 = PopContext         C     %24.6, %23.4   <real+>
dependent slot

Type#35 [used] str$-
val?^ | miss    %26.0 = LdVar              eR    p.type, e1.2
void                    Assume             D     %26.1, %24.12 (Typecheck@0x560a62578f60[Type#35])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [used] real+
val             %109.3 = ChkMissing         e     %24.7
void                    Assume             D     %109.4, %28.3 (Typecheck@0x560a62578f60[Type#38])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#39 [unused] real$-
real$-          %109.7 = Extract2_1D        wed   %109.6, "h2", elided   <real$->
dependent slot

Type#40 [unused] lgl$-
lgl$-           %109.8 = CallSafeBuiltin    wed   is.na(%109.7)    <lgl$->
dependent slot

Type#41 [unused] real+
optimized away (dependency)

Type#42 [unused] real$-
real$-          %116.0 = Extract2_1D        wed   %109.6, "h1", elided   <real$->
dependent slot

Type#43 [used] int$-
val?            %116.2 = Force!<value>      !v    %116.1, e1.2   <int$->
void                    Assume             D     %116.3, %116.4 (Typecheck@0x560a62578f60[Type#43])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?+

Type#44 [unused] int$-
int$-           %118.2 = Sub                d     %118.1, 1L, elided   <int$->
dependent slot

Type#45 [unused] real$-
real$-          %118.3 = Mul                d     360, %118.2, elided   <real$->
dependent slot

Type#46 [used] int$-
val?^ | miss    %118.4 = LdVar              eR    n, e1.2
void                    Assume             D     %118.5, %116.4 (Typecheck2@0x560a62578f60[Type#46])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?+

Type#47 [unused] real$-
real$-          %118.8 = Div                d     %118.3, %118.7, elided   <real$->
dependent slot

Type#48 [unused] real$-
real$-          %118.9 = Add                d     %116.0, %118.8, elided   <real$->
dependent slot

Type#49 [used] real+
val?^ | miss    %118.10 = LdVar              eR    p !upd, e1.2
void                    Assume             D     %118.11, %116.4 (Typecheck@0x560a62578f60[Type#49])
exact match
checkFor: real+, static: val?^ | miss, feedback: real+, expected: real+, required: val?^ | miss

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] int$-
val?            %113.4 = Force!<value>      !v    %113.3, e1.2   <int$->
dependent slot

Type#52 [unused] real-
val?            %113.5 = NamedCall          !v    <blt seq.int>(1, 0, length.out=%113.4) e1.2   <real->
dependent slot

Type#53 [unused] real-
optimized away (dependency)

Type#54 [unused] real+
optimized away (dependency)

Type#55 [unused] real$-
optimized away (dependency)

Type#56 [unused] real+
optimized away (dependency)

Type#57 [unused] real$-
optimized away (dependency)

Type#58 [unused] real-
optimized away (dependency)

Type#59 [unused] real+
optimized away (dependency)

Type#60 [unused] real$-
optimized away (dependency)

Type#61 [unused] real+
optimized away (dependency)

Type#62 [unused] real$-
optimized away (dependency)

Type#63 [unused] nil-
optimized away

Type#64 [unused] lgl$-
optimized away (dependency)

Type#65 [unused] str-
val?            %115.8 = StaticCall         !v    hcl[0x560a658ea130](%115.3, %115.4, %115.5, %115.6, %115.7) { 0n 1n 2n 3n 4n } e1.2   <str->
dependent slot

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [used] real+
val             %91.3 = ChkMissing         e     %24.7
void                    Assume             D     %91.4, %31.2 (Typecheck@0x560a62578f60[Type#68])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#69 [unused] real$-
real$-          %91.7 = Extract2_1D        wed   %91.6, "h2", elided   <real$->
dependent slot

Type#70 [unused] lgl$-
lgl$-           %91.8 = CallSafeBuiltin    wed   is.na(%91.7)    <lgl$->
dependent slot

Type#71 [unused] real+
optimized away (dependency)

Type#72 [unused] real$-
real$-          %108.0 = Extract2_1D        wed   %91.6, "h1", elided   <real$->
dependent slot

Type#73 [unused] real+
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [used] real+
val             %95.0 = ChkMissing         e     %93.0
void                    Assume             D     %95.1, %93.1 (Typecheck@0x560a62578f60[Type#76])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#77 [unused] real$-
real$-          %95.4 = Extract2_1D        wed   %95.3, "c2", elided   <real$->
dependent slot

Type#78 [unused] lgl$-
lgl$-           %95.5 = CallSafeBuiltin    wed   is.na(%95.4)    <lgl$->
dependent slot

Type#79 [unused] real+
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [used] real+
val             %99.0 = ChkMissing         e     %97.0
void                    Assume             D     %99.1, %97.1 (Typecheck@0x560a62578f60[Type#82])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#83 [unused] real$-
real$-          %99.4 = Extract2_1D        wed   %99.3, "p2", elided   <real$->
dependent slot

Type#84 [unused] lgl$-
lgl$-           %99.5 = CallSafeBuiltin    wed   is.na(%99.4)    <lgl$->
dependent slot

Type#85 [unused] real+
optimized away (dependency)

Type#86 [unused] real$-
real$-          %106.0 = Extract2_1D        wed   %99.3, "p1", elided   <real$->
dependent slot

Type#87 [unused] real+
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] int$-
val?            %103.4 = Force!<value>      !v    %103.3, e1.2   <int$->
dependent slot

Type#90 [unused] real-
val?            %103.5 = NamedCall          !v    <blt seq.int>(1, 0, length.out=%103.4) e1.2   <real->
dependent slot

Type#91 [unused] real-
optimized away (dependency)

Type#92 [unused] real+
optimized away (dependency)

Type#93 [unused] real$-
optimized away (dependency)

Type#94 [unused] real+
optimized away (dependency)

Type#95 [unused] real$-
optimized away (dependency)

Type#96 [unused] real+
optimized away (dependency)

Type#97 [unused] real$-
optimized away (dependency)

Type#98 [unused] real+
optimized away (dependency)

Type#99 [unused] real$-
optimized away (dependency)

Type#100 [unused] real+
optimized away (dependency)

Type#101 [unused] real$-
optimized away (dependency)

Type#102 [unused] real+
optimized away (dependency)

Type#103 [unused] real$-
optimized away (dependency)

Type#104 [unused] real+
optimized away (dependency)

Type#105 [unused] real$-
optimized away (dependency)

Type#106 [unused] real+
optimized away (dependency)

Type#107 [unused] real$-
optimized away (dependency)

Type#108 [unused] real+
optimized away (dependency)

Type#109 [unused] real$-
optimized away (dependency)

Type#110 [unused] str-
val?            %105.13 = StaticCall         !v    seqhcl[0x560a64ee15c0](%105.3, %105.4, %105.5, %105.6, %105.7, %105.8, %105.9, %105.10, %105.11, %105.12) from %1.6 e1.2   <str->
dependent slot

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] $#-
optimized away (dependency)

Type#113 [used] real+
val             %72.3 = ChkMissing         e     %24.7
void                    Assume             D     %72.4, %34.2 (Typecheck@0x560a62578f60[Type#113])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#114 [unused] real$-
real$-          %72.7 = Extract2_1D        wed   %72.6, "p2", elided   <real$->
dependent slot

Type#115 [unused] lgl$-
lgl$-           %72.8 = CallSafeBuiltin    wed   is.na(%72.7)    <lgl$->
dependent slot

Type#116 [unused] real+
optimized away (dependency)

Type#117 [unused] real$-
real$-          %90.0 = Extract2_1D        wed   %72.6, "p1", elided   <real$->
dependent slot

Type#118 [unused] real+
optimized away (dependency)

Type#119 [unused] $#-
optimized away (dependency)

Type#120 [unused] $#-
optimized away (dependency)

Type#121 [used] int$-
val?^ | miss    %76.3 = LdVar              eR    n, e1.2
void                    Assume             D     %76.4, %74.0 (Typecheck2@0x560a62578f60[Type#121])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?+

Type#122 [unused] real$-
real$-          %76.7 = Div                d     %76.6, 2, elided   <real$->
dependent slot

Type#123 [used] real$-
val+            %76.8 = CallSafeBuiltin    wed   ceiling(%76.7)    <real$->
void                    Assume             D     %76.9, %76.10 (Typecheck@0x560a62578f60[Type#123])
exact match
checkFor: real$-, static: val+, feedback: real$-, expected: real$-, required: val?^ | miss

Type#124 [unused] $#-
optimized away (dependency)

Type#125 [unused] $#-
optimized away (dependency)

Type#126 [unused] $#-
optimized away (dependency)

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] int$-
optimized away (dependency)

Type#129 [unused] real$-
real$-          %80.3 = Sub                d     %76.6, 1, elided   <real$->
dependent slot

Type#130 [unused] real$-
real$-          %80.4 = Div                d     -2, %80.3, elided   <real$->
dependent slot

Type#131 [unused] real$-
optimized away (dependency)

Type#132 [unused] real-
val?            %80.5 = NamedCall          !v    <blt seq.int>(1, by=%80.4, length.out=%78.1) e1.2   <real->
dependent slot

Type#133 [unused] $#-
optimized away (dependency)

Type#134 [unused] $#-
optimized away (dependency)

Type#135 [unused] $#-
optimized away (dependency)

Type#136 [unused] $#-
optimized away (dependency)

Type#137 [unused] $#-
optimized away (dependency)

Type#138 [unused] $#-
optimized away (dependency)

Type#139 [unused] $#-
optimized away (dependency)

Type#140 [unused] $#-
optimized away (dependency)

Type#141 [unused] $#-
optimized away (dependency)

Type#142 [unused] $#-
optimized away (dependency)

Type#143 [unused] $#-
optimized away (dependency)

Type#144 [unused] $#-
optimized away (dependency)

Type#145 [unused] $#-
optimized away (dependency)

Type#146 [unused] $#-
optimized away (dependency)

Type#147 [unused] $#-
optimized away (dependency)

Type#148 [unused] $#-
optimized away (dependency)

Type#149 [unused] $#-
optimized away (dependency)

Type#150 [unused] $#-
optimized away (dependency)

Type#151 [unused] $#-
optimized away (dependency)

Type#152 [unused] $#-
optimized away (dependency)

Type#153 [unused] $#-
optimized away (dependency)

Type#154 [unused] $#-
optimized away (dependency)

Type#155 [unused] $#-
optimized away (dependency)

Type#156 [unused] $#-
optimized away (dependency)

Type#157 [unused] $#-
optimized away (dependency)

Type#158 [unused] $#-
optimized away (dependency)

Type#159 [unused] $#-
optimized away (dependency)

Type#160 [unused] $#-
optimized away (dependency)

Type#161 [unused] $#-
optimized away (dependency)

Type#162 [unused] $#-
optimized away (dependency)

Type#163 [unused] $#-
optimized away (dependency)

Type#164 [unused] $#-
optimized away (dependency)

Type#165 [unused] $#-
optimized away (dependency)

Type#166 [unused] $#-
optimized away (dependency)

Type#167 [unused] $#-
optimized away (dependency)

Type#168 [unused] $#-
optimized away (dependency)

Type#169 [unused] $#-
optimized away (dependency)

Type#170 [unused] real-
optimized away (dependency)

Type#171 [unused] real+
optimized away (dependency)

Type#172 [unused] real$-
optimized away (dependency)

Type#173 [unused] real+
optimized away (dependency)

Type#174 [unused] real$-
optimized away (dependency)

Type#175 [unused] real+
optimized away (dependency)

Type#176 [unused] real$-
optimized away (dependency)

Type#177 [unused] real+
optimized away (dependency)

Type#178 [unused] real$-
optimized away (dependency)

Type#179 [unused] real+
optimized away (dependency)

Type#180 [unused] real$-
optimized away (dependency)

Type#181 [unused] real+
optimized away (dependency)

Type#182 [unused] real$-
optimized away (dependency)

Type#183 [unused] real+
optimized away (dependency)

Type#184 [unused] real$-
optimized away (dependency)

Type#185 [unused] real+
optimized away (dependency)

Type#186 [unused] real$-
optimized away (dependency)

Type#187 [used] str-
val?            %82.15 = StaticCall         !v    seqhcl[0x560a64c15d40](%82.6, %82.7, %82.8, %82.9, 0, %82.10, %82.11, %82.12, %82.13, %82.14) from %1.6 e1.2   <str->
void                    Assume             D     %82.20, %82.21 (Typecheck@0x560a62578f60[Type#187])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#188 [unused] real-
optimized away (dependency)

Type#189 [unused] real+
optimized away (dependency)

Type#190 [unused] real$-
optimized away (dependency)

Type#191 [unused] real+
optimized away (dependency)

Type#192 [unused] real$-
optimized away (dependency)

Type#193 [unused] real+
optimized away (dependency)

Type#194 [unused] real$-
optimized away (dependency)

Type#195 [unused] real+
optimized away (dependency)

Type#196 [unused] real$-
optimized away (dependency)

Type#197 [unused] real+
optimized away (dependency)

Type#198 [unused] real$-
optimized away (dependency)

Type#199 [unused] real+
optimized away (dependency)

Type#200 [unused] real$-
optimized away (dependency)

Type#201 [unused] real+
optimized away (dependency)

Type#202 [unused] real$-
optimized away (dependency)

Type#203 [unused] real+
optimized away (dependency)

Type#204 [unused] real$-
optimized away (dependency)

Type#205 [unused] str-
optimized away (dependency)

Type#206 [used] str-
val?            %82.18 = Call               !v    %82.16(%82.17) e1.2   <str->
void                    Assume             D     %82.19, %82.21 (Typecheck@0x560a62578f60[Type#206])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#207 [unused] str-
val+            %84.4 = CallSafeBuiltin    wed   c(%84.1, %84.3)    <str->
dependent slot

Type#208 [used] int$-
val?            %84.7 = Force!<value>      !v    %84.6, e1.2   <int$->
void                    Assume             D     %84.8, %84.9 (Typecheck@0x560a62578f60[Type#208])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?+

Type#209 [unused] real$-
real$-          %86.2 = IDiv               d     %86.1, 2, elided   <real$->
dependent slot

Type#210 [used] real$-
val?^ | miss    %86.3 = LdVar              eR    n2, e1.2
void                    Assume             D     %86.4, %84.9 (Typecheck@0x560a62578f60[Type#210])
exact match
checkFor: real$-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?^ | miss

Type#211 [unused] lgl$-
lgl$-           %86.7 = Lt                 d     %86.2, %86.6, elided   <lgl$->
dependent slot

Type#212 [used] str-
val?^ | miss    %89.0 = LdVar              eR    col, e1.2
void                    Assume             D     %89.1, %84.9 (Typecheck@0x560a62578f60[Type#212])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#213 [unused] $#-
optimized away (dependency)

Type#214 [unused] real$-
optimized away (dependency)

Type#215 [unused] str-
val?            %89.8 = Extract1_1D        wed   %89.4, %89.7, elided   <str->
dependent slot

Type#216 [unused] $#-
optimized away (dependency)

Type#217 [unused] $#-
optimized away (dependency)

Type#218 [used] real+
val             %39.4 = ChkMissing         e     %24.7
void                    Assume             D     %39.5, %37.2 (Typecheck@0x560a62578f60[Type#218])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#219 [unused] real$-
real$-          %39.8 = Extract2_1D        wed   %39.7, "p2", elided   <real$->
dependent slot

Type#220 [unused] lgl$-
lgl$-           %39.9 = CallSafeBuiltin    wed   is.na(%39.8)    <lgl$->
dependent slot

Type#221 [unused] $#-
optimized away (dependency)

Type#222 [unused] $#-
optimized away (dependency)

Type#223 [unused] $#-
optimized away (dependency)

Type#224 [unused] $#-
optimized away (dependency)

Type#225 [unused] $#-
optimized away (dependency)

Type#226 [used] real+
val             %45.0 = ChkMissing         e     %43.0
void                    Assume             D     %45.1, %43.1 (Typecheck@0x560a62578f60[Type#226])
exact match
checkFor: real+, static: val, feedback: real+, expected: real+, required: val?^ | miss

Type#227 [unused] real$-
real$-          %45.4 = Extract2_1D        wed   %45.3, "p4", elided   <real$->
dependent slot

Type#228 [unused] lgl$-
lgl$-           %45.5 = CallSafeBuiltin    wed   is.na(%45.4)    <lgl$->
dependent slot

Type#229 [unused] $#-
optimized away (dependency)

Type#230 [unused] $#-
optimized away (dependency)

Type#231 [unused] $#-
optimized away (dependency)

Type#232 [unused] $#-
optimized away (dependency)

Type#233 [unused] $#-
optimized away (dependency)

Type#234 [used] int$-
val?^ | miss    %49.3 = LdVar              eR    n, e1.2
void                    Assume             D     %49.4, %47.0 (Typecheck2@0x560a62578f60[Type#234])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?+

Type#235 [unused] real$-
real$-          %49.7 = Div                d     %49.6, 2, elided   <real$->
dependent slot

Type#236 [used] real$-
val+            %49.8 = CallSafeBuiltin    wed   ceiling(%49.7)    <real$->
void                    Assume             D     %49.9, %49.10 (Typecheck@0x560a62578f60[Type#236])
exact match
checkFor: real$-, static: val+, feedback: real$-, expected: real$-, required: val?^ | miss

Type#237 [unused] $#-
optimized away (dependency)

Type#238 [unused] $#-
optimized away (dependency)

Type#239 [unused] $#-
optimized away (dependency)

Type#240 [unused] $#-
optimized away (dependency)

Type#241 [unused] int$-
optimized away (dependency)

Type#242 [unused] real$-
real$-          %53.3 = Sub                d     %49.6, 1, elided   <real$->
dependent slot

Type#243 [unused] real$-
real$-          %53.4 = Div                d     -2, %53.3, elided   <real$->
dependent slot

Type#244 [unused] real$-
optimized away (dependency)

Type#245 [unused] real-
val?            %53.5 = NamedCall          !v    <blt seq.int>(1, by=%53.4, length.out=%51.1) e1.2   <real->
dependent slot

Type#246 [unused] $#-
optimized away (dependency)

Type#247 [unused] $#-
optimized away (dependency)

Type#248 [unused] $#-
optimized away (dependency)

Type#249 [unused] $#-
optimized away (dependency)

Type#250 [unused] $#-
optimized away (dependency)

Type#251 [unused] $#-
optimized away (dependency)

Type#252 [unused] $#-
optimized away (dependency)

Type#253 [unused] $#-
optimized away (dependency)

Type#254 [unused] $#-
optimized away (dependency)

Type#255 [unused] $#-
optimized away (dependency)

Type#256 [unused] $#-
optimized away (dependency)

Type#257 [unused] $#-
optimized away (dependency)

Type#258 [unused] $#-
optimized away (dependency)

Type#259 [unused] $#-
optimized away (dependency)

Type#260 [unused] $#-
optimized away (dependency)

Type#261 [unused] $#-
optimized away (dependency)

Type#262 [unused] $#-
optimized away (dependency)

Type#263 [unused] $#-
optimized away (dependency)

Type#264 [unused] $#-
optimized away (dependency)

Type#265 [unused] $#-
optimized away (dependency)

Type#266 [unused] $#-
optimized away (dependency)

Type#267 [unused] $#-
optimized away (dependency)

Type#268 [unused] $#-
optimized away (dependency)

Type#269 [unused] $#-
optimized away (dependency)

Type#270 [unused] $#-
optimized away (dependency)

Type#271 [unused] $#-
optimized away (dependency)

Type#272 [unused] $#-
optimized away (dependency)

Type#273 [unused] $#-
optimized away (dependency)

Type#274 [unused] $#-
optimized away (dependency)

Type#275 [unused] $#-
optimized away (dependency)

Type#276 [unused] $#-
optimized away (dependency)

Type#277 [unused] $#-
optimized away (dependency)

Type#278 [unused] $#-
optimized away (dependency)

Type#279 [unused] $#-
optimized away (dependency)

Type#280 [unused] $#-
optimized away (dependency)

Type#281 [unused] $#-
optimized away (dependency)

Type#282 [unused] $#-
optimized away (dependency)

Type#283 [unused] $#-
optimized away (dependency)

Type#284 [unused] $#-
optimized away (dependency)

Type#285 [unused] $#-
optimized away (dependency)

Type#286 [unused] $#-
optimized away (dependency)

Type#287 [unused] $#-
optimized away (dependency)

Type#288 [unused] $#-
optimized away (dependency)

Type#289 [unused] $#-
optimized away (dependency)

Type#290 [unused] $#-
optimized away (dependency)

Type#291 [unused] $#-
optimized away (dependency)

Type#292 [unused] $#-
optimized away (dependency)

Type#293 [unused] $#-
optimized away (dependency)

Type#294 [unused] $#-
optimized away (dependency)

Type#295 [unused] $#-
optimized away (dependency)

Type#296 [unused] $#-
optimized away (dependency)

Type#297 [unused] real-
optimized away (dependency)

Type#298 [unused] real+
optimized away (dependency)

Type#299 [unused] real$-
optimized away (dependency)

Type#300 [unused] real+
optimized away (dependency)

Type#301 [unused] real$-
optimized away (dependency)

Type#302 [unused] lgl$-
optimized away (dependency)

Type#303 [unused] real+
optimized away (dependency)

Type#304 [unused] real$-
optimized away (dependency)

Type#305 [unused] real+
optimized away (dependency)

Type#306 [unused] real$-
optimized away (dependency)

Type#307 [unused] real+
optimized away (dependency)

Type#308 [unused] real$-
optimized away (dependency)

Type#309 [unused] real+
optimized away (dependency)

Type#310 [unused] real$-
optimized away (dependency)

Type#311 [unused] real+
optimized away (dependency)

Type#312 [unused] real$-
optimized away (dependency)

Type#313 [unused] real+
optimized away (dependency)

Type#314 [unused] real$-
optimized away (dependency)

Type#315 [unused] real+
optimized away (dependency)

Type#316 [unused] real$-
optimized away (dependency)

Type#317 [unused] real+
optimized away (dependency)

Type#318 [unused] real$-
optimized away (dependency)

Type#319 [unused] real+
optimized away (dependency)

Type#320 [unused] real$-
optimized away (dependency)

Type#321 [used] str-
val?            %55.16 = StaticCall         !v    seqhcl[0x560a64ee15c0](%55.6, %55.7, %55.8, %55.9, %55.10, %55.11, %55.12, %55.13, %55.14, %55.15) from %1.6 e1.2   <str->
void                    Assume             D     %55.21, %55.22 (Typecheck@0x560a62578f60[Type#321])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#322 [unused] real-
optimized away (dependency)

Type#323 [unused] real+
optimized away (dependency)

Type#324 [unused] real$-
optimized away (dependency)

Type#325 [unused] real+
optimized away (dependency)

Type#326 [unused] real$-
optimized away (dependency)

Type#327 [unused] lgl$-
optimized away (dependency)

Type#328 [unused] real+
optimized away (dependency)

Type#329 [unused] real$-
optimized away (dependency)

Type#330 [unused] real+
optimized away (dependency)

Type#331 [unused] real$-
optimized away (dependency)

Type#332 [unused] real+
optimized away (dependency)

Type#333 [unused] real$-
optimized away (dependency)

Type#334 [unused] real+
optimized away (dependency)

Type#335 [unused] real$-
optimized away (dependency)

Type#336 [unused] real+
optimized away (dependency)

Type#337 [unused] real$-
optimized away (dependency)

Type#338 [unused] real+
optimized away (dependency)

Type#339 [unused] real$-
optimized away (dependency)

Type#340 [unused] real+
optimized away (dependency)

Type#341 [unused] real$-
optimized away (dependency)

Type#342 [unused] real+
optimized away (dependency)

Type#343 [unused] real$-
optimized away (dependency)

Type#344 [unused] real+
optimized away (dependency)

Type#345 [unused] real$-
optimized away (dependency)

Type#346 [unused] str-
optimized away (dependency)

Type#347 [used] str-
val?            %55.19 = Call               !v    %55.17(%55.18) e1.2   <str->
void                    Assume             D     %55.20, %55.22 (Typecheck@0x560a62578f60[Type#347])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#348 [unused] str-
val+            %57.4 = CallSafeBuiltin    wed   c(%57.1, %57.3)    <str->
dependent slot

Type#349 [used] int$-
val?            %57.7 = Force!<value>      !v    %57.6, e1.2   <int$->
void                    Assume             D     %57.8, %57.9 (Typecheck@0x560a62578f60[Type#349])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?+

Type#350 [unused] real$-
real$-          %59.2 = IDiv               d     %59.1, 2, elided   <real$->
dependent slot

Type#351 [used] real$-
val?^ | miss    %59.3 = LdVar              eR    n2, e1.2
void                    Assume             D     %59.4, %57.9 (Typecheck@0x560a62578f60[Type#351])
exact match
checkFor: real$-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?^ | miss

Type#352 [unused] lgl$-
lgl$-           %59.7 = Lt                 d     %59.2, %59.6, elided   <lgl$->
dependent slot

Type#353 [used] str-
val?^ | miss    %67.0 = LdVar              eR    col, e1.2
void                    Assume             D     %67.1, %57.9 (Typecheck@0x560a62578f60[Type#353])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#354 [unused] $#-
optimized away (dependency)

Type#355 [unused] real$-
optimized away (dependency)

Type#356 [unused] str-
val?            %67.8 = Extract1_1D        wed   %67.4, %67.7, elided   <str->
dependent slot

Type#357 [unused] $#-
optimized away (dependency)

Type#358 [unused] lgl$-
val?            %62.1 = Force!<lazy>       !v    %62.0, e1.2   <lgl$->
dependent slot

Type#359 [used] str-
val?^ | miss    %65.0 = LdVar              eR    col, e1.2
void                    Assume             D     %65.1, %62.3 (Typecheck@0x560a62578f60[Type#359])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#360 [unused] $#-
optimized away (dependency)

Type#361 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: unlist [0x560a55eb29b0]
referenced: 27
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 5
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec+ (polluted)
val?            %23.9 = Force!<lazy>       !vL   %23.5, e23.6   <vec+>
dependent slot

Type#1 [unused] lgl$-
optimized away (dependency)

Type#2 [unused] vec+ (polluted)
val?            %24.1 = Force!<wrapped>    !v    %24.0, e23.6   <vec+>
dependent slot

Type#3 [unused] lgl$-
val?            %24.3 = Force!<wrapped>    !v    %24.2, e23.6   <lgl$->
dependent slot

Type#4 [unused] lgl$-
val?            %24.5 = Force!<lazy>       !v    %24.4, e23.6   <lgl$->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: charmatch [0x560a62579070]
referenced: 7
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 2

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str$-
val?            %5.9  = Force!<lazy>       !vr   %5.7,    <str$->
void                    Assume             D     %5.10, %5.11 (Typecheck@0x560a62613c50[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#2 [unused] str$-
val+            %7.2  = CallSafeBuiltin    wed   as.character(%7.1)    <str$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str-
val?            %7.3  = Force!<lazy>       !vL   %5.6, e5.8   <str->
void                    Assume             D     %7.4, %7.5 (Typecheck@0x560a62613c50[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#5 [unused] str-
val+            %9.2  = CallSafeBuiltin    wed   as.character(%9.1)    <str->
dependent slot

Type#6 [unused] int$-
optimized away

*********************** Compilation session for: check_function (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 4) ***********************
======================= ClosureVersion: check_function (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 4) =======================
referenced: 20
referenced non-empty: 6
read non-empty: 6
used: 2
present non-empty: 2

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

----------------------
check_function [0x560a62594d50]
referenced: 15
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] cls-
optimized away

Type#4 [used] lgl$-
val?            %9.2  = PopContext         C     %9.1, %5.4   <lgl$->
void                    Assume             D     %9.3, %9.4 (Typecheck@0x560a62a44550[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] nil-
optimized away

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: is_function [0x560a5a5fb670]
referenced: 5
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] vec
val?            %7.3  = Force!<value>      !v    %7.1, e7.2   <vec>
other unused reason

Type#3 [unused] val?- (polluted)
val?            %7.5  = Force!<lazy>       !v    %7.4, e7.2   <val?->
other unused reason

Type#4 [used] lgl$-
val?            %7.6  = CallBuiltin        !v    .Call(%7.3, %7.5) e7.2   <lgl$->
void                    Assume             D     %7.7, %7.8 (Typecheck@0x560a5a61bb80[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: fx (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: fx (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 10
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 5
other reasons unused non-empty: 1

Polluted
polluted: 5
used polluted: 0

----------------------
fx [0x560a63e5adf0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] str- (polluted)
optimized away (dependency)

Type#1 [unused] str- (polluted)
optimized away (dependency)

Type#2 [unused] str- (polluted)
val?            %6.3  = PopContext         C     %6.2, %2.5   <str->
dependent slot

----------------------
Inlinee: tolower [0x560a5aa57fe0]
referenced: 7
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str- (polluted)
val?            %2.8  = Force!<lazy>       !vr   %2.6,    <str->
dependent slot

Type#2 [unused] lgl$-
lgl$#-          %2.9  = CallSafeBuiltin    wed   is.character(%2.8)    <lgl$->
other unused reason

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] str- (polluted)
val?            %6.1  = Force!<wrapped>    !v    %6.0, e2.7   <str->
dependent slot

*********************** Compilation session for: palette.match (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: palette.match (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 13
referenced non-empty: 11
read non-empty: 11
used: 3
present non-empty: 2

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 6
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
palette.match [0x560a654946d0]
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 5
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] vec+
optimized away

Type#3 [unused] str-
optimized away (dependency)

Type#4 [unused] str-
optimized away (dependency)

Type#5 [used] int$-
val?            %6.4  = PopContext         C     %6.3, %2.5   <int$->
void                    Assume             D     %6.5, %6.6 (Typecheck@0x560a653675f0[Type#5])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

----------------------
Inlinee: charmatch [0x560a62579070]
referenced: 7
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 2

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str$-
val?            %2.9  = Force!<lazy>       !vr   %2.7,    <str$->
void                    Assume             D     %2.10, %2.11 (Typecheck@0x560a62613c50[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#2 [unused] str$-
val+            %4.2  = CallSafeBuiltin    wed   as.character(%4.1)    <str$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str-
val?            %4.3  = Force!<lazy>       !vL   %2.6, e2.8   <str->
void                    Assume             D     %4.4, %4.5 (Typecheck@0x560a62613c50[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#5 [unused] str-
val+            %6.2  = CallSafeBuiltin    wed   as.character(%6.1)    <str->
dependent slot

Type#6 [unused] int$-
optimized away

*********************** Compilation session for: loadNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 5) ***********************
*********************** Compilation session for: bindTranslations (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: bindTranslations (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 27
referenced non-empty: 26
read non-empty: 26
used: 4
present non-empty: 9

Used
exact match: 3
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 22
optimized away non-empty: 13
dependent: 16
other reasons unused non-empty: 6

Polluted
polluted: 5
used polluted: 1

----------------------
bindTranslations [0x560a5623f050]
referenced: 15
referenced non-empty: 15
read non-empty: 15
used: 3
present non-empty: 3

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 9
dependent: 12
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str-
str-            %2.1  = CallSafeBuiltin    wed   c("compiler", "foreign", "grDevices", "graphics", "grid", "methods", "parallel", "splines", "stats", "stats4", "tcltk", "tools", "utils")    <str->
dependent slot

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] str-
optimized away (dependency)

Type#3 [used] lgl$-
val?            %6.3  = PopContext         C     %6.2, %4.6   <lgl$->
void                    Assume             D     %6.4, %6.5 (Typecheck@0x560a56254b90[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] str$-
optimized away (dependency)

Type#5 [unused] str$-
val?            %9.15 = PopContext         C     %9.14, %9.5   <str$->
dependent slot

Type#6 [used] str$-
val?^ | miss    %20.0 = LdVar              eR    .popath, e4.3
void                    Assume             D     %20.1, %6.5 (Typecheck@0x560a56254b90[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#7 [unused] str$-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %12.11 = PopContext         C     %12.10, %12.5   <lgl$->
void                    Assume             D     %12.12, %12.13 (Typecheck@0x560a56254b90[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [unused] str$-
optimized away (dependency)

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] str$-
optimized away (dependency)

Type#14 [unused] str$-
val?            %17.12 = PopContext         C     %17.11, %17.5   <str$->
dependent slot

----------------------
Inlinee: file.exists [0x560a55e49350]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str- (polluted)
val?            %12.9 = CallBuiltin        !v    c(%12.8) e12.7   <str->
other unused reason

----------------------
Inlinee: bindtextdomain [0x560a56279db0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val?            %17.9 = Force!<lazy>       !vL   %17.7, e17.8   <str$->
dependent slot

Type#1 [unused] str$-
val?            %17.10 = Force!<lazy>       !vL   %17.6, e17.8   <str$->
dependent slot

----------------------
Inlinee: file.path [0x560a55e4c6a0]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec+
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] vec-
val+            %9.12 = CallSafeBuiltin    wed   list(%9.11, "po")    <vec->
other unused reason

Type#4 [unused] str$-
val?            %9.13 = Force!<lazy>       !v    %9.8, e9.6   <str$->
dependent slot

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away

Type#1 [unused] (nil|str)- (polluted)
optimized away

Type#2 [used] int- (polluted)
val?            %4.12 = StaticCall         !v    match[0x560a65a8e410](%4.10, %4.11, 0L) { 0 1 2n } e4.9   <int->
void                    Assume             D     %4.13, %4.14 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %6.2  = Gt                 wed   %6.1, 0L, elided   <lgl->
other unused reason

*********************** Compilation session for: dirname (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: dirname (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
dirname [0x560a562a4520]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val+            %1.2  = Force!<lazy>       !vr   %1.0,    <str$->
other unused reason

*********************** Compilation session for: basename (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: basename (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
basename [0x560a563a9010]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val+            %1.2  = Force!<lazy>       !vr   %1.0,    <str$->
other unused reason

*********************** Compilation session for: packageHasNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: packageHasNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 5
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
packageHasNamespace [0x560a563b36e0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [used] lgl$-
val?            %1.11 = PopContext         C     %1.10, %1.5   <lgl$->
void                    Assume             D     %1.12, %1.13 (Typecheck@0x560a563a93c0[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: file.exists [0x560a55e49350]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str- (polluted)
val?            %1.9  = CallBuiltin        !v    c(%1.7) e1.8   <str->
other unused reason

*********************** Compilation session for: dir.exists (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: dir.exists (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
dir.exists [0x560a564cf510]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] str$-
val?            %1.2  = Force!<lazy>       !v    %1.0, e1.1   <str$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a5653bff0[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

*********************** Compilation session for: makeNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2) ***********************
======================= ClosureVersion: makeNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2) =======================
referenced: 70
referenced non-empty: 52
read non-empty: 46
used: 13
present non-empty: 15

Used
exact match: 1
widened: 12
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 39
optimized away non-empty: 24
dependent: 31
other reasons unused non-empty: 8

Polluted
polluted: 2
used polluted: 2

----------------------
makeNamespace [0x560a562d0880]
referenced: 55
referenced non-empty: 37
read non-empty: 36
used: 7
present non-empty: 12

Used
exact match: 0
widened: 7
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 30
optimized away non-empty: 18
dependent: 28
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [used] env-
val?^ | miss    %2.3  = LdVar              eR    .BaseNamespaceEnv, ?
void                    Assume             D     %2.4, %1.3 (Typecheck@0x560a563e89d0[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#1 [unused] env-
val+            %2.8  = CallSafeBuiltin    wed   new.env(true, %2.7, 29L)    <env->
dependent slot

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] str$-
val?            %4.12 = PopContext         C     %4.11, %4.6   <str$->
dependent slot

Type#4 [used] env-
val?^ | miss    %6.0  = LdVar              eR    impenv, e4.3
void                    Assume             D     %6.1, %4.14 (Typecheck@0x560a563e89d0[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#5 [unused] env+
optimized away (dependency)

Type#6 [unused] env-
val+            %8.5  = CallSafeBuiltin    wed   new.env(true, %8.4, 29L)    <env->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] str$-
val?            %10.7 = Force!<wrapped>    !v    %10.6, e4.3   <str$->
dependent slot

Type#10 [used] sym-
val             %12.2 = CallSafeBuiltin    wed   as.vector(%12.1, "symbol")    <sym->
void                    Assume             D     %12.3, %12.4 (Typecheck@0x560a563e89d0[Type#10])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: sym-, expected: sym-, required: val?+

Type#11 [unused] str$-
val+            %14.2 = CallSafeBuiltin    wed   as.character(%14.1)    <str$->
dependent slot

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [used] str$+
val?            %16.4 = Force!<lazy>       !v    %16.3, e4.3   <str$+>
void                    Assume             D     %16.5, %16.6 (Typecheck@0x560a563e89d0[Type#13])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?+

Type#14 [unused] str$-
val+            %18.2 = CallSafeBuiltin    wed   as.character(%18.1)    <str$->
dependent slot

Type#15 [unused] env-
val?            %20.6 = CallBuiltin        !v    baseenv() e4.3   <env->
dependent slot

Type#16 [unused] env-
val+            %22.2 = CallSafeBuiltin    wed   new.env(true, %22.1, 29L)    <env->
dependent slot

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] env-
optimized away (dependency)

Type#28 [unused] env-
optimized away (dependency)

Type#29 [unused] env-
optimized away (dependency)

Type#30 [unused] env-
val?            %32.6 = CallBuiltin        !v    baseenv() e4.3   <env->
dependent slot

Type#31 [unused] env-
val+            %34.2 = CallSafeBuiltin    wed   new.env(true, %34.1, 29L)    <env->
dependent slot

Type#32 [unused] str$-
optimized away (dependency)

Type#33 [unused] str$-
val?            %36.11 = PopContext         C     %36.10, %36.5   <str$->
dependent slot

Type#34 [used] env-
val?^ | miss    %38.0 = LdVar              eR    dimpenv, e4.3
void                    Assume             D     %38.1, %36.13 (Typecheck@0x560a563e89d0[Type#34])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#35 [unused] env-
optimized away (dependency)

Type#36 [unused] env+
optimized away (dependency)

Type#37 [unused] env-
optimized away (dependency)

Type#38 [unused] vec$+
optimized away

Type#39 [unused] env-
optimized away (dependency)

Type#40 [unused] str$-
optimized away (dependency)

Type#41 [unused] str$-
optimized away (dependency)

Type#42 [unused] str$-
optimized away (dependency)

Type#43 [unused] str$-
optimized away (dependency)

Type#44 [unused] env-
optimized away (dependency)

Type#45 [unused] env-
optimized away (dependency)

Type#46 [unused] str_
optimized away

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] str$-
val?            %78.13 = Force!<value>      !v    %78.12, e4.3   <str$->
dependent slot

Type#53 [used] env-
val?^ | miss    %80.0 = LdVar              eR    env, e4.3
void                    Assume             D     %80.1, %78.14 (Typecheck@0x560a563e89d0[Type#53])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#54 [used] env-
val?^ | miss    %82.0 = LdVar              eR    env, e4.3
void                    Assume             D     %82.1, %80.6 (Typecheck@0x560a563e89d0[Type#54])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

----------------------
Inlinee: setNamespaceInfo [0x560a5678ac70]
referenced: 7
referenced non-empty: 7
read non-empty: 6
used: 4
present non-empty: 2

Used
exact match: 1
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] env-
val?            %72.9 = Force!<lazy>       !vL   %72.7, e72.8   <env->
dependent slot

Type#1 [used] env-
val?            %72.11 = StaticCall         !v    asNamespace[0x560a65e1fd30](%72.10, false) { 0 1n } e72.8   <env->
void                    Assume             D     %72.14, %72.15 (Typecheck@0x560a56367f30[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] env-
val?            %74.4 = Extract2_1D        wed   %74.3, ".__NAMESPACE__.", elided   <env->
dependent slot

Type#4 [used] val?+ (polluted)
val?            %74.7 = Force!<lazy>       !v    %74.6, e72.8   <val?+>
void                    Assume             D     %78.0, %76.8 (Typecheck@0x560a56367f30[Type#4])
exact match
checkFor: val?+, static: val?, feedback: val?+, expected: val?+, required: val?+

Type#5 [used] env-
val?^ | miss    %76.0 = LdVar              eR    info !upd, e72.8
void                    Assume             D     %76.1, %74.8 (Typecheck@0x560a56367f30[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#6 [used] str$-
val?            %76.6 = Force!<value>      !v    %76.5, e72.8   <str$->
void                    Assume             D     %76.7, %76.8 (Typecheck@0x560a56367f30[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

----------------------
Inlinee: as.name [0x560a564eda10]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] str$-
val?            %10.7 = Force!<wrapped>    !v    %10.6, e4.3   <str$->
void                    Assume             D     %10.8, %10.9 (Typecheck@0x560a56604200[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

----------------------
Inlinee: paste0 [0x560a55fc8790]
referenced: 3
referenced non-empty: 3
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec-
val+            %36.9 = CallSafeBuiltin    wed   list("lazydata:", %36.8)    <vec->
other unused reason

Type#1 [unused] nil-
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: new.env [0x560a5671c500]
referenced: 4
referenced non-empty: 4
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] env-
optimized away

Type#1 [unused] lgl$-
optimized away

Type#2 [used] env+ (polluted)
val?            %32.6 = CallBuiltin        !v    baseenv() e4.3   <env->
void                    Assume             D     %32.7, %32.8 (Typecheck@0x560a56e31360[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: env+, expected: env+, required: val?+

Type#3 [unused] int$-
optimized away

======================= ClosureVersion: asNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl1,!Obj0,!Obj1) =======================
referenced: 33
referenced non-empty: 27
read non-empty: 20
used: 4
present non-empty: 10

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 23
optimized away non-empty: 13
dependent: 19
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 0

----------------------
asNamespace [0x560a5662fe70]
referenced: 16
referenced non-empty: 12
read non-empty: 12
used: 3
present non-empty: 5

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 4
dependent: 7
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|env)+ (polluted)
val+            %1.2  = Force!<lazy>             %1.1,    <(str|env)+>
other unused reason

Type#2 [unused] lgl$-
lgl$#-          %1.3  = CallSafeBuiltin    wed   is.character(%1.2)    <lgl$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] lgl$-
lgl$#-          %26.0 = CallSafeBuiltin    wed   is.symbol(%1.2)    <lgl$->
dependent slot

Type#6 [unused] str$+
optimized away

Type#7 [unused] env-
val?            %25.0 = PopContext         C     %23.5, %23.1   <env->
dependent slot

Type#8 [unused] env-
optimized away (dependency)

Type#9 [used] lgl$-
val?            %7.9  = PopContext         C     %7.8, %7.4   <lgl$->
void                    Assume             D     %7.10, %7.11 (Typecheck@0x560a566a7520[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [used] lgl$-
val?            %10.1 = Force!<lazy>       !v    %10.0, e1.4   <lgl$->
void                    Assume             D     %10.2, %10.3 (Typecheck@0x560a566a7520[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#11 [unused] env-
optimized away (dependency)

Type#12 [used] lgl$-
val?            %15.2 = PopContext         C     %15.1, %13.4   <lgl$->
void                    Assume             D     %15.3, %15.4 (Typecheck@0x560a566a7520[Type#12])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#13 [unused] env-
val?            %19.2 = Force!<wrapped>    !     %19.0, e1.4   <env->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val?            %7.7  = Force!<lazy>       !vrL  %7.5, e7.6   <env->
other unused reason

----------------------
Inlinee: getNamespace [0x560a572728f0]
referenced: 5
referenced non-empty: 3
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
val?            %23.4 = Force!<lazy>       !vr   %23.2,    <str$+>
other unused reason

Type#1 [unused] env-
val?            %23.5 = CallBuiltin        !v    getRegisteredNamespace(%23.4) e23.3   <env->
dependent slot

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

----------------------
Inlinee: isBaseNamespace [0x560a5643a450]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %13.16 = PopContext         C     %13.15, %13.9   <lgl$->
void                    Assume             D     %13.17, %13.18 (Typecheck@0x560a565938d0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %13.13 = Force!<lazy>       !vL   %13.11, e13.12   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %13.14 = Force!<lazy>       !vL   %13.10, e13.12   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: file (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 4) ***********************
======================= ClosureVersion: file (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 4) =======================
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 3
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
file [0x560a566c8ce0]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 3
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] str$-
val+            %1.10 = Force!<lazy>       !vr   %1.1,    <str$->
dependent slot

Type#3 [unused] str$-
val+            %1.11 = Force!<value>            %1.0,    <str$->
dependent slot

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] str$-
val?            %1.12 = Force!<lazy>       !v    %1.4, e1.2   <str$->
dependent slot

Type#6 [unused] str$-
val?            %1.14 = Force!<lazy>       !v    %1.13, e1.2   <str$->
dependent slot

Type#7 [unused] lgl$-
val?            %1.16 = Force!<lazy>       !v    %1.15, e1.2   <lgl$->
dependent slot

*********************** Compilation session for: registerS3methods (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,!Obj1,!Obj2) ***********************
======================= ClosureVersion: environment (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
environment [0x560a55e84a10]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|cls) (polluted)
val+            %1.1  = Force!<lazy>             %1.0,    <(nil|cls)>
other unused reason

======================= ClosureVersion: get0 (!ExpMi,CorrOrd,!TMany,Argmatch miss: 3) =======================
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

----------------------
get0 [0x560a56361ae0]
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

Type#0 [unused] $#-
optimized away

Type#1 [used] str$+ (polluted)
val?            %1.3  = Force!<lazy>       !v    %1.1, e1.2   <str$+>
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a563ebd40[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#2 [unused] env+ (polluted)
val?            %2.3  = Force!<lazy>       !v    %2.2, e1.2   <env+>
other unused reason

Type#3 [unused] str$-
val?            %2.5  = Force!<lazy>       !v    %2.4, e1.2   <str$->
other unused reason

Type#4 [unused] lgl$-
val?            %2.7  = Force!<lazy>       !v    %2.6, e1.2   <lgl$->
other unused reason

Type#5 [unused] (nil|vec)+ (polluted)
val?            %2.9  = Force!<lazy>       !v    %2.8, e1.2   <(nil|vec)+>
other unused reason

======================= ClosureVersion: asNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl1,!Obj0,!Obj1) =======================
referenced: 33
referenced non-empty: 27
read non-empty: 20
used: 4
present non-empty: 10

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 23
optimized away non-empty: 13
dependent: 19
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 0

----------------------
asNamespace [0x560a5662fe70]
referenced: 16
referenced non-empty: 12
read non-empty: 12
used: 3
present non-empty: 5

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 4
dependent: 7
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|env)+ (polluted)
val+            %1.2  = Force!<lazy>             %1.1,    <(str|env)+>
other unused reason

Type#2 [unused] lgl$-
lgl$#-          %1.3  = CallSafeBuiltin    wed   is.character(%1.2)    <lgl$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] lgl$-
lgl$#-          %26.0 = CallSafeBuiltin    wed   is.symbol(%1.2)    <lgl$->
dependent slot

Type#6 [unused] str$+
optimized away

Type#7 [unused] env-
val?            %25.0 = PopContext         C     %23.5, %23.1   <env->
dependent slot

Type#8 [unused] env-
optimized away (dependency)

Type#9 [used] lgl$-
val?            %7.9  = PopContext         C     %7.8, %7.4   <lgl$->
void                    Assume             D     %7.10, %7.11 (Typecheck@0x560a566a7520[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [used] lgl$-
val?            %10.1 = Force!<lazy>       !v    %10.0, e1.4   <lgl$->
void                    Assume             D     %10.2, %10.3 (Typecheck@0x560a566a7520[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#11 [unused] env-
optimized away (dependency)

Type#12 [used] lgl$-
val?            %15.2 = PopContext         C     %15.1, %13.4   <lgl$->
void                    Assume             D     %15.3, %15.4 (Typecheck@0x560a566a7520[Type#12])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#13 [unused] env-
val?            %19.2 = Force!<wrapped>    !     %19.0, e1.4   <env->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val?            %7.7  = Force!<lazy>       !vrL  %7.5, e7.6   <env->
other unused reason

----------------------
Inlinee: getNamespace [0x560a572728f0]
referenced: 5
referenced non-empty: 3
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
val?            %23.4 = Force!<lazy>       !vr   %23.2,    <str$+>
other unused reason

Type#1 [unused] env-
val?            %23.5 = CallBuiltin        !v    getRegisteredNamespace(%23.4) e23.3   <env->
dependent slot

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

----------------------
Inlinee: isBaseNamespace [0x560a5643a450]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %13.16 = PopContext         C     %13.15, %13.9   <lgl$->
void                    Assume             D     %13.17, %13.18 (Typecheck@0x560a565938d0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %13.13 = Force!<lazy>       !vL   %13.11, e13.12   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %13.14 = Force!<lazy>       !vL   %13.10, e13.12   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

======================= ClosureVersion: registerS3methods (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,!Obj1,!Obj2) =======================
referenced: 410
referenced non-empty: 218
read non-empty: 204
used: 52
present non-empty: 54

Used
exact match: 29
widened: 23
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 166
optimized away non-empty: 112
dependent: 143
other reasons unused non-empty: 23

Polluted
polluted: 18
used polluted: 3

----------------------
registerS3methods [0x560a5695fb20]
referenced: 327
referenced non-empty: 156
read non-empty: 156
used: 38
present non-empty: 35

Used
exact match: 20
widened: 18
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 118
optimized away non-empty: 83
dependent: 117
other reasons unused non-empty: 1

Polluted
polluted: 3
used polluted: 1

Type#0 [used] str_
val?            %1.8  = Force!<lazy>       !v    %1.2, e1.3   <str_>
void                    Assume             D     %1.9, %1.10 (Typecheck@0x560a56747020[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str_, expected: str_, required: val?^ | miss

Type#1 [used] int$-
(int|real)$-    %8.0  = Phi                      %5.3:BB7, %193.3:BB193   <int$->
void                    Assume             D     %8.1, %8.2 (Typecheck@0x560a56747020[Type#1])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#2 [unused] int$-
optimized away (dependency)

Type#3 [unused] lgl$-
lgl$-           %10.4 = Eq                 vd    %10.1, 0L, elided   <lgl$->
dependent slot

Type#4 [unused] str_
val+            %13.3 = CallSafeBuiltin    wed   matrix(NA, 0, 2, false, nil, false, false)    <str_>
dependent slot

Type#5 [unused] str_
optimized away (dependency)

Type#6 [unused] str-
optimized away (dependency)

Type#7 [unused] str_
optimized away (dependency)

Type#8 [unused] str-
optimized away (dependency)

Type#9 [unused] str-
val+            %15.12 = CallSafeBuiltin    wed   paste(%15.11, ".", nil, false)    <str->
dependent slot

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [used] str_
val?            %17.4 = Force!<wrapped>    !v    %17.3, e1.3   <str_>
void                    Assume             D     %17.6, %17.7 (Typecheck@0x560a56747020[Type#12])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str_, expected: str_, required: val?+

Type#13 [used] str-
val?            %19.3 = Extract1_2D        wed   %19.2, missingArg, 3, elided   <str->
void                    Assume             D     %19.4, %19.5 (Typecheck@0x560a56747020[Type#13])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#14 [unused] lgl-
lgl-            %21.2 = CallSafeBuiltin    wed   is.na(%21.1)    <lgl->
dependent slot

Type#15 [used] str-
val?^ | miss    %23.0 = LdVar              eR    methname, e1.3
void                    Assume             D     %23.1, %21.4 (Typecheck@0x560a56747020[Type#15])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] lgl-
optimized away (dependency)

Type#18 [used] str-
val?            %23.7 = Extract1_1D        wed   %23.4, %21.2, elided   <str->
void                    Assume             D     %23.11, %23.12 (Typecheck@0x560a56747020[Type#18])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#19 [used] str_
val?            %23.9 = Force!<wrapped>    !v    %23.8, e1.3   <str_>
void                    Assume             D     %23.10, %23.12 (Typecheck@0x560a56747020[Type#19])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str_, expected: str_, required: val?+

Type#20 [used] lgl-
val?^ | miss    %25.0 = LdVar              eR    z, e1.3
void                    Assume             D     %25.1, %23.12 (Typecheck@0x560a56747020[Type#20])
exact match
checkFor: lgl-, static: val?^ | miss, feedback: lgl-, expected: lgl-, required: val?^ | miss

Type#21 [unused] str_
optimized away (dependency)

Type#22 [unused] int$-
optimized away (dependency)

Type#23 [unused] lgl$-
lgl$-           %29.2 = Eq                 d     %29.1, 3L, elided   <lgl$->
dependent slot

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] str_
optimized away (dependency)

Type#29 [unused] str-
optimized away (dependency)

Type#30 [unused] str_
optimized away (dependency)

Type#31 [unused] str-
optimized away (dependency)

Type#32 [unused] str+
val?            %30.11 = PopContext         C     %30.10, %30.7   <str+>
dependent slot

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [used] env-
val?            %32.4 = Force!<lazy>       !v    %32.3, e1.3   <env->
void                    Assume             D     %32.5, %32.6 (Typecheck@0x560a56747020[Type#34])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#35 [unused] str-
val+            %34.2 = CallSafeBuiltin    wed   names(%34.1)    <str->
dependent slot

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] str_
optimized away (dependency)

Type#42 [unused] str-
optimized away (dependency)

Type#43 [unused] str-
optimized away (dependency)

Type#44 [used] int-
val?            %36.8 = StaticCall         !v    match[0x560a665585d0](%36.6, %36.7, 0L) { 0 1 2n } e1.3   <int->
void                    Assume             D     %36.9, %36.10 (Typecheck@0x560a56747020[Type#44])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#45 [unused] lgl-
lgl-            %38.2 = Eq                 wed   %38.1, 0L, elided   <lgl->
dependent slot

Type#46 [used] lgl$-
val?            %38.4 = CallBuiltin        !v    any(%38.2) e1.3   <lgl$->
void                    Assume             D     %38.5, %38.6 (Typecheck@0x560a56747020[Type#46])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [used] str+
val?^ | miss    %41.3 = LdVar              eR    Info, e1.3
void                    Assume             D     %41.4, %38.6 (Typecheck@0x560a56747020[Type#62])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str+, expected: str+, required: val?^ | miss

Type#63 [used] str+ (polluted)
val?            %41.10 = Extract1_2D        wed   %41.7, missingArg, 5L, elided   <str+>
void                    Assume             D     %41.11, %41.12 (Typecheck@0x560a56747020[Type#63])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?+

Type#64 [unused] lgl+ (polluted)
lgl+            %43.2 = CallSafeBuiltin    wed   is.na(%43.1)    <lgl+>
other unused reason

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] str+
val?            %43.7 = NamedCall          !v    %43.4(%43.5, %43.6, missingArg, drop=false) e1.3   <str+>
dependent slot

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] str+
val?            %43.12 = NamedCall          !v    %43.9(%43.10, %43.11, missingArg, drop=false) e1.3   <str+>
dependent slot

Type#71 [unused] str+
optimized away (dependency)

Type#72 [unused] str+ (polluted)
optimized away (dependency)

Type#73 [unused] str-
optimized away (dependency)

Type#74 [unused] lgl-
val?            %47.3 = PopContext         C     %47.2, %45.5   <lgl->
dependent slot

Type#75 [used] lgl$-
val?            %49.3 = CallBuiltin        !v    .isMethodsDispatchOn() e1.3   <lgl$->
void                    Assume             D     %49.4, %49.5 (Typecheck@0x560a56747020[Type#75])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#76 [used] lgl-
val?^ | miss    %167.3 = LdVar              eR    localGeneric, e1.3
void                    Assume             D     %167.4, %49.5 (Typecheck@0x560a56747020[Type#76])
exact match
checkFor: lgl-, static: val?^ | miss, feedback: lgl-, expected: lgl-, required: val?^ | miss

Type#77 [unused] int-
optimized away (dependency)

Type#78 [unused] str+
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] int$-
optimized away (dependency)

Type#81 [unused] str$+
optimized away (dependency)

Type#82 [unused] env-
optimized away (dependency)

Type#83 [unused] cls-
val?            %170.5 = StaticCall         !v    get[0x560a67071040](%170.3, missingArg, %170.4) { 0 2n } e1.3   <cls->
dependent slot

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] cls-
val?            %170.10 = Call               !v    %170.7(%170.8, %170.9) e1.3   <cls->
dependent slot

Type#87 [unused] cls-
optimized away (dependency)

Type#88 [used] lgl$-
val?            %170.13 = Call               !v    %170.11(%170.12, "genericFunction") e1.3   <lgl$->
void                    Assume             D     %170.14, %170.15 (Typecheck@0x560a56747020[Type#88])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#89 [unused] $#-
optimized away (dependency)

Type#90 [unused] $#-
optimized away (dependency)

Type#91 [unused] $#-
optimized away (dependency)

Type#92 [unused] $#-
optimized away (dependency)

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] $#-
optimized away (dependency)

Type#99 [unused] $#-
optimized away (dependency)

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [unused] $#-
optimized away (dependency)

Type#102 [unused] $#-
optimized away (dependency)

Type#103 [unused] $#-
optimized away (dependency)

Type#104 [unused] str+
optimized away (dependency)

Type#105 [unused] $#-
optimized away (dependency)

Type#106 [unused] int$-
optimized away (dependency)

Type#107 [unused] str$+
optimized away (dependency)

Type#108 [unused] env-
optimized away (dependency)

Type#109 [unused] cls-
val?            %177.5 = StaticCall         !v    get[0x560a67071040](%177.3, missingArg, %177.4) { 0 2n } e1.3   <cls->
dependent slot

Type#110 [unused] $#-
optimized away (dependency)

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] cls-
val?            %177.10 = Call               !v    %177.7(%177.8, %177.9) e1.3   <cls->
dependent slot

Type#113 [unused] cls-
optimized away (dependency)

Type#114 [used] lgl$-
val?            %177.13 = Call               !v    %177.11(%177.12, "genericFunction") e1.3   <lgl$->
void                    Assume             D     %177.14, %177.15 (Typecheck@0x560a56747020[Type#114])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

Type#117 [unused] $#-
optimized away (dependency)

Type#118 [unused] $#-
optimized away (dependency)

Type#119 [unused] $#-
optimized away (dependency)

Type#120 [unused] $#-
optimized away (dependency)

Type#121 [unused] $#-
optimized away (dependency)

Type#122 [unused] $#-
optimized away (dependency)

Type#123 [unused] $#-
optimized away (dependency)

Type#124 [unused] $#-
optimized away (dependency)

Type#125 [unused] $#-
optimized away (dependency)

Type#126 [unused] $#-
optimized away (dependency)

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] $#-
optimized away (dependency)

Type#129 [unused] $#-
optimized away (dependency)

Type#130 [unused] $#-
optimized away (dependency)

Type#131 [used] lgl-
val?^ | miss    %55.3 = LdVar              eR    localGeneric, e1.3
void                    Assume             D     %55.4, %53.0 (Typecheck@0x560a56747020[Type#131])
exact match
checkFor: lgl-, static: val?^ | miss, feedback: lgl-, expected: lgl-, required: val?^ | miss

Type#132 [used] lgl$-
val?            %55.7 = CallBuiltin        !v    any(%55.6) e1.3   <lgl$->
void                    Assume             D     %55.8, %55.9 (Typecheck@0x560a56747020[Type#132])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#133 [unused] $#-
optimized away (dependency)

Type#134 [unused] $#-
optimized away (dependency)

Type#135 [unused] str+
val?            %160.3 = NamedCall          !v    %160.0(%160.1, %160.2, missingArg, drop=false) e1.3   <str+>
dependent slot

Type#136 [used] env-
val?            %160.6 = Force!<wrapped>    !v    %160.5, e1.3   <env->
void                    Assume             D     %160.8, %160.9 (Typecheck@0x560a56747020[Type#136])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#137 [unused] env-
val?            %162.3 = Extract2_1D        wed   %162.2, ".__S3MethodsTable__.", elided   <env->
dependent slot

Type#138 [unused] env-
optimized away (dependency)

Type#139 [used] str+
val?^ | miss    %164.1 = LdVar              eR    lin, e1.3
void                    Assume             D     %164.2, %162.5 (Typecheck@0x560a56747020[Type#139])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str+, expected: str+, required: val?^ | miss

Type#140 [unused] str-
val?            %164.8 = Extract1_2D        wed   %164.5, missingArg, 4, elided   <str->
dependent slot

Type#141 [unused] env-
val?            %164.10 = Force!<wrapped>    !v    %164.9, e1.3   <env->
dependent slot

Type#142 [used] str+
val?^ | miss    %166.0 = LdVar              eR    lin, e1.3
void                    Assume             D     %166.1, %164.11 (Typecheck@0x560a56747020[Type#142])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str+, expected: str+, required: val?^ | miss

Type#143 [unused] str-
val?            %166.7 = Extract1_2D        wed   %166.4, missingArg, 3, elided   <str->
dependent slot

Type#144 [unused] $#-
optimized away (dependency)

Type#145 [unused] $#-
optimized away (dependency)

Type#146 [used] str+
val?            %59.3 = NamedCall          !v    %59.0(%59.1, %59.2, missingArg, drop=false) e1.3   <str+>
void                    Assume             D     %59.5, %59.6 (Typecheck@0x560a56747020[Type#146])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?+

Type#147 [unused] $#-
optimized away (dependency)

Type#148 [unused] $#-
optimized away (dependency)

Type#149 [unused] str+
optimized away (dependency)

Type#150 [unused] int$-
optimized away (dependency)

Type#151 [unused] int-
val+            %63.2 = CallSafeBuiltin    wed   seq_len(%63.1)    <int->
dependent slot

Type#152 [unused] str+
optimized away (dependency)

Type#153 [unused] $#-
optimized away (dependency)

Type#154 [unused] int$-
optimized away (dependency)

Type#155 [unused] str$+
optimized away (dependency)

Type#156 [unused] $#-
optimized away (dependency)

Type#157 [unused] $#-
optimized away (dependency)

Type#158 [unused] $#-
optimized away (dependency)

Type#159 [unused] $#-
optimized away (dependency)

Type#160 [unused] str+
optimized away (dependency)

Type#161 [unused] $#-
optimized away (dependency)

Type#162 [unused] int$-
optimized away (dependency)

Type#163 [unused] str$+
optimized away (dependency)

Type#164 [unused] str+
optimized away (dependency)

Type#165 [unused] $#-
optimized away (dependency)

Type#166 [unused] int$-
optimized away (dependency)

Type#167 [unused] str$+
optimized away (dependency)

Type#168 [unused] env-
optimized away (dependency)

Type#169 [unused] str+
optimized away (dependency)

Type#170 [unused] $#-
optimized away (dependency)

Type#171 [unused] int$-
optimized away (dependency)

Type#172 [unused] str$+
optimized away (dependency)

Type#173 [unused] $#-
optimized away (dependency)

Type#174 [unused] $#-
optimized away (dependency)

Type#175 [unused] $#-
optimized away (dependency)

Type#176 [unused] $#-
optimized away (dependency)

Type#177 [unused] str+
optimized away (dependency)

Type#178 [unused] $#-
optimized away (dependency)

Type#179 [unused] int$-
optimized away (dependency)

Type#180 [unused] str$+
optimized away (dependency)

Type#181 [unused] str+
optimized away (dependency)

Type#182 [unused] $#-
optimized away (dependency)

Type#183 [unused] int$-
optimized away (dependency)

Type#184 [unused] str$+
optimized away (dependency)

Type#185 [unused] env-
optimized away (dependency)

Type#186 [used] str$-
val?            %72.1 = Force!<lazy>       !v    %72.0, e1.3   <str$->
void                    Assume             D     %72.2, %72.3 (Typecheck@0x560a56747020[Type#186])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#187 [used] lgl$-
lgl-            %74.2 = Neq                wed   %74.1, "MASS", elided   <lgl$->
void                    Assume             D     %74.3, %74.4 (Typecheck@0x560a56747020[Type#187])
exact match
checkFor: lgl$-, static: lgl-, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#188 [unused] str_
optimized away (dependency)

Type#189 [used] int$-
val?            %81.6 = PopContext         C     %81.5, %77.4   <int$->
void                    Assume             D     %81.7, %81.8 (Typecheck@0x560a56747020[Type#189])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#190 [unused] $#-
optimized away (dependency)

Type#191 [unused] $#-
optimized away (dependency)

Type#192 [unused] $#-
optimized away (dependency)

Type#193 [unused] $#-
optimized away (dependency)

Type#194 [unused] $#-
optimized away (dependency)

Type#195 [unused] $#-
optimized away (dependency)

Type#196 [unused] $#-
optimized away (dependency)

Type#197 [unused] $#-
optimized away (dependency)

Type#198 [unused] $#-
optimized away (dependency)

Type#199 [unused] $#-
optimized away (dependency)

Type#200 [unused] $#-
optimized away (dependency)

Type#201 [unused] $#-
optimized away (dependency)

Type#202 [unused] $#-
optimized away (dependency)

Type#203 [unused] $#-
optimized away (dependency)

Type#204 [unused] $#-
optimized away (dependency)

Type#205 [unused] $#-
optimized away (dependency)

Type#206 [unused] $#-
optimized away (dependency)

Type#207 [unused] $#-
optimized away (dependency)

Type#208 [unused] $#-
optimized away (dependency)

Type#209 [unused] $#-
optimized away (dependency)

Type#210 [unused] $#-
optimized away (dependency)

Type#211 [unused] $#-
optimized away (dependency)

Type#212 [unused] $#-
optimized away (dependency)

Type#213 [unused] $#-
optimized away (dependency)

Type#214 [unused] $#-
optimized away (dependency)

Type#215 [unused] $#-
optimized away (dependency)

Type#216 [unused] $#-
optimized away (dependency)

Type#217 [unused] $#-
optimized away (dependency)

Type#218 [unused] $#-
optimized away (dependency)

Type#219 [unused] $#-
optimized away (dependency)

Type#220 [unused] $#-
optimized away (dependency)

Type#221 [unused] $#-
optimized away (dependency)

Type#222 [unused] $#-
optimized away (dependency)

Type#223 [unused] $#-
optimized away (dependency)

Type#224 [unused] $#-
optimized away (dependency)

Type#225 [unused] $#-
optimized away (dependency)

Type#226 [unused] $#-
optimized away (dependency)

Type#227 [unused] $#-
optimized away (dependency)

Type#228 [unused] $#-
optimized away (dependency)

Type#229 [unused] $#-
optimized away (dependency)

Type#230 [unused] $#-
optimized away (dependency)

Type#231 [unused] $#-
optimized away (dependency)

Type#232 [unused] $#-
optimized away (dependency)

Type#233 [unused] $#-
optimized away (dependency)

Type#234 [unused] $#-
optimized away (dependency)

Type#235 [unused] $#-
optimized away (dependency)

Type#236 [unused] $#-
optimized away (dependency)

Type#237 [unused] $#-
optimized away (dependency)

Type#238 [unused] $#-
optimized away (dependency)

Type#239 [unused] $#-
optimized away (dependency)

Type#240 [unused] $#-
optimized away (dependency)

Type#241 [unused] $#-
optimized away (dependency)

Type#242 [unused] $#-
optimized away (dependency)

Type#243 [unused] $#-
optimized away (dependency)

Type#244 [unused] $#-
optimized away (dependency)

Type#245 [unused] $#-
optimized away (dependency)

Type#246 [unused] $#-
optimized away (dependency)

Type#247 [unused] $#-
optimized away (dependency)

Type#248 [unused] $#-
optimized away (dependency)

Type#249 [unused] $#-
optimized away (dependency)

Type#250 [unused] $#-
optimized away (dependency)

Type#251 [unused] $#-
optimized away (dependency)

Type#252 [unused] $#-
optimized away (dependency)

Type#253 [unused] $#-
optimized away (dependency)

Type#254 [unused] $#-
optimized away (dependency)

Type#255 [unused] $#-
optimized away (dependency)

Type#256 [unused] str+
optimized away (dependency)

Type#257 [used] int$-
val?            %91.6 = PopContext         C     %91.5, %87.4   <int$->
void                    Assume             D     %91.7, %91.8 (Typecheck@0x560a56747020[Type#257])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#258 [unused] $#-
optimized away (dependency)

Type#259 [unused] $#-
optimized away (dependency)

Type#260 [unused] str+
optimized away (dependency)

Type#261 [used] int$-
val?            %123.6 = PopContext         C     %123.5, %119.7   <int$->
void                    Assume             D     %123.7, %123.8 (Typecheck@0x560a56747020[Type#261])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#262 [unused] int-
val+            %125.2 = CallSafeBuiltin    wed   seq_len(%125.1)    <int->
dependent slot

Type#263 [used] str+
val?^ | miss    %129.0 = LdVar              eR    delayed, e1.3
void                    Assume             D     %129.1, %127.5 (Typecheck@0x560a56747020[Type#263])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str+, expected: str+, required: val?^ | miss

Type#264 [unused] $#-
optimized away (dependency)

Type#265 [used] int$-
val             %129.7 = ChkMissing         e     %127.3
void                    Assume             D     %129.8, %127.5 (Typecheck@0x560a56747020[Type#265])
exact match
checkFor: int$-, static: val, feedback: int$-, expected: int$-, required: val?^ | miss

Type#266 [unused] str$+
val?            %129.11 = Extract1_2D        wed   %129.4, %129.10, 1L, elided   <str$+>
dependent slot

Type#267 [unused] str+
optimized away (dependency)

Type#268 [unused] $#-
optimized away (dependency)

Type#269 [unused] int$-
optimized away (dependency)

Type#270 [unused] str$+
val?            %129.13 = Extract1_2D        wed   %129.4, %129.10, 2L, elided   <str$+>
dependent slot

Type#271 [unused] str+
optimized away (dependency)

Type#272 [unused] $#-
optimized away (dependency)

Type#273 [unused] int$-
optimized away (dependency)

Type#274 [unused] str$+
optimized away (dependency)

Type#275 [unused] env-
optimized away (dependency)

Type#276 [unused] cls-
val?            %131.5 = StaticCall         !v    get[0x560a67071040](%131.3, missingArg, %131.4) { 0 2n } e1.3   <cls->
dependent slot

Type#277 [used] str+
val?^ | miss    %133.0 = LdVar              eR    delayed, e1.3
void                    Assume             D     %133.1, %131.7 (Typecheck@0x560a56747020[Type#277])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str+, expected: str+, required: val?^ | miss

Type#278 [unused] $#-
optimized away (dependency)

Type#279 [used] int$-
val?^ | miss    %133.7 = LdVar              eR    i, e1.3
void                    Assume             D     %133.8, %131.7 (Typecheck@0x560a56747020[Type#279])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#280 [unused] str$+
val?            %133.11 = Extract1_2D        wed   %133.4, %133.10, 5L, elided   <str$+>
dependent slot

Type#281 [unused] str$+
optimized away (dependency)

Type#282 [unused] str$+
optimized away (dependency)

Type#283 [unused] str$+
optimized away (dependency)

Type#284 [unused] cls-
optimized away (dependency)

Type#285 [used] str+
val?^ | miss    %139.0 = LdVar              eR    delayed, e1.3
void                    Assume             D     %139.1, %137.2 (Typecheck@0x560a56747020[Type#285])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str+, expected: str+, required: val?^ | miss

Type#286 [unused] $#-
optimized away (dependency)

Type#287 [used] int$-
val             %139.7 = ChkMissing         e     %137.0
void                    Assume             D     %139.8, %137.2 (Typecheck@0x560a56747020[Type#287])
exact match
checkFor: int$-, static: val, feedback: int$-, expected: int$-, required: val?^ | miss

Type#288 [unused] str$+
val?            %139.11 = Extract1_2D        wed   %139.4, %139.10, 1L, elided   <str$+>
dependent slot

Type#289 [unused] str+
optimized away (dependency)

Type#290 [unused] $#-
optimized away (dependency)

Type#291 [used] int$-
val             %141.0 = ChkMissing         e     %137.0
void                    Assume             D     %141.1, %139.13 (Typecheck@0x560a56747020[Type#291])
exact match
checkFor: int$-, static: val, feedback: int$-, expected: int$-, required: val?^ | miss

Type#292 [unused] str$+
val?            %141.4 = Extract1_2D        wed   %139.4, %141.3, 2L, elided   <str$+>
dependent slot

Type#293 [unused] str+
optimized away (dependency)

Type#294 [unused] $#-
optimized away (dependency)

Type#295 [unused] int$-
optimized away (dependency)

Type#296 [unused] str$+
optimized away (dependency)

Type#297 [unused] env-
optimized away (dependency)

Type#298 [unused] cls-
val?            %143.5 = StaticCall         !v    get[0x560a67071040](%143.3, missingArg, %143.4) { 0 2n } e1.3   <cls->
dependent slot

Type#299 [used] str+
val?^ | miss    %145.0 = LdVar              eR    delayed, e1.3
void                    Assume             D     %145.1, %143.7 (Typecheck@0x560a56747020[Type#299])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str+, expected: str+, required: val?^ | miss

Type#300 [unused] $#-
optimized away (dependency)

Type#301 [used] int$-
val?^ | miss    %145.7 = LdVar              eR    i, e1.3
void                    Assume             D     %145.8, %143.7 (Typecheck@0x560a56747020[Type#301])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#302 [unused] str$+
val?            %145.11 = Extract1_2D        wed   %145.4, %145.10, 5L, elided   <str$+>
dependent slot

Type#303 [unused] str$+
optimized away (dependency)

Type#304 [unused] str$+
optimized away (dependency)

Type#305 [unused] str$+
optimized away (dependency)

Type#306 [unused] cls-
optimized away (dependency)

Type#307 [unused] env-
optimized away (dependency)

Type#308 [unused] str_
val?            %99.6 = PopContext         C     %99.5, %97.4   <str_>
dependent slot

Type#309 [unused] str_
optimized away (dependency)

Type#310 [unused] int$-
optimized away (dependency)

Type#311 [unused] str_
val?            %103.4 = Force!<value>      !v    %103.3, e1.3   <str_>
dependent slot

Type#312 [unused] int$-
optimized away (dependency)

Type#313 [used] int$-
val?^ | miss    %109.0 = LdVar              eR    p1, e1.3
void                    Assume             D     %109.1, %107.3 (Typecheck@0x560a56747020[Type#313])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#314 [unused] int$-
optimized away (dependency)

Type#315 [unused] lgl$-
lgl$-           %109.4 = Neq                d     %109.3, %107.1, elided   <lgl$->
dependent slot

Type#316 [unused] $#-
optimized away (dependency)

Type#317 [unused] $#-
optimized away (dependency)

Type#318 [unused] $#-
optimized away (dependency)

Type#319 [unused] $#-
optimized away (dependency)

Type#320 [unused] $#-
optimized away (dependency)

Type#321 [unused] $#-
optimized away (dependency)

Type#322 [unused] env-
optimized away (dependency)

Type#323 [unused] str_
optimized away (dependency)

Type#324 [unused] str_
optimized away (dependency)

Type#325 [unused] str_
optimized away (dependency)

Type#326 [unused] str_
val?            %116.8 = PopContext         C     %116.2, %110.5   <str_>
dependent slot

----------------------
Inlinee: isNamespaceLoaded [0x560a5907d3f0]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val?            %149.7 = Force!<lazy>       !v    %149.5, e149.6   <str$->
other unused reason

----------------------
Inlinee: getNamespaceInfo [0x560a566d4080]
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 3
dependent: 4
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env-
val?            %97.7 = Force!<lazy>       !vL   %97.5, e97.6   <env->
dependent slot

Type#1 [unused] env-
val?            %97.9 = StaticCall         !v    asNamespace[0x560a66d66df0](%97.8, false) { 0 1n } e97.6   <env->
dependent slot

Type#2 [unused] str$-
optimized away

Type#3 [unused] env-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] (str|env)_ (polluted)
val?            %99.5 = StaticCall         !v    get[0x560a67071040](%99.3, missingArg, %99.4) { 0 2n } e97.6   <(str|env)_>
other unused reason

----------------------
Inlinee: setNamespaceInfo [0x560a5678ac70]
referenced: 7
referenced non-empty: 7
read non-empty: 6
used: 4
present non-empty: 2

Used
exact match: 1
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] env-
val?            %110.9 = Force!<lazy>       !vL   %110.7, e110.8   <env->
dependent slot

Type#1 [used] env-
val?            %110.11 = StaticCall         !v    asNamespace[0x560a66d66df0](%110.10, false) { 0 1n } e110.8   <env->
void                    Assume             D     %110.14, %110.15 (Typecheck@0x560a56367f30[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] env-
val?            %112.4 = Extract2_1D        wed   %112.3, ".__NAMESPACE__.", elided   <env->
dependent slot

Type#4 [used] val?+ (polluted)
val?            %112.7 = Force!<lazy>       !v    %112.6, e110.8   <val?+>
void                    Assume             D     %116.0, %114.8 (Typecheck@0x560a56367f30[Type#4])
exact match
checkFor: val?+, static: val?, feedback: val?+, expected: val?+, required: val?+

Type#5 [used] env-
val?^ | miss    %114.0 = LdVar              eR    info !upd, e110.8
void                    Assume             D     %114.1, %112.8 (Typecheck@0x560a56367f30[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#6 [used] str$-
val?            %114.6 = Force!<value>      !v    %114.5, e110.8   <str$->
void                    Assume             D     %114.7, %114.8 (Typecheck@0x560a56367f30[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

----------------------
Inlinee: nrow [0x560a569e0e60]
referenced: 4
referenced non-empty: 3
read non-empty: 3
used: 2
present non-empty: 1

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (str|vec) (polluted)
val?            %119.10 = Force!<lazy>       !vL   %119.8, e119.9   <(str|vec)>
other unused reason

Type#2 [used] int-
val?            %121.2 = CallBuiltin        !vL   dim(%119.10) e119.9   <int->
void                    Assume             D     %121.4, %121.5 (Typecheck@0x560a56a77a90[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [used] int$-
val?            %61.9 = Extract1_1D        wed   %61.8, 1L, elided   <int$->
void                    Assume             D     %61.10, %61.11 (Typecheck@0x560a56a77a90[Type#3])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

----------------------
Inlinee: which [0x560a56086380]
referenced: 12
referenced non-empty: 3
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] lgl+ (polluted)
optimized away

Type#1 [unused] lgl$-
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] int+ (polluted)
val+            %167.7 = CallSafeBuiltin    wed   which(%167.6)    <int+>
other unused reason

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: register_S3_method_delayed [0x560a569897b0]
referenced: 14
referenced non-empty: 14
read non-empty: 14
used: 1
present non-empty: 5

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 13
optimized away non-empty: 8
dependent: 10
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
val?            %147.13 = Force!<lazy>       !vr   %147.11, e147.12   <str$+>
dependent slot

Type#1 [unused] str$+
val?            %147.16 = Force!<lazy>       !v    %147.15, e147.12   <str$+>
dependent slot

Type#2 [unused] str$+
val?            %147.19 = Force!<lazy>       !v    %147.18, e147.12   <str$+>
dependent slot

Type#3 [unused] cls-
val?            %147.22 = Force!<lazy>       !v    %147.21, e147.12   <cls->
dependent slot

Type#4 [unused] str$+
optimized away (dependency)

Type#5 [used] lgl$-
val?            %149.9 = PopContext         C     %149.8, %149.4   <lgl$->
void                    Assume             D     %149.10, %149.11 (Typecheck@0x560a569896a0[Type#5])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#6 [unused] str$+
optimized away (dependency)

Type#7 [unused] str$+
optimized away (dependency)

Type#8 [unused] cls-
optimized away (dependency)

Type#9 [unused] str$+
optimized away (dependency)

Type#10 [unused] env-
optimized away

Type#11 [unused] str$+
optimized away (dependency)

Type#12 [unused] str$-
optimized away

Type#13 [unused] nil-
val?            %155.6 = StaticCall         !v    setHook[0x560a669a5f50](%155.3, %155.5) e147.12   <nil->
other unused reason

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away

Type#1 [unused] (nil|str)- (polluted)
optimized away

Type#2 [used] int- (polluted)
val?            %45.11 = StaticCall         !v    match[0x560a665585d0](%45.9, %45.10, 0L) { 0 1 2n } e45.8   <int->
void                    Assume             D     %45.12, %45.13 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %47.2 = Gt                 wed   %47.1, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: cbind [0x560a569541c0]
referenced: 3
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] (int|str)+ (polluted)
val?            %30.10 = Call               !v    <spec .Internal>(%30.9) e30.8   <(int|str)+>
other unused reason

----------------------
Inlinee: matrix [0x560a56720ee0]
referenced: 13
referenced non-empty: 9
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 9
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] str$-
optimized away (dependency)

Type#9 [unused] (int|real)$- (polluted)
optimized away (dependency)

Type#10 [unused] (int|real)$- (polluted)
optimized away (dependency)

Type#11 [unused] lgl$-
optimized away (dependency)

Type#12 [unused] nil-
optimized away

----------------------
Inlinee: ncol [0x560a56753160]
referenced: 4
referenced non-empty: 3
read non-empty: 3
used: 2
present non-empty: 1

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [used] str_
val?            %103.4 = Force!<value>      !v    %103.3, e1.3   <str_>
void                    Assume             D     %103.5, %103.6 (Typecheck@0x560a5698ab30[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str_, expected: str_, required: val?+

Type#2 [unused] int-
val+            %105.2 = CallSafeBuiltin    wed   dim(%105.1)    <int->
other unused reason

Type#3 [used] int$-
val?            %105.3 = Extract1_1D        wed   %105.2, 2L, elided   <int$->
void                    Assume             D     %105.4, %105.5 (Typecheck@0x560a5698ab30[Type#3])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

----------------------
Inlinee: paste [0x560a55fd8390]
referenced: 4
referenced non-empty: 4
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec- (polluted)
val+            %15.11 = CallSafeBuiltin    wed   list(%15.9, %15.10)    <vec->
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] (nil|str)- (polluted)
optimized away

Type#3 [unused] lgl$-
optimized away

----------------------
Inlinee: NROW [0x560a5698aa10]
referenced: 11
referenced non-empty: 7
read non-empty: 7
used: 4
present non-empty: 2

Used
exact match: 3
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 1
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str_
optimized away

Type#4 [unused] (nil|int)- (polluted)
val+            %2.2  = CallSafeBuiltin    wed   dim(%2.1)    <(nil|int)->
other unused reason

Type#5 [used] int$-
(int|real)$-    %2.3  = CallSafeBuiltin    wed   length(%2.2)    <int$->
void                    Assume             D     %2.4, %2.5 (Typecheck@0x560a56cb3cc0[Type#5])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [used] str$-
val?+           %2.1  = CastType           d     dn %1.8   <str_>
void                    Assume             D     %5.0, %2.5 (Typecheck@0x560a56cb3cc0[Type#7])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?+, feedback: str$-, expected: str$-, required: val?+

Type#8 [used] int$-
(int|real)$-    %5.3  = CallSafeBuiltin    wed   length(%5.2)    <int$->
void                    Assume             D     %5.4, %5.5 (Typecheck@0x560a56cb3cc0[Type#8])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#9 [used] int-
val+            %2.2  = CallSafeBuiltin    wed   dim(%2.1)    <(nil|int)->
void                    Assume             D     %193.0, %2.5 (Typecheck@0x560a56cb3cc0[Type#9])
exact match
checkFor: int-, static: val+, feedback: int-, expected: int-, required: val?+

Type#10 [unused] int$-
int$-           %193.3 = Extract1_1D        wed   %193.2, 1L, elided   <int$->
dependent slot

======================= ClosureVersion: setHook (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1 miss: 1) =======================
referenced: 38
referenced non-empty: 19
read non-empty: 19
used: 4
present non-empty: 4

Used
exact match: 1
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 11
dependent: 11
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 1

----------------------
setHook [0x560a5973c230]
referenced: 34
referenced non-empty: 15
read non-empty: 15
used: 4
present non-empty: 3

Used
exact match: 1
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 11
optimized away non-empty: 8
dependent: 9
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 1

Type#0 [unused] str-
optimized away (dependency)

Type#1 [unused] str-
optimized away (dependency)

Type#2 [unused] str$-
val?            %1.7  = StaticCall         !v    match.arg[0x560a66631b60](%1.6, <str [1] "append" "prepend" "replace">) e1.2   <str$->
dependent slot

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] vec- (polluted)
val?            %2.11 = PopContext         C     %2.10, %2.4   <vec->
dependent slot

Type#5 [used] str$-
val?            %2.14 = Force!<value>      !v    %2.13, e1.2   <str$->
void                    Assume             D     %2.35, %2.36 (Typecheck@0x560a5961ae00[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] vec- (polluted)
val?^ | miss    %8.4  = LdVar              eR    old, e1.2
void                    Assume             D     %8.5, %6.3 (Typecheck@0x560a5961ae00[Type#8])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#9 [used] cls-
val?            %8.10 = Force!<lazy>       !v    %8.9, e1.2   <cls->
void                    Assume             D     %8.11, %8.12 (Typecheck@0x560a5961ae00[Type#9])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: cls-, expected: cls-, required: val?+

Type#10 [unused] vec-
val+            %10.2 = CallSafeBuiltin    wed   c(%8.8, %10.1)    <vec->
dependent slot

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] vec-
optimized away (dependency)

Type#24 [used] int$-
(int|real)$-    %12.3 = CallSafeBuiltin    wed   length(%10.2)    <int$->
void                    Assume             D     %12.4, %12.5 (Typecheck@0x560a5961ae00[Type#24])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] str$-
optimized away (dependency)

Type#31 [unused] vec-
optimized away (dependency)

Type#32 [unused] env-
optimized away

Type#33 [unused] nil-
optimized away

----------------------
Inlinee: getHook [0x560a57734970]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] env-
optimized away

Type#2 [unused] vec-
optimized away (dependency)

Type#3 [unused] vec-
val?            %2.10 = StaticCall         !v    get0[0x560a65512790](%2.7, %2.8, missingArg, false, %2.9) { 0 1n 3n 4n } e2.6   <vec->
dependent slot

======================= ClosureVersion: assign (CorrOrd,!TMany,Argmatch;Eager2,NonRefl2 miss: 2) =======================
referenced: 6
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

----------------------
assign [0x560a596bb7f0]
referenced: 6
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] str$-
val?            %5.3  = Force!<lazy>       !v    %5.2, e1.6   <str$->
void                    Assume             D     %5.4, %5.5 (Typecheck@0x560a596c4aa0[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

Type#3 [unused] (vec|cls) (polluted)
val?            %7.3  = Force!<lazy>       !v    %7.2, e1.6   <(vec|cls)>
other unused reason

Type#4 [unused] env-
val?            %7.5  = Force!<lazy>       !v    %7.4, e1.6   <env->
other unused reason

Type#5 [unused] lgl$-
val?            %7.7  = Force!<lazy>       !v    %7.6, e1.6   <lgl$->
other unused reason

======================= ClosureVersion: registerS3method (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 81
referenced non-empty: 51
read non-empty: 51
used: 9
present non-empty: 15

Used
exact match: 6
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 42
optimized away non-empty: 27
dependent: 36
other reasons unused non-empty: 6

Polluted
polluted: 11
used polluted: 1

----------------------
registerS3method [0x560a5aa747f0]
referenced: 67
referenced non-empty: 37
read non-empty: 37
used: 8
present non-empty: 11

Used
exact match: 5
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 29
optimized away non-empty: 18
dependent: 28
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str-
str-            %1.8  = CallSafeBuiltin    wed   c("Math", "Ops", "Summary", "Complex")    <str->
dependent slot

Type#2 [unused] str$+ (polluted)
optimized away (dependency)

Type#3 [unused] str-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %2.3  = PopContext         C     %2.2, %1.12   <lgl$->
void                    Assume             D     %2.4, %2.5 (Typecheck@0x560a5aa753a0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] str$+ (polluted)
optimized away (dependency)

Type#6 [unused] env-
optimized away (dependency)

Type#7 [unused] cls-
val?            %5.5  = StaticCall         !v    get[0x560a67071040](%5.3, missingArg, %5.4) { 0 2n } e1.4   <cls->
dependent slot

Type#8 [used] lgl$-
val?            %7.3  = CallBuiltin        !v    .isMethodsDispatchOn() e1.4   <lgl$->
void                    Assume             D     %7.4, %7.5 (Typecheck@0x560a5aa753a0[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] cls-
val?            %10.3 = Call               !v    %10.0(%10.1, %10.2) e1.4   <cls->
dependent slot

Type#12 [unused] cls-
optimized away (dependency)

Type#13 [used] lgl$-
val?            %10.6 = Call               !v    %10.4(%10.5, "genericFunction") e1.4   <lgl$->
void                    Assume             D     %10.7, %10.8 (Typecheck@0x560a5aa753a0[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [used] cls-
val?^ | miss    %16.3 = LdVar              eR    genfun, e1.4
void                    Assume             D     %16.4, %13.1 (Typecheck@0x560a5aa753a0[Type#21])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: cls-, expected: cls-, required: val?^ | miss

Type#22 [unused] str$-
str$-           %16.8 = CallSafeBuiltin    wed   typeof(%16.7)    <str$->
dependent slot

Type#23 [unused] lgl$-
lgl$-           %18.0 = Eq                 d     %16.8, "closure", elided   <lgl$->
dependent slot

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] cls-
optimized away (dependency)

Type#26 [unused] env-
val?            %52.7 = StaticCall         !v    environment[0x560a67078d40](%52.6) e1.4   <env->
dependent slot

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [used] env-
val?            %21.0 = Phi                      %20.0:BB20, %55.1:BB55   <env->
void                    Assume             D     %21.3, %21.4 (Typecheck@0x560a5aa753a0[Type#28])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#29 [unused] env-
val?            %23.4 = Extract2_1D        wed   %23.3, ".__S3MethodsTable__.", elided   <env->
dependent slot

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] cls-
val?            %26.4 = Force!<lazy>       !v    %26.3, e1.4   <cls->
dependent slot

Type#36 [unused] lgl$-
lgl$#-          %26.5 = CallSafeBuiltin    wed   is.character(%26.4)    <lgl$->
dependent slot

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [used] cls-
val?            %29.4 = Force!<wrapped>    !v    %29.3, e1.4   <cls->
void                    Assume             D     %29.5, %29.6 (Typecheck@0x560a5aa753a0[Type#38])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: cls-, expected: cls-, required: val?+

Type#39 [unused] lgl$-
lgl$#-          %31.2 = CallSafeBuiltin    wed   is.function(%31.1)    <lgl$->
dependent slot

Type#40 [unused] str$+ (polluted)
optimized away (dependency)

Type#41 [unused] str$+ (polluted)
optimized away (dependency)

Type#42 [unused] str$-
optimized away (dependency)

Type#43 [unused] cls-
optimized away (dependency)

Type#44 [unused] env-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] env-
optimized away (dependency)

Type#58 [used] lgl$-
val?            %37.9 = PopContext         C     %37.8, %37.4   <lgl$->
void                    Assume             D     %37.10, %37.11 (Typecheck@0x560a5aa753a0[Type#58])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#59 [unused] env-
optimized away (dependency)

Type#60 [unused] env-
optimized away (dependency)

Type#61 [used] lgl$-
val?            %40.12 = PopContext         C     %40.11, %40.5   <lgl$->
void                    Assume             D     %40.13, %40.14 (Typecheck@0x560a5aa753a0[Type#61])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#62 [unused] env-
optimized away (dependency)

Type#63 [unused] str$+
optimized away (dependency)

Type#64 [unused] str$+
optimized away (dependency)

Type#65 [unused] cls-
optimized away (dependency)

Type#66 [unused] vec+
val?            %48.7 = StaticCall         !     addNamespaceS3method[0x560a66992430](%48.3, %48.4, %48.5, %48.6) from %1.5 e1.4   <vec+>
other unused reason

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %40.9 = Force!<lazy>       !vL   %40.7, e40.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %40.10 = Force!<lazy>       !vL   %40.6, e40.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val?            %37.7 = Force!<lazy>       !vL   %37.5, e37.6   <env->
other unused reason

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val?- (polluted)
optimized away

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away

Type#1 [unused] (nil|str)- (polluted)
optimized away

Type#2 [used] int- (polluted)
val?            %1.18 = StaticCall         !v    match[0x560a665585d0](%1.16, %1.17, 0L) { 0 1 2n } e1.15   <int->
void                    Assume             D     %1.19, %1.20 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %2.2  = Gt                 wed   %2.1, 0L, elided   <lgl->
other unused reason

*********************** Compilation session for: addNamespaceDynLibs (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: addNamespaceDynLibs (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 19
referenced non-empty: 18
read non-empty: 17
used: 6
present non-empty: 5

Used
exact match: 1
widened: 5
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 7
dependent: 10
other reasons unused non-empty: 2

Polluted
polluted: 5
used polluted: 1

----------------------
addNamespaceDynLibs [0x560a562e77d0]
referenced: 7
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 5
dependent: 7
other reasons unused non-empty: 0

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] env-
val+            %2.4  = Force!<lazy>       !vr   %1.1,    <env->
dependent slot

Type#1 [unused] nil-
optimized away (dependency)

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] nil-
optimized away (dependency)

Type#4 [unused] str+ (polluted)
optimized away (dependency)

Type#5 [unused] str+ (polluted)
optimized away (dependency)

Type#6 [unused] str+ (polluted)
val?            %14.8 = PopContext         C     %14.2, %8.5   <str+>
dependent slot

----------------------
Inlinee: setNamespaceInfo [0x560a5678ac70]
referenced: 7
referenced non-empty: 7
read non-empty: 6
used: 4
present non-empty: 2

Used
exact match: 1
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] env-
val?            %8.9  = Force!<lazy>       !vr   %8.7,    <env->
dependent slot

Type#1 [used] env-
val?            %8.11 = StaticCall         !v    asNamespace[0x560a66831b30](%8.10, false) { 0 1n } e8.8   <env->
void                    Assume             D     %8.14, %8.15 (Typecheck@0x560a56367f30[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] env-
val?            %10.4 = Extract2_1D        wed   %10.3, ".__NAMESPACE__.", elided   <env->
dependent slot

Type#4 [used] val?+ (polluted)
val?            %10.7 = Force!<lazy>       !v    %10.6, e8.8   <val?+>
void                    Assume             D     %14.0, %12.8 (Typecheck@0x560a56367f30[Type#4])
exact match
checkFor: val?+, static: val?, feedback: val?+, expected: val?+, required: val?+

Type#5 [used] env-
val?^ | miss    %12.0 = LdVar              eR    info !upd, e8.8
void                    Assume             D     %12.1, %10.8 (Typecheck@0x560a56367f30[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#6 [used] str$-
val?            %12.6 = Force!<value>      !v    %12.5, e8.8   <str$->
void                    Assume             D     %12.7, %12.8 (Typecheck@0x560a56367f30[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

----------------------
Inlinee: .getNamespaceInfo [0x560a5649a8c0]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 2
present non-empty: 1

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [used] env-
val+            %2.4  = Force!<lazy>       !vr   %1.1,    <env->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a56567c00[Type#0])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: env-, expected: env-, required: val?+

Type#1 [used] env-
val?            %4.2  = Extract2_1D        wed   %4.1, ".__NAMESPACE__.", elided   <env->
void                    Assume             D     %4.4, %4.5 (Typecheck@0x560a56567c00[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] $#-
optimized away

Type#3 [unused] str$-
optimized away

Type#4 [unused] val?+ (polluted)
val?            %6.3  = Extract2_1D        wed   %6.2, "dynlibs", elided   <val?+>
other unused reason

*********************** Compilation session for: runHook (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2,!Obj3) ***********************
======================= ClosureVersion: runHook (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2,!Obj3) =======================
referenced: 24
referenced non-empty: 12
read non-empty: 10
used: 3
present non-empty: 2

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 7
dependent: 3
other reasons unused non-empty: 6

Polluted
polluted: 5
used polluted: 1

----------------------
runHook [0x560a561aed10]
referenced: 21
referenced non-empty: 9
read non-empty: 9
used: 3
present non-empty: 2

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 4
dependent: 3
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] env-
val+            %1.5  = Force!<lazy>       !vr   %1.2,    <env->
other unused reason

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] str$-
val+            %1.6  = Force!<value>            %1.3,    <str$->
void                    Assume             D     %1.7, %1.8 (Typecheck@0x560a56396070[Type#2])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: str$-, expected: str$-, required: val?+

Type#3 [unused] (nil|cls)- (polluted)
val?            %2.2  = Extract2_1D        wed   %1.5, %2.1, elided   <(nil|cls)->
other unused reason

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] str$-
optimized away (dependency)

Type#6 [unused] val?+ (polluted)
optimized away (dependency)

Type#7 [unused] cls-
optimized away

Type#8 [used] val?+ (polluted)
val?            %7.6  = StaticCall         !v    tryCatch[0x560a6643d930](%7.3, %7.5) { 0 1n } e1.4   <val?+>
void                    Assume             D     %7.8, %7.9 (Typecheck@0x560a56396070[Type#8])
exact match
checkFor: val?+, static: val?, feedback: val?+, expected: val?+, required: val?+

Type#9 [unused] val?+ (polluted)
optimized away (dependency)

Type#10 [used] lgl$-
val+            %9.5  = CallSafeBuiltin    wed   inherits(%9.4, "error", false)    <lgl$->
void                    Assume             D     %9.6, %9.7 (Typecheck@0x560a56396070[Type#10])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

*********************** Compilation session for: %in% (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: %in% (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 1

----------------------
%in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#1 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#2 [used] int- (polluted)
val?            %1.5  = StaticCall         !v    match[0x560a67342610](%1.3, %1.4, 0L) { 0 1 2n } e1.2   <int->
void                    Assume             D     %1.6, %1.7 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %2.3  = Gt                 vwed  %2.2, 0L, elided   <lgl->
other unused reason

======================= ClosureVersion: match (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl2,!Obj2,SimpleInt2 miss: 1) =======================
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 2
present non-empty: 1

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 2

----------------------
match [0x560a55e4d070]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 2
present non-empty: 1

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 2

Type#0 [used] (nil|str)+ (polluted)
val?            %1.4  = Force!<lazy>       !vL   %1.2, e1.3   <(nil|str)+>
void                    Assume             D     %1.5, %1.7 (Typecheck@0x560a55e4cf60[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: (nil|str)+, expected: (nil|str)+, required: val?^ | miss

Type#1 [used] str+ (polluted)
val?            %2.4  = Force!<lazy>       !vL   %1.1, e1.3   <str+>
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a55e4cf60[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?^ | miss

Type#2 [unused] int$-
int$-           %1.6  = Force!<lazy>             %1.0,    <int$->
other unused reason

Type#3 [unused] nil-
optimized away

*********************** Compilation session for: %in% (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: %in% (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 1

----------------------
%in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#1 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#2 [used] int- (polluted)
val?            %1.5  = StaticCall         !v    match[0x560a66897490](%1.3, %1.4, 0L) { 0 1 2n } e1.2   <int->
void                    Assume             D     %1.6, %1.7 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %2.3  = Gt                 vwed  %2.2, 0L, elided   <lgl->
other unused reason

*********************** Compilation session for: chr (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: chr (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

----------------------
chr [0x560a587feca0]
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %2.5  = Force!<value>      !v    %2.3, e2.4   <vec>
other unused reason

Type#4 [unused] vec-
val?            %4.5  = NamedCall          !v    function(..., .ignore_empty=<str [1] "trailing|...(.xpandDotsTrigger=%4.4) e2.4   <vec->
other unused reason

Type#5 [unused] cls-
val?            %4.7  = Force!<wrapped>    !v    %4.6, e2.4   <cls->
other unused reason

Type#6 [unused] str-
val?            %4.8  = CallBuiltin        !     .Call(%2.5, %4.5, "character", %4.7, 1L) e2.4   <str->
other unused reason

*********************** Compilation session for: dots_values (!ExpMi,CorrOrd,!TMany,Argmatch miss: 5) ***********************
======================= ClosureVersion: dots_values (!ExpMi,CorrOrd,!TMany,Argmatch miss: 5) =======================
referenced: 13
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 7

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 0
dependent: 4
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

----------------------
dots_values [0x560a58ce8470]
referenced: 13
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 7

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 0
dependent: 4
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] vec
val?            %2.5  = Force!<value>      !v    %2.3, e2.4   <vec>
other unused reason

Type#7 [unused] env-
val?            %4.3  = StaticCall         !v    environment[0x560a66823250]() e2.4   <env->
other unused reason

Type#8 [unused] str-
val?            %4.5  = Force!<lazy>       !v    %4.4, e2.4   <str->
dependent slot

Type#9 [unused] lgl$-
val?            %4.7  = Force!<lazy>       !v    %4.6, e2.4   <lgl$->
dependent slot

Type#10 [unused] str-
val?            %4.9  = Force!<lazy>       !v    %4.8, e2.4   <str->
dependent slot

Type#11 [unused] lgl$-
val?            %4.12 = Force!<lazy>       !     %4.10, e2.4   <lgl$->
dependent slot

Type#12 [unused] vec-
val?            %4.13 = NamedCall          !     <blt .External>(%2.5, env=%4.3, named=nil, ignore_empty=%4.5, preserve_empty=%4.7, unquote_names=true, homonyms=%4.9, check_assign=%4.12) e2.4   <vec->
other unused reason

*********************** Compilation session for:  (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion:  (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 20
referenced non-empty: 13
read non-empty: 13
used: 3
present non-empty: 6

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 10
optimized away non-empty: 4
dependent: 7
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

----------------------
 [0x560a573e3920]
referenced: 18
referenced non-empty: 11
read non-empty: 11
used: 3
present non-empty: 5

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 3
dependent: 7
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] env-
val+            %2.2  = Force!<lazy>       !vr   %1.0,    <env->
other unused reason

Type#2 [unused] str-
val+            %2.3  = CallSafeBuiltin    wed   names(%2.2)    <str->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] str-
optimized away (dependency)

Type#6 [unused] lgl-
val?            %4.11 = PopContext         C     %4.10, %4.7   <lgl->
dependent slot

Type#7 [used] lgl$-
val?            %4.12 = CallBuiltin        !     any(%4.11) e2.1   <lgl$->
void                    Assume             D     %4.13, %4.14 (Typecheck@0x560a57059970[Type#7])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] str-
optimized away (dependency)

Type#11 [unused] lgl-
val?            %7.12 = PopContext         C     %7.11, %7.7   <lgl->
dependent slot

Type#12 [used] lgl$-
val?            %7.13 = CallBuiltin        !     any(%7.12) e2.1   <lgl$->
void                    Assume             D     %7.14, %7.15 (Typecheck@0x560a57059970[Type#12])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] str-
optimized away (dependency)

Type#16 [unused] lgl-
val?            %13.12 = PopContext         C     %13.11, %13.7   <lgl->
dependent slot

Type#17 [used] lgl$-
val?            %13.13 = CallBuiltin        !     any(%13.12) e2.1   <lgl$->
void                    Assume             D     %13.14, %13.15 (Typecheck@0x560a57059970[Type#17])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: startsWith [0x560a5664e750]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str+
val?            %13.10 = Force!<lazy>       !vL   %13.8, e13.9   <str+>
other unused reason

Type#1 [unused] str$-
optimized away

*********************** Compilation session for: namespaceExport (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: parent.env (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
parent.env [0x560a56e176a0]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] env-
val+            %1.1  = Force!<lazy>             %1.0,    <env->
void                    Assume             D     %1.2, %1.3 (Typecheck@0x560a56b6b500[Type#0])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: env-, expected: env-, required: val?^ | miss

======================= ClosureVersion: parent.env (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
parent.env [0x560a56e176a0]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] env-
val?            %1.1  = Force!<lazy>             %1.0,    <env->
void                    Assume             D     %1.2, %1.3 (Typecheck@0x560a56b6b500[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?^ | miss

======================= ClosureVersion: list2env (!ExpMi,CorrOrd,!TMany,Argmatch miss: 3) =======================
referenced: 14
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 1
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
list2env [0x560a5741ca30]
referenced: 14
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 1
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [used] env-
val?            %1.12 = Force!<lazy>       !v    %1.0, e1.2   <env->
void                    Assume             D     %1.14, %1.15 (Typecheck@0x560a56dfcbd0[Type#7])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?^ | miss

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] vec+
val?            %3.1  = Force!<lazy>       !v    %3.0, e1.2   <vec+>
other unused reason

Type#13 [unused] env-
val?            %3.3  = Force!<wrapped>    !v    %3.2, e1.2   <env->
dependent slot

======================= ClosureVersion: .mergeExportMethods (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 41
referenced non-empty: 9
read non-empty: 8
used: 3
present non-empty: 4

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

----------------------
.mergeExportMethods [0x560a577d4360]
referenced: 39
referenced non-empty: 7
read non-empty: 7
used: 3
present non-empty: 3

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [used] str+
val?            %1.2  = Force!<lazy>             %1.1,    <str+>
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a572d0500[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?^ | miss

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str+
optimized away (dependency)

Type#4 [used] lgl-
val?            %2.10 = PopContext         C     %2.9, %2.5   <lgl->
void                    Assume             D     %2.11, %2.12 (Typecheck@0x560a572d0500[Type#4])
exact match
checkFor: lgl-, static: val?, feedback: lgl-, expected: lgl-, required: val?+

Type#5 [unused] str+
val?            %4.2  = Extract1_1D        wed   %2.1, %4.1, elided   <str+>
dependent slot

Type#6 [unused] env-
val?            %6.4  = Force!<lazy>       !v    %6.3, e2.3   <env->
other unused reason

Type#7 [unused] env+
val?            %6.6  = StaticCall         !v    parent.env[0x560a67a91060](%6.5) e2.3   <env+>
other unused reason

Type#8 [used] str+
val?^ | miss    %8.0  = LdVar              eR    newMethods, e2.3
void                    Assume             D     %8.1, %6.8 (Typecheck@0x560a572d0500[Type#8])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str+, expected: str+, required: val?^ | miss

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: startsWith [0x560a5664e750]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str+
val?            %2.8  = Force!<lazy>       !vr   %2.6,    <str+>
other unused reason

Type#1 [unused] str$-
optimized away

======================= ClosureVersion: namespaceExport (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 124
referenced non-empty: 74
read non-empty: 71
used: 19
present non-empty: 25

Used
exact match: 9
widened: 10
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 55
optimized away non-empty: 30
dependent: 42
other reasons unused non-empty: 13

Polluted
polluted: 12
used polluted: 1

----------------------
namespaceExport [0x560a5739a400]
referenced: 47
referenced non-empty: 28
read non-empty: 28
used: 9
present non-empty: 5

Used
exact match: 6
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 14
dependent: 18
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [used] lgl$-
val?            %2.2  = PopContext         C     %2.1, %1.8   <lgl$->
void                    Assume             D     %2.3, %2.4 (Typecheck@0x560a57300860[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] env-
val?            %5.4  = Force!<wrapped>    !v    %5.3, e1.2   <env->
dependent slot

Type#3 [unused] env-
val?            %5.6  = StaticCall         !v    asNamespace[0x560a681d7d30](%5.5, false) { 0 1n } e1.2   <env->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [used] str-
val?            %7.4  = Force!<lazy>       !v    %7.3, e1.2   <str->
void                    Assume             D     %7.5, %7.6 (Typecheck@0x560a57300860[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#6 [used] int$-
(int|real)$-    %9.2  = CallSafeBuiltin    wed   length(%9.1)    <int$->
void                    Assume             D     %9.3, %9.4 (Typecheck@0x560a57300860[Type#6])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#7 [unused] str-
optimized away (dependency)

Type#8 [unused] str-
optimized away (dependency)

Type#9 [used] str+
val?            %34.8 = PopContext         C     %34.5, %14.3   <str+>
void                    Assume             D     %42.0, %40.3 (Typecheck@0x560a57300860[Type#9])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?+

Type#10 [unused] str+
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] str+
optimized away (dependency)

Type#16 [unused] env-
optimized away (dependency)

Type#17 [unused] str-
optimized away (dependency)

Type#18 [used] lgl-
val?            %38.3 = PopContext         C     %38.2, %36.7   <lgl->
void                    Assume             D     %38.4, %38.5 (Typecheck@0x560a57300860[Type#18])
exact match
checkFor: lgl-, static: val?, feedback: lgl-, expected: lgl-, required: val?+

Type#19 [unused] str+
val?            %42.3 = Extract1_1D        wed   %42.2, %40.2, elided   <str+>
dependent slot

Type#20 [unused] str+
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] str+
optimized away (dependency)

Type#26 [unused] cls-
optimized away

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [used] lgl+
val?            %54.3 = PopContext         C     %54.2, %44.9   <lgl+>
void                    Assume             D     %54.4, %54.5 (Typecheck@0x560a57300860[Type#28])
exact match
checkFor: lgl+, static: val?, feedback: lgl+, expected: lgl+, required: val?+

Type#29 [used] str+
val?            %56.3 = Extract1_1D        !v    %42.3, %56.2, e1.2   <str+>
void                    Assume             D     %56.5, %56.6 (Typecheck@0x560a57300860[Type#29])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?+

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] str+
optimized away (dependency)

Type#32 [used] int$-
(int|real)$-    %58.6 = CallSafeBuiltin    wed   length(%58.5)    <int$->
void                    Assume             D     %58.7, %58.8 (Typecheck@0x560a57300860[Type#32])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [used] lgl$-
val?            %61.3 = CallBuiltin        !v    .isMethodsDispatchOn() e1.2   <lgl$->
void                    Assume             D     %61.4, %61.5 (Typecheck@0x560a57300860[Type#41])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#42 [unused] str+
val?            %90.5 = Force!<value>      !v    %90.4, e1.2   <str+>
dependent slot

Type#43 [unused] env-
optimized away (dependency)

Type#44 [unused] env-
optimized away (dependency)

Type#45 [unused] str+
optimized away (dependency)

Type#46 [unused] env-
val?            %88.6 = PopContext         C     %88.5, %67.5   <env->
dependent slot

----------------------
Inlinee: .getNamespaceInfo [0x560a5649a8c0]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 2
present non-empty: 1

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [used] env-
val?            %69.4 = Force!<lazy>       !vL   %67.7, e69.0   <env->
void                    Assume             D     %69.6, %69.7 (Typecheck@0x560a56567c00[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#1 [used] env-
val?            %71.3 = Extract2_1D        wed   %71.2, ".__NAMESPACE__.", elided   <env->
void                    Assume             D     %71.5, %71.6 (Typecheck@0x560a56567c00[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] $#-
optimized away

Type#3 [unused] str$-
optimized away

Type#4 [unused] val?+ (polluted)
val?            %73.3 = Extract2_1D        wed   %73.2, "exports", elided   <val?+>
other unused reason

----------------------
Inlinee: environmentIsLocked [0x560a566af530]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val?            %1.15 = Force!<lazy>       !vr   %1.13,    <env->
other unused reason

----------------------
Inlinee: is.vector [0x560a55e6f180]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (str|vec) (polluted)
optimized away

Type#1 [unused] str$-
optimized away

----------------------
Inlinee: makeImportExportNames [0x560a573de8d0]
referenced: 20
referenced non-empty: 9
read non-empty: 8
used: 3
present non-empty: 4

Used
exact match: 0
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 5
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str-
val?            %16.4 = Force!<lazy>       !vL   %14.4, e16.3   <str->
void                    Assume             D     %16.5, %16.6 (Typecheck@0x560a57727860[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?^ | miss

Type#2 [unused] str-
val+            %18.2 = CallSafeBuiltin    wed   as.character(%18.1)    <str->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str-
optimized away (dependency)

Type#5 [unused] nil-
val+            %20.3 = CallSafeBuiltin    wed   names(%18.1)    <nil->
dependent slot

Type#6 [unused] nil-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [used] str-
val+            %18.2 = CallSafeBuiltin    wed   as.character(%18.1)    <str->
void                    Assume             D     %95.0, %20.6 (Typecheck@0x560a57727860[Type#16])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: str-, expected: str-, required: val?^ | miss

Type#17 [unused] str-
val+            %32.1 = ChkMissing         e     %32.0   <str->
dependent slot

Type#18 [used] str-
val?^ | miss    %34.0 = LdVar              eR    old, e16.3
void                    Assume             D     %34.1, %32.3 (Typecheck@0x560a57727860[Type#18])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#19 [unused] str+
val?            %34.5 = NamedCall          !v    %32.2(%34.4, value=%32.1) e16.3   <str+>
other unused reason

----------------------
Inlinee: addExports [0x560a564c3c90]
referenced: 28
referenced non-empty: 15
read non-empty: 14
used: 3
present non-empty: 5

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 7
dependent: 11
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val?            %69.4 = Force!<lazy>       !vL   %67.7, e69.0   <env->
dependent slot

Type#1 [unused] env-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] str+
val?            %75.3 = Force!<lazy>       !vL   %67.6, e69.0   <str+>
void                    Assume             D     %75.4, %75.5 (Typecheck@0x560a5768a1a0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?+

Type#4 [unused] str-
val+            %77.2 = CallSafeBuiltin    wed   names(%77.1)    <str->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [used] env-
val             %79.3 = ChkMissing         e     %73.3
void                    Assume             D     %79.4, %77.4 (Typecheck@0x560a5768a1a0[Type#6])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: env-, expected: env-, required: val?^ | miss

Type#7 [unused] str-
val+            %79.7 = CallSafeBuiltin    wed   names(%79.6)    <str->
dependent slot

Type#8 [unused] str-
optimized away (dependency)

Type#9 [unused] str-
optimized away (dependency)

Type#10 [unused] lgl-
val?            %83.3 = PopContext         C     %83.2, %81.5   <lgl->
dependent slot

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] lgl-
optimized away (dependency)

Type#13 [used] lgl$-
val?            %85.4 = CallBuiltin        !     any(%83.3) e69.0   <lgl$->
void                    Assume             D     %85.5, %85.6 (Typecheck@0x560a5768a1a0[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] str+
optimized away (dependency)

Type#25 [unused] vec+
optimized away

Type#26 [unused] env-
optimized away (dependency)

Type#27 [unused] env-
val?            %88.5 = StaticCall         !     list2env[0x560a67a6dec0](%88.3, %88.4) e69.0   <env->
dependent slot

----------------------
Inlinee: vapply [0x560a5607f4e0]
referenced: 15
referenced non-empty: 9
read non-empty: 9
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 1
dependent: 6
other reasons unused non-empty: 3

Polluted
polluted: 6
used polluted: 0

Type#0 [unused] (cls|blt)- (polluted)
optimized away (dependency)

Type#1 [unused] (cls|blt)- (polluted)
val?            %44.14 = StaticCall         !v    match.fun[0x560a672b25b0](%44.13) e44.12   <(cls|blt)->
dependent slot

Type#2 [unused] val? (polluted)
val?            %46.4 = Force!<lazy>       !v    %46.3, e44.12   <val?>
dependent slot

Type#3 [unused] lgl$-
lgl$#-          %46.5 = CallSafeBuiltin    wed   is.vector(%46.4, "any")    <lgl$->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] (str|vec)+ (polluted)
val?            %93.4 = Force!<wrapped>    !v    %93.3, e44.12   <(str|vec)+>
other unused reason

Type#6 [unused] lgl$-
lgl$#-          %93.5 = CallSafeBuiltin    wed   is.object(%93.4)    <lgl$->
dependent slot

Type#7 [unused] val? (polluted)
val?            %92.4 = Force!<wrapped>    !v    %92.3, e44.12   <val?>
dependent slot

Type#8 [unused] vec
val?            %92.5 = StaticCall         !v    as.list[0x560a681d6040](%92.4) { 0 } e44.12   <vec>
other unused reason

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] val?+ (polluted)
val?            %54.2 = Call               !v    %54.0(%54.1) e44.12   <val?+>
other unused reason

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#1 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#2 [used] int- (polluted)
val?            %81.11 = StaticCall         !v    match[0x560a681cf560](%81.9, %81.10, 0L) { 0 1 2n } e81.8   <int->
void                    Assume             D     %81.12, %81.13 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %83.2 = Gt                 wed   %83.1, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: namespaceIsSealed [0x560a570d4e80]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away

Type#1 [used] lgl$-
val?            %1.17 = PopContext         C     %1.16, %1.12   <lgl$->
void                    Assume             D     %1.18, %1.19 (Typecheck@0x560a575cbd00[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: sealNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: sealNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 15
referenced non-empty: 11
read non-empty: 11
used: 2
present non-empty: 5

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 4
dependent: 5
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

----------------------
sealNamespace [0x560a562da7c0]
referenced: 12
referenced non-empty: 8
read non-empty: 8
used: 1
present non-empty: 4

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 3
dependent: 5
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val+            %2.3  = Force!<lazy>       !vr   %1.0,    <env->
dependent slot

Type#1 [unused] env-
val?            %2.4  = StaticCall         !v    asNamespace[0x560a679f6a20](%2.3, false) { 0 1n } e1.1   <env->
dependent slot

Type#2 [unused] env-
optimized away (dependency)

Type#3 [used] lgl$-
val?            %8.2  = PopContext         C     %8.1, %4.4   <lgl$->
void                    Assume             D     %8.3, %8.4 (Typecheck@0x560a55f46c70[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] env-
val?            %11.5 = Force!<value>      !     %11.3, e1.1   <env->
dependent slot

Type#9 [unused] env-
optimized away (dependency)

Type#10 [unused] env+
optimized away

Type#11 [unused] nil-
val?            %13.4 = StaticCall         !     lockEnvironment[0x560a681fffe0](%13.3, true) e1.1   <nil->
other unused reason

----------------------
Inlinee: environmentIsLocked [0x560a566af530]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val?            %6.8  = Force!<lazy>       !vL   %6.6, e6.7   <env->
other unused reason

----------------------
Inlinee: namespaceIsSealed [0x560a562ea650]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away

Type#1 [used] lgl$-
val?            %6.10 = PopContext         C     %6.9, %6.5   <lgl$->
void                    Assume             D     %6.11, %6.12 (Typecheck@0x560a56333f70[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

======================= ClosureVersion: lockEnvironment (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj1) =======================
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

----------------------
lockEnvironment [0x560a573e66d0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

Type#0 [used] env+ (polluted)
val?            %1.2  = Force!<lazy>             %1.1,    <env+>
void                    Assume             D     %1.3, %1.5 (Typecheck@0x560a56217530[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: env+, expected: env+, required: val?^ | miss

Type#1 [unused] lgl$-
val+            %1.4  = Force!<value>            %1.0,    <lgl$->
other unused reason

*********************** Compilation session for: runUserHook (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: runUserHook (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 18
referenced non-empty: 11
read non-empty: 11
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 11
optimized away non-empty: 8
dependent: 8
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 0

----------------------
runUserHook [0x560a56352020]
referenced: 10
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 4
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] vec-
val?            %2.12 = PopContext         C     %2.11, %2.5   <vec->
dependent slot

Type#3 [unused] vec-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] nil-
optimized away

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: try [0x560a56e27790]
referenced: 4
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] (nil|vec)+ (polluted)
optimized away (dependency)

Type#3 [unused] (nil|vec)+ (polluted)
val?            %5.14 = StaticCall         !v    tryCatch[0x560a67aa89c0](%5.11, %5.13) { 0 1n } e5.6   <(nil|vec)+>
dependent slot

----------------------
Inlinee: getHook [0x560a57734970]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] env-
optimized away

Type#2 [unused] vec-
optimized away (dependency)

Type#3 [unused] vec-
val?            %2.11 = StaticCall         !v    get0[0x560a682203f0](%2.8, %2.9, missingArg, false, %2.10) { 0 1n 3n 4n } e2.7   <vec->
dependent slot

*********************** Compilation session for: Sys.unsetenv (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) ***********************
======================= ClosureVersion: Sys.unsetenv (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) =======================
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
Sys.unsetenv [0x560a574db820]
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] str$-
val+            %1.1  = Force<value>             %1.0,    <str$->
dependent slot

Type#2 [unused] str$-
val+            %1.2  = CallSafeBuiltin    wed   as.character(%1.1)    <str$->
dependent slot

*********************** Compilation session for: getNamespaceExports (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: getNamespaceExports (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 29
referenced non-empty: 22
read non-empty: 22
used: 4
present non-empty: 6

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 18
optimized away non-empty: 12
dependent: 15
other reasons unused non-empty: 3

Polluted
polluted: 3
used polluted: 0

----------------------
getNamespaceExports [0x560a56c7c070]
referenced: 13
referenced non-empty: 7
read non-empty: 7
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 3
dependent: 5
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
val?            %1.3  = StaticCall         !v    asNamespace[0x560a675cd970](%1.2) e1.1   <env->
dependent slot

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] env-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %4.2  = PopContext         C     %4.1, %2.7   <lgl$->
void                    Assume             D     %4.3, %4.4 (Typecheck@0x560a56426930[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#9 [unused] env-
val?            %7.4  = Force!<value>      !v    %7.3, e1.1   <env->
dependent slot

Type#10 [unused] env-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str-
val?            %12.1 = CallBuiltin        !     names(%12.0) e1.1   <str->
other unused reason

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %2.16 = Force!<lazy>       !vL   %2.14, e2.15   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %2.17 = Force!<lazy>       !vL   %2.13, e2.15   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: .getNamespaceInfo [0x560a5649a8c0]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 2
present non-empty: 1

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [used] env-
val?            %7.4  = Force!<value>      !v    %7.3, e1.1   <env->
void                    Assume             D     %7.6, %7.7 (Typecheck@0x560a56567c00[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#1 [used] env-
val?            %9.3  = Extract2_1D        wed   %9.2, ".__NAMESPACE__.", elided   <env->
void                    Assume             D     %9.5, %9.6 (Typecheck@0x560a56567c00[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] $#-
optimized away

Type#3 [unused] str$-
optimized away

Type#4 [unused] val?+ (polluted)
val?            %11.3 = Extract2_1D        wed   %11.2, "exports", elided   <val?+>
other unused reason

----------------------
Inlinee: isBaseNamespace [0x560a5643a450]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %2.19 = PopContext         C     %2.18, %2.12   <lgl$->
void                    Assume             D     %2.20, %2.21 (Typecheck@0x560a565938d0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: parent.frame (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: parent.frame (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

----------------------
parent.frame [0x560a55e7fb30]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

Type#0 [used] (int|real)$- (polluted)
val?            %1.2  = Force!<lazy>       !v    %1.0, e1.1   <(int|real)$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a55e7fa40[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (int|real)$-, expected: (int|real)$-, required: val?^ | miss

*********************** Compilation session for: dynGet (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0 miss: 2) ***********************
======================= ClosureVersion: dynGet (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0 miss: 2) =======================
referenced: 104
referenced non-empty: 66
read non-empty: 64
used: 17
present non-empty: 27

Used
exact match: 11
widened: 6
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 49
optimized away non-empty: 22
dependent: 48
other reasons unused non-empty: 1

Polluted
polluted: 11
used polluted: 3

----------------------
dynGet [0x560a562d4a40]
referenced: 41
referenced non-empty: 35
read non-empty: 35
used: 9
present non-empty: 9

Used
exact match: 7
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 17
dependent: 25
other reasons unused non-empty: 1

Polluted
polluted: 3
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] int$-
val?            %1.3  = StaticCall         !v    sys.nframe[0x560a67788630]() e1.2   <int$->
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a563af3d0[Type#4])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#5 [unused] raw$-
optimized away

Type#6 [unused] vec$+
optimized away (dependency)

Type#7 [unused] vec$+
val?            %11.2 = PopContext         C     %11.1, %4.5   <vec$+>
dependent slot

Type#8 [used] int$-
val?^ | miss    %13.0 = LdVar              eR    n, e1.2
void                    Assume             D     %13.1, %11.4 (Typecheck@0x560a563af3d0[Type#8])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#9 [used] int$-
val?            %13.5 = Force!<lazy>       !v    %13.4, e1.2   <int$->
void                    Assume             D     %13.6, %13.7 (Typecheck@0x560a563af3d0[Type#9])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?+

Type#10 [unused] lgl$-
lgl$-           %15.2 = Gt                 d     %13.3, %15.1, elided   <lgl$->
dependent slot

Type#11 [used] int$-
val?^ | miss    %15.5 = LdVar              eR    n, e1.2
void                    Assume             D     %15.6, %13.7 (Typecheck@0x560a563af3d0[Type#11])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#12 [unused] int$-
int$-           %15.9 = Sub                d     %15.8, 1L, elided   <int$->
dependent slot

Type#13 [unused] int$-
optimized away (dependency)

Type#14 [unused] env-
val?            %17.3 = StaticCall         !v    sys.frame[0x560a67e81ab0](%15.9) e1.2   <env->
dependent slot

Type#15 [unused] str$-
optimized away (dependency)

Type#16 [unused] env-
optimized away (dependency)

Type#17 [unused] lgl$-
optimized away (dependency)

Type#18 [unused] vec$+
optimized away (dependency)

Type#19 [unused] vec$+
val?            %19.7 = StaticCall         !v    get0[0x560a6764c250](%19.3, %19.4, missingArg, %19.5, %19.6) { 0 1n 3n 4n } e1.2   <vec$+>
dependent slot

Type#20 [unused] vec$+
optimized away (dependency)

Type#21 [unused] vec$+
optimized away (dependency)

Type#22 [used] lgl$-
val?            %21.11 = PopContext         C     %21.10, %21.5   <lgl$->
void                    Assume             D     %21.12, %21.13 (Typecheck@0x560a563af3d0[Type#22])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [used] int$-
val?^ | miss    %27.0 = LdVar              eR    n, e1.2
void                    Assume             D     %27.1, %25.0 (Typecheck@0x560a563af3d0[Type#24])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#25 [used] int$-
val?^ | miss    %27.4 = LdVar              eR    minframe, e1.2
void                    Assume             D     %27.5, %25.0 (Typecheck2@0x560a563af3d0[Type#25])
narrowed with static type: no
widened: yes
checkFor: int$~-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?+

Type#26 [unused] lgl$-
lgl$-           %27.9 = Gt                 d     %27.3, %27.8, elided   <lgl$->
dependent slot

Type#27 [unused] int$-
optimized away (dependency)

Type#28 [unused] int$-
int$-           %30.0 = Sub                d     %27.3, 1L, elided   <int$->
dependent slot

Type#29 [unused] int$-
optimized away (dependency)

Type#30 [unused] env-
val?            %32.3 = StaticCall         !v    sys.frame[0x560a67e81ab0](%30.0) e1.2   <env->
dependent slot

Type#31 [unused] str$-
optimized away (dependency)

Type#32 [unused] env-
optimized away (dependency)

Type#33 [unused] lgl$-
optimized away (dependency)

Type#34 [unused] vec$+
optimized away (dependency)

Type#35 [unused] (str|vec)+ (polluted)
val?            %34.7 = StaticCall         !v    get0[0x560a6764c250](%34.3, %34.4, missingArg, %34.5, %34.6) { 0 1n 3n 4n } e1.2   <(str|vec)+>
dependent slot

Type#36 [unused] (str|vec)+ (polluted)
optimized away (dependency)

Type#37 [unused] vec$+
optimized away (dependency)

Type#38 [used] lgl$-
val?            %36.25 = PopContext         C     %36.24, %36.5   <lgl$->
void                    Assume             D     %36.26, %36.27 (Typecheck@0x560a563af3d0[Type#38])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#39 [used] (str|vec)+ (polluted)
val?^ | miss    %40.0 = LdVar              eR    r, e1.2
void                    Assume             D     %40.1, %36.27 (Typecheck@0x560a563af3d0[Type#39])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: (str|vec)+, expected: (str|vec)+, required: val?^ | miss

Type#40 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: structure [0x560a55eda070]
referenced: 55
referenced non-empty: 23
read non-empty: 21
used: 8
present non-empty: 10

Used
exact match: 4
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 5
dependent: 15
other reasons unused non-empty: 0

Polluted
polluted: 6
used polluted: 2

Type#0 [unused] val? (polluted)
val?            %4.8  = Force!<lazy>       !vL   %4.6, e4.7   <val?>
dependent slot

Type#1 [used] vec+
val?            %5.0  = NamedCall          !v    <blt list>(foo=47L) e4.7   <vec+>
void                    Assume             D     %5.2, %5.3 (Typecheck@0x560a55eda190[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec+
optimized away (dependency)

Type#4 [used] int$-
(int|real)$-    %7.6  = CallSafeBuiltin    wed   length(%7.5)    <int$->
void                    Assume             D     %7.7, %7.8 (Typecheck@0x560a55eda190[Type#4])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#5 [unused] str-
str-            %42.3 = CallSafeBuiltin    wed   c(".Dim", ".Dimnames", ".Names", ".Tsp", ".Label")    <str->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] vec+
optimized away (dependency)

Type#8 [unused] str-
val+            %44.3 = CallSafeBuiltin    wed   names(%7.5)    <str->
dependent slot

Type#9 [unused] str-
optimized away (dependency)

Type#10 [unused] str-
optimized away (dependency)

Type#11 [used] int-
val?            %46.5 = StaticCall         !v    match[0x560a6777bb20](%46.3, %46.4) e4.7   <int->
void                    Assume             D     %46.7, %46.8 (Typecheck@0x560a55eda190[Type#11])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] int-
optimized away (dependency)

Type#14 [unused] lgl-
lgl-            %48.6 = CallSafeBuiltin    wed   is.na(%48.5)    <lgl->
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] lgl-
lgl-            %48.7 = Not                wed   %48.6, elided   <lgl->
dependent slot

Type#17 [used] lgl$-
val?            %50.3 = CallBuiltin        !v    any(%48.7) e4.7   <lgl$->
void                    Assume             D     %50.4, %50.5 (Typecheck@0x560a55eda190[Type#17])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [used] (nil|str)- (polluted)
val?            %53.5 = NamedCall          !v    %53.3(%53.4, "class", exact=true) e4.7   <(nil|str)->
void                    Assume             D     %53.6, %53.7 (Typecheck@0x560a55eda190[Type#38])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (nil|str)-, expected: (nil|str)-, required: val?+

Type#39 [unused] lgl-
lgl-            %55.2 = Eq                 wed   %55.1, "factor", elided   <lgl->
dependent slot

Type#40 [used] lgl$-
val?            %55.3 = CallBuiltin        !v    any(%55.2) e4.7   <lgl$->
void                    Assume             D     %55.4, %55.5 (Typecheck@0x560a55eda190[Type#40])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] val? (polluted)
val?            %60.7 = Force!<wrapped>    !v    %60.6, e4.7   <val?>
dependent slot

Type#50 [used] (nil|vec)+ (polluted)
val?            %60.8 = CallBuiltin        !v    attributes(%60.7) e4.7   <(nil|vec)+>
void                    Assume             D     %60.9, %60.10 (Typecheck@0x560a55eda190[Type#50])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: (nil|vec)+, expected: (nil|vec)+, required: val?+

Type#51 [used] vec+
val?^ | miss    %62.0 = LdVar              eR    attrib, e4.7
void                    Assume             D     %62.1, %60.10 (Typecheck@0x560a55eda190[Type#51])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: vec+, expected: vec+, required: val?^ | miss

Type#52 [unused] vec+
val+            %62.7 = CallSafeBuiltin    wed   c(%62.6, %62.4)    <vec+>
dependent slot

Type#53 [unused] val? (polluted)
val?            %62.10 = Force!<wrapped>    !v    %62.9, e4.7   <val?>
dependent slot

Type#54 [unused] val? (polluted)
val?            %11.1 = Force!<value>      !v    %11.0, e4.7   <val?>
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 0
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %36.9 = Force!<lazy>       !vr   %36.7, e36.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %36.11 = Force!<lazy>       !v    %36.10, e36.8   <val?>
dependent slot

Type#2 [unused] lgl$-
val?            %36.13 = Force!<lazy>       !v    %36.12, e36.8   <lgl$->
dependent slot

Type#3 [unused] lgl$-
val?            %36.15 = Force!<lazy>       !v    %36.14, e36.8   <lgl$->
dependent slot

Type#4 [unused] lgl$-
val?            %36.17 = Force!<lazy>       !v    %36.16, e36.8   <lgl$->
dependent slot

Type#5 [unused] lgl$-
val?            %36.19 = Force!<lazy>       !v    %36.18, e36.8   <lgl$->
dependent slot

Type#6 [unused] lgl$-
val?            %36.21 = Force!<lazy>       !v    %36.20, e36.8   <lgl$->
dependent slot

Type#7 [unused] lgl$-
val?            %36.23 = Force!<lazy>       !v    %36.22, e36.8   <lgl$->
dependent slot

*********************** Compilation session for: lazyLoad (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: lazyLoadDBexec (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1) =======================
referenced: 46
referenced non-empty: 36
read non-empty: 31
used: 7
present non-empty: 15

Used
exact match: 3
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 29
optimized away non-empty: 14
dependent: 24
other reasons unused non-empty: 5

Polluted
polluted: 0
used polluted: 0

----------------------
lazyLoadDBexec [0x560a587ebe00]
referenced: 40
referenced non-empty: 30
read non-empty: 27
used: 6
present non-empty: 12

Used
exact match: 3
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 24
optimized away non-empty: 12
dependent: 24
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val?            %1.19 = Force!<lazy>       !vr   %1.2,    <str$->
dependent slot

Type#1 [unused] str$-
val+            %1.21 = CallSafeBuiltin    wed   paste(%1.20, ".", nil, false)    <str$->
dependent slot

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] str$-
val+            %1.24 = CallSafeBuiltin    wed   paste(%1.23, ".", nil, false)    <str$->
dependent slot

Type#4 [unused] env-
val?            %2.5  = PopContext         C     %2.4, %1.26   <env->
dependent slot

Type#5 [unused] str$-
optimized away (dependency)

Type#6 [unused] vec+
val?            %4.4  = StaticCall         !v    readRDS[0x560a683ecb70](%4.3) from %1.5 e1.3   <vec+>
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] vec+
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [used] vec+
val?            %6.6  = Call               !v    %6.3(%6.4, %6.5) e1.3   <vec+>
void                    Assume             D     %6.7, %6.8 (Typecheck@0x560a58656100[Type#12])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#13 [unused] str-
val+            %8.2  = CallSafeBuiltin    wed   names(%8.1)    <str->
dependent slot

Type#14 [unused] vec+
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [used] lgl$-
val?            %8.7  = Call               !v    %8.4(%8.5, %8.6) e1.3   <lgl$->
void                    Assume             D     %8.8, %8.9 (Typecheck@0x560a58656100[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] vec+
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] vec+
optimized away (dependency)

Type#20 [unused] env-
optimized away (dependency)

Type#21 [unused] env-
val?            %16.5 = PopContext         C     %16.4, %14.3   <env->
dependent slot

Type#22 [unused] vec+
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] vec+
val?            %17.3 = Call               !v    %17.0(%17.1, %17.2) e1.3   <vec+>
dependent slot

Type#25 [unused] str-
optimized away (dependency)

Type#26 [unused] lgl-
val?            %19.2 = Call               !v    %19.0(%19.1) e1.3   <lgl->
dependent slot

Type#27 [used] str-
val?^ | miss    %21.0 = LdVar              eR    vars, e1.3
void                    Assume             D     %21.1, %19.4 (Typecheck@0x560a58656100[Type#27])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [used] lgl-
val             %21.7 = ChkMissing         e     %19.2
void                    Assume             D     %21.8, %19.4 (Typecheck@0x560a58656100[Type#29])
exact match
checkFor: lgl-, static: val, feedback: lgl-, expected: lgl-, required: val?^ | miss

Type#30 [unused] str-
val?            %21.11 = Extract1_1D        wed   %21.4, %21.10, elided   <str->
dependent slot

Type#31 [unused] vec+
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [used] vec+
val?            %21.16 = Call               !v    %21.13(%21.14, %21.15) e1.3   <vec+>
void                    Assume             D     %21.18, %21.19 (Typecheck@0x560a58656100[Type#33])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [used] lgl-
val?^ | miss    %23.1 = LdVar              eR    use, e1.3
void                    Assume             D     %23.2, %21.19 (Typecheck@0x560a58656100[Type#35])
exact match
checkFor: lgl-, static: val?^ | miss, feedback: lgl-, expected: lgl-, required: val?^ | miss

Type#36 [unused] vec+
val?            %23.7 = Extract1_1D        wed   %23.6, %23.4, elided   <vec+>
dependent slot

Type#37 [unused] env-
optimized away (dependency)

Type#38 [unused] nil-
val?            %18.2 = Call               !v    %18.0(%18.1) e1.3   <nil->
dependent slot

Type#39 [unused] nil-
optimized away (dependency)

----------------------
Inlinee: list2env [0x560a58761370]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec+
val?            %12.9 = Force!<lazy>       !vL   %12.7, e12.8   <vec+>
other unused reason

Type#1 [unused] env-
val?            %12.10 = Force!<lazy>       !vL   %12.6, e12.8   <env->
other unused reason

----------------------
Inlinee: glue [0x560a587ab090]
referenced: 3
referenced non-empty: 3
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec-
val+            %1.23 = CallSafeBuiltin    wed   list(%1.19, "rdb")    <vec->
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] nil-
optimized away

----------------------
Inlinee: mkenv [0x560a58954360]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] env-
val?            %14.8 = CallBuiltin        !vL   baseenv() e14.7   <env->
void                    Assume             D     %14.9, %14.10 (Typecheck@0x560a5894e170[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

======================= ClosureVersion: lazyLoad (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
lazyLoad [0x560a5a5d7c70]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] str$-
optimized away

Type#2 [unused] cls-
optimized away (dependency)

Type#3 [unused] cls-
optimized away (dependency)

Type#4 [unused] nil-
val?            %1.9  = StaticCall         !     lazyLoadDBexec[0x560a68566950](%1.6, %1.7, %1.8) e1.3   <nil->
other unused reason

*********************** Compilation session for: fun (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: fun (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 11
referenced non-empty: 9
read non-empty: 9
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 4
dependent: 7
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
fun [0x560a5a5ca160]
referenced: 11
referenced non-empty: 9
read non-empty: 9
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 4
dependent: 7
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] vec+
val?            %1.5  = Call               !v    %1.2(%1.3, %1.4) e1.1   <vec+>
dependent slot

Type#3 [unused] env-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] str-
val?            %1.10 = Call               !v    %1.7(%1.8, %1.9) e1.1   <str->
dependent slot

Type#6 [unused] str-
optimized away (dependency)

Type#7 [used] vec+
val?^ | miss    %2.1  = LdVar              eR    vals, e1.1
void                    Assume             D     %2.2, %1.13 (Typecheck@0x560a5a5ca070[Type#7])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: vec+, expected: vec+, required: val?^ | miss

Type#8 [unused] code-
optimized away

Type#9 [unused] env-
val?            %2.7  = Force!<wrapped>    !v    %2.6, e1.1   <env->
dependent slot

Type#10 [unused] env-
val?            %2.9  = Force!<lazy>       !v    %2.8, e1.1   <env->
dependent slot

*********************** Compilation session for: FUN (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: FUN (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
FUN [0x560a562348b0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec
optimized away

Type#1 [unused] vec-
val?            %2.7  = StaticCall         !     lapply[0x560a687e91e0](%2.4, %2.6) { 0 1 } e2.3   <vec->
other unused reason

*********************** Compilation session for: delayedAssign (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl2,NonRefl3,!Obj2,!Obj3) ***********************
======================= ClosureVersion: delayedAssign (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl2,NonRefl3,!Obj2,!Obj3) =======================
referenced: 7
referenced non-empty: 5
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
delayedAssign [0x560a56a9a9e0]
referenced: 7
referenced non-empty: 5
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] str$+
val?            %1.5  = Force!<lazy>       !v    %1.3, e1.4   <str$+>
void                    Assume             D     %1.6, %1.7 (Typecheck@0x560a56daba20[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] code-
val?            %2.4  = Call               !v    %2.2(%2.3) e1.4   <code->
other unused reason

Type#5 [unused] env-
val?            %2.6  = Force!<lazy>       !v    %2.5, e1.4   <env->
dependent slot

Type#6 [unused] env-
val?            %2.8  = Force!<lazy>       !v    %2.7, e1.4   <env->
dependent slot

*********************** Compilation session for: typeof (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: typeof (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

----------------------
typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

Type#0 [used] val?- (polluted)
val?            %1.2  = Force!<lazy>       !vL   %1.0, e1.1   <val?->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a5607e090[Type#0])
exact match
checkFor: val?-, static: val?, feedback: val?-, expected: val?-, required: val?^ | miss

*********************** Compilation session for: is.primitive (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: is.primitive (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 0

----------------------
is.primitive [0x560a54179310]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|blt)- (polluted)
val+            %1.2  = Force!<lazy>       !vr   %1.0,    <(nil|blt)->
other unused reason

Type#1 [unused] str$-
str$-           %1.3  = CallSafeBuiltin    wed   typeof(%1.2)    <str$->
other unused reason

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val?- (polluted)
optimized away

*********************** Compilation session for: identical (!ExpMi,CorrOrd,!TMany,Argmatch miss: 6) ***********************
======================= ClosureVersion: identical (!ExpMi,CorrOrd,!TMany,Argmatch miss: 6) =======================
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 0
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

----------------------
identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 0
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %1.3  = Force!<lazy>       !v    %1.1, e1.2   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %1.5  = Force!<lazy>       !v    %1.4, e1.2   <val?>
dependent slot

Type#2 [unused] lgl$-
val?            %1.7  = Force!<lazy>       !v    %1.6, e1.2   <lgl$->
dependent slot

Type#3 [unused] lgl$-
val?            %1.9  = Force!<lazy>       !v    %1.8, e1.2   <lgl$->
dependent slot

Type#4 [unused] lgl$-
val?            %1.11 = Force!<lazy>       !v    %1.10, e1.2   <lgl$->
dependent slot

Type#5 [unused] lgl$-
val?            %1.13 = Force!<lazy>       !v    %1.12, e1.2   <lgl$->
dependent slot

Type#6 [unused] lgl$-
val?            %1.15 = Force!<lazy>       !v    %1.14, e1.2   <lgl$->
dependent slot

Type#7 [unused] lgl$-
val?            %1.17 = Force!<lazy>       !v    %1.16, e1.2   <lgl$->
dependent slot

*********************** Compilation session for: .libPaths (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) ***********************
======================= ClosureVersion: .libPaths (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 22
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
.libPaths [0x560a57d650b0]
referenced: 22
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] str$-
val?^ | miss    %2.0  = LdVar              eR    .lib.loc, <env 0x560a5438b6b8>
void                    Assume             D     %2.1, %1.0 (Typecheck@0x560a57ef4160[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: getNamespaceVersion (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: getNamespaceVersion (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 38
referenced non-empty: 22
read non-empty: 22
used: 5
present non-empty: 6

Used
exact match: 2
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 17
optimized away non-empty: 11
dependent: 14
other reasons unused non-empty: 3

Polluted
polluted: 3
used polluted: 0

----------------------
getNamespaceVersion [0x560a5f50e950]
referenced: 22
referenced non-empty: 7
read non-empty: 7
used: 2
present non-empty: 3

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
val?            %1.3  = StaticCall         !v    asNamespace[0x560a68c08740](%1.2) e1.1   <env->
dependent slot

Type#2 [unused] env-
optimized away (dependency)

Type#3 [used] lgl$-
val?            %4.2  = PopContext         C     %4.1, %2.4   <lgl$->
void                    Assume             D     %4.3, %4.4 (Typecheck@0x560a5f9fa430[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] env-
val?            %7.4  = Force!<value>      !v    %7.3, e1.1   <env->
dependent slot

Type#5 [used] str+
val?            %11.3 = Extract2_1D        wed   %11.2, "spec", elided   <val?+>
void                    Assume             D     %11.5, %11.6 (Typecheck@0x560a5f9fa430[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?+

Type#6 [unused] str$+
val?            %13.3 = Extract1_1D        wed   %13.2, "version", elided   <str$+>
other unused reason

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %2.13 = Force!<lazy>       !vL   %2.11, e2.12   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %2.14 = Force!<lazy>       !vL   %2.10, e2.12   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: .getNamespaceInfo [0x560a5649a8c0]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 2
present non-empty: 1

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [used] env-
val?            %7.4  = Force!<value>      !v    %7.3, e1.1   <env->
void                    Assume             D     %7.6, %7.7 (Typecheck@0x560a56567c00[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#1 [used] env-
val?            %9.3  = Extract2_1D        wed   %9.2, ".__NAMESPACE__.", elided   <env->
void                    Assume             D     %9.5, %9.6 (Typecheck@0x560a56567c00[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] $#-
optimized away

Type#3 [unused] str$-
optimized away

Type#4 [unused] val?+ (polluted)
val?            %11.3 = Extract2_1D        wed   %11.2, "spec", elided   <val?+>
other unused reason

----------------------
Inlinee: isBaseNamespace [0x560a5643a450]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %2.16 = PopContext         C     %2.15, %2.9   <lgl$->
void                    Assume             D     %2.17, %2.18 (Typecheck@0x560a565938d0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for:  (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion:  (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 91
referenced non-empty: 28
read non-empty: 16
used: 11
present non-empty: 7

Used
exact match: 6
widened: 5
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 17
optimized away non-empty: 10
dependent: 12
other reasons unused non-empty: 5

Polluted
polluted: 1
used polluted: 0

----------------------
 [0x560a5aacd370]
referenced: 20
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [used] lgl$-
val?            %31.2 = PopContext         C     %31.1, %2.4   <lgl$->
void                    Assume             D     %31.3, %31.4 (Typecheck@0x560a5aacd280[Type#0])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#1 [unused] vec+
val?            %51.2 = PopContext         C     %49.2, %39.3   <vec+>
other unused reason

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: Sys.getenv [0x560a56393c00]
referenced: 48
referenced non-empty: 11
read non-empty: 5
used: 3
present non-empty: 2

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] str$-
optimized away (dependency)

Type#6 [unused] str$-
optimized away (dependency)

Type#7 [unused] lgl$-
val?            %6.4  = Force!<lazy>       !v    %6.3, e4.5   <lgl$->
dependent slot

Type#8 [unused] lgl$-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [used] str$-
val?            %17.4 = Force!<wrapped>    !v    %17.3, e4.5   <str$->
void                    Assume             D     %17.5, %17.6 (Typecheck@0x560a562d4e50[Type#10])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#11 [used] int$-
(int|real)$-    %19.2 = CallSafeBuiltin    wed   length(%19.1)    <int$->
void                    Assume             D     %19.3, %19.4 (Typecheck@0x560a562d4e50[Type#11])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#12 [unused] lgl$-
lgl$-           %21.2 = Gt                 d     %21.1, 1L, elided   <lgl$->
dependent slot

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [used] str$-
val?^ | miss    %27.0 = LdVar              eR    v, e4.5
void                    Assume             D     %27.1, %24.1 (Typecheck@0x560a562d4e50[Type#15])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

----------------------
Inlinee:  [0x560a5aace290]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec+
val?            %47.3 = NamedCall          !     <blt list>(type="not_rstudio", dynamic_tty=false, ansi_tty=false, ansi_color=false, num_colors=1L, hyperlink=false, has_canonical_mode=false) e47.2   <vec+>
other unused reason

----------------------
Inlinee: isTRUE [0x560a55e9e1e0]
referenced: 11
referenced non-empty: 8
read non-empty: 2
used: 3
present non-empty: 1

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 4
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (nil|lgl)- (polluted)
optimized away

Type#2 [used] lgl$-
val+            %6.5  = CallSafeBuiltin    wed   is.logical(%6.4)    <lgl$->
void                    Assume             D     %6.6, %6.7 (Typecheck@0x560a55e9bc50[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %6.4  = Force!<lazy>       !v    %6.3, e4.5   <lgl$->
void                    Assume             D     %9.0, %6.7 (Typecheck@0x560a55e9bc50[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %6.4  = Force!<lazy>       !v    %6.3, e4.5   <lgl$->
void                    Assume             D     %11.0, %6.7 (Typecheck@0x560a55e9bc50[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %11.3 = CallSafeBuiltin    wed   is.na(%11.2)    <lgl$->
dependent slot

Type#10 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: get_caps [0x560a5aacded0]
referenced: 9
referenced non-empty: 4
read non-empty: 4
used: 2
present non-empty: 2

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 1
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] vec+
val?            %39.6 = Force!<value>      !v    %39.4, e39.5   <vec+>
void                    Assume             D     %43.2, %41.6 (Typecheck@0x560a5aacddd0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [used] str$-
val?            %41.4 = Force!<value>      !v    %41.3, e39.5   <str$->
void                    Assume             D     %41.5, %41.6 (Typecheck@0x560a5aacddd0[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#6 [unused] cls-
val?            %43.7 = Extract2_1D        wed   %43.4, %43.6, elided   <cls->
other unused reason

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] vec+
val?            %49.2 = PopContext         C     %47.3, %45.5   <vec+>
dependent slot

----------------------
Inlinee: is_rstudio [0x560a5aacd6a0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 2
present non-empty: 0

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] str$-
val?            %27.5 = PopContext         C     %27.4, %4.4   <str$->
void                    Assume             D     %27.6, %27.7 (Typecheck@0x560a5aacd5b0[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#1 [used] lgl$-
lgl-            %29.6 = Eq                 wed   %29.5, "1", elided   <lgl$->
void                    Assume             D     %29.7, %29.8 (Typecheck@0x560a5aacd5b0[Type#1])
exact match
checkFor: lgl$-, static: lgl-, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: %||% (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: %||% (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 2
present non-empty: 0

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
%||% [0x560a68ee1810]
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 2
present non-empty: 0

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] nil-
val?            %1.3  = Force!<lazy>       !vL   %1.1, e1.2   <nil->
void                    Assume             D     %1.5, %1.6 (Typecheck@0x560a68ee1710[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: nil-, expected: nil-, required: val?^ | miss

Type#1 [unused] $#-
optimized away

Type#2 [used] str$-
val?            %5.1  = Force!<lazy>       !L    %1.0, e1.2   <str$->
void                    Assume             D     %5.2, %5.3 (Typecheck@0x560a68ee1710[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

*********************** Compilation session for: ansi_style_str (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: ansi_style_str (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 5
referenced non-empty: 5
read non-empty: 3
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 5

Polluted
polluted: 1
used polluted: 0

----------------------
ansi_style_str [0x560a68ee2cc0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] real$-
optimized away

Type#1 [unused] str$-
val?            %2.12 = PopContext         C     %2.11, %2.6   <str$->
other unused reason

----------------------
Inlinee: paste0 [0x560a55fc8790]
referenced: 3
referenced non-empty: 3
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] vec-
val+            %2.10 = CallSafeBuiltin    wed   list("[", %2.9, "m")    <vec->
other unused reason

Type#1 [unused] (nil|str)- (polluted)
optimized away

Type#2 [unused] lgl$-
optimized away

*********************** Compilation session for: as.list (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: as.list (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
as.list [0x560a573f45e0]
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

*********************** Compilation session for: get_handlers (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: get_handlers (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

----------------------
get_handlers [0x560a68eeb930]
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] env+ (polluted)
val+            %2.2  = Force!<lazy>       !vr   %1.0,    <env+>
other unused reason

Type#2 [unused] (nil|vec)- (polluted)
val?            %2.3  = CallBuiltin        !     attr(%2.2, "withr_handlers") e2.1   <(nil|vec)->
other unused reason

*********************** Compilation session for: is_builtin_style (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: is_builtin_style (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 20
referenced non-empty: 17
read non-empty: 17
used: 6
present non-empty: 4

Used
exact match: 4
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 11
optimized away non-empty: 7
dependent: 8
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

----------------------
is_builtin_style [0x560a68ef9380]
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 4
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val+            %2.7  = Force!<lazy>       !vr   %1.0,    <str$->
dependent slot

Type#1 [unused] lgl$-
optimized away (dependency)

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] vec+
optimized away

Type#4 [unused] str-
optimized away

Type#5 [used] lgl$-
val?            %17.4 = PopContext         C     %17.3, %15.5   <lgl$->
void                    Assume             D     %17.5, %17.6 (Typecheck@0x560a68ef9290[Type#5])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#1 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#2 [used] int- (polluted)
val?            %15.11 = StaticCall         !v    match[0x560a697ffd60](%15.9, %15.10, 0L) { 0 1 2n } e15.8   <int->
void                    Assume             D     %15.12, %15.13 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %17.3 = Gt                 vwed  %17.2, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: is_string [0x560a68efc6c0]
referenced: 10
referenced non-empty: 7
read non-empty: 7
used: 4
present non-empty: 2

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] lgl$-
lgl$#-          %2.8  = CallSafeBuiltin    vwed  is.character(%2.7)    <lgl$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str$-
val+            %2.7  = Force!<lazy>       !vr   %1.0,    <str$->
void                    Assume             D     %23.3, %2.9 (Typecheck@0x560a68efc5d0[Type#4])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: str$-, expected: str$-, required: val?+

Type#5 [used] int$-
(int|real)$-    %23.6 = CallSafeBuiltin    wed   length(%23.5)    <int$->
void                    Assume             D     %23.7, %23.8 (Typecheck@0x560a68efc5d0[Type#5])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] lgl$-
lgl$-           %25.3 = Eq                 vd    %25.1, 1, elided   <lgl$->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] str$-
val+            %2.7  = Force!<lazy>       !vr   %1.0,    <str$->
void                    Assume             D     %9.3, %6.3 (Typecheck@0x560a68efc5d0[Type#8])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: str$-, expected: str$-, required: val?+

Type#9 [used] lgl$-
lgl-            %9.6  = CallSafeBuiltin    vwed  is.na(%9.5)    <lgl$->
void                    Assume             D     %9.7, %9.8 (Typecheck@0x560a68efc5d0[Type#9])
exact match
checkFor: lgl$-, static: lgl-, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: create_ansi_style (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: eval (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 8
referenced non-empty: 7
read non-empty: 7
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 4
dependent: 6
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

----------------------
eval [0x560a56683b40]
referenced: 8
referenced non-empty: 7
read non-empty: 7
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 4
dependent: 6
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] env-
optimized away (dependency)

Type#4 [unused] $#-
optimized away

Type#5 [used] (code|ast)- (polluted)
val?            %1.8  = Force!<lazy>       !v    %1.0, e1.1   <(code|ast)->
void                    Assume             D     %1.9, %1.10 (Typecheck@0x560a56683e10[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (code|ast)-, expected: (code|ast)-, required: val?^ | miss

Type#6 [unused] env-
val?            %2.3  = Force!<lazy>       !v    %2.2, e1.1   <env->
dependent slot

Type#7 [unused] env-
val?            %2.6  = Force!<lazy>       !     %2.4, e1.1   <env->
dependent slot

======================= ClosureVersion: create_ansi_style (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 94
referenced non-empty: 57
read non-empty: 55
used: 9
present non-empty: 18

Used
exact match: 4
widened: 5
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 48
optimized away non-empty: 30
dependent: 41
other reasons unused non-empty: 7

Polluted
polluted: 12
used polluted: 2

----------------------
create_ansi_style [0x560a68edebf0]
referenced: 29
referenced non-empty: 25
read non-empty: 25
used: 1
present non-empty: 6

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 24
optimized away non-empty: 18
dependent: 23
other reasons unused non-empty: 1

Polluted
polluted: 5
used polluted: 0

Type#0 [used] nil-
val?            %2.6  = Force!<lazy>       !v    %1.1, e2.3   <nil->
void                    Assume             D     %2.8, %2.9 (Typecheck@0x560a68edeaf0[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: nil-, expected: nil-, required: val?^ | miss

Type#1 [unused] vec+
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] vec+ (polluted)
optimized away (dependency)

Type#5 [unused] real$-
optimized away (dependency)

Type#6 [unused] str$-
optimized away (dependency)

Type#7 [unused] str$-
val?            %6.0  = Phi                      %4.1:BB5, %53.0:BB55   <str$->
dependent slot

Type#8 [unused] nil-
val?            %8.6  = Force!<lazy>       !v    %8.5, e2.3   <nil->
dependent slot

Type#9 [unused] vec+
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [unused] vec+ (polluted)
optimized away (dependency)

Type#13 [unused] real$-
optimized away (dependency)

Type#14 [unused] str$-
optimized away (dependency)

Type#15 [unused] str$-
val?            %10.0 = Phi                      %8.6:BB9, %50.0:BB52   <str$->
dependent slot

Type#16 [unused] vec+
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] str$-
optimized away (dependency)

Type#19 [unused] vec+ (polluted)
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] (nil|real)- (polluted)
val?            %10.5 = Call               !v    %10.2(%10.3, %10.4) e2.3   <(nil|real)->
dependent slot

Type#22 [unused] str$-
optimized away (dependency)

Type#23 [unused] str$-
optimized away (dependency)

Type#24 [unused] str$-
optimized away (dependency)

Type#25 [unused] (nil|real)- (polluted)
optimized away (dependency)

Type#26 [unused] vec$+
val?            %21.4 = PopContext         C     %21.3, %12.7   <vec$+>
dependent slot

Type#27 [unused] vec$+
optimized away (dependency)

Type#28 [unused] cls
val?            %23.4 = StaticCall         !     create_ansi_style_fun[0x560a69c65a30](%23.3) e2.3   <cls>
other unused reason

----------------------
Inlinee: structure [0x560a55eda070]
referenced: 55
referenced non-empty: 23
read non-empty: 21
used: 8
present non-empty: 10

Used
exact match: 4
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 5
dependent: 15
other reasons unused non-empty: 0

Polluted
polluted: 6
used polluted: 2

Type#0 [unused] val? (polluted)
val?            %14.10 = Force!<lazy>       !vL   %14.8, e14.9   <val?>
dependent slot

Type#1 [used] vec+
val?            %15.0 = NamedCall          !v    <blt list>(names=%14.5) e14.9   <vec+>
void                    Assume             D     %15.2, %15.3 (Typecheck@0x560a55eda190[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec+
optimized away (dependency)

Type#4 [used] int$-
(int|real)$-    %17.6 = CallSafeBuiltin    wed   length(%17.5)    <int$->
void                    Assume             D     %17.7, %17.8 (Typecheck@0x560a55eda190[Type#4])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#5 [unused] str-
str-            %24.3 = CallSafeBuiltin    wed   c(".Dim", ".Dimnames", ".Names", ".Tsp", ".Label")    <str->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] vec+
optimized away (dependency)

Type#8 [unused] str-
val+            %26.3 = CallSafeBuiltin    wed   names(%17.5)    <str->
dependent slot

Type#9 [unused] str-
optimized away (dependency)

Type#10 [unused] str-
optimized away (dependency)

Type#11 [used] int-
val?            %28.5 = StaticCall         !v    match[0x560a69bf4910](%28.3, %28.4) e14.9   <int->
void                    Assume             D     %28.7, %28.8 (Typecheck@0x560a55eda190[Type#11])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] int-
optimized away (dependency)

Type#14 [unused] lgl-
lgl-            %30.6 = CallSafeBuiltin    wed   is.na(%30.5)    <lgl->
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] lgl-
lgl-            %30.7 = Not                wed   %30.6, elided   <lgl->
dependent slot

Type#17 [used] lgl$-
val?            %32.3 = CallBuiltin        !v    any(%30.7) e14.9   <lgl$->
void                    Assume             D     %32.4, %32.5 (Typecheck@0x560a55eda190[Type#17])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [used] (nil|str)- (polluted)
val?            %35.5 = NamedCall          !v    %35.3(%35.4, "class", exact=true) e14.9   <(nil|str)->
void                    Assume             D     %35.6, %35.7 (Typecheck@0x560a55eda190[Type#38])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (nil|str)-, expected: (nil|str)-, required: val?+

Type#39 [unused] lgl-
lgl-            %37.2 = Eq                 wed   %37.1, "factor", elided   <lgl->
dependent slot

Type#40 [used] lgl$-
val?            %37.3 = CallBuiltin        !v    any(%37.2) e14.9   <lgl$->
void                    Assume             D     %37.4, %37.5 (Typecheck@0x560a55eda190[Type#40])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] val? (polluted)
val?            %42.7 = Force!<wrapped>    !v    %42.6, e14.9   <val?>
dependent slot

Type#50 [used] (nil|vec)+ (polluted)
val?            %42.8 = CallBuiltin        !v    attributes(%42.7) e14.9   <(nil|vec)+>
void                    Assume             D     %42.9, %42.10 (Typecheck@0x560a55eda190[Type#50])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: (nil|vec)+, expected: (nil|vec)+, required: val?+

Type#51 [used] vec+
val?^ | miss    %44.0 = LdVar              eR    attrib, e14.9
void                    Assume             D     %44.1, %42.10 (Typecheck@0x560a55eda190[Type#51])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: vec+, expected: vec+, required: val?^ | miss

Type#52 [unused] vec+
val+            %44.7 = CallSafeBuiltin    wed   c(%44.6, %44.4)    <vec+>
dependent slot

Type#53 [unused] val? (polluted)
val?            %44.10 = Force!<wrapped>    !v    %44.9, e14.9   <val?>
dependent slot

Type#54 [unused] val? (polluted)
val?            %21.2 = Force!<value>      !     %21.0, e14.9   <val?>
dependent slot

----------------------
Inlinee: create_ansi_style_tag [0x560a68e6fd90]
referenced: 7
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 6
dependent: 3
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] (nil|real)- (polluted)
optimized away

Type#3 [unused] vec+
optimized away

Type#4 [unused] vec$-
optimized away

Type#5 [unused] str$-
optimized away (dependency)

Type#6 [unused] vec$+
val?            %21.3 = PopContext         C     %21.2, %14.7   <vec$+>
other unused reason

----------------------
Inlinee: %||% [0x560a68ee1810]
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] nil-
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
val?            %50.0 = Force!<lazy>       !vL   %8.4, e8.11   <str$->
other unused reason

======================= ClosureVersion: create_ansi_style_fun (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) =======================
referenced: 10
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

----------------------
create_ansi_style_fun [0x560a6920a350]
referenced: 10
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] code-
optimized away

Type#3 [unused] cls-
val?            %2.5  = StaticCall         !v    eval[0x560a69b6da20](%2.4) e2.3   <cls->
other unused reason

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] vec$+
val?            %2.12 = Force!<wrapped>    !v    %2.11, e2.3   <vec$+>
other unused reason

Type#8 [unused] cls
val?            %2.15 = Force!<value>      !v    %2.14, e2.3   <cls>
dependent slot

Type#9 [unused] cls
val?            %2.16 = NamedCall          !v    %2.13(%2.15, "_styles", value=%2.12) e2.3   <cls>
dependent slot

*********************** Compilation session for:  (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion:  (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 40
referenced non-empty: 24
read non-empty: 22
used: 5
present non-empty: 8

Used
exact match: 5
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 11
dependent: 10
other reasons unused non-empty: 9

Polluted
polluted: 4
used polluted: 1

----------------------
 [0x560a5a9408a0]
referenced: 18
referenced non-empty: 9
read non-empty: 9
used: 1
present non-empty: 4

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 4
dependent: 4
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] nil-
val?            %4.1  = PopContext         C     %4.0, %2.4   <nil->
dependent slot

Type#1 [unused] nil-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] vec
optimized away

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] cls-
optimized away

Type#9 [unused] vec+
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] str$-
val?            %5.3  = Call               !v    %5.0(%5.1, %5.2) e2.3   <str$->
other unused reason

Type#12 [unused] str-
str-            %7.3  = CallSafeBuiltin    wed   c("rstudio_console", "rstudio_console_starting")    <str->
other unused reason

Type#13 [used] lgl$-
val?            %28.1 = PopContext         C     %28.0, %9.3   <lgl$->
void                    Assume             D     %28.2, %28.3 (Typecheck@0x560a5a9407b0[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] vec+
val?            %32.2 = Force!<wrapped>    !     %32.0, e2.3   <vec+>
dependent slot

----------------------
Inlinee: is_latex_output [0x560a68e3f280]
referenced: 5
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str-
optimized away

Type#1 [used] lgl$-
val?            %21.3 = PopContext         C     %21.2, %19.5   <lgl$->
void                    Assume             D     %21.4, %21.5 (Typecheck@0x560a68e3f190[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: is_utf8_output [0x560a68e5e730]
referenced: 8
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 1

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] nil-
val?            %13.1 = PopContext         C     %13.0, %11.4   <nil->
dependent slot

Type#1 [unused] nil-
optimized away (dependency)

Type#2 [unused] vec+
optimized away

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %14.3 = Call               !v    %14.0(%14.1, %14.2) e11.3   <lgl$->
void                    Assume             D     %14.4, %14.5 (Typecheck@0x560a68e5e640[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [used] lgl$-
val?            %25.0 = PopContext         C     false, %17.3   <lgl$->
void                    Assume             D     %25.1, %25.2 (Typecheck@0x560a68e5e640[Type#5])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#1 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#2 [used] int- (polluted)
val?            %19.10 = StaticCall         !v    match[0x560a69bdcae0](%19.8, %19.9, 0L) { 0 1 2n } e19.7   <int->
void                    Assume             D     %19.11, %19.12 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %21.2 = Gt                 wed   %21.1, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: getOption [0x560a55e8e470]
referenced: 5
referenced non-empty: 4
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] nil-
val?            %11.6 = CallBuiltin        !v    getOption("cli.unicode") e11.5   <nil->
other unused reason

Type#2 [unused] $#-
optimized away

Type#3 [unused] lgl$-
val?            %35.1 = Force!<value>      !v    %35.0, e11.5   <lgl$->
other unused reason

Type#4 [unused] str$-
optimized away (dependency)

*********************** Compilation session for: l10n_info (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: l10n_info (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 0
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
l10n_info [0x560a68e38f10]
referenced: 0
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

*********************** Compilation session for: loadedNamespaces (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: loadedNamespaces (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
loadedNamespaces [0x560a68e41940]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str-
val?            %1.2  = CallBuiltin        !     names(%1.1) e1.0   <str->
other unused reason

*********************** Compilation session for: topenv (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: topenv (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 4
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
topenv [0x560a593b6a20]
referenced: 4
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] nil-
optimized away (dependency)

Type#2 [used] env-
val?            %1.5  = Force!<lazy>       !v    %1.0, e1.1   <env->
void                    Assume             D     %1.6, %1.7 (Typecheck@0x560a592f7a10[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?^ | miss

Type#3 [unused] nil-
val?            %2.3  = Force!<lazy>       !v    %2.2, e1.1   <nil->
dependent slot

*********************** Compilation session for: addNamespaceS3method (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2,!Obj3) ***********************
======================= ClosureVersion: addNamespaceS3method (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2,!Obj3) =======================
referenced: 20
referenced non-empty: 18
read non-empty: 17
used: 4
present non-empty: 5

Used
exact match: 1
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 9
dependent: 11
other reasons unused non-empty: 3

Polluted
polluted: 3
used polluted: 1

----------------------
addNamespaceS3method [0x560a5aa71410]
referenced: 10
referenced non-empty: 10
read non-empty: 10
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 10
optimized away non-empty: 8
dependent: 8
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] (str|vec)+ (polluted)
optimized away

Type#2 [unused] str$+
optimized away (dependency)

Type#3 [unused] str$+
optimized away (dependency)

Type#4 [unused] cls-
optimized away

Type#5 [unused] vec+
optimized away (dependency)

Type#6 [unused] vec+
val?            %2.11 = PopContext         C     %2.10, %2.7   <vec+>
dependent slot

Type#7 [unused] env-
optimized away (dependency)

Type#8 [unused] vec+
optimized away (dependency)

Type#9 [unused] vec+
val?            %10.8 = PopContext         C     %10.2, %4.5   <vec+>
dependent slot

----------------------
Inlinee: setNamespaceInfo [0x560a5678ac70]
referenced: 7
referenced non-empty: 7
read non-empty: 6
used: 4
present non-empty: 2

Used
exact match: 1
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] env-
val?            %4.9  = Force!<lazy>       !vL   %4.7, e4.8   <env->
dependent slot

Type#1 [used] env-
val?            %4.11 = StaticCall         !v    asNamespace[0x560a69fc4430](%4.10, false) { 0 1n } e4.8   <env->
void                    Assume             D     %4.14, %4.15 (Typecheck@0x560a56367f30[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] env-
val?            %6.4  = Extract2_1D        wed   %6.3, ".__NAMESPACE__.", elided   <env->
dependent slot

Type#4 [used] val?+ (polluted)
val?            %6.7  = Force!<lazy>       !v    %6.6, e4.8   <val?+>
void                    Assume             D     %10.0, %8.8 (Typecheck@0x560a56367f30[Type#4])
exact match
checkFor: val?+, static: val?, feedback: val?+, expected: val?+, required: val?+

Type#5 [used] env-
val?^ | miss    %8.0  = LdVar              eR    info !upd, e4.8
void                    Assume             D     %8.1, %6.8 (Typecheck@0x560a56367f30[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#6 [used] str$-
val?            %8.6  = Force!<value>      !v    %8.5, e4.8   <str$->
void                    Assume             D     %8.7, %8.8 (Typecheck@0x560a56367f30[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

----------------------
Inlinee: rbind [0x560a577e8320]
referenced: 3
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] (str|vec)+ (polluted)
val?            %2.10 = Call               !v    <spec .Internal>(%2.9) e2.8   <(str|vec)+>
other unused reason

*********************** Compilation session for: registerS3method (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl2,NonRefl3,!Obj2,!Obj3) ***********************
======================= ClosureVersion: registerS3method (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl2,NonRefl3,!Obj2,!Obj3) =======================
referenced: 81
referenced non-empty: 51
read non-empty: 51
used: 9
present non-empty: 15

Used
exact match: 6
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 42
optimized away non-empty: 27
dependent: 38
other reasons unused non-empty: 4

Polluted
polluted: 11
used polluted: 1

----------------------
registerS3method [0x560a5aa747f0]
referenced: 67
referenced non-empty: 37
read non-empty: 37
used: 8
present non-empty: 11

Used
exact match: 5
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 29
optimized away non-empty: 18
dependent: 28
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str-
str-            %1.8  = CallSafeBuiltin    wed   c("Math", "Ops", "Summary", "Complex")    <str->
dependent slot

Type#2 [unused] str$+ (polluted)
optimized away (dependency)

Type#3 [unused] str-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %2.3  = PopContext         C     %2.2, %1.12   <lgl$->
void                    Assume             D     %2.4, %2.5 (Typecheck@0x560a5aa753a0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] str$+ (polluted)
optimized away (dependency)

Type#6 [unused] env-
optimized away (dependency)

Type#7 [unused] cls-
val?            %5.5  = StaticCall         !v    get[0x560a69fd0540](%5.3, missingArg, %5.4) { 0 2n } e1.4   <cls->
dependent slot

Type#8 [used] lgl$-
val?            %7.3  = CallBuiltin        !v    .isMethodsDispatchOn() e1.4   <lgl$->
void                    Assume             D     %7.4, %7.5 (Typecheck@0x560a5aa753a0[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] cls-
val?            %10.3 = Call               !v    %10.0(%10.1, %10.2) e1.4   <cls->
dependent slot

Type#12 [unused] cls-
optimized away (dependency)

Type#13 [used] lgl$-
val?            %10.6 = Call               !v    %10.4(%10.5, "genericFunction") e1.4   <lgl$->
void                    Assume             D     %10.7, %10.8 (Typecheck@0x560a5aa753a0[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [used] cls-
val?^ | miss    %16.3 = LdVar              eR    genfun, e1.4
void                    Assume             D     %16.4, %13.1 (Typecheck@0x560a5aa753a0[Type#21])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: cls-, expected: cls-, required: val?^ | miss

Type#22 [unused] str$-
str$-           %16.8 = CallSafeBuiltin    wed   typeof(%16.7)    <str$->
dependent slot

Type#23 [unused] lgl$-
lgl$-           %18.0 = Eq                 d     %16.8, "closure", elided   <lgl$->
dependent slot

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] cls-
optimized away (dependency)

Type#26 [unused] env-
val?            %52.7 = StaticCall         !v    environment[0x560a6a539040](%52.6) e1.4   <env->
dependent slot

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [used] env-
val?            %21.0 = Phi                      %20.0:BB20, %55.1:BB55   <env->
void                    Assume             D     %21.3, %21.4 (Typecheck@0x560a5aa753a0[Type#28])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#29 [unused] env-
val?            %23.4 = Extract2_1D        wed   %23.3, ".__S3MethodsTable__.", elided   <env->
dependent slot

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] cls-
val?            %26.4 = Force!<lazy>       !v    %26.3, e1.4   <cls->
dependent slot

Type#36 [unused] lgl$-
lgl$#-          %26.5 = CallSafeBuiltin    wed   is.character(%26.4)    <lgl$->
dependent slot

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [used] cls-
val?            %29.4 = Force!<wrapped>    !v    %29.3, e1.4   <cls->
void                    Assume             D     %29.5, %29.6 (Typecheck@0x560a5aa753a0[Type#38])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: cls-, expected: cls-, required: val?+

Type#39 [unused] lgl$-
lgl$#-          %31.2 = CallSafeBuiltin    wed   is.function(%31.1)    <lgl$->
dependent slot

Type#40 [unused] str$+ (polluted)
optimized away (dependency)

Type#41 [unused] str$+ (polluted)
optimized away (dependency)

Type#42 [unused] str$-
optimized away (dependency)

Type#43 [unused] cls-
optimized away (dependency)

Type#44 [unused] env-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] env-
optimized away (dependency)

Type#58 [used] lgl$-
val?            %37.9 = PopContext         C     %37.8, %37.4   <lgl$->
void                    Assume             D     %37.10, %37.11 (Typecheck@0x560a5aa753a0[Type#58])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#59 [unused] env-
optimized away (dependency)

Type#60 [unused] env-
optimized away (dependency)

Type#61 [used] lgl$-
val?            %40.12 = PopContext         C     %40.11, %40.5   <lgl$->
void                    Assume             D     %40.13, %40.14 (Typecheck@0x560a5aa753a0[Type#61])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#62 [unused] env-
optimized away (dependency)

Type#63 [unused] str$+
optimized away (dependency)

Type#64 [unused] str$+
optimized away (dependency)

Type#65 [unused] cls-
optimized away (dependency)

Type#66 [unused] vec+
val?            %48.7 = StaticCall         !     addNamespaceS3method[0x560a6a390270](%48.3, %48.4, %48.5, %48.6) from %1.5 e1.4   <vec+>
other unused reason

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %40.9 = Force!<lazy>       !vL   %40.7, e40.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %40.10 = Force!<lazy>       !vL   %40.6, e40.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val?            %37.7 = Force!<lazy>       !vL   %37.5, e37.6   <env->
other unused reason

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val?- (polluted)
optimized away

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#1 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#2 [used] int- (polluted)
val?            %1.18 = StaticCall         !v    match[0x560a6a002270](%1.16, %1.17, 0L) { 0 1 2n } e1.15   <int->
void                    Assume             D     %1.19, %1.20 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %2.2  = Gt                 wed   %2.1, 0L, elided   <lgl->
other unused reason

*********************** Compilation session for: NROW (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: NROW (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 11
referenced non-empty: 7
read non-empty: 7
used: 5
present non-empty: 2

Used
exact match: 3
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 1
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
NROW [0x560a5698aa10]
referenced: 11
referenced non-empty: 7
read non-empty: 7
used: 5
present non-empty: 2

Used
exact match: 3
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 1
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] str_
val?            %1.2  = Force!<lazy>       !vL   %1.0, e1.1   <str_>
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a56cb3cc0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str_, expected: str_, required: val?^ | miss

Type#4 [unused] (nil|int)- (polluted)
val+            %2.4  = CallSafeBuiltin    wed   dim(%2.1)    <(nil|int)->
other unused reason

Type#5 [used] int$-
(int|real)$-    %2.6  = CallSafeBuiltin    wed   length(%2.4)    <int$->
void                    Assume             D     %2.7, %2.8 (Typecheck@0x560a56cb3cc0[Type#5])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [used] str$-
val?+           %2.1  = CastType           d     dn %1.2   <str_>
void                    Assume             D     %5.0, %2.8 (Typecheck@0x560a56cb3cc0[Type#7])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?+, feedback: str$-, expected: str$-, required: val?+

Type#8 [used] int$-
(int|real)$-    %5.3  = CallSafeBuiltin    vwed  length(%5.2)    <int$->
void                    Assume             D     %5.4, %5.5 (Typecheck@0x560a56cb3cc0[Type#8])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#9 [used] int-
val+            %2.4  = CallSafeBuiltin    wed   dim(%2.1)    <(nil|int)->
void                    Assume             D     %9.0, %2.8 (Typecheck@0x560a56cb3cc0[Type#9])
exact match
checkFor: int-, static: val+, feedback: int-, expected: int-, required: val?+

Type#10 [unused] int$-
int$-           %9.3  = Extract1_1D        wed   %9.2, 1L, elided   <int$->
dependent slot

*********************** Compilation session for: package_version (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: .make_numeric_version (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager3,NonRefl0,NonRefl3,!Obj3) =======================
referenced: 50
referenced non-empty: 31
read non-empty: 28
used: 12
present non-empty: 8

Used
exact match: 4
widened: 7
narrowed: 1
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 11
dependent: 16
other reasons unused non-empty: 3

Polluted
polluted: 6
used polluted: 4

----------------------
.make_numeric_version [0x560a55ef49f0]
referenced: 48
referenced non-empty: 29
read non-empty: 27
used: 10
present non-empty: 8

Used
exact match: 4
widened: 6
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 11
dependent: 16
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 2

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str$+ (polluted)
val?            %1.4  = Force!<lazy>             %1.3,    <str$+>
void                    Assume             D     %1.5, %1.6 (Typecheck@0x560a55ef48e0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#2 [unused] (nil|str)- (polluted)
val+            %2.2  = CallSafeBuiltin    wed   names(%2.1)    <(nil|str)->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$+ (polluted)
optimized away (dependency)

Type#5 [unused] str$-
val+            %2.3  = CallSafeBuiltin    wed   as.character(%2.1)    <str$->
dependent slot

Type#6 [unused] int-
int-            %2.4  = StaticCall         !vr   unknown--fromConstant[0x560a6a5c7bc0]() from function(length=0L) <(rir::DispatchTable*)0x56|...    <int->
other unused reason

Type#7 [unused] vec$-
val+            %2.5  = CallSafeBuiltin    wed   list(%2.4)    <vec$->
dependent slot

Type#8 [unused] str$-
optimized away (dependency)

Type#9 [unused] int$-
int$-           %4.3  = CastType           d     dn %2.6   <int$->
dependent slot

Type#10 [unused] vec$-
val+            %4.4  = CallSafeBuiltin    wed   rep.int(%4.1, %4.3)    <vec$->
dependent slot

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [unused] str$-
val?            %4.13 = PopContext         C     %4.12, %4.8   <str$->
dependent slot

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [used] str$-
val?            %6.4  = Force!<value>      !v    %6.3, e4.5   <str$->
void                    Assume             D     %6.5, %6.6 (Typecheck@0x560a55ef48e0[Type#14])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#15 [used] int$-
(int|real)$-    %8.2  = CallSafeBuiltin    wed   length(%8.1)    <int$->
void                    Assume             D     %8.3, %8.4 (Typecheck@0x560a55ef48e0[Type#15])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#16 [unused] str$-
optimized away (dependency)

Type#17 [unused] str$-
optimized away (dependency)

Type#18 [used] lgl$-
val?            %17.5 = StaticCall         !v    grepl[0x560a6a7539a0](%17.3, %17.4) e4.5   <lgl$->
void                    Assume             D     %17.6, %17.7 (Typecheck@0x560a55ef48e0[Type#18])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] lgl$-
optimized away (dependency)

Type#21 [used] lgl$-
val?            %21.3 = CallBuiltin        !v    all(%19.1) e4.5   <lgl$->
void                    Assume             D     %21.4, %21.5 (Typecheck@0x560a55ef48e0[Type#21])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] str$-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] lgl$-
optimized away (dependency)

Type#34 [unused] str$-
optimized away (dependency)

Type#35 [unused] vec$-
optimized away (dependency)

Type#36 [unused] blt-
optimized away

Type#37 [used] vec$-
val?            %28.5 = StaticCall         !v    lapply[0x560a6a780ce0](%28.3, %28.4) { 0 1 } e4.5   <vec$->
void                    Assume             D     %28.6, %28.7 (Typecheck@0x560a55ef48e0[Type#37])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#38 [used] vec$-
val?^ | miss    %30.0 = LdVar              eR    y !upd, e4.5
void                    Assume             D     %30.1, %28.7 (Typecheck@0x560a55ef48e0[Type#38])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#39 [used] lgl$-
val?^ | miss    %30.5 = LdVar              eR    ok, e4.5
void                    Assume             D     %30.6, %28.7 (Typecheck@0x560a55ef48e0[Type#39])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#40 [used] (nil|str)- (polluted)
val?^ | miss    %14.0 = LdVar              eR    nms, e4.5
void                    Assume             D     %14.1, %12.0 (Typecheck@0x560a55ef48e0[Type#40])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: (nil|str)-, expected: (nil|str)-, required: val?^ | miss

Type#41 [used] vec$-
val?^ | miss    %16.0 = LdVar              eR    y, e4.5
void                    Assume             D     %16.1, %14.6 (Typecheck@0x560a55ef48e0[Type#41])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] vec$
val?            %16.13 = Force!<value>      !     %16.11, e4.5   <vec$>
other unused reason

----------------------
Inlinee: rep.int [0x560a55ef9c20]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 2
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 1
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 2

Type#0 [used] (int|vec)- (polluted)
val+            %2.5  = CallSafeBuiltin    wed   list(%2.4)    <vec$->
void                    Assume             D     %2.8, %2.9 (Typecheck@0x560a55ef47e0[Type#0])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: (int|vec)-, expected: (int|vec)-, required: val?+

Type#1 [used] int- (polluted)
(int|real)$-    %2.6  = CallSafeBuiltin    wed   length(%2.3)    <int$->
void                    Assume             D     %2.7, %2.9 (Typecheck@0x560a55ef47e0[Type#1])
narrowed with static type: yes
widened: no
checkFor: int$-, static: (int|real)$-, feedback: int-, expected: int$-, required: val?+

======================= ClosureVersion: .make_numeric_version (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,NonRefl1) =======================
referenced: 50
referenced non-empty: 31
read non-empty: 28
used: 12
present non-empty: 8

Used
exact match: 4
widened: 7
narrowed: 1
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 11
dependent: 16
other reasons unused non-empty: 3

Polluted
polluted: 6
used polluted: 4

----------------------
.make_numeric_version [0x560a55ef49f0]
referenced: 48
referenced non-empty: 29
read non-empty: 27
used: 10
present non-empty: 8

Used
exact match: 4
widened: 6
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 11
dependent: 16
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 2

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str$+ (polluted)
val?            %1.4  = Force!<lazy>             %1.3,    <str$+>
void                    Assume             D     %1.5, %1.6 (Typecheck@0x560a55ef48e0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#2 [unused] (nil|str)- (polluted)
val+            %2.2  = CallSafeBuiltin    wed   names(%2.1)    <(nil|str)->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$+ (polluted)
optimized away (dependency)

Type#5 [unused] str$-
val+            %2.3  = CallSafeBuiltin    wed   as.character(%2.1)    <str$->
dependent slot

Type#6 [unused] int-
int-            %2.4  = StaticCall         !vr   unknown--fromConstant[0x560a6a5c7bc0]() from function(length=0L) <(rir::DispatchTable*)0x56|...    <int->
other unused reason

Type#7 [unused] vec$-
val+            %2.5  = CallSafeBuiltin    wed   list(%2.4)    <vec$->
dependent slot

Type#8 [unused] str$-
optimized away (dependency)

Type#9 [unused] int$-
int$-           %4.3  = CastType           d     dn %2.6   <int$->
dependent slot

Type#10 [unused] vec$-
val+            %4.4  = CallSafeBuiltin    wed   rep.int(%4.1, %4.3)    <vec$->
dependent slot

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [unused] str$-
val?            %4.13 = PopContext         C     %4.12, %4.8   <str$->
dependent slot

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [used] str$-
val?            %6.4  = Force!<value>      !v    %6.3, e4.5   <str$->
void                    Assume             D     %6.5, %6.6 (Typecheck@0x560a55ef48e0[Type#14])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#15 [used] int$-
(int|real)$-    %8.2  = CallSafeBuiltin    wed   length(%8.1)    <int$->
void                    Assume             D     %8.3, %8.4 (Typecheck@0x560a55ef48e0[Type#15])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#16 [unused] str$-
optimized away (dependency)

Type#17 [unused] str$-
optimized away (dependency)

Type#18 [used] lgl$-
val?            %17.5 = StaticCall         !v    grepl[0x560a6a7539a0](%17.3, %17.4) e4.5   <lgl$->
void                    Assume             D     %17.6, %17.7 (Typecheck@0x560a55ef48e0[Type#18])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] lgl$-
optimized away (dependency)

Type#21 [used] lgl$-
val?            %21.3 = CallBuiltin        !v    all(%19.1) e4.5   <lgl$->
void                    Assume             D     %21.4, %21.5 (Typecheck@0x560a55ef48e0[Type#21])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] str$-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] lgl$-
optimized away (dependency)

Type#34 [unused] str$-
optimized away (dependency)

Type#35 [unused] vec$-
optimized away (dependency)

Type#36 [unused] blt-
optimized away

Type#37 [used] vec$-
val?            %28.5 = StaticCall         !v    lapply[0x560a6a780ce0](%28.3, %28.4) { 0 1 } e4.5   <vec$->
void                    Assume             D     %28.6, %28.7 (Typecheck@0x560a55ef48e0[Type#37])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#38 [used] vec$-
val?^ | miss    %30.0 = LdVar              eR    y !upd, e4.5
void                    Assume             D     %30.1, %28.7 (Typecheck@0x560a55ef48e0[Type#38])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#39 [used] lgl$-
val?^ | miss    %30.5 = LdVar              eR    ok, e4.5
void                    Assume             D     %30.6, %28.7 (Typecheck@0x560a55ef48e0[Type#39])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#40 [used] (nil|str)- (polluted)
val?^ | miss    %14.0 = LdVar              eR    nms, e4.5
void                    Assume             D     %14.1, %12.0 (Typecheck@0x560a55ef48e0[Type#40])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: (nil|str)-, expected: (nil|str)-, required: val?^ | miss

Type#41 [used] vec$-
val?^ | miss    %16.0 = LdVar              eR    y, e4.5
void                    Assume             D     %16.1, %14.6 (Typecheck@0x560a55ef48e0[Type#41])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] vec$
val?            %16.13 = Force!<value>      !     %16.11, e4.5   <vec$>
other unused reason

----------------------
Inlinee: rep.int [0x560a55ef9c20]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 2
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 1
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 2

Type#0 [used] (int|vec)- (polluted)
val+            %2.5  = CallSafeBuiltin    wed   list(%2.4)    <vec$->
void                    Assume             D     %2.8, %2.9 (Typecheck@0x560a55ef47e0[Type#0])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: (int|vec)-, expected: (int|vec)-, required: val?+

Type#1 [used] int- (polluted)
(int|real)$-    %2.6  = CallSafeBuiltin    wed   length(%2.3)    <int$->
void                    Assume             D     %2.7, %2.9 (Typecheck@0x560a55ef47e0[Type#1])
narrowed with static type: yes
widened: no
checkFor: int$-, static: (int|real)$-, feedback: int-, expected: int$-, required: val?+

======================= ClosureVersion: package_version (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 33
referenced non-empty: 24
read non-empty: 24
used: 2
present non-empty: 7

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 22
optimized away non-empty: 15
dependent: 15
other reasons unused non-empty: 7

Polluted
polluted: 5
used polluted: 1

----------------------
package_version [0x560a59278f10]
referenced: 22
referenced non-empty: 15
read non-empty: 15
used: 1
present non-empty: 5

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 9
dependent: 11
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (str|vec) (polluted)
val?            %1.2  = Force!<lazy>       !v    %1.0, e1.1   <(str|vec)>
other unused reason

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] str-
optimized away (dependency)

Type#6 [unused] vec
optimized away (dependency)

Type#7 [unused] str-
optimized away (dependency)

Type#8 [unused] lgl-
val?            %5.3  = PopContext         C     %5.2, %3.8   <lgl->
other unused reason

Type#9 [used] lgl$-
val?            %5.4  = CallBuiltin        !v    all(%5.3) e1.1   <lgl$->
void                    Assume             D     %5.5, %5.6 (Typecheck@0x560a5917f460[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [unused] vec
optimized away (dependency)

Type#11 [unused] str-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] vec
optimized away (dependency)

Type#14 [unused] str$-
optimized away (dependency)

Type#15 [unused] vec$
val?            %13.16 = PopContext         C     %13.15, %13.4   <vec$>
dependent slot

Type#16 [unused] str$-
val?            %11.7 = Force!<wrapped>    !     %11.5, e1.1   <str$->
dependent slot

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] vec+
optimized away

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] str$-
optimized away (dependency)

Type#21 [unused] vec$
val?            %11.9 = StaticCall         !     .make_numeric_version[0x560a6a978910](%11.8, %11.3, %11.4, "package_version") e1.1   <vec$>
dependent slot

----------------------
Inlinee: R_system_version [0x560a5aae6a60]
referenced: 7
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 4
dependent: 2
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] vec+
optimized away

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$-
optimized away (dependency)

Type#5 [unused] str-
optimized away

Type#6 [unused] vec$
val?            %13.15 = StaticCall         !     .make_numeric_version[0x560a6a7889d0](%13.14, %13.9, %13.10, %13.11) e13.7   <vec$>
other unused reason

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#1 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#2 [used] int- (polluted)
val?            %3.14 = StaticCall         !v    match[0x560a6a7c6190](%3.12, %3.13, 0L) { 0 1 2n } e3.11   <int->
void                    Assume             D     %3.15, %3.16 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %5.2  = Gt                 wed   %5.1, 0L, elided   <lgl->
other unused reason

*********************** Compilation session for: .getGenerics (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1) ***********************
======================= ClosureVersion: .getGenerics (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1) =======================
referenced: 72
referenced non-empty: 26
read non-empty: 25
used: 4
present non-empty: 10

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 22
optimized away non-empty: 12
dependent: 18
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

----------------------
.getGenerics [0x560a572fe2a0]
referenced: 42
referenced non-empty: 18
read non-empty: 18
used: 4
present non-empty: 6

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 8
dependent: 13
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] env+ (polluted)
val+            %3.3  = Force!<lazy>       !vr   %1.0,    <env+>
dependent slot

Type#2 [unused] lgl$-
lgl$#-          %3.4  = CallSafeBuiltin    wed   is.environment(%3.3)    <lgl$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env+ (polluted)
optimized away (dependency)

Type#5 [unused] vec$-
val+            %27.3 = CallSafeBuiltin    wed   list(%3.3)    <vec$->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] vec$-
optimized away (dependency)

Type#10 [unused] cls-
optimized away

Type#11 [unused] vec$-
optimized away (dependency)

Type#12 [unused] str-
val?            %10.7 = PopContext         C     %10.6, %9.4   <str->
dependent slot

Type#13 [unused] str-
optimized away (dependency)

Type#14 [used] str-
val?            %12.4 = StaticCall         !v    unique[0x560a6a7d8c90](%10.7) { 0 } e2.0   <str->
void                    Assume             D     %16.0, %14.12 (Typecheck@0x560a57632b30[Type#14])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#15 [unused] str-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] str-
optimized away (dependency)

Type#19 [used] lgl-
val?            %14.10 = PopContext         C     %14.9, %14.6   <lgl->
void                    Assume             D     %14.11, %14.12 (Typecheck@0x560a57632b30[Type#19])
exact match
checkFor: lgl-, static: val?, feedback: lgl-, expected: lgl-, required: val?+

Type#20 [used] str-
val?            %16.5 = Extract1_1D        wed   %16.2, %16.4, elided   <str->
void                    Assume             D     %16.7, %16.8 (Typecheck@0x560a57632b30[Type#20])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] str-
optimized away (dependency)

Type#23 [used] int$-
(int|real)$-    %18.6 = CallSafeBuiltin    wed   length(%18.5)    <int$->
void                    Assume             D     %18.7, %18.8 (Typecheck@0x560a57632b30[Type#23])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#24 [unused] lgl$-
lgl$-           %20.2 = Eq                 d     %20.1, 0L, elided   <lgl$->
dependent slot

Type#25 [unused] str-
str-            %22.3 = CallSafeBuiltin    vwed  vector("character", 0L)    <str->
dependent slot

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: character [0x560a55e4c150]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] int$-
optimized away

----------------------
Inlinee: startsWith [0x560a5664e750]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str+
optimized away

Type#1 [unused] str$-
optimized away

----------------------
Inlinee: unlist [0x560a55eb29b0]
referenced: 27
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 5
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec+ (polluted)
val?            %9.9  = Force!<lazy>       !vr   %9.5,    <vec+>
dependent slot

Type#1 [unused] lgl$-
optimized away (dependency)

Type#2 [unused] vec+ (polluted)
val?            %10.1 = Force!<wrapped>    !v    %10.0, e9.6   <vec+>
dependent slot

Type#3 [unused] lgl$-
val?            %10.3 = Force!<wrapped>    !v    %10.2, e9.6   <lgl$->
dependent slot

Type#4 [unused] lgl$-
val?            %10.5 = Force!<lazy>       !v    %10.4, e9.6   <lgl$->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: getGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 3) ***********************
======================= ClosureVersion: .getGeneric (CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,NonRefl2) =======================
referenced: 50
referenced non-empty: 31
read non-empty: 30
used: 5
present non-empty: 17

Used
exact match: 3
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 9
dependent: 17
other reasons unused non-empty: 9

Polluted
polluted: 8
used polluted: 1

----------------------
.getGeneric [0x560a553ad2f0]
referenced: 41
referenced non-empty: 23
read non-empty: 22
used: 4
present non-empty: 15

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 4
dependent: 15
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$+
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] cls
val?            %55.9 = PopContext         C     %55.8, %53.6   <cls>
other unused reason

Type#5 [unused] (nil|cls) (polluted)
val?            %9.0  = Phi                      nil:BB8, %55.9:BB55   <(nil|cls)>
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %14.4 = Force!<lazy>       !v    %14.3, e1.5   <str$->
dependent slot

Type#8 [unused] lgl$-
lgl$#-          %14.5 = CallSafeBuiltin    wed   is.character(%14.4)    <lgl$->
dependent slot

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %50.3 = PopContext         C     %50.2, %48.4   <lgl$->
void                    Assume             D     %50.4, %50.5 (Typecheck@0x560a553a6140[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$-
val?            %22.4 = Force!<wrapped>    !v    %22.3, e1.5   <str$->
dependent slot

Type#13 [unused] lgl$-
lgl$#-          %22.5 = CallSafeBuiltin    wed   is.character(%22.4)    <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] str$-
val?            %44.4 = Force!<wrapped>    !v    %44.3, e1.5   <str$->
dependent slot

Type#16 [used] lgl$-
val?            %44.5 = CallBuiltin        !v    nzchar(%44.4) e1.5   <lgl$->
void                    Assume             D     %44.6, %44.7 (Typecheck@0x560a553a6140[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] vec
val?            %29.4 = Force!<value>      !v    %29.3, e1.5   <vec>
other unused reason

Type#24 [unused] str$-
val?            %29.6 = Force!<wrapped>    !v    %29.5, e1.5   <str$->
dependent slot

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] env-
val?            %31.4 = Force!<lazy>       !v    %31.3, e1.5   <env->
dependent slot

Type#27 [unused] env-
val?            %31.5 = CallBuiltin        !v    as.environment(%31.4) e1.5   <env->
dependent slot

Type#28 [unused] str$-
val?            %31.7 = Force!<lazy>       !v    %31.6, e1.5   <str$->
dependent slot

Type#29 [unused] (nil|cls) (polluted)
val?            %31.8 = CallBuiltin        !v    .Call(%29.4, %29.6, false, %31.5, %31.7) e1.5   <(nil|cls)>
dependent slot

Type#30 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#31 [used] env-
val?^ | miss    %34.0 = LdVar              eR    .GlobalEnv, e1.5
void                    Assume             D     %34.1, %31.11 (Typecheck@0x560a553a6140[Type#31])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [used] str$-
val?            %34.8 = Force!<wrapped>    !v    %34.7, e1.5   <str$->
void                    Assume             D     %34.9, %34.10 (Typecheck@0x560a553a6140[Type#33])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#34 [unused] nil-
val?            %36.2 = Extract2_1D        wed   %34.4, %36.1, elided   <nil->
other unused reason

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] (nil|cls) (polluted)
val?            %13.2 = Force!<value>      !     %13.0, e1.5   <(nil|cls)>
dependent slot

----------------------
Inlinee: .getGenericFromCache [0x560a5a356500]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away

Type#3 [unused] env-
optimized away

Type#4 [unused] cls
val?            %55.8 = StaticCall         !v    .getGenericFromCacheTable[0x560a6aca15e0](%55.4, %55.5, %55.6, %55.7) e55.3   <cls>
other unused reason

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#1 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#2 [used] int- (polluted)
val?            %48.9 = StaticCall         !v    match[0x560a6a87cfd0](%48.7, %48.8, 0L) { 0 1 2n } e48.6   <int->
void                    Assume             D     %48.10, %48.11 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %50.2 = Gt                 wed   %50.1, 0L, elided   <lgl->
other unused reason

======================= ClosureVersion: genericForBasic (CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj2) =======================
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
genericForBasic [0x560a5685bec0]
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] vec+
val?            %3.1  = Force!<wrapped>    !v    %3.0, e1.4   <vec+>
void                    Assume             D     %7.0, %5.4 (Typecheck@0x560a55ff3030[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str$-
val?            %5.2  = Force!<lazy>       !v    %5.1, e1.4   <str$->
void                    Assume             D     %5.3, %5.4 (Typecheck@0x560a55ff3030[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#5 [unused] cls
val?            %7.5  = Extract2_1D        wed   %7.2, %7.4, elided   <cls>
dependent slot

Type#6 [unused] lgl$-
val?            %7.8  = Force!<value>      !v    %7.7, e1.4   <lgl$->
other unused reason

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] cls
val?            %11.2 = Force!<value>      !     %11.0, e1.4   <cls>
dependent slot

======================= ClosureVersion: getGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 3) =======================
referenced: 68
referenced non-empty: 32
read non-empty: 29
used: 6
present non-empty: 11

Used
exact match: 3
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 15
dependent: 22
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 0

----------------------
getGeneric [0x560a54ffa020]
referenced: 64
referenced non-empty: 28
read non-empty: 25
used: 6
present non-empty: 10

Used
exact match: 3
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 22
optimized away non-empty: 12
dependent: 20
other reasons unused non-empty: 2

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|cls) (polluted)
val+            %2.4  = Force!<lazy>       !vr   %1.0,    <(str|cls)>
other unused reason

Type#2 [unused] lgl$-
lgl$#-          %2.5  = CallSafeBuiltin    wed   is.function(%2.4)    <lgl$->
dependent slot

Type#3 [unused] cls
optimized away (dependency)

Type#4 [used] lgl$-
val?            %57.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%57.3, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %57.5, %57.6 (Typecheck@0x560a574f80c0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] cls
val?            %61.2 = Force!<wrapped>    !     %61.0, e2.3   <cls>
dependent slot

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] env-
optimized away (dependency)

Type#14 [unused] str$-
optimized away (dependency)

Type#15 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#16 [unused] str$+
optimized away

Type#17 [unused] str$-
optimized away (dependency)

Type#18 [unused] cls
val?            %5.5  = StaticCall         !v    .getGeneric[0x560a6ac1d7e0](%5.3, missingArg, %5.4) e2.3   <cls>
dependent slot

Type#19 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#20 [used] env-
val?            %8.3  = CallBuiltin        !v    baseenv() e2.3   <env->
void                    Assume             D     %12.0, %10.4 (Typecheck@0x560a574f80c0[Type#20])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [used] str$-
val?            %10.2 = Force!<wrapped>    !v    %10.1, e2.3   <str$->
void                    Assume             D     %10.3, %10.4 (Typecheck@0x560a574f80c0[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#23 [unused] blt-
val?            %12.5 = Extract2_1D        wed   %12.2, %12.4, elided   <blt->
dependent slot

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [used] blt-
val?^ | miss    %43.3 = LdVar              eR    baseDef, e2.3
void                    Assume             D     %43.4, %13.1 (Typecheck@0x560a574f80c0[Type#25])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: blt-, expected: blt-, required: val?^ | miss

Type#26 [unused] lgl$-
lgl$#-          %43.8 = CallSafeBuiltin    wed   is.function(%43.7)    <lgl$->
dependent slot

Type#27 [unused] str$-
optimized away (dependency)

Type#28 [unused] cls
val?            %47.4 = StaticCall         !v    genericForBasic[0x560a6a8cfe20](%47.3, missingArg, false) { 0 2n } e2.3   <cls>
dependent slot

Type#29 [unused] cls
optimized away (dependency)

Type#30 [used] lgl$-
val?            %49.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%49.3, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %49.5, %49.6 (Typecheck@0x560a574f80c0[Type#30])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#31 [unused] str$-
optimized away (dependency)

Type#32 [unused] cls
optimized away (dependency)

Type#33 [unused] cls
val?            %55.8 = PopContext         C     %55.7, %53.5   <cls>
dependent slot

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] cls
val?            %19.4 = Force!<value>      !v    %19.3, e2.3   <cls>
dependent slot

Type#36 [used] lgl$-
val?            %19.5 = CallBuiltin        !v    is.function(%19.4) e2.3   <lgl$->
void                    Assume             D     %19.6, %19.7 (Typecheck@0x560a574f80c0[Type#36])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] cls
val?            %42.2 = Force!<value>      !     %42.0, e2.3   <cls>
dependent slot

----------------------
Inlinee: .cacheGeneric [0x560a54a9d440]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] cls
optimized away (dependency)

Type#2 [unused] env-
optimized away

Type#3 [unused] cls
val?            %55.7 = StaticCall         !v    .cacheGenericTable[0x560a6a8cef20](%55.4, %55.5, %55.6) e55.3   <cls>
dependent slot

======================= ClosureVersion: .getMethodsTable (!ExpMi,CorrOrd,!TMany,Argmatch miss: 3) =======================
referenced: 14
referenced non-empty: 10
read non-empty: 9
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 8
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
.getMethodsTable [0x560a58690090]
referenced: 14
referenced non-empty: 10
read non-empty: 9
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 8
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
optimized away

Type#1 [unused] env-
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] str$-
optimized away (dependency)

Type#5 [unused] env-
optimized away (dependency)

Type#6 [used] lgl$-
val?            %2.6  = StaticCall         !     exists[0x560a6adffa10](%2.4, missingArg, %2.5, missingArg, missingArg, false) { 0 2n 5n } e1.1   <lgl$->
void                    Assume             D     %2.7, %2.8 (Typecheck@0x560a5868ff80[Type#6])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [unused] env-
optimized away (dependency)

Type#13 [unused] env-
val?            %5.5  = StaticCall         !     get[0x560a6ac270b0](%5.3, missingArg, %5.4) { 0 2n } e1.1   <env->
dependent slot

======================= ClosureVersion: .cacheGenericTable (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 64
referenced non-empty: 24
read non-empty: 24
used: 4
present non-empty: 11

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 20
optimized away non-empty: 9
dependent: 20
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

----------------------
.cacheGenericTable [0x560a59442440]
referenced: 56
referenced non-empty: 16
read non-empty: 16
used: 4
present non-empty: 9

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 3
dependent: 12
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
val?            %1.4  = Force!<lazy>       !v    %1.1, e1.3   <cls>
dependent slot

Type#1 [used] env-
val?            %1.7  = Force!<lazy>       !v    %1.6, e1.3   <env->
void                    Assume             D     %4.0, %2.4 (Typecheck@0x560a594db2c0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] str$-
val?            %2.2  = Force!<lazy>       !v    %2.1, e1.3   <str$->
void                    Assume             D     %2.3, %2.4 (Typecheck@0x560a594db2c0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#4 [unused] cls
val?            %4.5  = Extract2_1D        wed   %4.2, %4.4, elided   <cls>
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %9.3  = Call               !v    %9.0(%9.1, %9.2) e1.3   <str$->
dependent slot

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] cls
val?            %11.4 = Force!<value>      !v    %11.3, e1.3   <cls>
dependent slot

Type#10 [used] lgl$-
val?            %11.5 = CallBuiltin        !v    is.function(%11.4) e1.3   <lgl$->
void                    Assume             D     %11.6, %11.7 (Typecheck@0x560a594db2c0[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] cls
optimized away (dependency)

Type#12 [unused] cls
optimized away (dependency)

Type#13 [used] lgl$-
val?            %15.12 = PopContext         C     %15.11, %15.5   <lgl$->
void                    Assume             D     %15.13, %15.14 (Typecheck@0x560a594db2c0[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#14 [unused] cls
val?            %19.2 = Force!<value>      !     %19.0, e1.3   <cls>
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] cls
optimized away (dependency)

Type#52 [unused] cls
val?            %7.6  = Force!<wrapped>    !v    %7.5, e1.3   <cls>
dependent slot

Type#53 [unused] env-
val?            %7.8  = Force!<wrapped>    !v    %7.7, e1.3   <env->
dependent slot

Type#54 [unused] str$-
val?            %7.10 = Force!<wrapped>    !v    %7.9, e1.3   <str$->
dependent slot

Type#55 [unused] cls
val?            %7.15 = Force!<value>      !     %7.13, e1.3   <cls>
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %15.9 = Force!<lazy>       !vL   %15.7, e15.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %15.10 = Force!<lazy>       !vL   %15.6, e15.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: getGeneric (!ExpMi,CorrOrd,!TMany,Argmatch miss: 3) ***********************
======================= ClosureVersion: genericForBasic (CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj2) =======================
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
genericForBasic [0x560a5685bec0]
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] vec+
val?            %3.1  = Force!<wrapped>    !v    %3.0, e1.4   <vec+>
void                    Assume             D     %7.0, %5.4 (Typecheck@0x560a55ff3030[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str$-
val?            %5.2  = Force!<lazy>       !v    %5.1, e1.4   <str$->
void                    Assume             D     %5.3, %5.4 (Typecheck@0x560a55ff3030[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#5 [unused] cls
val?            %7.5  = Extract2_1D        wed   %7.2, %7.4, elided   <cls>
dependent slot

Type#6 [unused] lgl$-
val?            %7.8  = Force!<value>      !v    %7.7, e1.4   <lgl$->
other unused reason

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] cls
val?            %11.2 = Force!<value>      !     %11.0, e1.4   <cls>
dependent slot

======================= ClosureVersion: getGeneric (!ExpMi,CorrOrd,!TMany,Argmatch miss: 3) =======================
referenced: 68
referenced non-empty: 32
read non-empty: 32
used: 7
present non-empty: 12

Used
exact match: 4
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 25
optimized away non-empty: 13
dependent: 21
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 0

----------------------
getGeneric [0x560a54ffa020]
referenced: 64
referenced non-empty: 28
read non-empty: 28
used: 7
present non-empty: 11

Used
exact match: 4
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 21
optimized away non-empty: 10
dependent: 19
other reasons unused non-empty: 2

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|cls) (polluted)
val?            %2.4  = Force!<lazy>       !v    %1.0, e2.3   <(str|cls)>
other unused reason

Type#2 [used] lgl$-
val?            %2.5  = CallBuiltin        !v    is.function(%2.4) e2.3   <lgl$->
void                    Assume             D     %2.6, %2.7 (Typecheck@0x560a574f80c0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] cls
optimized away (dependency)

Type#4 [used] lgl$-
val?            %60.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%60.3, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %60.5, %60.6 (Typecheck@0x560a574f80c0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] cls
val?            %64.2 = Force!<wrapped>    !     %64.0, e2.3   <cls>
dependent slot

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] env-
optimized away (dependency)

Type#14 [unused] str$-
optimized away (dependency)

Type#15 [unused] (nil|cls) (polluted)
val?            %6.6  = StaticCall         !v    .getGeneric[0x560a6ad77bb0](%6.3, %6.4, %6.5) e2.3   <(nil|cls)>
dependent slot

Type#16 [unused] str$+
optimized away

Type#17 [unused] str$-
optimized away (dependency)

Type#18 [unused] cls
val?            %59.5 = StaticCall         !v    .getGeneric[0x560a6b1075b0](%59.3, missingArg, %59.4) e2.3   <cls>
dependent slot

Type#19 [unused] (nil|cls) (polluted)
val?            %7.0  = Phi                      %6.6:BB6, %59.5:BB59   <(nil|cls)>
dependent slot

Type#20 [used] env-
val?            %10.3 = CallBuiltin        !v    baseenv() e2.3   <env->
void                    Assume             D     %14.0, %12.4 (Typecheck@0x560a574f80c0[Type#20])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [used] str$-
val?            %12.2 = Force!<wrapped>    !v    %12.1, e2.3   <str$->
void                    Assume             D     %12.3, %12.4 (Typecheck@0x560a574f80c0[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#23 [unused] blt-
val?            %14.5 = Extract2_1D        wed   %14.2, %14.4, elided   <blt->
dependent slot

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [used] blt-
val?^ | miss    %45.3 = LdVar              eR    baseDef, e2.3
void                    Assume             D     %45.4, %15.1 (Typecheck@0x560a574f80c0[Type#25])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: blt-, expected: blt-, required: val?^ | miss

Type#26 [unused] lgl$-
lgl$#-          %45.8 = CallSafeBuiltin    wed   is.function(%45.7)    <lgl$->
dependent slot

Type#27 [unused] str$-
optimized away (dependency)

Type#28 [unused] cls
val?            %49.4 = StaticCall         !v    genericForBasic[0x560a6afa1480](%49.3, missingArg, false) { 0 2n } e2.3   <cls>
dependent slot

Type#29 [unused] cls
optimized away (dependency)

Type#30 [used] lgl$-
val?            %51.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%51.3, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %51.5, %51.6 (Typecheck@0x560a574f80c0[Type#30])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#31 [unused] str$-
optimized away (dependency)

Type#32 [unused] cls
optimized away (dependency)

Type#33 [unused] cls
val?            %57.8 = PopContext         C     %57.7, %55.5   <cls>
dependent slot

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] cls
val?            %21.4 = Force!<value>      !v    %21.3, e2.3   <cls>
dependent slot

Type#36 [used] lgl$-
val?            %21.5 = CallBuiltin        !v    is.function(%21.4) e2.3   <lgl$->
void                    Assume             D     %21.6, %21.7 (Typecheck@0x560a574f80c0[Type#36])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] cls
val?            %44.2 = Force!<value>      !     %44.0, e2.3   <cls>
dependent slot

----------------------
Inlinee: .cacheGeneric [0x560a54a9d440]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] cls
optimized away (dependency)

Type#2 [unused] env-
optimized away

Type#3 [unused] cls
val?            %57.7 = StaticCall         !v    .cacheGenericTable[0x560a6afa0580](%57.4, %57.5, %57.6) e57.3   <cls>
dependent slot

======================= ClosureVersion: .getMethodsTable (!ExpMi,CorrOrd,!TMany,Argmatch miss: 3) =======================
referenced: 14
referenced non-empty: 10
read non-empty: 9
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 8
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
.getMethodsTable [0x560a58690090]
referenced: 14
referenced non-empty: 10
read non-empty: 9
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 8
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
optimized away

Type#1 [unused] env-
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] str$-
optimized away (dependency)

Type#5 [unused] env-
optimized away (dependency)

Type#6 [used] lgl$-
val?            %2.6  = StaticCall         !     exists[0x560a6ae32ec0](%2.4, missingArg, %2.5, missingArg, missingArg, false) { 0 2n 5n } e1.1   <lgl$->
void                    Assume             D     %2.7, %2.8 (Typecheck@0x560a5868ff80[Type#6])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [unused] env-
optimized away (dependency)

Type#13 [unused] env-
val?            %8.5  = StaticCall         !     get[0x560a6ae32d80](%8.3, missingArg, %8.4) { 0 2n } e1.1   <env->
dependent slot

======================= ClosureVersion: .cacheGenericTable (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 64
referenced non-empty: 24
read non-empty: 24
used: 4
present non-empty: 11

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 20
optimized away non-empty: 9
dependent: 20
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

----------------------
.cacheGenericTable [0x560a59442440]
referenced: 56
referenced non-empty: 16
read non-empty: 16
used: 4
present non-empty: 9

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 3
dependent: 12
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
val?            %1.4  = Force!<lazy>       !v    %1.1, e1.3   <cls>
dependent slot

Type#1 [used] env-
val?            %1.7  = Force!<lazy>       !v    %1.6, e1.3   <env->
void                    Assume             D     %4.0, %2.4 (Typecheck@0x560a594db2c0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] str$-
val?            %2.2  = Force!<lazy>       !v    %2.1, e1.3   <str$->
void                    Assume             D     %2.3, %2.4 (Typecheck@0x560a594db2c0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#4 [unused] cls
val?            %4.5  = Extract2_1D        wed   %4.2, %4.4, elided   <cls>
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %10.3 = Call               !v    %10.0(%10.1, %10.2) e1.3   <str$->
dependent slot

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] cls
val?            %12.4 = Force!<value>      !v    %12.3, e1.3   <cls>
dependent slot

Type#10 [used] lgl$-
val?            %12.5 = CallBuiltin        !v    is.function(%12.4) e1.3   <lgl$->
void                    Assume             D     %12.6, %12.7 (Typecheck@0x560a594db2c0[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] cls
optimized away (dependency)

Type#12 [unused] cls
optimized away (dependency)

Type#13 [used] lgl$-
val?            %31.12 = PopContext         C     %31.11, %31.5   <lgl$->
void                    Assume             D     %31.13, %31.14 (Typecheck@0x560a594db2c0[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#14 [unused] cls
val?            %42.2 = Force!<value>      !     %42.0, e1.3   <cls>
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] cls
optimized away (dependency)

Type#52 [unused] cls
val?            %8.6  = Force!<wrapped>    !v    %8.5, e1.3   <cls>
dependent slot

Type#53 [unused] env-
val?            %8.8  = Force!<wrapped>    !v    %8.7, e1.3   <env->
dependent slot

Type#54 [unused] str$-
val?            %8.10 = Force!<wrapped>    !v    %8.9, e1.3   <str$->
dependent slot

Type#55 [unused] cls
val?            %8.15 = Force!<value>      !     %8.13, e1.3   <cls>
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %31.9 = Force!<lazy>       !vL   %31.7, e31.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %31.10 = Force!<lazy>       !vL   %31.6, e31.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: do.call (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) ***********************
======================= ClosureVersion: do.call (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 9
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 3
used polluted: 1

----------------------
do.call [0x560a55e919d0]
referenced: 9
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 3
used polluted: 1

Type#0 [unused] env-
optimized away (dependency)

Type#1 [used] vec+ (polluted)
val?            %1.6  = Force!<lazy>       !v    %1.0, e1.2   <vec+>
void                    Assume             D     %1.8, %1.9 (Typecheck@0x560a55e918c0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?^ | miss

Type#2 [unused] lgl$-
val?            %3.1  = Force!<lazy>       !v    %3.0, e1.2   <lgl$->
other unused reason

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] val?- (polluted)
val?            %4.1  = Force!<lazy>       !v    %4.0, e1.2   <val?->
other unused reason

Type#7 [unused] vec+ (polluted)
val?            %4.3  = Force!<wrapped>    !v    %4.2, e1.2   <vec+>
dependent slot

Type#8 [unused] env-
val?            %4.6  = Force!<lazy>       !     %4.4, e1.2   <env->
dependent slot

*********************** Compilation session for: exists (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,!Obj1 miss: 4) ***********************
======================= ClosureVersion: exists (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,!Obj1 miss: 4) =======================
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

----------------------
exists [0x560a572da620]
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] env-
optimized away (dependency)

Type#4 [used] str$+ (polluted)
val?            %1.8  = Force!<lazy>       !v    %1.1, e1.2   <str$+>
void                    Assume             D     %1.9, %1.10 (Typecheck@0x560a574dece0[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#5 [unused] env-
val?            %2.3  = Force!<lazy>       !v    %2.2, e1.2   <env->
dependent slot

Type#6 [unused] str$-
val?            %2.5  = Force!<lazy>       !v    %2.4, e1.2   <str$->
other unused reason

Type#7 [unused] lgl$-
val?            %2.7  = Force!<lazy>       !v    %2.6, e1.2   <lgl$->
other unused reason

*********************** Compilation session for: environmentIsLocked (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: environmentIsLocked (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
environmentIsLocked [0x560a566af530]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] env-
val?            %1.2  = Force!<lazy>       !v    %1.0, e1.1   <env->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a5664a940[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?^ | miss

*********************** Compilation session for: FUN (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: FUN (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 0
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
FUN [0x560a6b49a9e0]
referenced: 0
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

*********************** Compilation session for: FUN (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: FUN (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 26
referenced non-empty: 12
read non-empty: 12
used: 2
present non-empty: 2

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 10
optimized away non-empty: 8
dependent: 6
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

----------------------
FUN [0x560a6b32ef20]
referenced: 8
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] nil-
optimized away (dependency)

Type#1 [used] lgl$-
val?            %8.2  = PopContext         C     %8.1, %2.5   <lgl$->
void                    Assume             D     %8.3, %8.4 (Typecheck@0x560a6b255150[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] nil-
val?            %13.2 = Force!<wrapped>    !     %13.0, e2.3   <nil->
dependent slot

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %6.10 = Force!<lazy>       !vr   %6.8,    <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: %||% [0x560a6b20b0f0]
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away (dependency)

----------------------
Inlinee: is_theme_element [0x560a6b20afd0]
referenced: 12
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] nil-
optimized away

Type#3 [used] lgl$-
val?            %6.12 = PopContext         C     %6.11, %6.7   <lgl$->
void                    Assume             D     %6.13, %6.14 (Typecheck@0x560a6b219780[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: is_theme_element (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: is_theme_element (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 18
referenced non-empty: 9
read non-empty: 9
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 7
dependent: 4
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

----------------------
is_theme_element [0x560a6b20afd0]
referenced: 12
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] nil-
optimized away

Type#3 [used] lgl$-
val?            %4.12 = PopContext         C     %4.11, %4.7   <lgl$->
void                    Assume             D     %4.13, %4.14 (Typecheck@0x560a6b219780[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %4.10 = Force!<lazy>       !vL   %4.8, e4.9   <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: %||% [0x560a6b20b0f0]
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away (dependency)

*********************** Compilation session for: %||% (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: %||% (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
%||% [0x560a6b20b0f0]
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val+            %1.2  = Force!<lazy>       !vr   %1.1,    <str$->
dependent slot

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away (dependency)

*********************** Compilation session for: FUN (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: is_theme_element (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1) =======================
referenced: 18
referenced non-empty: 11
read non-empty: 11
used: 2
present non-empty: 3

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 6
dependent: 4
other reasons unused non-empty: 5

Polluted
polluted: 1
used polluted: 0

----------------------
is_theme_element [0x560a6b20afd0]
referenced: 12
referenced non-empty: 6
read non-empty: 6
used: 2
present non-empty: 2

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val+            %1.2  = Force<lazy>              %1.0,    <str$->
dependent slot

Type#1 [unused] str$-
val+            %4.0  = Phi                      "any":BB3, %1.2:BB24   <str$->
dependent slot

Type#2 [unused] nil-
optimized away

Type#3 [used] lgl$-
val?            %21.9 = PopContext         C     %21.8, %21.4   <lgl$->
void                    Assume             D     %21.10, %21.11 (Typecheck@0x560a6b219780[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] vec
optimized away

Type#11 [used] lgl$-
val?            %17.10 = PopContext         C     %17.9, %17.5   <lgl$->
void                    Assume             D     %17.11, %17.12 (Typecheck@0x560a6b219780[Type#11])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %17.8 = Force!<lazy>       !vL   %17.6, e17.7   <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: %||% [0x560a6b20b0f0]
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away (dependency)

======================= ClosureVersion: FUN (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 23
referenced non-empty: 14
read non-empty: 10
used: 3
present non-empty: 2

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 11
optimized away non-empty: 9
dependent: 6
other reasons unused non-empty: 5

Polluted
polluted: 1
used polluted: 0

----------------------
FUN [0x560a6b41a490]
referenced: 8
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 1

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec
optimized away (dependency)

Type#1 [used] lgl$-
val?            %6.2  = PopContext         C     %6.1, %2.5   <lgl$->
void                    Assume             D     %6.3, %6.4 (Typecheck@0x560a6b6d4210[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] vec
optimized away (dependency)

Type#3 [used] lgl$-
val?            %9.4  = StaticCall         !v    is_theme_element[0x560a6b801670](%9.3, "blank") e2.3   <lgl$->
void                    Assume             D     %9.5, %9.6 (Typecheck@0x560a6b6d4210[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] vec
val?            %14.2 = Force!<value>      !     %14.0, e2.3   <vec>
dependent slot

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %4.10 = Force!<lazy>       !vr   %4.8,    <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: is_theme_element [0x560a6b20afd0]
referenced: 12
referenced non-empty: 6
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 5
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] nil-
optimized away

Type#3 [used] lgl$-
val?            %4.12 = PopContext         C     %4.11, %4.7   <lgl$->
void                    Assume             D     %4.13, %4.14 (Typecheck@0x560a6b219780[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] vec
optimized away

Type#11 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: matrix (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2,SimpleReal1,SimpleReal2 miss: 2) ***********************
======================= ClosureVersion: matrix (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2,SimpleReal1,SimpleReal2 miss: 2) =======================
referenced: 13
referenced non-empty: 9
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 5
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

----------------------
matrix [0x560a56720ee0]
referenced: 13
referenced non-empty: 9
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 5
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$-
val+            %1.3  = Force!<value>            %1.2,    <str$->
dependent slot

Type#5 [unused] lgl$-
lgl$#-          %1.4  = CallSafeBuiltin    wed   is.atomic(%1.3)    <lgl$->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] str$-
optimized away (dependency)

Type#9 [unused] (int|real)$- (polluted)
real$-          %1.5  = Force!<value>            %1.1,    <(int|real)$->
dependent slot

Type#10 [unused] (int|real)$- (polluted)
real$-          %1.6  = Force!<value>            %1.0,    <(int|real)$->
dependent slot

Type#11 [unused] lgl$-
optimized away (dependency)

Type#12 [unused] nil-
optimized away

*********************** Compilation session for: caller_env (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: caller_env (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
caller_env [0x560a683ca5f0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] real$-
optimized away (dependency)

Type#1 [unused] real$-
optimized away (dependency)

Type#2 [unused] env-
val?            %2.5  = StaticCall         !     parent.frame[0x560a6c34cfc0](%2.4) e2.3   <env->
other unused reason

*********************** Compilation session for: .cacheClass (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl3,!Obj0,!Obj3) ***********************
======================= ClosureVersion: .cacheClass (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl3,!Obj0,!Obj3) =======================
referenced: 74
referenced non-empty: 42
read non-empty: 35
used: 6
present non-empty: 15

Used
exact match: 4
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 36
optimized away non-empty: 21
dependent: 31
other reasons unused non-empty: 5

Polluted
polluted: 3
used polluted: 0

----------------------
.cacheClass [0x560a5a69c000]
referenced: 53
referenced non-empty: 24
read non-empty: 24
used: 6
present non-empty: 11

Used
exact match: 4
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 18
optimized away non-empty: 7
dependent: 16
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [used] lgl$-
val?            %2.4  = Force!<lazy>       !v    %1.1, e2.3   <lgl$->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a557ccf40[Type#0])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#1 [unused] lgl$-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [used] env-
val?            %7.1  = Force!<wrapped>    !v    %7.0, e2.3   <env->
void                    Assume             D     %11.0, %9.4 (Typecheck@0x560a557ccf40[Type#7])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [used] str$-
val?            %9.2  = Force!<lazy>       !v    %9.1, e2.3   <str$->
void                    Assume             D     %9.3, %9.4 (Typecheck@0x560a557ccf40[Type#9])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#10 [unused] (nil|other) (polluted)
val?            %11.5 = Extract2_1D        wed   %11.2, %11.4, elided   <(nil|other)>
other unused reason

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] str$-
val?            %15.3 = Call               !v    %15.0(%15.1, %15.2) e2.3   <str$->
dependent slot

Type#14 [unused] other$
optimized away (dependency)

Type#15 [used] lgl$-
val?            %17.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%17.3, "classRepresentation") e2.3   <lgl$->
void                    Assume             D     %17.5, %17.6 (Typecheck@0x560a557ccf40[Type#15])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#16 [unused] other$
optimized away (dependency)

Type#17 [unused] other$
optimized away (dependency)

Type#18 [used] lgl$-
val?            %27.12 = PopContext         C     %27.11, %27.5   <lgl$->
void                    Assume             D     %27.13, %27.14 (Typecheck@0x560a557ccf40[Type#18])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] str$-
val?            %30.3 = Call               !v    %30.0(%30.1, %30.2) e2.3   <str$->
dependent slot

Type#22 [unused] str$-
optimized away (dependency)

Type#23 [unused] str$-
optimized away (dependency)

Type#24 [used] lgl$-
val?            %32.11 = PopContext         C     %32.10, %32.5   <lgl$->
void                    Assume             D     %32.12, %32.13 (Typecheck@0x560a557ccf40[Type#24])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] str$-
val?            %36.4 = Force!<wrapped>    !v    %36.3, e2.3   <str$->
dependent slot

Type#32 [unused] other$
optimized away (dependency)

Type#33 [unused] str-
val?            %38.10 = PopContext         C     %38.9, %38.4   <str->
other unused reason

Type#34 [unused] other$
val?            %38.13 = Force!<wrapped>    !v    %38.12, e2.3   <other$>
dependent slot

Type#35 [unused] env-
val?            %38.15 = Force!<wrapped>    !v    %38.14, e2.3   <env->
dependent slot

Type#36 [unused] str$-
val?            %38.17 = Force!<wrapped>    !v    %38.16, e2.3   <str$->
dependent slot

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] other$
val?            %13.1 = Force!<lazy>       !v    %13.0, e2.3   <other$>
dependent slot

Type#51 [unused] env-
val?            %13.3 = Force!<wrapped>    !v    %13.2, e2.3   <env->
dependent slot

Type#52 [unused] str$-
val?            %13.5 = Force!<wrapped>    !v    %13.4, e2.3   <str$->
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %27.9 = Force!<lazy>       !vL   %27.7, e27.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %32.9 = Force!<lazy>       !vL   %32.6, e32.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: .extendsForS3 [0x560a6c353b80]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] other$
optimized away

Type#1 [unused] str-
val?            %38.9 = NamedCall          !v    %38.7(%38.8, maybe=false) e38.6   <str->
other unused reason

----------------------
Inlinee: isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 7
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 7
dependent: 7
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] lgl$-
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] lgl$-
optimized away (dependency)

Type#9 [unused] lgl$-
lgl$-           %4.2  = CallSafeBuiltin    wed   is.na(%4.1)    <lgl$->
dependent slot

Type#10 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: duplicated (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2) ***********************
======================= ClosureVersion: duplicated (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2) =======================
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
duplicated [0x560a586eaf10]
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

*********************** Compilation session for:  (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1) ***********************
======================= ClosureVersion: grep (CorrOrd,!TMany,Argmatch;Eager2,Eager3,Eager4,NonRefl2,NonRefl3,NonRefl4,!Obj4 miss: 3) =======================
referenced: 95
referenced non-empty: 19
read non-empty: 19
used: 3
present non-empty: 12

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 16
optimized away non-empty: 4
dependent: 12
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

----------------------
grep [0x560a54becba0]
referenced: 90
referenced non-empty: 14
read non-empty: 14
used: 2
present non-empty: 11

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 1
dependent: 12
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str$-
val?            %5.4  = Force!<lazy>       !v    %5.3, e1.7   <str$->
void                    Assume             D     %5.5, %5.6 (Typecheck@0x560a543a0790[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

Type#2 [unused] str$-
val+            %7.2  = CallSafeBuiltin    wed   as.character(%7.1)    <str$->
dependent slot

Type#3 [unused] str-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %11.2 = PopContext         C     %11.1, %9.4   <lgl$->
void                    Assume             D     %11.3, %11.4 (Typecheck@0x560a543a0790[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] str-
val?            %28.4 = Force!<wrapped>    !v    %28.3, e1.7   <str->
dependent slot

Type#21 [unused] lgl$-
lgl$#-          %28.5 = CallSafeBuiltin    wed   is.character(%28.4)    <lgl$->
dependent slot

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] str$-
val?            %30.1 = Force!<value>      !v    %30.0, e1.7   <str$->
dependent slot

Type#28 [unused] str-
val?            %30.3 = Force!<wrapped>    !v    %30.2, e1.7   <str->
dependent slot

Type#29 [unused] lgl$-
val?            %30.5 = Force!<lazy>       !v    %30.4, e1.7   <lgl$->
dependent slot

Type#30 [unused] lgl$-
val?            %30.7 = Force!<value>      !v    %30.6, e1.7   <lgl$->
dependent slot

Type#31 [unused] lgl$-
val?            %30.9 = Force!<lazy>       !v    %30.8, e1.7   <lgl$->
dependent slot

Type#32 [unused] lgl$-
val?            %30.11 = Force!<lazy>       !v    %30.10, e1.7   <lgl$->
dependent slot

Type#33 [unused] lgl$-
val?            %30.13 = Force!<lazy>       !v    %30.12, e1.7   <lgl$->
dependent slot

Type#34 [unused] lgl$-
val?            %30.15 = Force!<lazy>       !v    %30.14, e1.7   <lgl$->
dependent slot

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] $#-
optimized away (dependency)

Type#87 [unused] $#-
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %9.11 = Force!<lazy>       !vL   %9.9, e9.10   <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: is.factor [0x560a55ec8200]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (int|str)+ (polluted)
optimized away

Type#1 [used] lgl$-
val?            %9.13 = PopContext         C     %9.12, %9.8   <lgl$->
void                    Assume             D     %9.14, %9.15 (Typecheck@0x560a55ec8110[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

======================= ClosureVersion:  (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1) =======================
referenced: 49
referenced non-empty: 16
read non-empty: 14
used: 0
present non-empty: 7

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 16
optimized away non-empty: 9
dependent: 12
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

----------------------
 [0x560a56df8d20]
referenced: 46
referenced non-empty: 13
read non-empty: 13
used: 0
present non-empty: 6

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 13
optimized away non-empty: 7
dependent: 12
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] str$-
val?            %2.11 = PopContext         C     %2.10, %2.5   <str$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env-
val?            %4.4  = Force!<lazy>       !v    %4.3, e1.1   <env->
dependent slot

Type#5 [unused] lgl$-
lgl$#-          %4.5  = CallSafeBuiltin    wed   is.environment(%4.4)    <lgl$->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] lgl$-
val?            %8.2  = Force!<lazy>       !     %8.0, e1.1   <lgl$->
dependent slot

Type#10 [unused] str$-
optimized away (dependency)

Type#11 [unused] env-
optimized away (dependency)

Type#12 [unused] str-
optimized away (dependency)

Type#13 [unused] str-
val?            %11.5 = StaticCall         !     grep[0x560a6ca79b20](%11.3, %11.4, missingArg, missingArg, true) { 0 1 4n } e1.1   <str->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] str-
optimized away (dependency)

Type#43 [unused] str$-
optimized away (dependency)

Type#44 [unused] int$-
optimized away

Type#45 [unused] str-
val?            %13.5 = StaticCall         !     substring[0x560a6c6baf90](%13.3, %13.4) e1.1   <str->
dependent slot

----------------------
Inlinee: paste0 [0x560a55fc8790]
referenced: 3
referenced non-empty: 3
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] vec-
val+            %2.9  = CallSafeBuiltin    wed   list("^", %2.8)    <vec->
other unused reason

Type#1 [unused] (nil|str)- (polluted)
optimized away

Type#2 [unused] lgl$-
optimized away

======================= ClosureVersion: substring (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 36
referenced non-empty: 18
read non-empty: 18
used: 8
present non-empty: 4

Used
exact match: 4
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 10
optimized away non-empty: 6
dependent: 10
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
substring [0x560a59fc91e0]
referenced: 36
referenced non-empty: 18
read non-empty: 18
used: 8
present non-empty: 4

Used
exact match: 4
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 10
optimized away non-empty: 6
dependent: 10
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str-
val?            %1.3  = Force!<lazy>       !v    %1.1, e1.2   <str->
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a58e64500[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?^ | miss

Type#2 [unused] lgl$-
lgl$#-          %2.2  = CallSafeBuiltin    wed   is.character(%2.1)    <lgl$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [used] str-
val?            %10.7 = Force!<wrapped>    !v    %10.6, e1.2   <str->
void                    Assume             D     %10.8, %10.9 (Typecheck@0x560a58e64500[Type#13])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#14 [used] int$-
(int|real)$-    %12.2 = CallSafeBuiltin    wed   length(%12.1)    <int$->
void                    Assume             D     %12.3, %12.4 (Typecheck@0x560a58e64500[Type#14])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [used] int$-
val?            %16.4 = Force!<lazy>       !v    %16.3, e1.2   <int$->
void                    Assume             D     %16.5, %16.6 (Typecheck@0x560a58e64500[Type#16])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?+

Type#17 [unused] int$-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [used] int$-
val?            %18.5 = Force!<lazy>       !v    %18.4, e1.2   <int$->
void                    Assume             D     %18.6, %18.7 (Typecheck@0x560a58e64500[Type#19])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?+

Type#20 [unused] int$-
optimized away (dependency)

Type#21 [unused] int$-
int$-           %20.1 = CallSafeBuiltin    wed   max(%14.1, 1L, 1L)    <int$->
dependent slot

Type#22 [used] int$-
val?^ | miss    %22.0 = LdVar              eR    lt, e1.2
void                    Assume             D     %22.1, %20.3 (Typecheck@0x560a58e64500[Type#22])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#23 [unused] int$-
optimized away (dependency)

Type#24 [unused] int$-
optimized away (dependency)

Type#25 [unused] lgl$-
lgl$-           %23.0 = Lt                 d     %22.3, %20.1, elided   <lgl$->
dependent slot

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] str-
val?            %25.1 = Force!<wrapped>    !v    %25.0, e1.2   <str->
dependent slot

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [used] int$-
val?^ | miss    %27.3 = LdVar              eR    first, e1.2
void                    Assume             D     %27.4, %25.2 (Typecheck2@0x560a58e64500[Type#31])
narrowed with static type: no
widened: yes
checkFor: int$~-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?+

Type#32 [unused] int$-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [used] int$-
val?^ | miss    %27.8 = LdVar              eR    last, e1.2
void                    Assume             D     %27.9, %25.2 (Typecheck2@0x560a58e64500[Type#34])
narrowed with static type: no
widened: yes
checkFor: int$~-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?+

Type#35 [unused] int$-
optimized away (dependency)

*********************** Compilation session for: s3_register (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: exists (!ExpMi,CorrOrd,!TMany,Argmatch miss: 4) =======================
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

----------------------
exists [0x560a572da620]
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] env-
optimized away (dependency)

Type#4 [used] str$+ (polluted)
val?            %1.8  = Force!<lazy>       !v    %1.1, e1.2   <str$+>
void                    Assume             D     %1.9, %1.10 (Typecheck@0x560a574dece0[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#5 [unused] env-
val?            %2.3  = Force!<lazy>       !v    %2.2, e1.2   <env->
dependent slot

Type#6 [unused] str$-
val?            %2.5  = Force!<lazy>       !v    %2.4, e1.2   <str$->
other unused reason

Type#7 [unused] lgl$-
val?            %2.7  = Force!<lazy>       !v    %2.6, e1.2   <lgl$->
other unused reason

======================= ClosureVersion: setHook (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1 miss: 1) =======================
referenced: 38
referenced non-empty: 19
read non-empty: 19
used: 4
present non-empty: 4

Used
exact match: 1
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 11
dependent: 11
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 1

----------------------
setHook [0x560a5973c230]
referenced: 34
referenced non-empty: 15
read non-empty: 15
used: 4
present non-empty: 3

Used
exact match: 1
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 11
optimized away non-empty: 8
dependent: 9
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 1

Type#0 [unused] str-
optimized away (dependency)

Type#1 [unused] str-
optimized away (dependency)

Type#2 [unused] str$-
val?            %1.7  = StaticCall         !v    match.arg[0x560a6cbd3720](%1.6, <str [1] "append" "prepend" "replace">) e1.2   <str$->
dependent slot

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] vec- (polluted)
val?            %2.11 = PopContext         C     %2.10, %2.4   <vec->
dependent slot

Type#5 [used] str$-
val?            %2.14 = Force!<value>      !v    %2.13, e1.2   <str$->
void                    Assume             D     %2.35, %2.36 (Typecheck@0x560a5961ae00[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] vec- (polluted)
val?^ | miss    %8.4  = LdVar              eR    old, e1.2
void                    Assume             D     %8.5, %6.3 (Typecheck@0x560a5961ae00[Type#8])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#9 [used] cls-
val?            %8.10 = Force!<lazy>       !v    %8.9, e1.2   <cls->
void                    Assume             D     %8.11, %8.12 (Typecheck@0x560a5961ae00[Type#9])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: cls-, expected: cls-, required: val?+

Type#10 [unused] vec-
val+            %10.2 = CallSafeBuiltin    wed   c(%8.8, %10.1)    <vec->
dependent slot

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] vec-
optimized away (dependency)

Type#24 [used] int$-
(int|real)$-    %12.3 = CallSafeBuiltin    wed   length(%10.2)    <int$->
void                    Assume             D     %12.4, %12.5 (Typecheck@0x560a5961ae00[Type#24])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] str$-
optimized away (dependency)

Type#31 [unused] vec-
optimized away (dependency)

Type#32 [unused] env-
optimized away

Type#33 [unused] nil-
optimized away

----------------------
Inlinee: getHook [0x560a57734970]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] env-
optimized away

Type#2 [unused] vec-
optimized away (dependency)

Type#3 [unused] vec-
val?            %2.10 = StaticCall         !v    get0[0x560a6c97e350](%2.7, %2.8, missingArg, false, %2.9) { 0 1n 3n 4n } e2.6   <vec->
dependent slot

======================= ClosureVersion: s3_register (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 50
referenced non-empty: 49
read non-empty: 46
used: 6
present non-empty: 8

Used
exact match: 4
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 43
optimized away non-empty: 35
dependent: 38
other reasons unused non-empty: 5

Polluted
polluted: 2
used polluted: 0

----------------------
s3_register [0x560a6803e630]
referenced: 28
referenced non-empty: 28
read non-empty: 28
used: 4
present non-empty: 5

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 24
optimized away non-empty: 19
dependent: 22
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] lgl$-
optimized away (dependency)

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] int$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] str$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] str$-
optimized away (dependency)

Type#8 [unused] int$-
optimized away (dependency)

Type#9 [unused] lgl$-
optimized away (dependency)

Type#10 [unused] str$-
val?            %6.4  = Force!<wrapped>    !v    %6.3, e1.3   <str$->
dependent slot

Type#11 [used] vec$-
vec+            %6.5  = CallSafeBuiltin    wed   strsplit(%6.4, "::", false, false, false)    <vec$->
void                    Assume             D     %6.6, %6.7 (Typecheck@0x560a684bfed0[Type#11])
narrowed with static type: no
widened: yes
checkFor: vec-, static: vec+, feedback: vec$-, expected: vec$-, required: val?+

Type#12 [unused] str-
val             %8.2  = Extract2_1D        wed   %8.1, 1, elided   <str->
dependent slot

Type#13 [unused] str-
optimized away (dependency)

Type#14 [unused] int$-
optimized away (dependency)

Type#15 [unused] lgl$-
optimized away (dependency)

Type#16 [used] str-
val?^ | miss    %12.0 = LdVar              eR    pieces, e1.3
void                    Assume             D     %12.1, %10.5 (Typecheck@0x560a684bfed0[Type#16])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#17 [unused] str$-
val?            %12.7 = Extract2_1D        wed   %12.4, 1, elided   <str$->
dependent slot

Type#18 [unused] str-
optimized away (dependency)

Type#19 [unused] str$-
val?            %12.9 = Extract2_1D        wed   %12.4, 2, elided   <str$->
dependent slot

Type#20 [unused] env-
val?            %14.3 = StaticCall         !v    parent.frame[0x560a6cbcfd60]() e1.3   <env->
other unused reason

Type#21 [unused] str$-
optimized away (dependency)

Type#22 [unused] str$-
optimized away (dependency)

Type#23 [unused] str$-
optimized away (dependency)

Type#24 [used] lgl$-
val?            %18.9 = PopContext         C     %18.8, %18.4   <lgl$->
void                    Assume             D     %18.10, %18.11 (Typecheck@0x560a684bfed0[Type#24])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#25 [unused] str$-
optimized away (dependency)

Type#26 [used] lgl$-
val?            %29.1 = PopContext         C     %29.0, %21.4   <lgl$->
void                    Assume             D     %29.2, %29.3 (Typecheck@0x560a684bfed0[Type#26])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#27 [unused] nil-
optimized away

----------------------
Inlinee: environmentIsLocked [0x560a566af530]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val?            %26.7 = Force!<lazy>       !vL   %26.5, e26.6   <env->
other unused reason

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 7
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %23.8 = Force!<lazy>       !vL   %23.6, e23.7   <val?>
dependent slot

Type#1 [unused] val? (polluted)
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: is_sealed [0x560a683287f0]
referenced: 5
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 0

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [used] lgl$-
val?            %23.10 = PopContext         C     %23.9, %23.5   <lgl$->
void                    Assume             D     %23.11, %23.12 (Typecheck@0x560a68328700[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] env-
optimized away

Type#4 [used] lgl$-
val?            %26.9 = PopContext         C     %26.8, %26.4   <lgl$->
void                    Assume             D     %26.10, %26.11 (Typecheck@0x560a68328700[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: isNamespaceLoaded [0x560a5907d3f0]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val?            %18.7 = Force!<lazy>       !vL   %18.5, e18.6   <str$->
other unused reason

----------------------
Inlinee: strsplit [0x560a55f04d60]
referenced: 7
referenced non-empty: 6
read non-empty: 3
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 6
dependent: 6
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: register (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: exists (!ExpMi,CorrOrd,!TMany,Argmatch miss: 4) =======================
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

----------------------
exists [0x560a572da620]
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] env-
optimized away (dependency)

Type#4 [used] str$+ (polluted)
val?            %1.8  = Force!<lazy>       !v    %1.1, e1.2   <str$+>
void                    Assume             D     %1.9, %1.10 (Typecheck@0x560a574dece0[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#5 [unused] env-
val?            %2.3  = Force!<lazy>       !v    %2.2, e1.2   <env->
dependent slot

Type#6 [unused] str$-
val?            %2.5  = Force!<lazy>       !v    %2.4, e1.2   <str$->
other unused reason

Type#7 [unused] lgl$-
val?            %2.7  = Force!<lazy>       !v    %2.6, e1.2   <lgl$->
other unused reason

======================= ClosureVersion: register (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 31
referenced non-empty: 21
read non-empty: 21
used: 1
present non-empty: 5

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 20
optimized away non-empty: 15
dependent: 16
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

----------------------
register [0x560a67ddf3f0]
referenced: 24
referenced non-empty: 14
read non-empty: 14
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 13
optimized away non-empty: 10
dependent: 11
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] env-
val?            %2.5  = StaticCall         !v    asNamespace[0x560a6ce796f0](%2.4) e2.3   <env->
dependent slot

Type#2 [unused] (nil|cls)- (polluted)
optimized away

Type#3 [unused] cls-
val?            %8.1  = PopContext         C     %8.0, %4.9   <cls->
dependent slot

Type#4 [unused] cls-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] str$-
optimized away (dependency)

Type#7 [unused] env-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %12.5 = StaticCall         !     exists[0x560a6cd6def0](%12.3, %12.4) e2.3   <lgl$->
void                    Assume             D     %12.6, %12.7 (Typecheck@0x560a6810ce40[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] str$-
optimized away (dependency)

Type#20 [unused] str$-
optimized away (dependency)

Type#21 [unused] cls-
optimized away (dependency)

Type#22 [unused] env-
optimized away (dependency)

Type#23 [unused] vec+
val?            %16.7 = StaticCall         !     registerS3method[0x560a6c7c3fa0](%16.3, %16.4, %16.5, %16.6) { 0 1 2 3n } e2.3   <vec+>
other unused reason

----------------------
Inlinee: get_method [0x560a68414ad0]
referenced: 7
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 5
dependent: 5
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|cls)- (polluted)
val?            %4.13 = Force!<lazy>       !L    %4.10, e4.12   <(nil|cls)->
other unused reason

Type#1 [unused] cls-
optimized away (dependency)

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] str$-
optimized away (dependency)

Type#5 [unused] env-
optimized away

Type#6 [unused] cls-
val?            %17.5 = StaticCall         !     get[0x560a6ce0bb60](%17.3, missingArg, %17.4) { 0 2n } e4.12   <cls->
dependent slot

*********************** Compilation session for: is_namespace (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: is_namespace (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
is_namespace [0x560a683484c0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away

Type#1 [used] lgl$-
val?            %2.10 = PopContext         C     %2.9, %2.5   <lgl$->
void                    Assume             D     %2.11, %2.12 (Typecheck@0x560a683483d0[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val?            %2.8  = Force!<lazy>       !vr   %2.6,    <env->
other unused reason

*********************** Compilation session for: ns_env (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) ***********************
======================= ClosureVersion: ns_env (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) =======================
referenced: 28
referenced non-empty: 20
read non-empty: 19
used: 5
present non-empty: 8

Used
exact match: 4
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 7
dependent: 8
other reasons unused non-empty: 7

Polluted
polluted: 3
used polluted: 0

----------------------
ns_env [0x560a687edbf0]
referenced: 17
referenced non-empty: 12
read non-empty: 11
used: 3
present non-empty: 4

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 5
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] (str|env)- (polluted)
val+            %1.1  = Force<lazy>              %1.0,    <(str|env)->
other unused reason

Type#2 [unused] str$-
str$-           %2.3  = CallSafeBuiltin    wed   typeof(%1.1)    <str$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] env-
optimized away (dependency)

Type#8 [unused] env-
val?            %28.4 = StaticCall         !v    topenv[0x560a6cda4950](%28.3) e6.13   <env->
dependent slot

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %11.2 = PopContext         C     %11.1, %7.7   <lgl$->
void                    Assume             D     %11.3, %11.4 (Typecheck@0x560a68353e30[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [unused] env-
val?            %27.4 = StaticCall         !v    asNamespace[0x560a6ccd9ce0](%27.3) e6.13   <env->
dependent slot

Type#13 [unused] env-
optimized away (dependency)

Type#14 [used] lgl$-
val?            %22.2 = PopContext         C     %22.1, %18.4   <lgl$->
void                    Assume             D     %22.3, %22.4 (Typecheck@0x560a68353e30[Type#14])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [used] env-
val?^ | miss    %25.0 = LdVar              eR    env, e6.13
void                    Assume             D     %25.1, %22.4 (Typecheck@0x560a68353e30[Type#16])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

----------------------
Inlinee: isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val?            %20.8 = Force!<lazy>       !vL   %20.6, e20.7   <env->
other unused reason

----------------------
Inlinee: is_namespace [0x560a683484c0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away

Type#1 [used] lgl$-
val?            %20.10 = PopContext         C     %20.9, %20.5   <lgl$->
void                    Assume             D     %20.11, %20.12 (Typecheck@0x560a683483d0[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: is_string [0x560a68470cc0]
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %9.5  = Force!<value>      !v    %9.3, e9.4   <vec>
other unused reason

Type#4 [unused] (sym|str)- (polluted)
val?            %9.7  = Force!<lazy>       !v    %9.6, e9.4   <(sym|str)->
other unused reason

Type#5 [unused] nil-
val?            %9.9  = Force!<lazy>       !v    %9.8, e9.4   <nil->
other unused reason

Type#6 [used] lgl$-
val?            %9.10 = CallBuiltin        !v    .Call(%9.5, %9.7, %9.9, nil) e9.4   <lgl$->
void                    Assume             D     %9.11, %9.12 (Typecheck@0x560a68570aa0[Type#6])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val?- (polluted)
optimized away

*********************** Compilation session for: check_environment (!ExpMi,CorrOrd,!TMany,Argmatch miss: 4) ***********************
======================= ClosureVersion: check_environment (!ExpMi,CorrOrd,!TMany,Argmatch miss: 4) =======================
referenced: 19
referenced non-empty: 7
read non-empty: 7
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 4
dependent: 0
other reasons unused non-empty: 6

Polluted
polluted: 1
used polluted: 0

----------------------
check_environment [0x560a5e385fc0]
referenced: 15
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] env-
val?            %5.12 = Force<lazy>        !vL   %1.0, e5.11   <env->
void                    Assume             D     %5.13, %5.14 (Typecheck@0x560a687cdb40[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?^ | miss

Type#4 [unused] lgl$-
optimized away

Type#5 [unused] nil-
optimized away

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val?- (polluted)
optimized away

----------------------
Inlinee: is_environment [0x560a67fc83a0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away

Type#1 [unused] str$-
str$-           %9.5  = CallSafeBuiltin    wed   typeof(%7.1)    <str$->
other unused reason

Type#2 [unused] lgl$-
lgl$-           %11.0 = Eq                 d     %9.5, "environment", elided   <lgl$->
other unused reason

*********************** Compilation session for: Sys.getenv (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0 miss: 2) ***********************
======================= ClosureVersion: Sys.getenv (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0 miss: 2) =======================
referenced: 59
referenced non-empty: 19
read non-empty: 17
used: 6
present non-empty: 5

Used
exact match: 4
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 13
optimized away non-empty: 8
dependent: 11
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
Sys.getenv [0x560a56393c00]
referenced: 48
referenced non-empty: 11
read non-empty: 10
used: 3
present non-empty: 4

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 4
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val+            %1.1  = Force<wrapped>           %1.0,    <str$->
dependent slot

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] str$-
val+            %3.0  = CallSafeBuiltin    wed   as.character(%1.1)    <str$->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] str$-
optimized away (dependency)

Type#6 [unused] str$-
optimized away (dependency)

Type#7 [unused] lgl$-
val?            %4.4  = Force!<lazy>       !v    %4.3, e3.1   <lgl$->
dependent slot

Type#8 [unused] lgl$-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [used] str$-
val?            %15.4 = Force!<wrapped>    !v    %15.3, e3.1   <str$->
void                    Assume             D     %15.5, %15.6 (Typecheck@0x560a562d4e50[Type#10])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#11 [used] int$-
(int|real)$-    %17.2 = CallSafeBuiltin    wed   length(%17.1)    <int$->
void                    Assume             D     %17.3, %17.4 (Typecheck@0x560a562d4e50[Type#11])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#12 [unused] lgl$-
lgl$-           %19.2 = Gt                 d     %19.1, 1L, elided   <lgl$->
dependent slot

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [used] str$-
val?^ | miss    %25.0 = LdVar              eR    v, e3.1
void                    Assume             D     %25.1, %22.1 (Typecheck@0x560a562d4e50[Type#15])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: isTRUE [0x560a55e9e1e0]
referenced: 11
referenced non-empty: 8
read non-empty: 7
used: 3
present non-empty: 1

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 4
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (nil|lgl)- (polluted)
optimized away

Type#2 [used] lgl$-
val+            %4.5  = CallSafeBuiltin    wed   is.logical(%4.4)    <lgl$->
void                    Assume             D     %4.6, %4.7 (Typecheck@0x560a55e9bc50[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %4.4  = Force!<lazy>       !v    %4.3, e3.1   <lgl$->
void                    Assume             D     %7.0, %4.7 (Typecheck@0x560a55e9bc50[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %4.4  = Force!<lazy>       !v    %4.3, e3.1   <lgl$->
void                    Assume             D     %9.0, %4.7 (Typecheck@0x560a55e9bc50[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %9.3  = CallSafeBuiltin    wed   is.na(%9.2)    <lgl$->
dependent slot

Type#10 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: get0 (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,Eager3,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2,!Obj3 miss: 1) ***********************
======================= ClosureVersion: get0 (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,Eager3,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2,!Obj3 miss: 1) =======================
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 5

Polluted
polluted: 3
used polluted: 0

----------------------
get0 [0x560a56361ae0]
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 5

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] str$+ (polluted)
val+            %1.5  = Force!<lazy>       !vr   %1.3,    <str$+>
other unused reason

Type#2 [unused] env+ (polluted)
val+            %1.6  = Force!<lazy>       !vr   %1.2,    <env+>
other unused reason

Type#3 [unused] str$-
val+            %1.7  = Force!<lazy>             %1.1,    <str$->
other unused reason

Type#4 [unused] lgl$-
val+            %1.8  = Force!<lazy>             %1.0,    <lgl$->
other unused reason

Type#5 [unused] (nil|vec)+ (polluted)
optimized away

*********************** Compilation session for: isGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 2) ***********************
======================= ClosureVersion: get0 (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,Eager3,NonRefl2,NonRefl3,!Obj2,!Obj3 miss: 1) =======================
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

----------------------
get0 [0x560a56361ae0]
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

Type#0 [unused] $#-
optimized away

Type#1 [used] str$+ (polluted)
val?            %1.5  = Force!<lazy>       !v    %1.3, e1.4   <str$+>
void                    Assume             D     %1.6, %1.7 (Typecheck@0x560a563ebd40[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#2 [unused] env+ (polluted)
val?            %2.3  = Force!<lazy>       !v    %2.2, e1.4   <env+>
other unused reason

Type#3 [unused] str$-
val?            %2.5  = Force!<lazy>       !v    %2.4, e1.4   <str$->
other unused reason

Type#4 [unused] lgl$-
val?            %2.7  = Force!<lazy>       !v    %2.6, e1.4   <lgl$->
other unused reason

Type#5 [unused] (nil|vec)+ (polluted)
val?            %2.9  = Force!<lazy>       !v    %2.8, e1.4   <(nil|vec)+>
other unused reason

======================= ClosureVersion: getFunction (CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj2) =======================
referenced: 43
referenced non-empty: 13
read non-empty: 11
used: 5
present non-empty: 4

Used
exact match: 3
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 4
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
getFunction [0x560a683d8d70]
referenced: 43
referenced non-empty: 13
read non-empty: 11
used: 5
present non-empty: 4

Used
exact match: 3
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 4
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] str$-
val?            %7.4  = Force!<lazy>       !vr   %7.3,    <str$->
void                    Assume             D     %7.5, %7.6 (Typecheck@0x560a683d19e0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

Type#4 [used] lgl$-
val?            %9.2  = CallBuiltin        !v    nzchar(%9.1) e1.6   <lgl$->
void                    Assume             D     %9.3, %9.4 (Typecheck@0x560a683d19e0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] env-
val?            %14.4 = Force!<lazy>       !v    %14.3, e1.6   <env->
dependent slot

Type#8 [unused] env-
val?            %14.5 = CallBuiltin        !v    as.environment(%14.4) e1.6   <env->
dependent slot

Type#9 [unused] env-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %16.8 = PopContext         C     %16.7, %16.4   <lgl$->
void                    Assume             D     %16.9, %16.10 (Typecheck@0x560a683d19e0[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [unused] env-
optimized away (dependency)

Type#13 [unused] cls-
val?            %22.5 = StaticCall         !v    get0[0x560a6d9405c0](%22.3, %22.4, "function", false) { 0 1n 2n 3n } e1.6   <cls->
dependent slot

Type#14 [unused] lgl$-
val?            %38.1 = Force!<lazy>       !v    %38.0, e1.6   <lgl$->
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [used] lgl$-
val?^ | miss    %26.0 = LdVar              eR    found, e1.6
void                    Assume             D     %26.1, %24.0 (Typecheck@0x560a683d19e0[Type#17])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] lgl$-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [used] cls-
val?^ | miss    %35.0 = LdVar              eR    f, e1.6
void                    Assume             D     %35.1, %32.1 (Typecheck@0x560a683d19e0[Type#42])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: cls-, expected: cls-, required: val?^ | miss

======================= ClosureVersion: isBaseFun (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) =======================
referenced: 16
referenced non-empty: 16
read non-empty: 9
used: 2
present non-empty: 3

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 11
dependent: 12
other reasons unused non-empty: 2

Polluted
polluted: 3
used polluted: 0

----------------------
isBaseFun [0x560a67ffdc60]
referenced: 6
referenced non-empty: 6
read non-empty: 5
used: 2
present non-empty: 0

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 4
dependent: 4
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] cls-
val?            %2.4  = Force!<lazy>       !vrd  %1.0,    <cls->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a684a3da0[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: cls-, expected: cls-, required: val?^ | miss

Type#1 [unused] lgl$-
optimized away (dependency)

Type#2 [unused] cls-
optimized away (dependency)

Type#3 [unused] env-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

Type#5 [used] lgl$-
val?            %12.12 = PopContext         C     %12.11, %12.5   <lgl$->
void                    Assume             D     %12.13, %12.14 (Typecheck@0x560a684a3da0[Type#5])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %12.9 = Force!<lazy>       !vL   %12.7, e12.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %12.10 = Force!<lazy>       !vL   %12.6, e12.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: is.primitive [0x560a54179310]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|blt)- (polluted)
optimized away

Type#1 [unused] str$-
str$-           %4.2  = CallSafeBuiltin    wed   typeof(%4.1)    <str$->
other unused reason

======================= ClosureVersion: isGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 2) =======================
referenced: 53
referenced non-empty: 10
read non-empty: 9
used: 2
present non-empty: 2

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 6
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
isGeneric [0x560a6861ac40]
referenced: 53
referenced non-empty: 10
read non-empty: 9
used: 2
present non-empty: 2

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 6
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] nil-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] nil-
optimized away (dependency)

Type#12 [unused] str$-
optimized away

Type#13 [unused] env-
optimized away

Type#14 [unused] cls-
val?            %3.5  = StaticCall         !v    getFunction[0x560a6d93fe80](%3.3, missingArg, false, %3.4) { 0 3n 2n } e2.0   <cls->
dependent slot

Type#15 [unused] cls-
val             %5.0  = ChkMissing         e     %3.5   <cls->
dependent slot

Type#16 [unused] cls-
optimized away (dependency)

Type#17 [used] lgl$-
val?            %6.4  = StaticCall         !v    isBaseFun[0x560a6d71c2b0](%6.3) e2.0   <lgl$->
void                    Assume             D     %6.5, %6.6 (Typecheck@0x560a686896c0[Type#17])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] cls-
optimized away (dependency)

Type#39 [used] lgl$-
val?            %9.4  = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%9.3, "genericFunction") e2.0   <lgl$->
void                    Assume             D     %9.5, %9.6 (Typecheck@0x560a686896c0[Type#39])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: get (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 3) ***********************
======================= ClosureVersion: get (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 3) =======================
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

----------------------
get [0x560a56b53b40]
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [unused] str$+ (polluted)
val+            %1.8  = Force!<lazy>       !vr   %1.1,    <str$+>
other unused reason

Type#3 [unused] env-
val?            %1.9  = Force!<lazy>       !v    %1.4, e1.2   <env->
dependent slot

Type#4 [unused] str$-
val?            %1.11 = Force!<lazy>       !v    %1.10, e1.2   <str$->
other unused reason

Type#5 [unused] lgl$-
val?            %1.13 = Force!<lazy>       !v    %1.12, e1.2   <lgl$->
other unused reason

*********************** Compilation session for: isGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 2) ***********************
======================= ClosureVersion: genericForBasic (CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj2) =======================
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

----------------------
genericForBasic [0x560a5685bec0]
referenced: 13
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] vec+
val?            %3.1  = Force!<wrapped>    !v    %3.0, e1.4   <vec+>
void                    Assume             D     %7.0, %5.4 (Typecheck@0x560a55ff3030[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str$-
val?            %5.2  = Force!<lazy>       !v    %5.1, e1.4   <str$->
void                    Assume             D     %5.3, %5.4 (Typecheck@0x560a55ff3030[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#5 [unused] (nil|cls) (polluted)
val?            %7.5  = Extract2_1D        wed   %7.2, %7.4, elided   <(nil|cls)>
dependent slot

Type#6 [unused] lgl$-
val?            %7.8  = Force!<value>      !v    %7.7, e1.4   <lgl$->
other unused reason

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] (nil|cls) (polluted)
val?            %11.2 = Force!<value>      !     %11.0, e1.4   <(nil|cls)>
dependent slot

======================= ClosureVersion: isGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 2) =======================
referenced: 57
referenced non-empty: 20
read non-empty: 19
used: 5
present non-empty: 4

Used
exact match: 4
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 11
dependent: 13
other reasons unused non-empty: 2

Polluted
polluted: 4
used polluted: 1

----------------------
isGeneric [0x560a6861ac40]
referenced: 53
referenced non-empty: 16
read non-empty: 15
used: 4
present non-empty: 3

Used
exact match: 3
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 9
dependent: 11
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] nil-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] nil-
optimized away (dependency)

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] env-
optimized away

Type#14 [unused] cls-
val?            %3.5  = StaticCall         !v    getFunction[0x560a6dbe7200](%3.3, missingArg, false, %3.4) { 0 3n 2n } e2.0   <cls->
dependent slot

Type#15 [unused] cls-
val             %5.0  = ChkMissing         e     %3.5   <cls->
dependent slot

Type#16 [unused] cls-
optimized away (dependency)

Type#17 [used] lgl$-
val?            %6.4  = StaticCall         !v    isBaseFun[0x560a6dc126e0](%6.3) e2.0   <lgl$->
void                    Assume             D     %6.5, %6.6 (Typecheck@0x560a686896c0[Type#17])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] str$-
optimized away (dependency)

Type#22 [used] lgl$-
val?            %37.3 = PopContext         C     %37.2, %35.4   <lgl$->
void                    Assume             D     %37.4, %37.5 (Typecheck@0x560a686896c0[Type#22])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#23 [unused] str$-
optimized away (dependency)

Type#24 [used] nil-
val?            %25.4 = StaticCall         !v    genericForBasic[0x560a6dc0e170](%25.3, missingArg, false) { 0 2n } e2.0   <nil->
void                    Assume             D     %25.6, %25.7 (Typecheck@0x560a686896c0[Type#24])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: nil-, expected: nil-, required: val?+

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] nil-
optimized away (dependency)

Type#27 [unused] lgl$-
lgl$#-          %27.6 = CallSafeBuiltin    vwed  is.function(%27.5)    <lgl$->
dependent slot

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] cls-
optimized away (dependency)

Type#39 [used] lgl$-
val?            %9.4  = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%9.3, "genericFunction") e2.0   <lgl$->
void                    Assume             D     %9.5, %9.6 (Typecheck@0x560a686896c0[Type#39])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#1 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#2 [used] int- (polluted)
val?            %35.9 = StaticCall         !v    match[0x560a6dbfac90](%35.7, %35.8, 0L) { 0 1 2n } e35.6   <int->
void                    Assume             D     %35.10, %35.11 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %37.2 = Gt                 wed   %37.1, 0L, elided   <lgl->
other unused reason

*********************** Compilation session for: registerS3methods (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,!Obj1,!Obj2) ***********************
======================= ClosureVersion: environment (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
environment [0x560a55e84a10]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|cls) (polluted)
val+            %1.1  = Force!<lazy>             %1.0,    <(nil|cls)>
other unused reason

======================= ClosureVersion: get0 (!ExpMi,CorrOrd,!TMany,Argmatch miss: 3) =======================
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

----------------------
get0 [0x560a56361ae0]
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

Type#0 [unused] $#-
optimized away

Type#1 [used] str$+ (polluted)
val?            %1.3  = Force!<lazy>       !v    %1.1, e1.2   <str$+>
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a563ebd40[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#2 [unused] env+ (polluted)
val?            %2.3  = Force!<lazy>       !v    %2.2, e1.2   <env+>
other unused reason

Type#3 [unused] str$-
val?            %2.5  = Force!<lazy>       !v    %2.4, e1.2   <str$->
other unused reason

Type#4 [unused] lgl$-
val?            %2.7  = Force!<lazy>       !v    %2.6, e1.2   <lgl$->
other unused reason

Type#5 [unused] (nil|vec)+ (polluted)
val?            %2.9  = Force!<lazy>       !v    %2.8, e1.2   <(nil|vec)+>
other unused reason

======================= ClosureVersion: asNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl1,!Obj0,!Obj1) =======================
referenced: 33
referenced non-empty: 27
read non-empty: 20
used: 4
present non-empty: 10

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 23
optimized away non-empty: 13
dependent: 19
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 0

----------------------
asNamespace [0x560a5662fe70]
referenced: 16
referenced non-empty: 12
read non-empty: 12
used: 3
present non-empty: 5

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 4
dependent: 7
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|env)+ (polluted)
val+            %1.2  = Force!<lazy>             %1.1,    <(str|env)+>
other unused reason

Type#2 [unused] lgl$-
lgl$#-          %1.3  = CallSafeBuiltin    wed   is.character(%1.2)    <lgl$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] lgl$-
lgl$#-          %26.0 = CallSafeBuiltin    wed   is.symbol(%1.2)    <lgl$->
dependent slot

Type#6 [unused] str$+
optimized away

Type#7 [unused] env-
val?            %25.0 = PopContext         C     %23.5, %23.1   <env->
dependent slot

Type#8 [unused] env-
optimized away (dependency)

Type#9 [used] lgl$-
val?            %7.9  = PopContext         C     %7.8, %7.4   <lgl$->
void                    Assume             D     %7.10, %7.11 (Typecheck@0x560a566a7520[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [used] lgl$-
val?            %10.1 = Force!<lazy>       !v    %10.0, e1.4   <lgl$->
void                    Assume             D     %10.2, %10.3 (Typecheck@0x560a566a7520[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#11 [unused] env-
optimized away (dependency)

Type#12 [used] lgl$-
val?            %15.2 = PopContext         C     %15.1, %13.4   <lgl$->
void                    Assume             D     %15.3, %15.4 (Typecheck@0x560a566a7520[Type#12])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#13 [unused] env-
val?            %19.2 = Force!<wrapped>    !     %19.0, e1.4   <env->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val?            %7.7  = Force!<lazy>       !vrL  %7.5, e7.6   <env->
other unused reason

----------------------
Inlinee: getNamespace [0x560a572728f0]
referenced: 5
referenced non-empty: 3
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
val?            %23.4 = Force!<lazy>       !vr   %23.2,    <str$+>
other unused reason

Type#1 [unused] env-
val?            %23.5 = CallBuiltin        !v    getRegisteredNamespace(%23.4) e23.3   <env->
dependent slot

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

----------------------
Inlinee: isBaseNamespace [0x560a5643a450]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %13.16 = PopContext         C     %13.15, %13.9   <lgl$->
void                    Assume             D     %13.17, %13.18 (Typecheck@0x560a565938d0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %13.13 = Force!<lazy>       !vL   %13.11, e13.12   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %13.14 = Force!<lazy>       !vL   %13.10, e13.12   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

======================= ClosureVersion: registerS3methods (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,!Obj1,!Obj2) =======================
referenced: 395
referenced non-empty: 203
read non-empty: 189
used: 51
present non-empty: 48

Used
exact match: 28
widened: 23
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 152
optimized away non-empty: 104
dependent: 135
other reasons unused non-empty: 17

Polluted
polluted: 18
used polluted: 3

----------------------
registerS3methods [0x560a5695fb20]
referenced: 327
referenced non-empty: 156
read non-empty: 156
used: 38
present non-empty: 35

Used
exact match: 20
widened: 18
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 118
optimized away non-empty: 83
dependent: 117
other reasons unused non-empty: 1

Polluted
polluted: 3
used polluted: 1

Type#0 [used] str_
val?            %1.8  = Force!<lazy>       !v    %1.2, e1.3   <str_>
void                    Assume             D     %1.9, %1.10 (Typecheck@0x560a56747020[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str_, expected: str_, required: val?^ | miss

Type#1 [used] int$-
(int|real)$-    %8.0  = Phi                      %5.3:BB7, %179.3:BB179   <int$->
void                    Assume             D     %8.1, %8.2 (Typecheck@0x560a56747020[Type#1])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#2 [unused] int$-
optimized away (dependency)

Type#3 [unused] lgl$-
lgl$-           %10.4 = Eq                 vd    %10.1, 0L, elided   <lgl$->
dependent slot

Type#4 [unused] str_
val+            %13.3 = CallSafeBuiltin    wed   matrix(NA, 0, 2, false, nil, false, false)    <str_>
dependent slot

Type#5 [unused] str_
optimized away (dependency)

Type#6 [unused] str-
optimized away (dependency)

Type#7 [unused] str_
optimized away (dependency)

Type#8 [unused] str-
optimized away (dependency)

Type#9 [unused] str-
val+            %15.12 = CallSafeBuiltin    wed   paste(%15.11, ".", nil, false)    <str->
dependent slot

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [used] str_
val?            %17.4 = Force!<wrapped>    !v    %17.3, e1.3   <str_>
void                    Assume             D     %17.6, %17.7 (Typecheck@0x560a56747020[Type#12])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str_, expected: str_, required: val?+

Type#13 [used] str-
val?            %19.3 = Extract1_2D        wed   %19.2, missingArg, 3, elided   <str->
void                    Assume             D     %19.4, %19.5 (Typecheck@0x560a56747020[Type#13])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#14 [unused] lgl-
lgl-            %21.2 = CallSafeBuiltin    wed   is.na(%21.1)    <lgl->
dependent slot

Type#15 [used] str-
val?^ | miss    %23.0 = LdVar              eR    methname, e1.3
void                    Assume             D     %23.1, %21.4 (Typecheck@0x560a56747020[Type#15])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] lgl-
optimized away (dependency)

Type#18 [used] str-
val?            %23.7 = Extract1_1D        wed   %23.4, %21.2, elided   <str->
void                    Assume             D     %23.11, %23.12 (Typecheck@0x560a56747020[Type#18])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str-, expected: str-, required: val?+

Type#19 [used] str_
val?            %23.9 = Force!<wrapped>    !v    %23.8, e1.3   <str_>
void                    Assume             D     %23.10, %23.12 (Typecheck@0x560a56747020[Type#19])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str_, expected: str_, required: val?+

Type#20 [used] lgl-
val?^ | miss    %25.0 = LdVar              eR    z, e1.3
void                    Assume             D     %25.1, %23.12 (Typecheck@0x560a56747020[Type#20])
exact match
checkFor: lgl-, static: val?^ | miss, feedback: lgl-, expected: lgl-, required: val?^ | miss

Type#21 [unused] str_
optimized away (dependency)

Type#22 [unused] int$-
optimized away (dependency)

Type#23 [unused] lgl$-
lgl$-           %29.2 = Eq                 d     %29.1, 3L, elided   <lgl$->
dependent slot

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] str_
optimized away (dependency)

Type#29 [unused] str-
optimized away (dependency)

Type#30 [unused] str_
optimized away (dependency)

Type#31 [unused] str-
optimized away (dependency)

Type#32 [unused] str+
val?            %30.11 = PopContext         C     %30.10, %30.7   <str+>
dependent slot

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [used] env-
val?            %32.4 = Force!<lazy>       !v    %32.3, e1.3   <env->
void                    Assume             D     %32.5, %32.6 (Typecheck@0x560a56747020[Type#34])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#35 [unused] str-
val+            %34.2 = CallSafeBuiltin    wed   names(%34.1)    <str->
dependent slot

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] str_
optimized away (dependency)

Type#42 [unused] str-
optimized away (dependency)

Type#43 [unused] str-
optimized away (dependency)

Type#44 [used] int-
val?            %36.8 = StaticCall         !v    match[0x560a6dcbc900](%36.6, %36.7, 0L) { 0 1 2n } e1.3   <int->
void                    Assume             D     %36.9, %36.10 (Typecheck@0x560a56747020[Type#44])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#45 [unused] lgl-
lgl-            %38.2 = Eq                 wed   %38.1, 0L, elided   <lgl->
dependent slot

Type#46 [used] lgl$-
val?            %38.4 = CallBuiltin        !v    any(%38.2) e1.3   <lgl$->
void                    Assume             D     %38.5, %38.6 (Typecheck@0x560a56747020[Type#46])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [used] str+
val?^ | miss    %41.3 = LdVar              eR    Info, e1.3
void                    Assume             D     %41.4, %38.6 (Typecheck@0x560a56747020[Type#62])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str+, expected: str+, required: val?^ | miss

Type#63 [used] str+ (polluted)
val?            %41.10 = Extract1_2D        wed   %41.7, missingArg, 5L, elided   <str+>
void                    Assume             D     %41.11, %41.12 (Typecheck@0x560a56747020[Type#63])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?+

Type#64 [unused] lgl+ (polluted)
lgl+            %43.2 = CallSafeBuiltin    wed   is.na(%43.1)    <lgl+>
other unused reason

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] str+
val?            %43.7 = NamedCall          !v    %43.4(%43.5, %43.6, missingArg, drop=false) e1.3   <str+>
dependent slot

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] str+
val?            %43.12 = NamedCall          !v    %43.9(%43.10, %43.11, missingArg, drop=false) e1.3   <str+>
dependent slot

Type#71 [unused] str+
optimized away (dependency)

Type#72 [unused] str+ (polluted)
optimized away (dependency)

Type#73 [unused] str-
optimized away (dependency)

Type#74 [unused] lgl-
val?            %47.3 = PopContext         C     %47.2, %45.5   <lgl->
dependent slot

Type#75 [used] lgl$-
val?            %49.3 = CallBuiltin        !v    .isMethodsDispatchOn() e1.3   <lgl$->
void                    Assume             D     %49.4, %49.5 (Typecheck@0x560a56747020[Type#75])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#76 [used] lgl-
val?^ | miss    %153.3 = LdVar              eR    localGeneric, e1.3
void                    Assume             D     %153.4, %49.5 (Typecheck@0x560a56747020[Type#76])
exact match
checkFor: lgl-, static: val?^ | miss, feedback: lgl-, expected: lgl-, required: val?^ | miss

Type#77 [unused] int-
optimized away (dependency)

Type#78 [unused] str+
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] int$-
optimized away (dependency)

Type#81 [unused] str$+
optimized away (dependency)

Type#82 [unused] env-
optimized away (dependency)

Type#83 [unused] cls-
val?            %156.5 = StaticCall         !v    get[0x560a6dfa8c80](%156.3, missingArg, %156.4) { 0 2n } e1.3   <cls->
dependent slot

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] cls-
val?            %156.10 = Call               !v    %156.7(%156.8, %156.9) e1.3   <cls->
dependent slot

Type#87 [unused] cls-
optimized away (dependency)

Type#88 [used] lgl$-
val?            %156.13 = Call               !v    %156.11(%156.12, "genericFunction") e1.3   <lgl$->
void                    Assume             D     %156.14, %156.15 (Typecheck@0x560a56747020[Type#88])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#89 [unused] $#-
optimized away (dependency)

Type#90 [unused] $#-
optimized away (dependency)

Type#91 [unused] $#-
optimized away (dependency)

Type#92 [unused] $#-
optimized away (dependency)

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] $#-
optimized away (dependency)

Type#99 [unused] $#-
optimized away (dependency)

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [unused] $#-
optimized away (dependency)

Type#102 [unused] $#-
optimized away (dependency)

Type#103 [unused] $#-
optimized away (dependency)

Type#104 [unused] str+
optimized away (dependency)

Type#105 [unused] $#-
optimized away (dependency)

Type#106 [unused] int$-
optimized away (dependency)

Type#107 [unused] str$+
optimized away (dependency)

Type#108 [unused] env-
optimized away (dependency)

Type#109 [unused] cls-
val?            %163.5 = StaticCall         !v    get[0x560a6dfa8c80](%163.3, missingArg, %163.4) { 0 2n } e1.3   <cls->
dependent slot

Type#110 [unused] $#-
optimized away (dependency)

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] cls-
val?            %163.10 = Call               !v    %163.7(%163.8, %163.9) e1.3   <cls->
dependent slot

Type#113 [unused] cls-
optimized away (dependency)

Type#114 [used] lgl$-
val?            %163.13 = Call               !v    %163.11(%163.12, "genericFunction") e1.3   <lgl$->
void                    Assume             D     %163.14, %163.15 (Typecheck@0x560a56747020[Type#114])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

Type#117 [unused] $#-
optimized away (dependency)

Type#118 [unused] $#-
optimized away (dependency)

Type#119 [unused] $#-
optimized away (dependency)

Type#120 [unused] $#-
optimized away (dependency)

Type#121 [unused] $#-
optimized away (dependency)

Type#122 [unused] $#-
optimized away (dependency)

Type#123 [unused] $#-
optimized away (dependency)

Type#124 [unused] $#-
optimized away (dependency)

Type#125 [unused] $#-
optimized away (dependency)

Type#126 [unused] $#-
optimized away (dependency)

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] $#-
optimized away (dependency)

Type#129 [unused] $#-
optimized away (dependency)

Type#130 [unused] $#-
optimized away (dependency)

Type#131 [used] lgl-
val?^ | miss    %55.3 = LdVar              eR    localGeneric, e1.3
void                    Assume             D     %55.4, %53.0 (Typecheck@0x560a56747020[Type#131])
exact match
checkFor: lgl-, static: val?^ | miss, feedback: lgl-, expected: lgl-, required: val?^ | miss

Type#132 [used] lgl$-
val?            %55.7 = CallBuiltin        !v    any(%55.6) e1.3   <lgl$->
void                    Assume             D     %55.8, %55.9 (Typecheck@0x560a56747020[Type#132])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#133 [unused] $#-
optimized away (dependency)

Type#134 [unused] $#-
optimized away (dependency)

Type#135 [unused] str+
val?            %146.3 = NamedCall          !v    %146.0(%146.1, %146.2, missingArg, drop=false) e1.3   <str+>
dependent slot

Type#136 [used] env-
val?            %146.6 = Force!<wrapped>    !v    %146.5, e1.3   <env->
void                    Assume             D     %146.8, %146.9 (Typecheck@0x560a56747020[Type#136])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#137 [unused] env-
val?            %148.3 = Extract2_1D        wed   %148.2, ".__S3MethodsTable__.", elided   <env->
dependent slot

Type#138 [unused] env-
optimized away (dependency)

Type#139 [used] str+
val?^ | miss    %150.1 = LdVar              eR    lin, e1.3
void                    Assume             D     %150.2, %148.5 (Typecheck@0x560a56747020[Type#139])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str+, expected: str+, required: val?^ | miss

Type#140 [unused] str-
val?            %150.8 = Extract1_2D        wed   %150.5, missingArg, 4, elided   <str->
dependent slot

Type#141 [unused] env-
val?            %150.10 = Force!<wrapped>    !v    %150.9, e1.3   <env->
dependent slot

Type#142 [used] str+
val?^ | miss    %152.0 = LdVar              eR    lin, e1.3
void                    Assume             D     %152.1, %150.11 (Typecheck@0x560a56747020[Type#142])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str+, expected: str+, required: val?^ | miss

Type#143 [unused] str-
val?            %152.7 = Extract1_2D        wed   %152.4, missingArg, 3, elided   <str->
dependent slot

Type#144 [unused] $#-
optimized away (dependency)

Type#145 [unused] $#-
optimized away (dependency)

Type#146 [used] str+
val?            %59.3 = NamedCall          !v    %59.0(%59.1, %59.2, missingArg, drop=false) e1.3   <str+>
void                    Assume             D     %59.5, %59.6 (Typecheck@0x560a56747020[Type#146])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?+

Type#147 [unused] $#-
optimized away (dependency)

Type#148 [unused] $#-
optimized away (dependency)

Type#149 [unused] str+
optimized away (dependency)

Type#150 [unused] int$-
optimized away (dependency)

Type#151 [unused] int-
val+            %63.2 = CallSafeBuiltin    wed   seq_len(%63.1)    <int->
dependent slot

Type#152 [unused] str+
optimized away (dependency)

Type#153 [unused] $#-
optimized away (dependency)

Type#154 [unused] int$-
optimized away (dependency)

Type#155 [unused] str$+
optimized away (dependency)

Type#156 [unused] $#-
optimized away (dependency)

Type#157 [unused] $#-
optimized away (dependency)

Type#158 [unused] $#-
optimized away (dependency)

Type#159 [unused] $#-
optimized away (dependency)

Type#160 [unused] str+
optimized away (dependency)

Type#161 [unused] $#-
optimized away (dependency)

Type#162 [unused] int$-
optimized away (dependency)

Type#163 [unused] str$+
optimized away (dependency)

Type#164 [unused] str+
optimized away (dependency)

Type#165 [unused] $#-
optimized away (dependency)

Type#166 [unused] int$-
optimized away (dependency)

Type#167 [unused] str$+
optimized away (dependency)

Type#168 [unused] env-
optimized away (dependency)

Type#169 [unused] str+
optimized away (dependency)

Type#170 [unused] $#-
optimized away (dependency)

Type#171 [unused] int$-
optimized away (dependency)

Type#172 [unused] str$+
optimized away (dependency)

Type#173 [unused] $#-
optimized away (dependency)

Type#174 [unused] $#-
optimized away (dependency)

Type#175 [unused] $#-
optimized away (dependency)

Type#176 [unused] $#-
optimized away (dependency)

Type#177 [unused] str+
optimized away (dependency)

Type#178 [unused] $#-
optimized away (dependency)

Type#179 [unused] int$-
optimized away (dependency)

Type#180 [unused] str$+
optimized away (dependency)

Type#181 [unused] str+
optimized away (dependency)

Type#182 [unused] $#-
optimized away (dependency)

Type#183 [unused] int$-
optimized away (dependency)

Type#184 [unused] str$+
optimized away (dependency)

Type#185 [unused] env-
optimized away (dependency)

Type#186 [used] str$-
val?            %72.1 = Force!<lazy>       !v    %72.0, e1.3   <str$->
void                    Assume             D     %72.2, %72.3 (Typecheck@0x560a56747020[Type#186])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#187 [used] lgl$-
lgl-            %74.2 = Neq                wed   %74.1, "MASS", elided   <lgl$->
void                    Assume             D     %74.3, %74.4 (Typecheck@0x560a56747020[Type#187])
exact match
checkFor: lgl$-, static: lgl-, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#188 [unused] str_
optimized away (dependency)

Type#189 [used] int$-
val?            %79.4 = PopContext         C     %79.3, %77.4   <int$->
void                    Assume             D     %79.5, %79.6 (Typecheck@0x560a56747020[Type#189])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#190 [unused] $#-
optimized away (dependency)

Type#191 [unused] $#-
optimized away (dependency)

Type#192 [unused] $#-
optimized away (dependency)

Type#193 [unused] $#-
optimized away (dependency)

Type#194 [unused] $#-
optimized away (dependency)

Type#195 [unused] $#-
optimized away (dependency)

Type#196 [unused] $#-
optimized away (dependency)

Type#197 [unused] $#-
optimized away (dependency)

Type#198 [unused] $#-
optimized away (dependency)

Type#199 [unused] $#-
optimized away (dependency)

Type#200 [unused] $#-
optimized away (dependency)

Type#201 [unused] $#-
optimized away (dependency)

Type#202 [unused] $#-
optimized away (dependency)

Type#203 [unused] $#-
optimized away (dependency)

Type#204 [unused] $#-
optimized away (dependency)

Type#205 [unused] $#-
optimized away (dependency)

Type#206 [unused] $#-
optimized away (dependency)

Type#207 [unused] $#-
optimized away (dependency)

Type#208 [unused] $#-
optimized away (dependency)

Type#209 [unused] $#-
optimized away (dependency)

Type#210 [unused] $#-
optimized away (dependency)

Type#211 [unused] $#-
optimized away (dependency)

Type#212 [unused] $#-
optimized away (dependency)

Type#213 [unused] $#-
optimized away (dependency)

Type#214 [unused] $#-
optimized away (dependency)

Type#215 [unused] $#-
optimized away (dependency)

Type#216 [unused] $#-
optimized away (dependency)

Type#217 [unused] $#-
optimized away (dependency)

Type#218 [unused] $#-
optimized away (dependency)

Type#219 [unused] $#-
optimized away (dependency)

Type#220 [unused] $#-
optimized away (dependency)

Type#221 [unused] $#-
optimized away (dependency)

Type#222 [unused] $#-
optimized away (dependency)

Type#223 [unused] $#-
optimized away (dependency)

Type#224 [unused] $#-
optimized away (dependency)

Type#225 [unused] $#-
optimized away (dependency)

Type#226 [unused] $#-
optimized away (dependency)

Type#227 [unused] $#-
optimized away (dependency)

Type#228 [unused] $#-
optimized away (dependency)

Type#229 [unused] $#-
optimized away (dependency)

Type#230 [unused] $#-
optimized away (dependency)

Type#231 [unused] $#-
optimized away (dependency)

Type#232 [unused] $#-
optimized away (dependency)

Type#233 [unused] $#-
optimized away (dependency)

Type#234 [unused] $#-
optimized away (dependency)

Type#235 [unused] $#-
optimized away (dependency)

Type#236 [unused] $#-
optimized away (dependency)

Type#237 [unused] $#-
optimized away (dependency)

Type#238 [unused] $#-
optimized away (dependency)

Type#239 [unused] $#-
optimized away (dependency)

Type#240 [unused] $#-
optimized away (dependency)

Type#241 [unused] $#-
optimized away (dependency)

Type#242 [unused] $#-
optimized away (dependency)

Type#243 [unused] $#-
optimized away (dependency)

Type#244 [unused] $#-
optimized away (dependency)

Type#245 [unused] $#-
optimized away (dependency)

Type#246 [unused] $#-
optimized away (dependency)

Type#247 [unused] $#-
optimized away (dependency)

Type#248 [unused] $#-
optimized away (dependency)

Type#249 [unused] $#-
optimized away (dependency)

Type#250 [unused] $#-
optimized away (dependency)

Type#251 [unused] $#-
optimized away (dependency)

Type#252 [unused] $#-
optimized away (dependency)

Type#253 [unused] $#-
optimized away (dependency)

Type#254 [unused] $#-
optimized away (dependency)

Type#255 [unused] $#-
optimized away (dependency)

Type#256 [unused] str+
optimized away (dependency)

Type#257 [used] int$-
val?            %87.4 = PopContext         C     %87.3, %85.4   <int$->
void                    Assume             D     %87.5, %87.6 (Typecheck@0x560a56747020[Type#257])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#258 [unused] $#-
optimized away (dependency)

Type#259 [unused] $#-
optimized away (dependency)

Type#260 [unused] str+
optimized away (dependency)

Type#261 [used] int$-
val?            %117.4 = PopContext         C     %117.3, %115.7   <int$->
void                    Assume             D     %117.5, %117.6 (Typecheck@0x560a56747020[Type#261])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#262 [unused] int-
val+            %119.2 = CallSafeBuiltin    wed   seq_len(%119.1)    <int->
dependent slot

Type#263 [used] str+
val?^ | miss    %123.0 = LdVar              eR    delayed, e1.3
void                    Assume             D     %123.1, %121.5 (Typecheck@0x560a56747020[Type#263])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str+, expected: str+, required: val?^ | miss

Type#264 [unused] $#-
optimized away (dependency)

Type#265 [used] int$-
val             %123.7 = ChkMissing         e     %121.3
void                    Assume             D     %123.8, %121.5 (Typecheck@0x560a56747020[Type#265])
exact match
checkFor: int$-, static: val, feedback: int$-, expected: int$-, required: val?^ | miss

Type#266 [unused] str$+
val?            %123.11 = Extract1_2D        wed   %123.4, %123.10, 1L, elided   <str$+>
dependent slot

Type#267 [unused] str+
optimized away (dependency)

Type#268 [unused] $#-
optimized away (dependency)

Type#269 [unused] int$-
optimized away (dependency)

Type#270 [unused] str$+
val?            %123.13 = Extract1_2D        wed   %123.4, %123.10, 2L, elided   <str$+>
dependent slot

Type#271 [unused] str+
optimized away (dependency)

Type#272 [unused] $#-
optimized away (dependency)

Type#273 [unused] int$-
optimized away (dependency)

Type#274 [unused] str$+
optimized away (dependency)

Type#275 [unused] env-
optimized away (dependency)

Type#276 [unused] cls-
val?            %125.5 = StaticCall         !v    get[0x560a6dfa8c80](%125.3, missingArg, %125.4) { 0 2n } e1.3   <cls->
dependent slot

Type#277 [used] str+
val?^ | miss    %127.0 = LdVar              eR    delayed, e1.3
void                    Assume             D     %127.1, %125.7 (Typecheck@0x560a56747020[Type#277])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str+, expected: str+, required: val?^ | miss

Type#278 [unused] $#-
optimized away (dependency)

Type#279 [used] int$-
val?^ | miss    %127.7 = LdVar              eR    i, e1.3
void                    Assume             D     %127.8, %125.7 (Typecheck@0x560a56747020[Type#279])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#280 [unused] str$+
val?            %127.11 = Extract1_2D        wed   %127.4, %127.10, 5L, elided   <str$+>
dependent slot

Type#281 [unused] str$+
optimized away (dependency)

Type#282 [unused] str$+
optimized away (dependency)

Type#283 [unused] str$+
optimized away (dependency)

Type#284 [unused] cls-
optimized away (dependency)

Type#285 [used] str+
val?^ | miss    %133.0 = LdVar              eR    delayed, e1.3
void                    Assume             D     %133.1, %131.2 (Typecheck@0x560a56747020[Type#285])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str+, expected: str+, required: val?^ | miss

Type#286 [unused] $#-
optimized away (dependency)

Type#287 [used] int$-
val             %133.7 = ChkMissing         e     %131.0
void                    Assume             D     %133.8, %131.2 (Typecheck@0x560a56747020[Type#287])
exact match
checkFor: int$-, static: val, feedback: int$-, expected: int$-, required: val?^ | miss

Type#288 [unused] str$+
val?            %133.11 = Extract1_2D        wed   %133.4, %133.10, 1L, elided   <str$+>
dependent slot

Type#289 [unused] str+
optimized away (dependency)

Type#290 [unused] $#-
optimized away (dependency)

Type#291 [used] int$-
val             %135.0 = ChkMissing         e     %131.0
void                    Assume             D     %135.1, %133.13 (Typecheck@0x560a56747020[Type#291])
exact match
checkFor: int$-, static: val, feedback: int$-, expected: int$-, required: val?^ | miss

Type#292 [unused] str$+
val?            %135.4 = Extract1_2D        wed   %133.4, %135.3, 2L, elided   <str$+>
dependent slot

Type#293 [unused] str+
optimized away (dependency)

Type#294 [unused] $#-
optimized away (dependency)

Type#295 [unused] int$-
optimized away (dependency)

Type#296 [unused] str$+
optimized away (dependency)

Type#297 [unused] env-
optimized away (dependency)

Type#298 [unused] cls-
val?            %137.5 = StaticCall         !v    get[0x560a6dfa8c80](%137.3, missingArg, %137.4) { 0 2n } e1.3   <cls->
dependent slot

Type#299 [used] str+
val?^ | miss    %139.0 = LdVar              eR    delayed, e1.3
void                    Assume             D     %139.1, %137.7 (Typecheck@0x560a56747020[Type#299])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str+, expected: str+, required: val?^ | miss

Type#300 [unused] $#-
optimized away (dependency)

Type#301 [used] int$-
val?^ | miss    %139.7 = LdVar              eR    i, e1.3
void                    Assume             D     %139.8, %137.7 (Typecheck@0x560a56747020[Type#301])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#302 [unused] str$+
val?            %139.11 = Extract1_2D        wed   %139.4, %139.10, 5L, elided   <str$+>
dependent slot

Type#303 [unused] str$+
optimized away (dependency)

Type#304 [unused] str$+
optimized away (dependency)

Type#305 [unused] str$+
optimized away (dependency)

Type#306 [unused] cls-
optimized away (dependency)

Type#307 [unused] env-
optimized away (dependency)

Type#308 [unused] str_
val?            %95.6 = PopContext         C     %95.5, %93.4   <str_>
dependent slot

Type#309 [unused] str_
optimized away (dependency)

Type#310 [unused] int$-
optimized away (dependency)

Type#311 [unused] str_
val?            %99.4 = Force!<value>      !v    %99.3, e1.3   <str_>
dependent slot

Type#312 [unused] int$-
optimized away (dependency)

Type#313 [used] int$-
val?^ | miss    %105.0 = LdVar              eR    p1, e1.3
void                    Assume             D     %105.1, %103.3 (Typecheck@0x560a56747020[Type#313])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#314 [unused] int$-
optimized away (dependency)

Type#315 [unused] lgl$-
lgl$-           %105.4 = Neq                d     %105.3, %103.1, elided   <lgl$->
dependent slot

Type#316 [unused] $#-
optimized away (dependency)

Type#317 [unused] $#-
optimized away (dependency)

Type#318 [unused] $#-
optimized away (dependency)

Type#319 [unused] $#-
optimized away (dependency)

Type#320 [unused] $#-
optimized away (dependency)

Type#321 [unused] $#-
optimized away (dependency)

Type#322 [unused] env-
optimized away (dependency)

Type#323 [unused] str_
optimized away (dependency)

Type#324 [unused] str_
optimized away (dependency)

Type#325 [unused] str_
optimized away (dependency)

Type#326 [unused] str_
val?            %112.8 = PopContext         C     %112.2, %106.5   <str_>
dependent slot

----------------------
Inlinee: getNamespaceInfo [0x560a566d4080]
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 3
dependent: 4
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env-
val?            %93.7 = Force!<lazy>       !vL   %93.5, e93.6   <env->
dependent slot

Type#1 [unused] env-
val?            %93.9 = StaticCall         !v    asNamespace[0x560a6de5ac40](%93.8, false) { 0 1n } e93.6   <env->
dependent slot

Type#2 [unused] str$-
optimized away

Type#3 [unused] env-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] (str|env)_ (polluted)
val?            %95.5 = StaticCall         !v    get[0x560a6dfa8c80](%95.3, missingArg, %95.4) { 0 2n } e93.6   <(str|env)_>
other unused reason

----------------------
Inlinee: setNamespaceInfo [0x560a5678ac70]
referenced: 7
referenced non-empty: 7
read non-empty: 6
used: 4
present non-empty: 2

Used
exact match: 1
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] env-
val?            %106.9 = Force!<lazy>       !vL   %106.7, e106.8   <env->
dependent slot

Type#1 [used] env-
val?            %106.11 = StaticCall         !v    asNamespace[0x560a6de5ac40](%106.10, false) { 0 1n } e106.8   <env->
void                    Assume             D     %106.14, %106.15 (Typecheck@0x560a56367f30[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] env-
val?            %108.4 = Extract2_1D        wed   %108.3, ".__NAMESPACE__.", elided   <env->
dependent slot

Type#4 [used] val?+ (polluted)
val?            %108.7 = Force!<lazy>       !v    %108.6, e106.8   <val?+>
void                    Assume             D     %112.0, %110.8 (Typecheck@0x560a56367f30[Type#4])
exact match
checkFor: val?+, static: val?, feedback: val?+, expected: val?+, required: val?+

Type#5 [used] env-
val?^ | miss    %110.0 = LdVar              eR    info !upd, e106.8
void                    Assume             D     %110.1, %108.8 (Typecheck@0x560a56367f30[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#6 [used] str$-
val?            %110.6 = Force!<value>      !v    %110.5, e106.8   <str$->
void                    Assume             D     %110.7, %110.8 (Typecheck@0x560a56367f30[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

----------------------
Inlinee: nrow [0x560a569e0e60]
referenced: 4
referenced non-empty: 3
read non-empty: 3
used: 2
present non-empty: 1

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (str|vec) (polluted)
val?            %115.10 = Force!<lazy>       !vL   %115.8, e115.9   <(str|vec)>
other unused reason

Type#2 [used] int-
val?            %115.11 = CallBuiltin        !v    dim(%115.10) e115.9   <int->
void                    Assume             D     %115.13, %115.14 (Typecheck@0x560a56a77a90[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [used] int$-
val?            %61.9 = Extract1_1D        wed   %61.8, 1L, elided   <int$->
void                    Assume             D     %61.10, %61.11 (Typecheck@0x560a56a77a90[Type#3])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

----------------------
Inlinee: which [0x560a56086380]
referenced: 12
referenced non-empty: 3
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] lgl+ (polluted)
optimized away

Type#1 [unused] lgl$-
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] int+ (polluted)
val+            %153.7 = CallSafeBuiltin    wed   which(%153.6)    <int+>
other unused reason

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#1 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#2 [used] int- (polluted)
val?            %45.11 = StaticCall         !v    match[0x560a6dcbc900](%45.9, %45.10, 0L) { 0 1 2n } e45.8   <int->
void                    Assume             D     %45.12, %45.13 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %47.2 = Gt                 wed   %47.1, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: cbind [0x560a569541c0]
referenced: 3
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] (int|str)+ (polluted)
val?            %30.10 = Call               !v    <spec .Internal>(%30.9) e30.8   <(int|str)+>
other unused reason

----------------------
Inlinee: matrix [0x560a56720ee0]
referenced: 13
referenced non-empty: 9
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 9
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] str$-
optimized away (dependency)

Type#9 [unused] (int|real)$- (polluted)
optimized away (dependency)

Type#10 [unused] (int|real)$- (polluted)
optimized away (dependency)

Type#11 [unused] lgl$-
optimized away (dependency)

Type#12 [unused] nil-
optimized away

----------------------
Inlinee: ncol [0x560a56753160]
referenced: 4
referenced non-empty: 3
read non-empty: 3
used: 2
present non-empty: 1

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [used] str_
val?            %99.4 = Force!<value>      !v    %99.3, e1.3   <str_>
void                    Assume             D     %99.5, %99.6 (Typecheck@0x560a5698ab30[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str_, expected: str_, required: val?+

Type#2 [unused] int-
val+            %101.2 = CallSafeBuiltin    wed   dim(%101.1)    <int->
other unused reason

Type#3 [used] int$-
val?            %101.3 = Extract1_1D        wed   %101.2, 2L, elided   <int$->
void                    Assume             D     %101.4, %101.5 (Typecheck@0x560a5698ab30[Type#3])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

----------------------
Inlinee: paste [0x560a55fd8390]
referenced: 4
referenced non-empty: 4
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec- (polluted)
val+            %15.11 = CallSafeBuiltin    wed   list(%15.9, %15.10)    <vec->
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] (nil|str)- (polluted)
optimized away

Type#3 [unused] lgl$-
optimized away

----------------------
Inlinee: NROW [0x560a5698aa10]
referenced: 11
referenced non-empty: 7
read non-empty: 7
used: 4
present non-empty: 2

Used
exact match: 3
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 1
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str_
optimized away

Type#4 [unused] (nil|int)- (polluted)
val+            %2.2  = CallSafeBuiltin    wed   dim(%2.1)    <(nil|int)->
other unused reason

Type#5 [used] int$-
(int|real)$-    %2.3  = CallSafeBuiltin    wed   length(%2.2)    <int$->
void                    Assume             D     %2.4, %2.5 (Typecheck@0x560a56cb3cc0[Type#5])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [used] str$-
val?+           %2.1  = CastType           d     dn %1.8   <str_>
void                    Assume             D     %5.0, %2.5 (Typecheck@0x560a56cb3cc0[Type#7])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?+, feedback: str$-, expected: str$-, required: val?+

Type#8 [used] int$-
(int|real)$-    %5.3  = CallSafeBuiltin    wed   length(%5.2)    <int$->
void                    Assume             D     %5.4, %5.5 (Typecheck@0x560a56cb3cc0[Type#8])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#9 [used] int-
val+            %2.2  = CallSafeBuiltin    wed   dim(%2.1)    <(nil|int)->
void                    Assume             D     %179.0, %2.5 (Typecheck@0x560a56cb3cc0[Type#9])
exact match
checkFor: int-, static: val+, feedback: int-, expected: int-, required: val?+

Type#10 [unused] int$-
int$-           %179.3 = Extract1_1D        wed   %179.2, 1L, elided   <int$->
dependent slot

*********************** Compilation session for: library.dynam (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2 miss: 3) ***********************
======================= ClosureVersion: library.dynam (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2 miss: 3) =======================
referenced: 168
referenced non-empty: 74
read non-empty: 72
used: 13
present non-empty: 27

Used
exact match: 10
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 61
optimized away non-empty: 34
dependent: 48
other reasons unused non-empty: 13

Polluted
polluted: 12
used polluted: 1

----------------------
library.dynam [0x560a577f28a0]
referenced: 136
referenced non-empty: 51
read non-empty: 51
used: 12
present non-empty: 12

Used
exact match: 9
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 39
optimized away non-empty: 27
dependent: 36
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] lgl$-
optimized away (dependency)

Type#1 [unused] vec+
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] vec
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] str$+
val+            %98.0 = Force!<lazy>       !vr   %1.2,    <str$+>
dependent slot

Type#7 [used] lgl$-
val?            %98.1 = CallBuiltin        !v    nzchar(%98.0) e1.3   <lgl$->
void                    Assume             D     %98.2, %98.3 (Typecheck@0x560a577a5dc0[Type#7])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] str$-
val?            %4.1  = Force!<lazy>       !v    %4.0, e1.3   <str$->
dependent slot

Type#10 [unused] str$-
val?            %4.3  = Force!<lazy>       !v    %4.2, e1.3   <str$->
dependent slot

Type#11 [unused] vec+
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] str$-
val?            %4.7  = Call               !v    %4.4(%4.5, %4.6) e1.3   <str$->
dependent slot

Type#14 [unused] str$+
optimized away (dependency)

Type#15 [unused] str$-
optimized away (dependency)

Type#16 [unused] str$-
val?            %6.14 = PopContext         C     %6.13, %6.6   <str$->
dependent slot

Type#17 [unused] str$-
optimized away (dependency)

Type#18 [unused] str$-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] str$-
val?            %6.20 = NamedCall          !v    %6.16(%6.17, %6.18, verbose=%6.19) e1.3   <str$->
dependent slot

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [used] str$-
val?^ | miss    %10.3 = LdVar              eR    r_arch, e1.3
void                    Assume             D     %10.4, %8.8 (Typecheck@0x560a577a5dc0[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#23 [used] lgl$-
val?            %10.8 = CallBuiltin        !v    nzchar(%10.7) e1.3   <lgl$->
void                    Assume             D     %10.9, %10.10 (Typecheck@0x560a577a5dc0[Type#23])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#24 [unused] str$-
optimized away (dependency)

Type#25 [unused] str$-
val?            %13.15 = PopContext         C     %13.14, %13.5   <str$->
dependent slot

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] str$-
optimized away (dependency)

Type#30 [unused] str$-
optimized away (dependency)

Type#31 [unused] str$-
val?            %15.18 = PopContext         C     %15.17, %15.6   <str$->
dependent slot

Type#32 [unused] str$-
optimized away (dependency)

Type#33 [used] lgl$-
val?            %17.11 = PopContext         C     %17.10, %17.5   <lgl$->
void                    Assume             D     %17.12, %17.13 (Typecheck@0x560a577a5dc0[Type#33])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [used] str$-
val?^ | miss    %29.0 = LdVar              eR    file, e1.3
void                    Assume             D     %29.1, %27.1 (Typecheck@0x560a577a5dc0[Type#47])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#48 [used] lgl$-
lgl-            %29.5 = Eq                 wed   %29.4, "", elided   <lgl$->
void                    Assume             D     %29.6, %29.7 (Typecheck@0x560a577a5dc0[Type#48])
exact match
checkFor: lgl$-, static: lgl-, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] str$-
optimized away (dependency)

Type#60 [unused] str$-
optimized away (dependency)

Type#61 [unused] str$-
optimized away (dependency)

Type#62 [unused] str$-
val?            %32.18 = PopContext         C     %32.17, %32.6   <str$->
dependent slot

Type#63 [unused] vec
optimized away (dependency)

Type#64 [used] lgl-
val?            %44.3 = PopContext         C     %44.2, %34.6   <lgl->
void                    Assume             D     %44.5, %44.6 (Typecheck@0x560a577a5dc0[Type#64])
exact match
checkFor: lgl-, static: val?, feedback: lgl-, expected: lgl-, required: val?+

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] lgl-
optimized away (dependency)

Type#67 [used] int$-
(int|real)$-    %46.6 = CallSafeBuiltin    wed   length(%46.5)    <int$->
void                    Assume             D     %46.7, %46.8 (Typecheck@0x560a577a5dc0[Type#67])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] lgl-
optimized away (dependency)

Type#70 [used] lgl$-
val?            %49.3 = CallBuiltin        !v    any(%46.5) e1.3   <lgl$->
void                    Assume             D     %49.4, %49.5 (Typecheck@0x560a577a5dc0[Type#70])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] $#-
optimized away (dependency)

Type#87 [unused] $#-
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] $#-
optimized away (dependency)

Type#90 [unused] $#-
optimized away (dependency)

Type#91 [unused] $#-
optimized away (dependency)

Type#92 [unused] $#-
optimized away (dependency)

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] $#-
optimized away (dependency)

Type#99 [unused] $#-
optimized away (dependency)

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [unused] $#-
optimized away (dependency)

Type#102 [unused] $#-
optimized away (dependency)

Type#103 [unused] $#-
optimized away (dependency)

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] $#-
optimized away (dependency)

Type#106 [unused] $#-
optimized away (dependency)

Type#107 [unused] $#-
optimized away (dependency)

Type#108 [unused] vec+
optimized away (dependency)

Type#109 [unused] $#-
optimized away (dependency)

Type#110 [used] str$-
val?            %53.3 = Call               !v    %53.0(%53.1, %53.2) e1.3   <str$->
void                    Assume             D     %53.4, %53.5 (Typecheck@0x560a577a5dc0[Type#110])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#111 [used] lgl$-
lgl-            %55.2 = Eq                 wed   %55.1, "windows", elided   <lgl$->
void                    Assume             D     %55.3, %55.4 (Typecheck@0x560a577a5dc0[Type#111])
exact match
checkFor: lgl$-, static: lgl-, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#112 [unused] $#-
optimized away (dependency)

Type#113 [unused] $#-
optimized away (dependency)

Type#114 [unused] $#-
optimized away (dependency)

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

Type#117 [unused] $#-
optimized away (dependency)

Type#118 [unused] $#-
optimized away (dependency)

Type#119 [unused] lgl$-
val?            %58.1 = Force!<lazy>       !v    %58.0, e1.3   <lgl$->
dependent slot

Type#120 [unused] $#-
optimized away (dependency)

Type#121 [unused] $#-
optimized away (dependency)

Type#122 [unused] str-
optimized away

Type#123 [used] lgl$-
val?            %63.3 = PopContext         C     %63.2, %61.4   <lgl$->
void                    Assume             D     %63.4, %63.5 (Typecheck@0x560a577a5dc0[Type#123])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#124 [unused] str$-
optimized away (dependency)

Type#125 [unused] $#-
optimized away (dependency)

Type#126 [unused] vec
val?            %66.7 = NamedCall          !v    function(x, local=TRUE, now=TRUE, ...) <(rir::|...(%66.3, DLLpath=%66.4, .xpandDotsTrigger=%66.6) e1.3   <vec>
dependent slot

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] $#-
optimized away (dependency)

Type#129 [unused] vec
optimized away (dependency)

Type#130 [unused] vec
optimized away (dependency)

Type#131 [unused] vec$-
optimized away

Type#132 [unused] vec-
optimized away

Type#133 [unused] $#-
optimized away (dependency)

Type#134 [unused] vec
val?            %72.4 = Force!<value>      !v    %72.3, e1.3   <vec>
dependent slot

Type#135 [unused] vec
optimized away (dependency)

----------------------
Inlinee: vapply [0x560a5607f4e0]
referenced: 15
referenced non-empty: 9
read non-empty: 9
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 1
dependent: 6
other reasons unused non-empty: 3

Polluted
polluted: 6
used polluted: 0

Type#0 [unused] (cls|blt)- (polluted)
optimized away (dependency)

Type#1 [unused] (cls|blt)- (polluted)
val?            %34.11 = StaticCall         !v    match.fun[0x560a6e3876f0](%34.10) e34.9   <(cls|blt)->
dependent slot

Type#2 [unused] val? (polluted)
val?            %36.4 = Force!<lazy>       !v    %36.3, e34.9   <val?>
dependent slot

Type#3 [unused] lgl$-
lgl$#-          %36.5 = CallSafeBuiltin    wed   is.vector(%36.4, "any")    <lgl$->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] (str|vec)+ (polluted)
val?            %93.4 = Force!<wrapped>    !v    %93.3, e34.9   <(str|vec)+>
other unused reason

Type#6 [unused] lgl$-
lgl$#-          %93.5 = CallSafeBuiltin    wed   is.object(%93.4)    <lgl$->
dependent slot

Type#7 [unused] val? (polluted)
val?            %92.4 = Force!<wrapped>    !v    %92.3, e34.9   <val?>
dependent slot

Type#8 [unused] vec
val?            %92.5 = StaticCall         !v    as.list[0x560a6e1dd060](%92.4) { 0 } e34.9   <vec>
other unused reason

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] val?+ (polluted)
val?            %44.2 = Call               !v    %44.0(%44.1) e34.9   <val?+>
other unused reason

----------------------
Inlinee: file.exists [0x560a55e49350]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str- (polluted)
val?            %17.9 = CallBuiltin        !v    c(%17.8) e17.7   <str->
other unused reason

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#1 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#2 [used] int- (polluted)
val?            %61.9 = StaticCall         !v    match[0x560a6e1b9f10](%61.7, %61.8, 0L) { 0 1 2n } e61.6   <int->
void                    Assume             D     %61.10, %61.11 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %63.2 = Gt                 wed   %63.1, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: file.path [0x560a55e4c6a0]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec+
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] vec-
val+            %32.15 = CallSafeBuiltin    wed   list(%32.13, %32.14)    <vec->
other unused reason

Type#4 [unused] str$-
val?            %32.16 = Force!<lazy>       !vL   %32.9, e32.7   <str$->
dependent slot

----------------------
Inlinee: paste0 [0x560a55fc8790]
referenced: 3
referenced non-empty: 3
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] vec-
val+            %6.12 = CallSafeBuiltin    wed   list(%6.10, %6.11)    <vec->
other unused reason

Type#1 [unused] (nil|str)- (polluted)
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: .dynLibs [0x560a57032e90]
referenced: 4
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec
val?            %69.1 = Force!<value>      !v    %69.0, e68.6   <vec>
dependent slot

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %74.4 = Force!<value>      !v    %74.3, e68.6   <vec>
dependent slot

*********************** Compilation session for: assignNativeRoutines (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,!Obj1,!Obj2) ***********************
======================= ClosureVersion: assignNativeRoutines (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,!Obj1,!Obj2) =======================
referenced: 47
referenced non-empty: 35
read non-empty: 34
used: 7
present non-empty: 13

Used
exact match: 4
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 28
optimized away non-empty: 15
dependent: 22
other reasons unused non-empty: 6

Polluted
polluted: 4
used polluted: 2

----------------------
assignNativeRoutines [0x560a55ef2d70]
referenced: 30
referenced non-empty: 24
read non-empty: 24
used: 6
present non-empty: 8

Used
exact match: 3
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 18
optimized away non-empty: 10
dependent: 16
other reasons unused non-empty: 2

Polluted
polluted: 3
used polluted: 2

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] vec
val?            %2.4  = Force!<lazy>       !v    %1.0, e2.3   <vec>
dependent slot

Type#2 [used] int$-
val?            %2.5  = CallBuiltin        !v    length(%2.4) e2.3   <int$->
void                    Assume             D     %2.6, %2.7 (Typecheck@0x560a562e0470[Type#2])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#3 [unused] lgl$-
lgl$-           %4.2  = Eq                 d     %4.1, 0L, elided   <lgl$->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] str-
str-            %5.3  = CallSafeBuiltin    wed   vector("character", 0L)    <str->
dependent slot

Type#6 [unused] str-
str-            %5.5  = CallSafeBuiltin    wed   vector("character", 0L)    <str->
dependent slot

Type#7 [unused] vec
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [used] lgl$-
val?            %5.10 = Call               !v    %5.7(%5.8, %5.9) e2.3   <lgl$->
void                    Assume             D     %5.11, %5.12 (Typecheck@0x560a562e0470[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [unused] vec
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str-
val?            %23.3 = Call               !v    %23.0(%23.1, %23.2) e2.3   <str->
dependent slot

Type#13 [unused] vec
optimized away (dependency)

Type#14 [unused] vec
val?            %31.5 = PopContext         C     %31.4, %25.4   <vec>
dependent slot

Type#15 [unused] vec
optimized away (dependency)

Type#16 [unused] vec
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [used] str+ (polluted)
val?            %9.3  = Call               !v    %9.0(%9.1, %9.2) e2.3   <str+>
void                    Assume             D     %9.5, %9.6 (Typecheck@0x560a562e0470[Type#18])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?+

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] str+ (polluted)
optimized away (dependency)

Type#21 [used] int$-
(int|real)$-    %11.6 = CallSafeBuiltin    wed   length(%11.5)    <int$->
void                    Assume             D     %11.7, %11.8 (Typecheck@0x560a562e0470[Type#21])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#22 [unused] str+
optimized away (dependency)

Type#23 [unused] vec
optimized away (dependency)

Type#24 [unused] vec+
val?            %20.5 = StaticCall         !v    getNativeSymbolInfo[0x560a6e1ceb50](%20.3, %20.4, false, true) { 0 1 2n 3n } e2.3   <vec+>
other unused reason

Type#25 [unused] str+
optimized away (dependency)

Type#26 [unused] int-
optimized away

Type#27 [used] str-
val?^ | miss    %17.0 = LdVar              eR    varnames, e2.3
void                    Assume             D     %17.1, %15.0 (Typecheck@0x560a562e0470[Type#27])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#28 [used] str+ (polluted)
val?^ | miss    %19.0 = LdVar              eR    symnames, e2.3
void                    Assume             D     %19.1, %17.6 (Typecheck@0x560a562e0470[Type#28])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str+, expected: str+, required: val?^ | miss

Type#29 [unused] str+
val?            %19.5 = NamedCall          !v    %17.5(%19.4, value=%17.4) e2.3   <str+>
dependent slot

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %25.11 = Force!<lazy>       !vL   %25.9, e25.10   <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: character [0x560a55e4c150]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] int$-
optimized away

----------------------
Inlinee: getDLLRegisteredRoutines.DLLInfo [0x560a5739fde0]
referenced: 13
referenced non-empty: 7
read non-empty: 6
used: 1
present non-empty: 4

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 6
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec
optimized away (dependency)

Type#1 [used] lgl$-
val?            %25.13 = PopContext         C     %25.12, %25.8   <lgl$->
void                    Assume             D     %25.14, %25.15 (Typecheck@0x560a5702ed60[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] vec
val?            %28.1 = Force!<wrapped>    !v    %28.0, e25.6   <vec>
dependent slot

Type#5 [unused] other
val?            %30.1 = Extract2_1D        !v    %28.1, "info", e25.6   <other>
dependent slot

Type#6 [unused] other
optimized away (dependency)

Type#7 [unused] lgl$-
val?            %30.7 = Force!<value>      !v    %30.6, e25.6   <lgl$->
dependent slot

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] vec
val?            %31.4 = Force!<value>      !v    %31.3, e25.6   <vec>
dependent slot

*********************** Compilation session for: runUserHook (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: runUserHook (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 18
referenced non-empty: 12
read non-empty: 12
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 9
dependent: 8
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 0

----------------------
runUserHook [0x560a56352020]
referenced: 10
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 5
dependent: 4
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] vec-
val?            %2.12 = PopContext         C     %2.11, %2.5   <vec->
dependent slot

Type#3 [unused] vec-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] (nil|vec)_ (polluted)
optimized away

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] vec+
optimized away

----------------------
Inlinee: try [0x560a56e27790]
referenced: 4
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] (nil|vec)+ (polluted)
optimized away (dependency)

Type#3 [unused] (nil|vec)+ (polluted)
val?            %11.6 = StaticCall         !v    tryCatch[0x560a6e958000](%11.3, %11.5) { 0 1n } e9.6   <(nil|vec)+>
dependent slot

----------------------
Inlinee: getHook [0x560a57734970]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] env-
optimized away

Type#2 [unused] vec-
optimized away (dependency)

Type#3 [unused] vec-
val?            %2.11 = StaticCall         !v    get0[0x560a6eaf5a50](%2.8, %2.9, missingArg, false, %2.10) { 0 1n 3n 4n } e2.7   <vec->
dependent slot

*********************** Compilation session for: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 7
used: 5
present non-empty: 1

Used
exact match: 4
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

----------------------
isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 7
used: 5
present non-empty: 1

Used
exact match: 4
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] (nil|lgl)- (polluted)
val?            %1.2  = Force!<lazy>       !vL   %1.0, e1.1   <(nil|lgl)->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a54e55690[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (nil|lgl)-, expected: (nil|lgl)-, required: val?^ | miss

Type#2 [used] lgl$-
val+            %2.4  = CallSafeBuiltin    vwed  is.logical(%2.1)    <lgl$->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a54e55690[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?-           %2.1  = CastType           d     dn %1.2   <(nil|lgl)->
void                    Assume             D     %5.0, %2.6 (Typecheck@0x560a54e55690[Type#4])
exact match
checkFor: lgl$-, static: val?-, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?-           %2.1  = CastType           d     dn %1.2   <(nil|lgl)->
void                    Assume             D     %7.0, %2.6 (Typecheck@0x560a54e55690[Type#8])
exact match
checkFor: lgl$-, static: val?-, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %7.3  = CallSafeBuiltin    vwed  is.na(%7.2)    <lgl$->
dependent slot

Type#10 [used] lgl$-
val?-           %2.1  = CastType           d     dn %1.2   <(nil|lgl)->
void                    Assume             D     %11.1, %8.3 (Typecheck@0x560a54e55690[Type#10])
exact match
checkFor: lgl$-, static: val?-, feedback: lgl$-, expected: lgl$-, required: val?+

*********************** Compilation session for: getRversion (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: .make_numeric_version (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager3,NonRefl0,NonRefl3,!Obj3) =======================
referenced: 50
referenced non-empty: 31
read non-empty: 28
used: 12
present non-empty: 8

Used
exact match: 4
widened: 7
narrowed: 1
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 11
dependent: 16
other reasons unused non-empty: 3

Polluted
polluted: 6
used polluted: 4

----------------------
.make_numeric_version [0x560a55ef49f0]
referenced: 48
referenced non-empty: 29
read non-empty: 27
used: 10
present non-empty: 8

Used
exact match: 4
widened: 6
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 11
dependent: 16
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 2

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str$+ (polluted)
val?            %1.4  = Force!<lazy>             %1.3,    <str$+>
void                    Assume             D     %1.5, %1.6 (Typecheck@0x560a55ef48e0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#2 [unused] (nil|str)- (polluted)
val+            %2.2  = CallSafeBuiltin    wed   names(%2.1)    <(nil|str)->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$+ (polluted)
optimized away (dependency)

Type#5 [unused] str$-
val+            %2.3  = CallSafeBuiltin    wed   as.character(%2.1)    <str$->
dependent slot

Type#6 [unused] int-
int-            %2.4  = StaticCall         !vr   unknown--fromConstant[0x560a6e165a70]() from function(length=0L) <(rir::DispatchTable*)0x56|...    <int->
other unused reason

Type#7 [unused] vec$-
val+            %2.5  = CallSafeBuiltin    wed   list(%2.4)    <vec$->
dependent slot

Type#8 [unused] str$-
optimized away (dependency)

Type#9 [unused] int$-
int$-           %4.3  = CastType           d     dn %2.6   <int$->
dependent slot

Type#10 [unused] vec$-
val+            %4.4  = CallSafeBuiltin    wed   rep.int(%4.1, %4.3)    <vec$->
dependent slot

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [unused] str$-
val?            %4.13 = PopContext         C     %4.12, %4.8   <str$->
dependent slot

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [used] str$-
val?            %6.4  = Force!<value>      !v    %6.3, e4.5   <str$->
void                    Assume             D     %6.5, %6.6 (Typecheck@0x560a55ef48e0[Type#14])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#15 [used] int$-
(int|real)$-    %8.2  = CallSafeBuiltin    wed   length(%8.1)    <int$->
void                    Assume             D     %8.3, %8.4 (Typecheck@0x560a55ef48e0[Type#15])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#16 [unused] str$-
optimized away (dependency)

Type#17 [unused] str$-
optimized away (dependency)

Type#18 [used] lgl$-
val?            %17.5 = StaticCall         !v    grepl[0x560a6e735b70](%17.3, %17.4) e4.5   <lgl$->
void                    Assume             D     %17.6, %17.7 (Typecheck@0x560a55ef48e0[Type#18])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] lgl$-
optimized away (dependency)

Type#21 [used] lgl$-
val?            %21.3 = CallBuiltin        !v    all(%19.1) e4.5   <lgl$->
void                    Assume             D     %21.4, %21.5 (Typecheck@0x560a55ef48e0[Type#21])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] str$-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] lgl$-
optimized away (dependency)

Type#34 [unused] str$-
optimized away (dependency)

Type#35 [unused] vec$-
optimized away (dependency)

Type#36 [unused] blt-
optimized away

Type#37 [used] vec$-
val?            %28.5 = StaticCall         !v    lapply[0x560a6ee2bf90](%28.3, %28.4) { 0 1 } e4.5   <vec$->
void                    Assume             D     %28.6, %28.7 (Typecheck@0x560a55ef48e0[Type#37])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#38 [used] vec$-
val?^ | miss    %30.0 = LdVar              eR    y !upd, e4.5
void                    Assume             D     %30.1, %28.7 (Typecheck@0x560a55ef48e0[Type#38])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#39 [used] lgl$-
val?^ | miss    %30.5 = LdVar              eR    ok, e4.5
void                    Assume             D     %30.6, %28.7 (Typecheck@0x560a55ef48e0[Type#39])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#40 [used] (nil|str)- (polluted)
val?^ | miss    %14.0 = LdVar              eR    nms, e4.5
void                    Assume             D     %14.1, %12.0 (Typecheck@0x560a55ef48e0[Type#40])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: (nil|str)-, expected: (nil|str)-, required: val?^ | miss

Type#41 [used] vec$-
val?^ | miss    %16.0 = LdVar              eR    y, e4.5
void                    Assume             D     %16.1, %14.6 (Typecheck@0x560a55ef48e0[Type#41])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] vec$
val?            %16.13 = Force!<value>      !     %16.11, e4.5   <vec$>
other unused reason

----------------------
Inlinee: rep.int [0x560a55ef9c20]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 2
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 1
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 2

Type#0 [used] (int|vec)- (polluted)
val+            %2.5  = CallSafeBuiltin    wed   list(%2.4)    <vec$->
void                    Assume             D     %2.8, %2.9 (Typecheck@0x560a55ef47e0[Type#0])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: (int|vec)-, expected: (int|vec)-, required: val?+

Type#1 [used] int- (polluted)
(int|real)$-    %2.6  = CallSafeBuiltin    wed   length(%2.3)    <int$->
void                    Assume             D     %2.7, %2.9 (Typecheck@0x560a55ef47e0[Type#1])
narrowed with static type: yes
widened: no
checkFor: int$-, static: (int|real)$-, feedback: int-, expected: int$-, required: val?+

======================= ClosureVersion: getRversion (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 35
referenced non-empty: 26
read non-empty: 26
used: 2
present non-empty: 8

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 24
optimized away non-empty: 16
dependent: 15
other reasons unused non-empty: 9

Polluted
polluted: 5
used polluted: 1

----------------------
getRversion [0x560a5aae1560]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec
optimized away

Type#1 [unused] vec$
val?            %7.1  = PopContext         C     %7.0, %1.2   <vec$>
other unused reason

----------------------
Inlinee: R_system_version [0x560a5aae6a60]
referenced: 7
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 4
dependent: 2
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] vec+
optimized away

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$-
optimized away (dependency)

Type#5 [unused] str-
optimized away

Type#6 [unused] vec$
val?            %8.15 = StaticCall         !     .make_numeric_version[0x560a6eb085d0](%8.14, %8.9, %8.10, %8.11) e8.7   <vec$>
other unused reason

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#1 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#2 [used] int- (polluted)
val?            %9.8  = StaticCall         !v    match[0x560a6e79b750](%9.6, %9.7, 0L) { 0 1 2n } e9.5   <int->
void                    Assume             D     %9.9, %9.10 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %10.2 = Gt                 wed   %10.1, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: package_version [0x560a59278f10]
referenced: 22
referenced non-empty: 15
read non-empty: 15
used: 1
present non-empty: 5

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 9
dependent: 11
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (str|vec) (polluted)
val?            %1.5  = Force!<lazy>       !vL   %1.3, e1.4   <(str|vec)>
other unused reason

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] str-
optimized away (dependency)

Type#6 [unused] vec
optimized away (dependency)

Type#7 [unused] str-
optimized away (dependency)

Type#8 [unused] lgl-
val?            %10.3 = PopContext         C     %10.2, %9.2   <lgl->
other unused reason

Type#9 [used] lgl$-
val?            %10.4 = CallBuiltin        !v    all(%10.3) e1.4   <lgl$->
void                    Assume             D     %10.5, %10.6 (Typecheck@0x560a5917f460[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [unused] vec
optimized away (dependency)

Type#11 [unused] str-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] vec
optimized away (dependency)

Type#14 [unused] str$-
optimized away (dependency)

Type#15 [unused] vec$
val?            %8.16 = PopContext         C     %8.15, %8.4   <vec$>
dependent slot

Type#16 [unused] str$-
val?            %6.7  = Force!<wrapped>    !     %6.5, e1.4   <str$->
dependent slot

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] vec+
optimized away

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] str$-
optimized away (dependency)

Type#21 [unused] vec$
val?            %6.9  = StaticCall         !     .make_numeric_version[0x560a6ee6b6e0](%6.8, %6.3, %6.4, "package_version") e1.4   <vec$>
dependent slot

*********************** Compilation session for: search (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: search (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 0
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
search [0x560a6d6c0c40]
referenced: 0
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

*********************** Compilation session for: TRAFO (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: TRAFO (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
TRAFO [0x560a6ea153b0]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] cls-
val?            %1.3  = Force!<lazy>       !L    %1.0, e1.2   <cls->
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a6ee51f00[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: cls-, expected: cls-, required: val?^ | miss

*********************** Compilation session for: get (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 3) ***********************
======================= ClosureVersion: get (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 3) =======================
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

----------------------
get [0x560a56b53b40]
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] (int|env)- (polluted)
optimized away

Type#1 [unused] env+ (polluted)
optimized away (dependency)

Type#2 [unused] str$+ (polluted)
val+            %1.8  = Force!<lazy>       !vr   %1.1,    <str$+>
other unused reason

Type#3 [unused] env+ (polluted)
val?            %1.9  = Force!<lazy>       !v    %1.4, e1.2   <env+>
dependent slot

Type#4 [unused] str$-
val?            %1.11 = Force!<lazy>       !v    %1.10, e1.2   <str$->
other unused reason

Type#5 [unused] lgl$-
val?            %1.13 = Force!<lazy>       !v    %1.12, e1.2   <lgl$->
other unused reason

*********************** Compilation session for: FUN (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) ***********************
======================= ClosureVersion: FUN (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) =======================
referenced: 9
referenced non-empty: 9
read non-empty: 9
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 8
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 4
used polluted: 0

----------------------
FUN [0x560a6d18a260]
referenced: 9
referenced non-empty: 9
read non-empty: 9
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 8
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] int$-
optimized away (dependency)

Type#2 [unused] (vec|cls) (polluted)
optimized away (dependency)

Type#3 [unused] (vec|cls) (polluted)
optimized away (dependency)

Type#4 [unused] str$-
optimized away (dependency)

Type#5 [unused] int$-
optimized away (dependency)

Type#6 [unused] (vec|cls) (polluted)
optimized away (dependency)

Type#7 [unused] (vec|cls) (polluted)
optimized away (dependency)

Type#8 [used] lgl$-
val?            %2.8  = NamedCall          !     function(x, y, num.eq=TRUE, single.NA=TRUE, at|...(%2.4, %2.5, .xpandDotsTrigger=%2.7) e2.3   <lgl$->
void                    Assume             D     %2.9, %2.10 (Typecheck@0x560a6d18a170[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: TRAFO (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: TRAFO (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
TRAFO [0x560a6ea153b0]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (vec|cls) (polluted)
val?            %1.3  = Force!<lazy>       !L    %1.0, e1.2   <(vec|cls)>
other unused reason

*********************** Compilation session for: strrep (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleInt1) ***********************
======================= ClosureVersion: strrep (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleInt1) =======================
referenced: 10
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

----------------------
strrep [0x560a55fbe740]
referenced: 10
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$-
val+            %1.2  = Force<lazy>              %1.1,    <str$->
dependent slot

Type#2 [unused] lgl$-
lgl$#-          %1.3  = CallSafeBuiltin    wed   is.character(%1.2)    <lgl$->
other unused reason

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
val+            %4.0  = CallSafeBuiltin    wed   as.character(%1.2)    <>
dependent slot

Type#6 [unused] str$-
val?+           %3.1  = Force!<wrapped>          %3.0,    <str$->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] int+ (polluted)
int$-           %3.2  = Force!<lazy>       !vr   %1.0,    <int+>
other unused reason

Type#9 [unused] int-
optimized away

*********************** Compilation session for: nchar (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 2) ***********************
======================= ClosureVersion: nchar (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1 miss: 2) =======================
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
nchar [0x560a560bc4c0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str+ (polluted)
val+            %1.2  = Force!<lazy>       !vr   %1.1,    <str+>
other unused reason

Type#1 [used] str$-
val+            %1.3  = Force!<lazy>             %1.0,    <str$->
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a5601d340[Type#1])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: str$-, expected: str$-, required: val?+

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: .mergeImportMethods (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: .mergeImportMethods (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 19
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
.mergeImportMethods [0x560a6fc957e0]
referenced: 19
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env+
val+            %1.4  = Force!<lazy>       !vr   %1.2,    <env+>
other unused reason

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] str$-
val?            %1.5  = Force!<lazy>       !vL   %1.0, e1.3   <str$->
void                    Assume             D     %1.6, %1.7 (Typecheck@0x560a6fbe7e80[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

Type#3 [unused] nil-
val?            %2.4  = Extract2_1D        wed   %1.4, %2.1, elided   <nil->
dependent slot

Type#4 [unused] nil-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] nil-
optimized away (dependency)

*********************** Compilation session for:  (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) ***********************
======================= ClosureVersion:  (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) =======================
referenced: 81
referenced non-empty: 46
read non-empty: 46
used: 19
present non-empty: 11

Used
exact match: 7
widened: 12
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 27
optimized away non-empty: 16
dependent: 22
other reasons unused non-empty: 5

Polluted
polluted: 1
used polluted: 0

----------------------
 [0x560a5884c850]
referenced: 78
referenced non-empty: 43
read non-empty: 43
used: 18
present non-empty: 9

Used
exact match: 7
widened: 11
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 25
optimized away non-empty: 16
dependent: 22
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str$-
val+            %1.1  = Force<wrapped>           %1.0,    <str$->
dependent slot

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %2.9  = StaticCall         !v    existsInFrame[0x560a700ed8c0](%1.1, %2.7) from %2.8 e2.6   <lgl$->
void                    Assume             D     %2.10, %2.11 (Typecheck@0x560a58731550[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [used] env-
val?            %9.5  = PopContext         C     %9.4, %7.8   <env->
void                    Assume             D     %13.0, %11.9 (Typecheck@0x560a58731550[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#4 [unused] env-
optimized away (dependency)

Type#5 [used] env-
val?^ | miss    %11.1 = LdVar              eR    envenv !upd, e2.6
void                    Assume             D     %11.2, %9.7 (Typecheck@0x560a58731550[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#6 [used] str$-
val?            %11.7 = Force!<wrapped>    !v    %11.6, e2.6   <str$->
void                    Assume             D     %11.8, %11.9 (Typecheck@0x560a58731550[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#7 [used] env-
val?^ | miss    %15.0 = LdVar              eR    env, e2.6
void                    Assume             D     %15.1, %13.7 (Typecheck@0x560a58731550[Type#7])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [used] str$-
val?            %15.8 = Force!<wrapped>    !v    %15.7, e2.6   <str$->
void                    Assume             D     %15.9, %15.10 (Typecheck@0x560a58731550[Type#9])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#10 [unused] int-
val?            %17.2 = Extract2_1D        wed   %15.4, %17.1, elided   <int->
dependent slot

Type#11 [unused] int-
optimized away (dependency)

Type#12 [unused] int-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] int-
optimized away (dependency)

Type#21 [used] str$-
val?^ | miss    %20.3 = LdVar              eR    datafile, e2.6
void                    Assume             D     %20.4, %18.1 (Typecheck@0x560a58731550[Type#21])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#22 [used] lgl$-
val?^ | miss    %20.8 = LdVar              eR    compressed, e2.6
void                    Assume             D     %20.9, %18.1 (Typecheck@0x560a58731550[Type#22])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#23 [used] cls-
val?^ | miss    %20.12 = LdVar              eR    envhook, e2.6
void                    Assume             D     %20.13, %18.1 (Typecheck@0x560a58731550[Type#23])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: cls-, expected: cls-, required: val?^ | miss

Type#24 [unused] vec+
val?            %20.17 = CallBuiltin        !v    lazyLoadDBfetch(%17.2, %20.7, %20.11, %20.16) e2.6   <vec+>
dependent slot

Type#25 [unused] vec+
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] env-
val?            %20.22 = Call               !v    %20.19(%20.20, %20.21) e2.6   <env->
dependent slot

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] vec+
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] env-
val?            %57.3 = Call               !v    %57.0(%57.1, %57.2) e2.6   <env->
dependent slot

Type#32 [used] env-
val?^ | miss    %26.6 = LdVar              eR    e, e2.6
void                    Assume             D     %26.7, %24.1 (Typecheck@0x560a58731550[Type#32])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#33 [unused] vec+
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] vec+
optimized away (dependency)

Type#36 [unused] env-
optimized away (dependency)

Type#37 [unused] vec+
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] nil-
val?            %28.21 = Call               !v    %28.18(%28.19, %28.20) e2.6   <nil->
other unused reason

Type#40 [unused] vec+
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] vec$+
val?            %54.3 = Call               !v    %54.0(%54.1, %54.2) e2.6   <vec$+>
other unused reason

Type#43 [used] env-
val?^ | miss    %56.0 = LdVar              eR    e, e2.6
void                    Assume             D     %56.1, %54.5 (Typecheck@0x560a58731550[Type#43])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#44 [unused] vec+
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [used] lgl$-
val?            %30.3 = Call               !v    %30.0(%30.1, %30.2) e2.6   <lgl$->
void                    Assume             D     %30.5, %30.6 (Typecheck@0x560a58731550[Type#46])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#47 [unused] vec+
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [used] lgl$-
val?            %33.3 = Call               !v    %33.0(%33.1, %33.2) e2.6   <lgl$->
void                    Assume             D     %33.4, %33.5 (Typecheck@0x560a58731550[Type#49])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [used] int-
val?^ | miss    %40.0 = LdVar              eR    key, e2.6
void                    Assume             D     %40.1, %38.0 (Typecheck@0x560a58731550[Type#51])
exact match
checkFor: int-, static: val?^ | miss, feedback: int-, expected: int-, required: val?^ | miss

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] vec+
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [used] lgl$-
val?            %40.6 = Call               !v    %40.3(%40.4, %40.5) e2.6   <lgl$->
void                    Assume             D     %40.8, %40.9 (Typecheck@0x560a58731550[Type#68])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#69 [unused] vec+
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [used] lgl$-
val?            %43.3 = Call               !v    %43.0(%43.1, %43.2) e2.6   <lgl$->
void                    Assume             D     %43.4, %43.5 (Typecheck@0x560a58731550[Type#71])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] env (polluted)
val?            %48.2 = Force!<value>      !     %48.0, e2.6   <env>
other unused reason

Type#74 [used] env-
val?^ | miss    %59.0 = LdVar              eR    envenv, e2.6
void                    Assume             D     %59.1, %2.11 (Typecheck@0x560a58731550[Type#74])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [used] str$-
val?            %59.8 = Force!<wrapped>    !v    %59.7, e2.6   <str$->
void                    Assume             D     %59.9, %59.10 (Typecheck@0x560a58731550[Type#76])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#77 [unused] env-
val?            %61.2 = Extract2_1D        wed   %59.4, %61.1, elided   <env->
dependent slot

----------------------
Inlinee: list2env [0x560a58761370]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec+
val?            %28.14 = Force!<lazy>       !vL   %28.12, e28.13   <vec+>
other unused reason

Type#1 [unused] env-
val?            %28.15 = Force!<lazy>       !vrL  %28.11, e28.13   <env->
other unused reason

----------------------
Inlinee: mkenv [0x560a58954360]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] env-
val?            %7.13 = CallBuiltin        !vL   baseenv() e7.12   <env->
void                    Assume             D     %7.14, %7.15 (Typecheck@0x560a5894e170[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

*********************** Compilation session for: get (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,!Obj1 miss: 3) ***********************
======================= ClosureVersion: get (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,!Obj1 miss: 3) =======================
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

----------------------
get [0x560a56b53b40]
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (int|env)- (polluted)
optimized away

Type#1 [unused] env+ (polluted)
optimized away (dependency)

Type#2 [used] str$+ (polluted)
val?            %1.8  = Force!<lazy>       !v    %1.1, e1.2   <str$+>
void                    Assume             D     %1.9, %1.10 (Typecheck@0x560a56e45650[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#3 [unused] env+ (polluted)
val?            %2.3  = Force!<lazy>       !v    %2.2, e1.2   <env+>
dependent slot

Type#4 [unused] str$-
val?            %2.5  = Force!<lazy>       !v    %2.4, e1.2   <str$->
other unused reason

Type#5 [unused] lgl$-
val?            %2.7  = Force!<lazy>       !v    %2.6, e1.2   <lgl$->
other unused reason

*********************** Compilation session for: .cacheClass (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl3,!Obj0,!Obj3) ***********************
======================= ClosureVersion: .cacheClass (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl3,!Obj0,!Obj3) =======================
referenced: 74
referenced non-empty: 44
read non-empty: 37
used: 6
present non-empty: 15

Used
exact match: 4
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 38
optimized away non-empty: 23
dependent: 31
other reasons unused non-empty: 7

Polluted
polluted: 5
used polluted: 0

----------------------
.cacheClass [0x560a5a69c000]
referenced: 53
referenced non-empty: 26
read non-empty: 26
used: 6
present non-empty: 11

Used
exact match: 4
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 20
optimized away non-empty: 9
dependent: 17
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [used] lgl$-
val?            %2.4  = Force!<lazy>       !v    %1.1, e2.3   <lgl$->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a557ccf40[Type#0])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#1 [unused] lgl$-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$+
optimized away

Type#5 [unused] other$
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [used] env-
val?            %10.1 = Force!<wrapped>    !v    %10.0, e2.3   <env->
void                    Assume             D     %14.0, %12.4 (Typecheck@0x560a557ccf40[Type#7])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [used] str$-
val?            %12.2 = Force!<lazy>       !v    %12.1, e2.3   <str$->
void                    Assume             D     %12.3, %12.4 (Typecheck@0x560a557ccf40[Type#9])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#10 [unused] (nil|other) (polluted)
val?            %14.5 = Extract2_1D        wed   %14.2, %14.4, elided   <(nil|other)>
other unused reason

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] str$-
val?            %18.3 = Call               !v    %18.0(%18.1, %18.2) e2.3   <str$->
dependent slot

Type#14 [unused] other$
optimized away (dependency)

Type#15 [used] lgl$-
val?            %20.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%20.3, "classRepresentation") e2.3   <lgl$->
void                    Assume             D     %20.5, %20.6 (Typecheck@0x560a557ccf40[Type#15])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#16 [unused] other$
optimized away (dependency)

Type#17 [unused] other$
optimized away (dependency)

Type#18 [used] lgl$-
val?            %30.12 = PopContext         C     %30.11, %30.5   <lgl$->
void                    Assume             D     %30.13, %30.14 (Typecheck@0x560a557ccf40[Type#18])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] str$-
val?            %33.3 = Call               !v    %33.0(%33.1, %33.2) e2.3   <str$->
dependent slot

Type#22 [unused] str$-
optimized away (dependency)

Type#23 [unused] str$-
optimized away (dependency)

Type#24 [used] lgl$-
val?            %35.11 = PopContext         C     %35.10, %35.5   <lgl$->
void                    Assume             D     %35.12, %35.13 (Typecheck@0x560a557ccf40[Type#24])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] str$-
val?            %39.4 = Force!<wrapped>    !v    %39.3, e2.3   <str$->
dependent slot

Type#32 [unused] other$
optimized away (dependency)

Type#33 [unused] str-
val?            %41.10 = PopContext         C     %41.9, %41.4   <str->
other unused reason

Type#34 [unused] other$
val?            %41.13 = Force!<wrapped>    !v    %41.12, e2.3   <other$>
dependent slot

Type#35 [unused] env-
val?            %41.15 = Force!<wrapped>    !v    %41.14, e2.3   <env->
dependent slot

Type#36 [unused] str$-
val?            %41.17 = Force!<wrapped>    !v    %41.16, e2.3   <str$->
dependent slot

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] other$
val?            %16.1 = Force!<lazy>       !v    %16.0, e2.3   <other$>
dependent slot

Type#51 [unused] env-
val?            %16.3 = Force!<wrapped>    !v    %16.2, e2.3   <env->
dependent slot

Type#52 [unused] str$-
val?            %16.5 = Force!<wrapped>    !v    %16.4, e2.3   <str$->
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %30.9 = Force!<lazy>       !vL   %30.7, e30.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %35.9 = Force!<lazy>       !vL   %35.6, e35.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: .extendsForS3 [0x560a6c353b80]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (str|other)$ (polluted)
optimized away

Type#1 [unused] str-
val?            %41.9 = NamedCall          !v    %41.7(%41.8, maybe=false) e41.6   <str->
other unused reason

----------------------
Inlinee: isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 7
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 7
dependent: 6
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (nil|lgl)- (polluted)
optimized away

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] lgl$-
optimized away (dependency)

Type#9 [unused] lgl$-
lgl$-           %4.2  = CallSafeBuiltin    wed   is.na(%4.1)    <lgl$->
dependent slot

Type#10 [unused] lgl$-
optimized away (dependency)

======================= ClosureVersion: get0 (CorrOrd,!TMany,Argmatch;Eager2,NonRefl2 miss: 1) =======================
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

----------------------
get0 [0x560a56361ae0]
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

Type#0 [unused] $#-
optimized away

Type#1 [used] str$+ (polluted)
val?            %7.2  = Force!<lazy>       !v    %7.1, e1.6   <str$+>
void                    Assume             D     %7.3, %7.4 (Typecheck@0x560a563ebd40[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#2 [unused] env+ (polluted)
val?            %9.3  = Force!<lazy>       !v    %9.2, e1.6   <env+>
other unused reason

Type#3 [unused] str$-
val?            %9.5  = Force!<lazy>       !v    %9.4, e1.6   <str$->
other unused reason

Type#4 [unused] lgl$-
val?            %9.7  = Force!<lazy>       !v    %9.6, e1.6   <lgl$->
other unused reason

Type#5 [unused] (nil|vec)+ (polluted)
val?            %9.9  = Force!<lazy>       !v    %9.8, e1.6   <(nil|vec)+>
other unused reason

======================= ClosureVersion: getClassDef (CorrOrd,!TMany,Argmatch;Eager1,NonRefl1 miss: 1) =======================
referenced: 60
referenced non-empty: 38
read non-empty: 38
used: 1
present non-empty: 21

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 37
optimized away non-empty: 16
dependent: 30
other reasons unused non-empty: 7

Polluted
polluted: 5
used polluted: 0

----------------------
getClassDef [0x560a569916a0]
referenced: 42
referenced non-empty: 27
read non-empty: 27
used: 1
present non-empty: 11

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 15
dependent: 24
other reasons unused non-empty: 2

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] str$+ (polluted)
optimized away

Type#6 [unused] (nil|other) (polluted)
val?            %9.9  = PopContext         C     %9.8, %7.4   <(nil|other)>
dependent slot

Type#7 [unused] (nil|other) (polluted)
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] (nil|other) (polluted)
val             %11.0 = ChkMissing         e     %9.9   <(nil|other)>
dependent slot

Type#13 [unused] str$-
optimized away (dependency)

Type#14 [unused] int$-
optimized away

Type#15 [unused] lgl$-
optimized away (dependency)

Type#16 [unused] str$-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] str$-
val?            %19.14 = PopContext         C     %19.13, %15.4   <str$->
dependent slot

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] env-
val?            %21.4 = Force!<lazy>       !v    %21.3, e1.5   <env->
dependent slot

Type#22 [unused] lgl$-
lgl$#-          %21.5 = CallSafeBuiltin    wed   is.character(%21.4)    <lgl$->
dependent slot

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] str$-
optimized away (dependency)

Type#25 [unused] lgl$-
optimized away (dependency)

Type#26 [used] lgl$-
val?            %25.4 = StaticCall         !v    isTRUE[0x560a70337820](%25.3) e1.5   <lgl$->
void                    Assume             D     %25.5, %25.6 (Typecheck@0x560a56991590[Type#26])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#27 [unused] str$-
optimized away (dependency)

Type#28 [unused] env-
val?            %39.4 = StaticCall         !v    .requirePackage[0x560a70352380](%39.3) e1.5   <env->
dependent slot

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] env-
val?            %31.4 = Force!<value>      !v    %31.3, e1.5   <env->
dependent slot

Type#31 [unused] lgl$-
lgl$#-          %31.5 = CallSafeBuiltin    wed   is.environment(%31.4)    <lgl$->
dependent slot

Type#32 [unused] str$-
optimized away (dependency)

Type#33 [unused] env-
optimized away (dependency)

Type#34 [unused] lgl$-
optimized away (dependency)

Type#35 [unused] other$
val?            %38.6 = StaticCall         !v    get0[0x560a703465c0](%38.3, %38.4, missingArg, %38.5) { 0 1 3n } e1.5   <other$>
dependent slot

Type#36 [unused] other$
val?            %35.1 = Force!<value>      !v    %35.0, e1.5   <other$>
dependent slot

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] other$
val?            %14.2 = Force!<value>      !     %14.0, e1.5   <other$>
dependent slot

----------------------
Inlinee: methodsPackageMetaName [0x560a595b46a0]
referenced: 9
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 0
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] vec
val?            %19.5 = Force!<value>      !v    %19.3, e19.4   <vec>
other unused reason

Type#5 [unused] str$-
val?            %19.7 = Force!<value>      !v    %19.6, e19.4   <str$->
dependent slot

Type#6 [unused] str$-
val?            %19.9 = Force!<lazy>       !v    %19.8, e19.4   <str$->
dependent slot

Type#7 [unused] str$-
val?            %19.11 = Force!<lazy>       !v    %19.10, e19.4   <str$->
dependent slot

Type#8 [unused] str$-
val?            %19.12 = CallBuiltin        !v    .Call(%19.5, %19.7, %19.9, %19.11) e19.4   <str$->
dependent slot

----------------------
Inlinee: classMetaName [0x560a59d31030]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] str$-
val?            %19.13 = PopContext         C     %19.12, %17.5   <str$->
dependent slot

----------------------
Inlinee: .getClassesFromCache [0x560a5695c4d0]
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %9.3  = Force!<value>      !v    %9.1, e9.2   <vec>
other unused reason

Type#4 [unused] str$+ (polluted)
val?            %9.5  = Force!<lazy>       !v    %9.4, e9.2   <str$+>
other unused reason

Type#5 [unused] env-
val?            %9.7  = Force!<wrapped>    !v    %9.6, e9.2   <env->
other unused reason

Type#6 [unused] other$
val?            %9.8  = CallBuiltin        !v    .Call(%9.3, %9.5, %9.7) e9.2   <other$>
other unused reason

*********************** Compilation session for: .getGenericFromCacheTable (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2) ***********************
======================= ClosureVersion: .getGenericFromCacheTable (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2) =======================
referenced: 59
referenced non-empty: 10
read non-empty: 10
used: 2
present non-empty: 3

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 5
dependent: 7
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
.getGenericFromCacheTable [0x560a54351240]
referenced: 59
referenced non-empty: 10
read non-empty: 10
used: 2
present non-empty: 3

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 5
dependent: 7
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %2.6  = StaticCall         !v    exists[0x560a70c7ff30](%2.4, missingArg, %2.5, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %2.7, %2.8 (Typecheck@0x560a59dbfa60[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] str$+
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] cls
val?            %7.5  = StaticCall         !v    get[0x560a706732f0](%7.3, missingArg, %7.4) { 0 2n } e2.3   <cls>
dependent slot

Type#6 [unused] cls
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] str$-
val?            %10.4 = Force!<lazy>       !v    %10.3, e2.3   <str$->
other unused reason

Type#9 [used] lgl$-
val?            %10.5 = CallBuiltin        !v    nzchar(%10.4) e2.3   <lgl$->
void                    Assume             D     %10.6, %10.7 (Typecheck@0x560a59dbfa60[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] cls
val?            %15.2 = Force!<value>      !     %15.0, e2.3   <cls>
dependent slot

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: getNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: getNamespace (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 5
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
getNamespace [0x560a572728f0]
referenced: 5
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
val+            %1.2  = Force!<lazy>       !vr   %1.0,    <str$+>
other unused reason

Type#1 [unused] env-
val?            %1.3  = CallBuiltin        !v    getRegisteredNamespace(%1.2) e1.1   <env->
dependent slot

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

*********************** Compilation session for: getClassDef (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2) ***********************
======================= ClosureVersion: get0 (CorrOrd,!TMany,Argmatch;Eager2,NonRefl2 miss: 1) =======================
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

----------------------
get0 [0x560a56361ae0]
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

Type#0 [unused] $#-
optimized away

Type#1 [used] str$+ (polluted)
val?            %7.2  = Force!<lazy>       !v    %7.1, e1.6   <str$+>
void                    Assume             D     %7.3, %7.4 (Typecheck@0x560a563ebd40[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#2 [unused] env+ (polluted)
val?            %9.3  = Force!<lazy>       !v    %9.2, e1.6   <env+>
other unused reason

Type#3 [unused] str$-
val?            %9.5  = Force!<lazy>       !v    %9.4, e1.6   <str$->
other unused reason

Type#4 [unused] lgl$-
val?            %9.7  = Force!<lazy>       !v    %9.6, e1.6   <lgl$->
other unused reason

Type#5 [unused] (nil|vec)+ (polluted)
val?            %9.9  = Force!<lazy>       !v    %9.8, e1.6   <(nil|vec)+>
other unused reason

======================= ClosureVersion: getClassDef (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2) =======================
referenced: 60
referenced non-empty: 38
read non-empty: 36
used: 1
present non-empty: 21

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 37
optimized away non-empty: 16
dependent: 30
other reasons unused non-empty: 7

Polluted
polluted: 5
used polluted: 0

----------------------
getClassDef [0x560a569916a0]
referenced: 42
referenced non-empty: 27
read non-empty: 25
used: 1
present non-empty: 11

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 15
dependent: 24
other reasons unused non-empty: 2

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] str$+ (polluted)
optimized away

Type#6 [unused] (nil|other) (polluted)
val?            %4.9  = PopContext         C     %4.8, %2.4   <(nil|other)>
dependent slot

Type#7 [unused] (nil|other) (polluted)
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] (nil|other) (polluted)
val             %6.0  = ChkMissing         e     %4.9   <(nil|other)>
dependent slot

Type#13 [unused] str$-
optimized away (dependency)

Type#14 [unused] int$-
optimized away

Type#15 [unused] lgl$-
optimized away (dependency)

Type#16 [unused] str$-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] str$-
val?            %14.14 = PopContext         C     %14.13, %10.4   <str$->
dependent slot

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] env-
val?            %16.4 = Force!<lazy>       !v    %16.3, e1.2   <env->
dependent slot

Type#22 [unused] lgl$-
lgl$#-          %16.5 = CallSafeBuiltin    wed   is.character(%16.4)    <lgl$->
dependent slot

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] str$-
optimized away (dependency)

Type#25 [unused] lgl$-
optimized away (dependency)

Type#26 [used] lgl$-
val?            %20.4 = StaticCall         !v    isTRUE[0x560a70cfde30](%20.3) e1.2   <lgl$->
void                    Assume             D     %20.5, %20.6 (Typecheck@0x560a56991590[Type#26])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#27 [unused] str$-
optimized away (dependency)

Type#28 [unused] env-
val?            %34.4 = StaticCall         !v    .requirePackage[0x560a70568a10](%34.3) e1.2   <env->
dependent slot

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] env-
val?            %26.4 = Force!<value>      !v    %26.3, e1.2   <env->
dependent slot

Type#31 [unused] lgl$-
lgl$#-          %26.5 = CallSafeBuiltin    wed   is.environment(%26.4)    <lgl$->
dependent slot

Type#32 [unused] str$-
optimized away (dependency)

Type#33 [unused] env-
optimized away (dependency)

Type#34 [unused] lgl$-
optimized away (dependency)

Type#35 [unused] other$
val?            %33.6 = StaticCall         !v    get0[0x560a7055c9f0](%33.3, %33.4, missingArg, %33.5) { 0 1 3n } e1.2   <other$>
dependent slot

Type#36 [unused] other$
val?            %30.1 = Force!<value>      !v    %30.0, e1.2   <other$>
dependent slot

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] other$
val?            %9.2  = Force!<value>      !     %9.0, e1.2   <other$>
dependent slot

----------------------
Inlinee: methodsPackageMetaName [0x560a595b46a0]
referenced: 9
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 0
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] vec
val?            %14.5 = Force!<value>      !v    %14.3, e14.4   <vec>
other unused reason

Type#5 [unused] str$-
val?            %14.7 = Force!<value>      !v    %14.6, e14.4   <str$->
dependent slot

Type#6 [unused] str$-
val?            %14.9 = Force!<lazy>       !v    %14.8, e14.4   <str$->
dependent slot

Type#7 [unused] str$-
val?            %14.11 = Force!<lazy>       !v    %14.10, e14.4   <str$->
dependent slot

Type#8 [unused] str$-
val?            %14.12 = CallBuiltin        !v    .Call(%14.5, %14.7, %14.9, %14.11) e14.4   <str$->
dependent slot

----------------------
Inlinee: classMetaName [0x560a59d31030]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] str$-
val?            %14.13 = PopContext         C     %14.12, %12.5   <str$->
dependent slot

----------------------
Inlinee: .getClassesFromCache [0x560a5695c4d0]
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %4.3  = Force!<value>      !v    %4.1, e4.2   <vec>
other unused reason

Type#4 [unused] str$+ (polluted)
val?            %4.5  = Force!<lazy>       !v    %4.4, e4.2   <str$+>
other unused reason

Type#5 [unused] env-
val?            %4.7  = Force!<wrapped>    !v    %4.6, e4.2   <env->
other unused reason

Type#6 [unused] other$
val?            %4.8  = CallBuiltin        !v    .Call(%4.3, %4.5, %4.7) e4.2   <other$>
other unused reason

*********************** Compilation session for: FUN (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) ***********************
======================= ClosureVersion: FUN (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 25
referenced non-empty: 14
read non-empty: 13
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 13
optimized away non-empty: 10
dependent: 9
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

----------------------
FUN [0x560a6c360e00]
referenced: 5
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 1
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] cls-
val?            %2.10 = Call               !v    %2.7(%2.8, %2.9) e2.6   <cls->
other unused reason

Type#3 [used] lgl$-
val+            %3.0  = CallSafeBuiltin    wed   body(%2.10)    <lgl$->
void                    Assume             D     %3.1, %3.2 (Typecheck@0x560a6b24ed90[Type#3])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: body [0x560a6c3d6ff0]
referenced: 9
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] cls-
optimized away (dependency)

Type#4 [unused] lgl$-
lgl$#-          %2.11 = CallSafeBuiltin    wed   is.character(%2.10)    <lgl$->
other unused reason

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] cls-
optimized away (dependency)

----------------------
Inlinee: isTRUE [0x560a55e9e1e0]
referenced: 11
referenced non-empty: 8
read non-empty: 7
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 7
dependent: 6
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (nil|lgl)- (polluted)
optimized away

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] lgl$-
optimized away (dependency)

Type#9 [unused] lgl$-
lgl$-           %5.3  = CallSafeBuiltin    vwed  is.na(%5.1)    <lgl$->
dependent slot

Type#10 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: .identC (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: .identC (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

----------------------
.identC [0x560a569917c0]
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %2.5  = Force!<value>      !v    %2.3, e2.4   <vec>
other unused reason

Type#4 [unused] str$+ (polluted)
val?            %2.7  = Force!<lazy>       !v    %2.6, e2.4   <str$+>
other unused reason

Type#5 [unused] str$-
val?            %2.9  = Force!<lazy>       !v    %2.8, e2.4   <str$->
other unused reason

Type#6 [used] lgl$-
val?            %2.10 = CallBuiltin        !     .Call(%2.5, %2.7, %2.9) e2.4   <lgl$->
void                    Assume             D     %2.11, %2.12 (Typecheck@0x560a5692fc50[Type#6])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: isBaseFun (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) ***********************
======================= ClosureVersion: isBaseFun (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) =======================
referenced: 17
referenced non-empty: 17
read non-empty: 17
used: 1
present non-empty: 4

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 16
optimized away non-empty: 12
dependent: 13
other reasons unused non-empty: 3

Polluted
polluted: 6
used polluted: 0

----------------------
isBaseFun [0x560a67ffdc60]
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 4
dependent: 5
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] cls (polluted)
val?            %2.4  = Force!<lazy>       !vr   %1.0,    <cls>
dependent slot

Type#1 [unused] lgl$-
optimized away (dependency)

Type#2 [unused] cls (polluted)
optimized away (dependency)

Type#3 [unused] env-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

Type#5 [used] lgl$-
val?            %10.12 = PopContext         C     %10.11, %10.5   <lgl$->
void                    Assume             D     %10.13, %10.14 (Typecheck@0x560a684a3da0[Type#5])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %10.9 = Force!<lazy>       !vr   %10.7,    <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %10.10 = Force!<lazy>       !vL   %10.6, e10.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: is.primitive [0x560a54179310]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

Type#1 [unused] str$-
str$-           %2.5  = CallSafeBuiltin    wed   typeof(%2.4)    <str$->
other unused reason

*********************** Compilation session for: body (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: body (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 9
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
body [0x560a6c3d6ff0]
referenced: 9
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] cls-
val+            %1.2  = Force!<lazy>       !vr   %1.0,    <cls->
dependent slot

Type#4 [unused] lgl$-
lgl$#-          %1.3  = CallSafeBuiltin    wed   is.character(%1.2)    <lgl$->
other unused reason

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] cls-
optimized away (dependency)

*********************** Compilation session for: getClass (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) ***********************
======================= ClosureVersion: isTRUE (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 7
used: 3
present non-empty: 2

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
isTRUE [0x560a55e9e1e0]
referenced: 11
referenced non-empty: 8
read non-empty: 7
used: 3
present non-empty: 2

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %1.2  = Force!<lazy>       !vL   %1.0, e1.1   <val?>
other unused reason

Type#2 [used] lgl$-
val+            %2.2  = CallSafeBuiltin    vwed  is.logical(%1.2)    <lgl$->
void                    Assume             D     %2.3, %2.4 (Typecheck@0x560a55e9bc50[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %1.2  = Force!<lazy>       !vL   %1.0, e1.1   <val?>
void                    Assume             D     %5.0, %2.4 (Typecheck@0x560a55e9bc50[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %1.2  = Force!<lazy>       !vL   %1.0, e1.1   <val?>
void                    Assume             D     %7.0, %2.4 (Typecheck@0x560a55e9bc50[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %7.3  = CallSafeBuiltin    vwed  is.na(%7.2)    <lgl$->
dependent slot

Type#10 [unused] lgl$-
optimized away (dependency)

======================= ClosureVersion: get0 (CorrOrd,!TMany,Argmatch;Eager2,NonRefl2 miss: 1) =======================
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

----------------------
get0 [0x560a56361ae0]
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

Type#0 [unused] $#-
optimized away

Type#1 [used] str$+ (polluted)
val?            %7.2  = Force!<lazy>       !v    %7.1, e1.6   <str$+>
void                    Assume             D     %7.3, %7.4 (Typecheck@0x560a563ebd40[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#2 [unused] env+ (polluted)
val?            %9.3  = Force!<lazy>       !v    %9.2, e1.6   <env+>
other unused reason

Type#3 [unused] str$-
val?            %9.5  = Force!<lazy>       !v    %9.4, e1.6   <str$->
other unused reason

Type#4 [unused] lgl$-
val?            %9.7  = Force!<lazy>       !v    %9.6, e1.6   <lgl$->
other unused reason

Type#5 [unused] (nil|vec)+ (polluted)
val?            %9.9  = Force!<lazy>       !v    %9.8, e1.6   <(nil|vec)+>
other unused reason

======================= ClosureVersion: getClassDef (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 60
referenced non-empty: 38
read non-empty: 36
used: 1
present non-empty: 21

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 37
optimized away non-empty: 16
dependent: 30
other reasons unused non-empty: 7

Polluted
polluted: 5
used polluted: 0

----------------------
getClassDef [0x560a569916a0]
referenced: 42
referenced non-empty: 27
read non-empty: 25
used: 1
present non-empty: 11

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 15
dependent: 24
other reasons unused non-empty: 2

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] str$+ (polluted)
optimized away

Type#6 [unused] (nil|other) (polluted)
val?            %4.9  = PopContext         C     %4.8, %2.4   <(nil|other)>
dependent slot

Type#7 [unused] (nil|other) (polluted)
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] (nil|other) (polluted)
val             %6.0  = ChkMissing         e     %4.9   <(nil|other)>
dependent slot

Type#13 [unused] str$-
optimized away (dependency)

Type#14 [unused] int$-
optimized away

Type#15 [unused] lgl$-
optimized away (dependency)

Type#16 [unused] str$-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] str$-
val?            %14.14 = PopContext         C     %14.13, %10.4   <str$->
dependent slot

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] env-
val?            %16.4 = Force!<lazy>       !v    %16.3, e1.2   <env->
dependent slot

Type#22 [unused] lgl$-
lgl$#-          %16.5 = CallSafeBuiltin    wed   is.character(%16.4)    <lgl$->
dependent slot

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] str$-
optimized away (dependency)

Type#25 [unused] lgl$-
optimized away (dependency)

Type#26 [used] lgl$-
val?            %20.4 = StaticCall         !v    isTRUE[0x560a716f0ae0](%20.3) e1.2   <lgl$->
void                    Assume             D     %20.5, %20.6 (Typecheck@0x560a56991590[Type#26])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#27 [unused] str$-
optimized away (dependency)

Type#28 [unused] env-
val?            %34.4 = StaticCall         !v    .requirePackage[0x560a718ff0c0](%34.3) e1.2   <env->
dependent slot

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] env-
val?            %26.4 = Force!<value>      !v    %26.3, e1.2   <env->
dependent slot

Type#31 [unused] lgl$-
lgl$#-          %26.5 = CallSafeBuiltin    wed   is.environment(%26.4)    <lgl$->
dependent slot

Type#32 [unused] str$-
optimized away (dependency)

Type#33 [unused] env-
optimized away (dependency)

Type#34 [unused] lgl$-
optimized away (dependency)

Type#35 [unused] other$
val?            %33.6 = StaticCall         !v    get0[0x560a716d5270](%33.3, %33.4, missingArg, %33.5) { 0 1 3n } e1.2   <other$>
dependent slot

Type#36 [unused] other$
val?            %30.1 = Force!<value>      !v    %30.0, e1.2   <other$>
dependent slot

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] other$
val?            %9.2  = Force!<value>      !     %9.0, e1.2   <other$>
dependent slot

----------------------
Inlinee: methodsPackageMetaName [0x560a595b46a0]
referenced: 9
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 0
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] vec
val?            %14.5 = Force!<value>      !v    %14.3, e14.4   <vec>
other unused reason

Type#5 [unused] str$-
val?            %14.7 = Force!<value>      !v    %14.6, e14.4   <str$->
dependent slot

Type#6 [unused] str$-
val?            %14.9 = Force!<lazy>       !v    %14.8, e14.4   <str$->
dependent slot

Type#7 [unused] str$-
val?            %14.11 = Force!<lazy>       !v    %14.10, e14.4   <str$->
dependent slot

Type#8 [unused] str$-
val?            %14.12 = CallBuiltin        !v    .Call(%14.5, %14.7, %14.9, %14.11) e14.4   <str$->
dependent slot

----------------------
Inlinee: classMetaName [0x560a59d31030]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] str$-
val?            %14.13 = PopContext         C     %14.12, %12.5   <str$->
dependent slot

----------------------
Inlinee: .getClassesFromCache [0x560a5695c4d0]
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %4.3  = Force!<value>      !v    %4.1, e4.2   <vec>
other unused reason

Type#4 [unused] str$+ (polluted)
val?            %4.5  = Force!<lazy>       !v    %4.4, e4.2   <str$+>
other unused reason

Type#5 [unused] env-
val?            %4.7  = Force!<wrapped>    !v    %4.6, e4.2   <env->
other unused reason

Type#6 [unused] other$
val?            %4.8  = CallBuiltin        !v    .Call(%4.3, %4.5, %4.7) e4.2   <other$>
other unused reason

======================= ClosureVersion: .requirePackage (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 43
referenced non-empty: 12
read non-empty: 11
used: 3
present non-empty: 6

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 3
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
.requirePackage [0x560a6f83d900]
referenced: 38
referenced non-empty: 9
read non-empty: 9
used: 3
present non-empty: 4

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 6
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] str$-
val?            %1.2  = Force!<lazy>       !v    %1.0, e1.1   <str$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a701378d0[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] str$-
val?            %4.4  = Force!<wrapped>    !v    %4.3, e1.1   <str$->
dependent slot

Type#3 [used] lgl$-
val?            %4.5  = CallBuiltin        !v    nzchar(%4.4) e1.1   <lgl$->
void                    Assume             D     %4.6, %4.7 (Typecheck@0x560a701378d0[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] str$-
val?            %13.1 = Force!<wrapped>    !v    %13.0, e1.1   <str$->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] env-
val?            %19.0 = PopContext         C     %17.8, %17.4   <env->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [used] env-
val?^ | miss    %10.3 = LdVar              eR    value, e1.1
void                    Assume             D     %10.4, %8.0 (Typecheck@0x560a701378d0[Type#15])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#16 [unused] lgl$-
lgl$#-          %10.8 = CallSafeBuiltin    wed   is.environment(%10.7)    <lgl$->
dependent slot

Type#17 [unused] env-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: getNamespace [0x560a572728f0]
referenced: 5
referenced non-empty: 3
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
val?            %17.7 = Force!<lazy>       !vL   %17.5, e17.6   <str$+>
other unused reason

Type#1 [unused] env-
val?            %17.8 = CallBuiltin        !v    getRegisteredNamespace(%17.7) e17.6   <env->
dependent slot

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

======================= ClosureVersion: getClass (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 16
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
getClass [0x560a70404470]
referenced: 16
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$+ (polluted)
optimized away

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] other$
val?            %2.5  = StaticCall         !v    getClassDef[0x560a716b7830](%2.3, %2.4) e1.1   <other$>
dependent slot

Type#7 [unused] other$
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] other$
optimized away (dependency)

*********************** Compilation session for: packageSlot (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: packageSlot (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

----------------------
packageSlot [0x560a6f2c7cd0]
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (str|other) (polluted)
val+            %2.2  = Force!<lazy>       !vr   %1.0,    <(str|other)>
other unused reason

Type#2 [unused] (nil|str)- (polluted)
val?            %2.3  = CallBuiltin        !     attr(%2.2, "package") e2.1   <(nil|str)->
other unused reason

*********************** Compilation session for: typeof (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: typeof (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %1.2  = Force!<lazy>       !vL   %1.0, e1.1   <val?>
other unused reason

*********************** Compilation session for: .TableMetaName (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: .TableMetaName (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 13
referenced non-empty: 9
read non-empty: 9
used: 0
present non-empty: 6

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 3
dependent: 7
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
.TableMetaName [0x560a56d30040]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] str$-
val?            %4.13 = PopContext         C     %4.12, %2.5   <str$->
dependent slot

----------------------
Inlinee: methodsPackageMetaName [0x560a595b46a0]
referenced: 9
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 0
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] vec
val?            %4.5  = Force!<value>      !v    %4.3, e4.4   <vec>
other unused reason

Type#5 [unused] str$-
val?            %4.7  = Force!<value>      !v    %4.6, e4.4   <str$->
dependent slot

Type#6 [unused] str$-
val?            %4.9  = Force!<lazy>       !v    %4.8, e4.4   <str$->
dependent slot

Type#7 [unused] str$-
val?            %4.11 = Force!<lazy>       !v    %4.10, e4.4   <str$->
dependent slot

Type#8 [unused] str$-
val?            %4.12 = CallBuiltin        !     .Call(%4.5, %4.7, %4.9, %4.11) e4.4   <str$->
dependent slot

*********************** Compilation session for: formals (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) ***********************
======================= ClosureVersion: formals (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) =======================
referenced: 10
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

----------------------
formals [0x560a573a7330]
referenced: 10
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] cls (polluted)
val?            %1.3  = Force!<lazy>       !vr   %1.1,    <cls>
dependent slot

Type#5 [unused] lgl$-
lgl$#-          %1.4  = CallSafeBuiltin    wed   is.character(%1.3)    <lgl$->
other unused reason

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] cls (polluted)
optimized away (dependency)

*********************** Compilation session for: formalArgs (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) ***********************
======================= ClosureVersion: formals (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 10
referenced non-empty: 3
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

----------------------
formals [0x560a573a7330]
referenced: 10
referenced non-empty: 3
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] cls (polluted)
val?            %1.2  = Force!<lazy>             %1.1,    <cls>
dependent slot

Type#5 [unused] lgl$-
lgl$#-          %1.3  = CallSafeBuiltin    wed   is.character(%1.2)    <lgl$->
other unused reason

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] cls (polluted)
optimized away (dependency)

======================= ClosureVersion: formalArgs (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) =======================
referenced: 7
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
formalArgs [0x560a7137a2c0]
referenced: 7
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] cls (polluted)
val?            %2.6  = Force!<lazy>       !vr   %1.0,    <cls>
other unused reason

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [used] list-
val?            %2.8  = StaticCall         !vr   formals[0x560a72473a90](%2.7, %2.5) { 0 1n } e2.4   <list->
void                    Assume             D     %2.9, %2.10 (Typecheck@0x560a7137a1d0[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: list-, expected: list-, required: val?+

Type#6 [unused] str-
val+            %4.2  = CallSafeBuiltin    vwed  names(%4.1)    <str->
other unused reason

*********************** Compilation session for: as.name (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: as.name (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
as.name [0x560a564eda10]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] str$-
val?            %1.2  = Force!<lazy>       !vL   %1.0, e1.1   <str$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a56604200[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

*********************** Compilation session for: is.primitive (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) ***********************
======================= ClosureVersion: is.primitive (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) =======================
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 0

----------------------
is.primitive [0x560a54179310]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %1.2  = Force!<lazy>       !vr   %1.0,    <val?>
other unused reason

Type#1 [unused] str$-
str$-           %1.3  = CallSafeBuiltin    wed   typeof(%1.2)    <str$->
other unused reason

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

*********************** Compilation session for: cacheGenericsMetaData (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,NonRefl5,!Obj0,!Obj2,!Obj3,!Obj5) ***********************
======================= ClosureVersion: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
other unused reason

Type#2 [used] lgl$-
val+            %1.2  = CallSafeBuiltin    vwed  is.logical(%1.1)    <lgl$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a54e55690[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %3.0, %1.4 (Typecheck@0x560a54e55690[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %5.0, %1.4 (Typecheck@0x560a54e55690[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %5.3  = CallSafeBuiltin    vwed  is.na(%5.2)    <lgl$->
dependent slot

Type#10 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %9.1, %6.3 (Typecheck@0x560a54e55690[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

======================= ClosureVersion: cacheGenericsMetaData (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,NonRefl5,!Obj0,!Obj2,!Obj3,!Obj5) =======================
referenced: 107
referenced non-empty: 53
read non-empty: 53
used: 7
present non-empty: 15

Used
exact match: 7
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 46
optimized away non-empty: 31
dependent: 35
other reasons unused non-empty: 11

Polluted
polluted: 9
used polluted: 0

----------------------
cacheGenericsMetaData [0x560a5523bcf0]
referenced: 52
referenced non-empty: 35
read non-empty: 35
used: 5
present non-empty: 4

Used
exact match: 5
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 30
optimized away non-empty: 26
dependent: 29
other reasons unused non-empty: 1

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] cls
optimized away (dependency)

Type#3 [used] lgl$-
val?            %2.5  = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%2.4, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %2.6, %2.7 (Typecheck@0x560a5a7d7b70[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] str$-
val?            %76.3 = Call               !v    %76.0(%76.1, %76.2) e2.3   <str$->
dependent slot

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] val? (polluted)
optimized away (dependency)

Type#13 [unused] val? (polluted)
optimized away (dependency)

Type#14 [unused] cls
optimized away (dependency)

Type#15 [used] lgl$-
val?            %34.1 = PopContext         C     %34.0, %21.4   <lgl$->
void                    Assume             D     %34.2, %34.3 (Typecheck@0x560a5a7d7b70[Type#15])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] cls
optimized away (dependency)

Type#18 [used] lgl$-
val?            %37.5 = StaticCall         !v    isGroup[0x560a72bd7020](%37.3, missingArg, %37.4) { 0 2n } e2.3   <lgl$->
void                    Assume             D     %37.6, %37.7 (Typecheck@0x560a5a7d7b70[Type#18])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] vec-
val?            %43.3 = Call               !v    %43.0(%43.1, %43.2) e2.3   <vec->
dependent slot

Type#22 [unused] vec-
optimized away (dependency)

Type#23 [unused] str$-
optimized away (dependency)

Type#24 [unused] env-
optimized away (dependency)

Type#25 [unused] cls
val?            %47.5 = StaticCall         !v    getGeneric[0x560a72c5ce00](%47.3, missingArg, %47.4) { 0 2n } e2.3   <cls>
dependent slot

Type#26 [unused] cls
optimized away (dependency)

Type#27 [used] lgl$-
val?            %49.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%49.3, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %49.5, %49.6 (Typecheck@0x560a5a7d7b70[Type#27])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#28 [unused] str$-
optimized away (dependency)

Type#29 [unused] cls
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] env-
optimized away (dependency)

Type#32 [unused] cls
optimized away (dependency)

Type#33 [unused] env-
optimized away (dependency)

Type#34 [unused] str$-
optimized away (dependency)

Type#35 [unused] env-
optimized away (dependency)

Type#36 [unused] cls
val?            %56.5 = StaticCall         !v    getGeneric[0x560a72c5ce00](%56.3, missingArg, %56.4) { 0 2n } e2.3   <cls>
dependent slot

Type#37 [unused] cls
optimized away (dependency)

Type#38 [used] lgl$-
val?            %58.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%58.3, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %58.5, %58.6 (Typecheck@0x560a5a7d7b70[Type#38])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#39 [unused] str$-
optimized away (dependency)

Type#40 [unused] cls
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] env-
optimized away (dependency)

Type#43 [unused] cls
optimized away (dependency)

Type#44 [unused] env-
optimized away (dependency)

Type#45 [unused] str$-
optimized away (dependency)

Type#46 [unused] (spec|blt)- (polluted)
optimized away

Type#47 [unused] cls
optimized away (dependency)

Type#48 [unused] env-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: is.primitive [0x560a54179310]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

Type#1 [unused] str$-
str$-           %23.8 = CallSafeBuiltin    wed   typeof(%23.7)    <str$->
other unused reason

----------------------
Inlinee: dispatchIsInternal [0x560a54161fa0]
referenced: 8
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 1
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] val? (polluted)
val?            %23.7 = Call               !v    %23.4(%23.5, %23.6) e23.3   <val?>
other unused reason

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] (nil|cls) (polluted)
optimized away

Type#7 [used] lgl$-
val?            %31.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%31.3, "internalDispatchMethod") e23.3   <lgl$->
void                    Assume             D     %31.5, %31.6 (Typecheck@0x560a54632920[Type#7])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: Recall [0x560a5a3adf30]
referenced: 2
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (lgl|vec)- (polluted)
val?            %63.12 = Call               !v    <spec .Internal>(%63.11) e63.10   <(lgl|vec)->
other unused reason

----------------------
Inlinee: setPrimitiveMethods [0x560a54311ba0]
referenced: 16
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 7

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 0
dependent: 3
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] vec
val?            %69.3 = Force!<value>      !v    %69.1, e69.2   <vec>
other unused reason

Type#10 [unused] str$-
val?            %69.5 = Force!<lazy>       !v    %69.4, e69.2   <str$->
dependent slot

Type#11 [unused] blt-
val?            %69.7 = Force!<lazy>       !v    %69.6, e69.2   <blt->
other unused reason

Type#12 [unused] str$-
val?            %69.9 = Force!<value>      !v    %69.8, e69.2   <str$->
dependent slot

Type#13 [unused] cls
val?            %69.11 = Force!<lazy>       !v    %69.10, e69.2   <cls>
other unused reason

Type#14 [unused] env-
val?            %69.13 = Force!<lazy>       !v    %69.12, e69.2   <env->
other unused reason

Type#15 [unused] str$-
val?            %69.14 = CallBuiltin        !v    .Call(%69.3, %69.5, %69.7, %69.9, %69.11, %69.13) e69.2   <str$->
dependent slot

----------------------
Inlinee: finalDefaultMethod [0x560a55a5e230]
referenced: 27
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %11.2 = Force!<lazy>       !vL   %9.5, e11.1   <val?>
dependent slot

Type#2 [used] lgl$-
val?            %13.2 = CallBuiltin        !vL   is.function(%11.2) e11.1   <lgl$->
void                    Assume             D     %13.3, %13.4 (Typecheck@0x560a54337ae0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] nil-
optimized away

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] val? (polluted)
optimized away (dependency)

*********************** Compilation session for: .sigLabel (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: .sigLabel (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 6
referenced non-empty: 6
read non-empty: 3
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 6

Polluted
polluted: 3
used polluted: 0

----------------------
.sigLabel [0x560a7113f950]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str+ (polluted)
val+            %2.3  = Force!<lazy>       !vr   %1.0,    <str+>
other unused reason

Type#1 [unused] str$-
val+            %2.5  = CallSafeBuiltin    vwed  paste(%2.4, " ", "#", false)    <str$->
other unused reason

----------------------
Inlinee: paste [0x560a55fd8390]
referenced: 4
referenced non-empty: 4
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec- (polluted)
val+            %2.4  = CallSafeBuiltin    wed   list(%2.3)    <vec->
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] (nil|str)- (polluted)
optimized away

Type#3 [unused] lgl$-
optimized away

*********************** Compilation session for: as (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,!Obj1 miss: 2) ***********************
======================= ClosureVersion: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,!Obj0) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val+            %1.1  = Force!<lazy>             %1.0,    <val?>
other unused reason

Type#2 [used] lgl$-
val+            %1.2  = CallSafeBuiltin    vwed  is.logical(%1.1)    <lgl$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a54e55690[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val+            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %3.0, %1.4 (Typecheck@0x560a54e55690[Type#4])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val+            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %5.0, %1.4 (Typecheck@0x560a54e55690[Type#8])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %5.3  = CallSafeBuiltin    vwed  is.na(%5.2)    <lgl$->
dependent slot

Type#10 [used] lgl$-
val+            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %9.1, %6.3 (Typecheck@0x560a54e55690[Type#10])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?+

======================= ClosureVersion: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
other unused reason

Type#2 [used] lgl$-
val+            %1.2  = CallSafeBuiltin    vwed  is.logical(%1.1)    <lgl$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a54e55690[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %3.0, %1.4 (Typecheck@0x560a54e55690[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %5.0, %1.4 (Typecheck@0x560a54e55690[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %5.3  = CallSafeBuiltin    vwed  is.na(%5.2)    <lgl$->
dependent slot

Type#10 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %9.1, %6.3 (Typecheck@0x560a54e55690[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

======================= ClosureVersion: .getGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl2) =======================
referenced: 50
referenced non-empty: 31
read non-empty: 30
used: 5
present non-empty: 17

Used
exact match: 3
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 9
dependent: 17
other reasons unused non-empty: 9

Polluted
polluted: 9
used polluted: 1

----------------------
.getGeneric [0x560a553ad2f0]
referenced: 41
referenced non-empty: 23
read non-empty: 22
used: 4
present non-empty: 15

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 19
optimized away non-empty: 4
dependent: 15
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str$+
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] cls
val?            %50.9 = PopContext         C     %50.8, %48.6   <cls>
other unused reason

Type#5 [unused] (nil|cls) (polluted)
val?            %4.0  = Phi                      nil:BB3, %50.9:BB50   <(nil|cls)>
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %9.4  = Force!<lazy>       !v    %9.3, e2.0   <str$->
dependent slot

Type#8 [unused] lgl$-
lgl$#-          %9.5  = CallSafeBuiltin    wed   is.character(%9.4)    <lgl$->
dependent slot

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %45.3 = PopContext         C     %45.2, %43.4   <lgl$->
void                    Assume             D     %45.4, %45.5 (Typecheck@0x560a553a6140[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str$-
val?            %17.4 = Force!<wrapped>    !v    %17.3, e2.0   <str$->
dependent slot

Type#13 [unused] lgl$-
lgl$#-          %17.5 = CallSafeBuiltin    wed   is.character(%17.4)    <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] str$-
val?            %39.4 = Force!<wrapped>    !v    %39.3, e2.0   <str$->
dependent slot

Type#16 [used] lgl$-
val?            %39.5 = CallBuiltin        !v    nzchar(%39.4) e2.0   <lgl$->
void                    Assume             D     %39.6, %39.7 (Typecheck@0x560a553a6140[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] vec
val?            %24.4 = Force!<value>      !v    %24.3, e2.0   <vec>
other unused reason

Type#24 [unused] str$-
val?            %24.6 = Force!<wrapped>    !v    %24.5, e2.0   <str$->
dependent slot

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] env-
val?            %26.4 = Force!<lazy>       !v    %26.3, e2.0   <env->
dependent slot

Type#27 [unused] env-
val?            %26.5 = CallBuiltin        !v    as.environment(%26.4) e2.0   <env->
dependent slot

Type#28 [unused] str$-
val?            %26.7 = Force!<lazy>       !v    %26.6, e2.0   <str$->
dependent slot

Type#29 [unused] (nil|cls) (polluted)
val?            %26.8 = CallBuiltin        !v    .Call(%24.4, %24.6, false, %26.5, %26.7) e2.0   <(nil|cls)>
dependent slot

Type#30 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#31 [used] env-
val?^ | miss    %29.0 = LdVar              eR    .GlobalEnv, e2.0
void                    Assume             D     %29.1, %26.11 (Typecheck@0x560a553a6140[Type#31])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [used] str$-
val?            %29.8 = Force!<wrapped>    !v    %29.7, e2.0   <str$->
void                    Assume             D     %29.9, %29.10 (Typecheck@0x560a553a6140[Type#33])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#34 [unused] nil-
val?            %31.2 = Extract2_1D        wed   %29.4, %31.1, elided   <nil->
other unused reason

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] (nil|cls) (polluted)
val?            %8.2  = Force!<value>      !     %8.0, e2.0   <(nil|cls)>
dependent slot

----------------------
Inlinee: .getGenericFromCache [0x560a5a356500]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str$+
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away

Type#3 [unused] env-
optimized away

Type#4 [unused] (nil|cls) (polluted)
val?            %50.8 = StaticCall         !v    .getGenericFromCacheTable[0x560a735cd000](%50.4, %50.5, %50.6, %50.7) e50.3   <(nil|cls)>
other unused reason

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#1 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#2 [used] int- (polluted)
val?            %43.9 = StaticCall         !v    match[0x560a735b1300](%43.7, %43.8, 0L) { 0 1 2n } e43.6   <int->
void                    Assume             D     %43.10, %43.11 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %45.2 = Gt                 wed   %45.1, 0L, elided   <lgl->
other unused reason

======================= ClosureVersion: environment (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
environment [0x560a55e84a10]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|cls) (polluted)
val+            %1.1  = Force!<lazy>             %1.0,    <(nil|cls)>
other unused reason

======================= ClosureVersion: isTRUE (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 3
present non-empty: 2

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
isTRUE [0x560a55e9e1e0]
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 3
present non-empty: 2

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
other unused reason

Type#2 [used] lgl$-
val+            %1.2  = CallSafeBuiltin    vwed  is.logical(%1.1)    <lgl$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a55e9bc50[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %3.0, %1.4 (Typecheck@0x560a55e9bc50[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %5.0, %1.4 (Typecheck@0x560a55e9bc50[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %5.3  = CallSafeBuiltin    vwed  is.na(%5.2)    <lgl$->
dependent slot

Type#10 [unused] lgl$-
optimized away (dependency)

======================= ClosureVersion: get0 (CorrOrd,!TMany,Argmatch;Eager2,NonRefl2 miss: 1) =======================
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

----------------------
get0 [0x560a56361ae0]
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

Type#0 [unused] $#-
optimized away

Type#1 [used] str$+ (polluted)
val?            %7.2  = Force!<lazy>       !v    %7.1, e1.6   <str$+>
void                    Assume             D     %7.3, %7.4 (Typecheck@0x560a563ebd40[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#2 [unused] env+ (polluted)
val?            %9.3  = Force!<lazy>       !v    %9.2, e1.6   <env+>
other unused reason

Type#3 [unused] str$-
val?            %9.5  = Force!<lazy>       !v    %9.4, e1.6   <str$->
other unused reason

Type#4 [unused] lgl$-
val?            %9.7  = Force!<lazy>       !v    %9.6, e1.6   <lgl$->
other unused reason

Type#5 [unused] (nil|vec)+ (polluted)
val?            %9.9  = Force!<lazy>       !v    %9.8, e1.6   <(nil|vec)+>
other unused reason

======================= ClosureVersion: exists (CorrOrd,!TMany,Argmatch;Eager0,Eager1,Eager3,Eager4,Eager5,NonRefl0,NonRefl1,NonRefl2,NonRefl3,NonRefl4,NonRefl5,!Obj0,!Obj5) =======================
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

----------------------
exists [0x560a572da620]
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] (int|env)- (polluted)
optimized away

Type#3 [unused] env+ (polluted)
optimized away (dependency)

Type#4 [unused] str$+ (polluted)
val+            %7.1  = Force!<lazy>       !vr   %7.0,    <str$+>
other unused reason

Type#5 [unused] env+ (polluted)
val?            %7.3  = Force!<lazy>       !v    %7.2, e1.8   <env+>
dependent slot

Type#6 [unused] str$-
val?            %7.5  = Force!<lazy>       !v    %7.4, e1.8   <str$->
other unused reason

Type#7 [unused] lgl$-
val?            %7.7  = Force!<lazy>       !v    %7.6, e1.8   <lgl$->
other unused reason

======================= ClosureVersion: exists (CorrOrd,!TMany,Argmatch;Eager0,Eager1,Eager3,Eager4,Eager5,NonRefl0,NonRefl1,NonRefl3,NonRefl4,NonRefl5,!Obj0,!Obj5) =======================
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

----------------------
exists [0x560a572da620]
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] (int|env)- (polluted)
optimized away

Type#3 [unused] env+ (polluted)
optimized away (dependency)

Type#4 [unused] str$+ (polluted)
val+            %7.1  = Force!<lazy>       !vr   %7.0,    <str$+>
other unused reason

Type#5 [unused] env+ (polluted)
val?            %7.3  = Force!<lazy>       !v    %7.2, e1.8   <env+>
dependent slot

Type#6 [unused] str$-
val?            %7.5  = Force!<lazy>       !v    %7.4, e1.8   <str$->
other unused reason

Type#7 [unused] lgl$-
val?            %7.7  = Force!<lazy>       !v    %7.6, e1.8   <lgl$->
other unused reason

======================= ClosureVersion: getGeneric (CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0 miss: 1) =======================
referenced: 68
referenced non-empty: 32
read non-empty: 32
used: 6
present non-empty: 13

Used
exact match: 3
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 13
dependent: 22
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 0

----------------------
getGeneric [0x560a54ffa020]
referenced: 64
referenced non-empty: 28
read non-empty: 28
used: 6
present non-empty: 12

Used
exact match: 3
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 22
optimized away non-empty: 10
dependent: 20
other reasons unused non-empty: 2

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|cls) (polluted)
val+            %5.3  = Force<lazy>              %1.2,    <(str|cls)>
other unused reason

Type#2 [unused] lgl$-
lgl$#-          %5.4  = CallSafeBuiltin    wed   is.function(%5.3)    <lgl$->
dependent slot

Type#3 [unused] cls
optimized away (dependency)

Type#4 [used] lgl$-
val?            %63.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%63.3, "genericFunction") e1.4   <lgl$->
void                    Assume             D     %63.5, %63.6 (Typecheck@0x560a574f80c0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] cls
val?            %67.2 = Force!<wrapped>    !     %67.0, e1.4   <cls>
dependent slot

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] env-
optimized away (dependency)

Type#14 [unused] str$-
optimized away (dependency)

Type#15 [unused] (nil|cls) (polluted)
val?            %9.6  = StaticCall         !v    .getGeneric[0x560a737b4d80](%9.3, %9.4, %9.5) e1.4   <(nil|cls)>
dependent slot

Type#16 [unused] str$+
optimized away

Type#17 [unused] str$-
optimized away (dependency)

Type#18 [unused] cls
val?            %62.5 = StaticCall         !v    .getGeneric[0x560a7339ee30](%62.3, missingArg, %62.4) e1.4   <cls>
dependent slot

Type#19 [unused] (nil|cls) (polluted)
val?            %10.0 = Phi                      %9.6:BB9, %62.5:BB62   <(nil|cls)>
dependent slot

Type#20 [used] env-
val?            %13.3 = CallBuiltin        !v    baseenv() e1.4   <env->
void                    Assume             D     %17.0, %15.4 (Typecheck@0x560a574f80c0[Type#20])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [used] str$-
val?            %15.2 = Force!<wrapped>    !v    %15.1, e1.4   <str$->
void                    Assume             D     %15.3, %15.4 (Typecheck@0x560a574f80c0[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#23 [unused] blt-
val?            %17.5 = Extract2_1D        wed   %17.2, %17.4, elided   <blt->
dependent slot

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [used] blt-
val?^ | miss    %48.3 = LdVar              eR    baseDef, e1.4
void                    Assume             D     %48.4, %18.1 (Typecheck@0x560a574f80c0[Type#25])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: blt-, expected: blt-, required: val?^ | miss

Type#26 [unused] lgl$-
lgl$#-          %48.8 = CallSafeBuiltin    wed   is.function(%48.7)    <lgl$->
dependent slot

Type#27 [unused] str$-
optimized away (dependency)

Type#28 [unused] cls
val?            %52.4 = StaticCall         !v    genericForBasic[0x560a733e1cb0](%52.3, missingArg, false) { 0 2n } e1.4   <cls>
dependent slot

Type#29 [unused] cls
optimized away (dependency)

Type#30 [used] lgl$-
val?            %54.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%54.3, "genericFunction") e1.4   <lgl$->
void                    Assume             D     %54.5, %54.6 (Typecheck@0x560a574f80c0[Type#30])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#31 [unused] str$-
optimized away (dependency)

Type#32 [unused] cls
optimized away (dependency)

Type#33 [unused] cls
val?            %60.8 = PopContext         C     %60.7, %58.5   <cls>
dependent slot

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] cls
val?            %24.4 = Force!<value>      !v    %24.3, e1.4   <cls>
dependent slot

Type#36 [used] lgl$-
val?            %24.5 = CallBuiltin        !v    is.function(%24.4) e1.4   <lgl$->
void                    Assume             D     %24.6, %24.7 (Typecheck@0x560a574f80c0[Type#36])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] cls
val?            %47.2 = Force!<value>      !     %47.0, e1.4   <cls>
dependent slot

----------------------
Inlinee: .cacheGeneric [0x560a54a9d440]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] cls
optimized away (dependency)

Type#2 [unused] env-
optimized away

Type#3 [unused] cls
val?            %60.7 = StaticCall         !v    .cacheGenericTable[0x560a733e1bb0](%60.4, %60.5, %60.6) e60.3   <cls>
dependent slot

======================= ClosureVersion: .getMethodsTable (CorrOrd,!TMany,Argmatch;Eager2,Eager3,NonRefl0,NonRefl2,NonRefl3,!Obj3) =======================
referenced: 14
referenced non-empty: 10
read non-empty: 10
used: 3
present non-empty: 1

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 6
dependent: 6
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
.getMethodsTable [0x560a58690090]
referenced: 14
referenced non-empty: 10
read non-empty: 10
used: 3
present non-empty: 1

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 6
dependent: 6
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
optimized away

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val+            %7.0  = Force<lazy>              %1.0,    <lgl$->
void                    Assume             D     %7.1, %5.1 (Typecheck@0x560a5868ff80[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [used] lgl$-
val?            %11.2 = Force!<lazy>             %11.0,    <lgl$->
void                    Assume             D     %11.3, %9.2 (Typecheck@0x560a5868ff80[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] str$-
optimized away (dependency)

Type#5 [unused] env-
optimized away (dependency)

Type#6 [used] lgl$-
val?            %12.5 = StaticCall         !     exists[0x560a736bc130](%12.3, missingArg, %12.4, missingArg, missingArg, false) { 0 2n 5n } e1.6   <lgl$->
void                    Assume             D     %12.6, %12.7 (Typecheck@0x560a5868ff80[Type#6])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [unused] env-
optimized away (dependency)

Type#13 [unused] env-
val?            %18.5 = StaticCall         !     get[0x560a73797150](%18.3, missingArg, %18.4) { 0 2n } e1.6   <env->
dependent slot

======================= ClosureVersion: new (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0 miss: 1) =======================
referenced: 11
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 2
dependent: 5
other reasons unused non-empty: 2

Polluted
polluted: 3
used polluted: 0

----------------------
new [0x560a70897390]
referenced: 11
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 2
dependent: 5
other reasons unused non-empty: 2

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] other$
val?            %2.6  = StaticCall         !v    getClass[0x560a736af900](%2.4, missingArg, %2.5) { 0 2n } e2.3   <other$>
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] vec
val?            %4.4  = Force!<value>      !v    %4.3, e2.3   <vec>
other unused reason

Type#7 [unused] other$
val?            %4.6  = Force!<value>      !v    %4.5, e2.3   <other$>
dependent slot

Type#8 [unused] (str|cls) (polluted)
val?            %4.7  = CallBuiltin        !     .Call(%4.4, %4.6) e2.3   <(str|cls)>
dependent slot

Type#9 [unused] (str|cls) (polluted)
optimized away (dependency)

Type#10 [unused] (str|cls) (polluted)
val?            %6.6  = NamedCall          !     function(.Object, ...) <(rir::DispatchTable*)0|...(%6.3, .xpandDotsTrigger=%6.5) e2.3   <(str|cls)>
dependent slot

======================= ClosureVersion: .duplicateClassesExist (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 6
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 3
dependent: 1
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
.duplicateClassesExist [0x560a71e03c80]
referenced: 6
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 3
dependent: 1
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away

Type#1 [used] lgl$-
val?            %2.5  = StaticCall         !v    get[0x560a73797150]("#HAS_DUPLICATE_CLASS_NAMES", missingArg, %2.4) { 0 2n } e2.3   <lgl$->
void                    Assume             D     %2.6, %2.7 (Typecheck@0x560a70a42af0[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] int$-
optimized away

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

======================= ClosureVersion: getClass (CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1) =======================
referenced: 16
referenced non-empty: 4
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
getClass [0x560a70404470]
referenced: 16
referenced non-empty: 4
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$+ (polluted)
optimized away

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] other$
val?            %7.5  = StaticCall         !v    getClassDef[0x560a73585780](%7.3, %7.4) e1.5   <other$>
dependent slot

Type#7 [unused] other$
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] other$
optimized away (dependency)

======================= ClosureVersion: as (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,!Obj1 miss: 2) =======================
referenced: 178
referenced non-empty: 88
read non-empty: 84
used: 15
present non-empty: 29

Used
exact match: 10
widened: 5
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 73
optimized away non-empty: 44
dependent: 63
other reasons unused non-empty: 10

Polluted
polluted: 10
used polluted: 0

----------------------
as [0x560a7137abc0]
referenced: 114
referenced non-empty: 63
read non-empty: 63
used: 11
present non-empty: 19

Used
exact match: 8
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 52
optimized away non-empty: 33
dependent: 50
other reasons unused non-empty: 2

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] (str|cls) (polluted)
optimized away

Type#4 [unused] str$+
val?            %10.1 = PopContext         C     %10.0, %2.4   <str$+>
dependent slot

Type#5 [unused] str$+
optimized away (dependency)

Type#6 [unused] str$-
optimized away (dependency)

Type#7 [used] lgl$-
val?            %16.2 = PopContext         C     %16.1, %12.5   <lgl$->
void                    Assume             D     %16.3, %16.4 (Typecheck@0x560a70d5bd90[Type#7])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#8 [unused] str$-
optimized away (dependency)

Type#9 [used] lgl$-
val?            %23.2 = PopContext         C     %23.1, %19.4   <lgl$->
void                    Assume             D     %23.3, %23.4 (Typecheck@0x560a70d5bd90[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [unused] (str|cls)- (polluted)
val?            %111.2 = Force!<wrapped>    !     %111.0, e1.2   <(str|cls)->
other unused reason

Type#11 [unused] str$+
optimized away (dependency)

Type#12 [unused] env-
val?            %29.4 = StaticCall         !v    .classEnv[0x560a738040b0](%29.3, missingArg, false) { 0 2n } e1.2   <env->
dependent slot

Type#13 [unused] env-
optimized away (dependency)

Type#14 [unused] cls
val?            %31.4 = StaticCall         !v    getGeneric[0x560a7342ff60]("coerce", missingArg, %31.3) { 0 2n } e1.2   <cls>
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] cls
optimized away (dependency)

Type#17 [unused] env-
optimized away (dependency)

Type#18 [unused] env-
val?            %33.5 = StaticCall         !v    .getMethodsTable[0x560a735a6ad0](%33.3, %33.4, missingArg, true) { 0 1 3n } e1.2   <env->
dependent slot

Type#19 [unused] str$+
optimized away (dependency)

Type#20 [unused] str$-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] env-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] (nil|cls) (polluted)
val?            %47.1 = PopContext         C     %47.0, %35.8   <(nil|cls)>
dependent slot

Type#25 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [used] str$+
val?^ | miss    %60.3 = LdVar              eR    thisClass, e1.2
void                    Assume             D     %60.4, %47.4 (Typecheck@0x560a70d5bd90[Type#28])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str$+, expected: str$+, required: val?^ | miss

Type#29 [unused] str$-
val?            %60.9 = Force!<wrapped>    !v    %60.8, e1.2   <str$->
dependent slot

Type#30 [unused] str+
val?            %60.10 = NamedCall          !v    <blt c>(from=%60.7, to=%60.9) e1.2   <str+>
dependent slot

Type#31 [unused] str+
optimized away (dependency)

Type#32 [unused] cls
optimized away (dependency)

Type#33 [unused] cls
optimized away (dependency)

Type#34 [unused] env-
optimized away (dependency)

Type#35 [unused] nil-
val?            %60.16 = NamedCall          !v    %60.12("coerce", %60.13, optional=true, useInherited=false, fdef=%60.14, mlist=%60.15) e1.2   <nil->
dependent slot

Type#36 [unused] nil-
optimized away (dependency)

Type#37 [unused] cls
optimized away (dependency)

Type#38 [unused] str$-
optimized away (dependency)

Type#39 [used] lgl$-
val?            %64.5 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%64.3, %64.4) e1.2   <lgl$->
void                    Assume             D     %64.6, %64.7 (Typecheck@0x560a70d5bd90[Type#39])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#40 [unused] str$-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] other$
val?            %87.5 = StaticCall         !v    getClassDef[0x560a73585780](%87.3, %87.4) e1.2   <other$>
dependent slot

Type#43 [unused] other$
val?            %89.4 = Force!<lazy>       !v    %89.3, e1.2   <other$>
dependent slot

Type#44 [used] lgl$-
val?            %89.6 = StaticCall         !v    isFALSE[0x560a736e5c50](%89.5) e1.2   <lgl$->
void                    Assume             D     %89.7, %89.8 (Typecheck@0x560a70d5bd90[Type#44])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#45 [unused] other$
val?            %92.4 = Force!<wrapped>    !v    %92.3, e1.2   <other$>
dependent slot

Type#46 [used] lgl$-
val?            %92.6 = StaticCall         !v    isTRUE[0x560a737047b0](%92.5) e1.2   <lgl$->
void                    Assume             D     %92.7, %92.8 (Typecheck@0x560a70d5bd90[Type#46])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] cls-
val?            %95.3 = Call               !v    %95.0(%95.1, %95.2) e1.2   <cls->
dependent slot

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] cls-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] lgl$-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] cls-
val?            %97.8 = StaticCall         !v    .makeAsMethod[0x560a73556030](%97.3, %97.4, %97.5, %97.6, %97.7) e1.2   <cls->
dependent slot

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [used] cls-
val?^ | miss    %99.3 = LdVar              eR    test, e1.2
void                    Assume             D     %99.4, %97.10 (Typecheck@0x560a70d5bd90[Type#61])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: cls-, expected: cls-, required: val?^ | miss

Type#62 [unused] lgl$-
lgl$#-          %99.8 = CallSafeBuiltin    wed   is.function(%99.7)    <lgl$->
dependent slot

Type#63 [unused] cls-
optimized away (dependency)

Type#64 [unused] lgl$-
optimized away (dependency)

Type#65 [used] lgl$-
val?            %104.4 = StaticCall         !v    isTRUE[0x560a736c17f0](%104.3) e1.2   <lgl$->
void                    Assume             D     %104.5, %104.6 (Typecheck@0x560a70d5bd90[Type#65])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [used] cls-
val?^ | miss    %70.0 = LdVar              eR    asMethod, e1.2
void                    Assume             D     %70.1, %68.0 (Typecheck@0x560a70d5bd90[Type#74])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: cls-, expected: cls-, required: val?^ | miss

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] cls-
optimized away (dependency)

Type#87 [used] lgl$-
val?^ | miss    %74.0 = LdVar              eR    canCache, e1.2
void                    Assume             D     %74.1, %68.0 (Typecheck@0x560a70d5bd90[Type#87])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#88 [unused] cls-
optimized away (dependency)

Type#89 [unused] str$+
optimized away (dependency)

Type#90 [unused] other$
optimized away (dependency)

Type#91 [unused] $#-
optimized away (dependency)

Type#92 [unused] cls
val?            %84.7 = StaticCall         !v    .asCoerceMethod[0x560a736b8090](%84.3, %84.4, %84.5, false, %84.6) e1.2   <cls>
dependent slot

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] cls
val?            %76.1 = Force!<value>      !v    %76.0, e1.2   <cls>
dependent slot

Type#99 [used] lgl$-
val?^ | miss    %79.0 = LdVar              eR    canCache, e1.2
void                    Assume             D     %79.1, %76.3 (Typecheck@0x560a70d5bd90[Type#99])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#100 [unused] str+
optimized away (dependency)

Type#101 [unused] cls
optimized away (dependency)

Type#102 [unused] cls
optimized away (dependency)

Type#103 [unused] lgl$-
optimized away (dependency)

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] $#-
optimized away (dependency)

Type#106 [unused] $#-
optimized away (dependency)

Type#107 [unused] $#-
optimized away (dependency)

Type#108 [unused] $#-
optimized away (dependency)

Type#109 [unused] lgl$-
val?            %51.1 = Force!<lazy>       !v    %51.0, e1.2   <lgl$->
dependent slot

Type#110 [unused] $#-
optimized away (dependency)

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] cls
optimized away (dependency)

Type#113 [unused] cls-
val?            %57.1 = PopContext         C     %57.0, %55.4   <cls->
dependent slot

----------------------
Inlinee: .quickCoerceSelect [0x560a71382c20]
referenced: 38
referenced non-empty: 11
read non-empty: 8
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 10
optimized away non-empty: 8
dependent: 7
other reasons unused non-empty: 3

Polluted
polluted: 3
used polluted: 0

Type#0 [used] env-
val?            %35.15 = Force!<lazy>       !vrL  %35.10, e35.14   <env->
void                    Assume             D     %35.17, %35.18 (Typecheck@0x560a7144d410[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?^ | miss

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] lgl$-
lgl$#-          %38.3 = CallSafeBuiltin    wed   is.environment(%35.15)    <lgl$->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] str$+
optimized away

Type#30 [unused] str$-
optimized away

Type#31 [unused] str-
optimized away

Type#32 [unused] env-
optimized away (dependency)

Type#33 [unused] (nil|cls) (polluted)
val?            %42.5 = StaticCall         !v    .findMethodInTable[0x560a7337dcb0](%42.3, %42.4) e35.14   <(nil|cls)>
dependent slot

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#36 [unused] lgl$-
optimized away (dependency)

Type#37 [unused] (nil|cls) (polluted)
optimized away (dependency)

----------------------
Inlinee: asMethod [0x560a71e10710]
referenced: 9
referenced non-empty: 4
read non-empty: 3
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] lgl$-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] cls
val?            %55.11 = Force!<value>      !v    %55.10, e55.6   <cls>
other unused reason

Type#5 [unused] lgl$-
val?            %55.15 = Force!<wrapped>    !     %55.13, e55.6   <lgl$->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] cls-
val?            %59.3 = Call               !     %59.0(%59.1, %59.2) e55.6   <cls->
other unused reason

----------------------
Inlinee: .identC [0x560a569917c0]
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %21.3 = Force!<value>      !v    %21.1, e21.2   <vec>
other unused reason

Type#4 [unused] str$+ (polluted)
val?            %21.5 = Force!<lazy>       !v    %21.4, e21.2   <str$+>
dependent slot

Type#5 [unused] str$+ (polluted)
val?            %21.7 = Force!<lazy>       !v    %21.6, e21.2   <str$+>
dependent slot

Type#6 [used] lgl$-
val?            %21.8 = CallBuiltin        !v    .Call(%21.3, %21.5, %21.7) e21.2   <lgl$->
void                    Assume             D     %21.9, %21.10 (Typecheck@0x560a5692fc50[Type#6])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: .class1 [0x560a713f90f0]
referenced: 10
referenced non-empty: 6
read non-empty: 6
used: 2
present non-empty: 2

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|cls) (polluted)
val?            %4.2  = Force!<lazy>       !vL   %2.5, e4.1   <(str|cls)>
other unused reason

Type#2 [used] str$+
val?            %4.3  = CallBuiltin        !v    class(%4.2) e4.1   <str$+>
void                    Assume             D     %4.5, %4.6 (Typecheck@0x560a7143c850[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$+
optimized away (dependency)

Type#5 [used] int$-
(int|real)$-    %6.6  = CallSafeBuiltin    wed   length(%6.5)    <int$->
void                    Assume             D     %6.7, %6.8 (Typecheck@0x560a7143c850[Type#5])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] lgl$-
lgl$-           %8.2  = Gt                 d     %8.1, 1L, elided   <lgl$->
other unused reason

Type#7 [unused] str$+
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

======================= ClosureVersion: formalArgs (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 7
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
formalArgs [0x560a7137a2c0]
referenced: 7
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] cls (polluted)
val?            %2.8  = Force!<lazy>       !v    %1.0, e2.6   <cls>
other unused reason

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [used] list-
val?            %2.10 = StaticCall         !vr   formals[0x560a73697120](%2.9, %2.7) { 0 1n } e2.6   <list->
void                    Assume             D     %2.11, %2.12 (Typecheck@0x560a7137a1d0[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: list-, expected: list-, required: val?+

Type#6 [unused] str-
val+            %4.2  = CallSafeBuiltin    vwed  names(%4.1)    <str->
other unused reason

======================= ClosureVersion: .matchSigLength (!ExpMi,CorrOrd,!TMany,Argmatch;Eager3,NonRefl2,NonRefl3,!Obj3) =======================
referenced: 93
referenced non-empty: 20
read non-empty: 14
used: 6
present non-empty: 8

Used
exact match: 4
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 6
dependent: 10
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 0

----------------------
.matchSigLength [0x560a71363170]
referenced: 87
referenced non-empty: 15
read non-empty: 11
used: 6
present non-empty: 5

Used
exact match: 4
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 4
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] env-
optimized away

Type#2 [used] int$-
val?            %2.6  = StaticCall         !v    .getGenericSigLength[0x560a73367b00](%2.4, %2.5, true) e2.3   <int$->
void                    Assume             D     %2.7, %2.8 (Typecheck@0x560a7137a690[Type#2])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str+
val?            %6.4  = Force!<lazy>       !v    %6.3, e2.3   <str+>
void                    Assume             D     %6.5, %6.6 (Typecheck@0x560a7137a690[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?+

Type#5 [used] int$-
(int|real)$-    %8.2  = CallSafeBuiltin    wed   length(%8.1)    <int$->
void                    Assume             D     %8.3, %8.4 (Typecheck@0x560a7137a690[Type#5])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] str+
optimized away (dependency)

Type#7 [unused] nil-
val?            %14.4 = PopContext         C     %14.3, %12.4   <nil->
dependent slot

Type#8 [used] int$-
val?^ | miss    %16.0 = LdVar              eR    n, e2.3
void                    Assume             D     %16.1, %14.6 (Typecheck@0x560a7137a690[Type#8])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#9 [used] int$-
val?^ | miss    %16.4 = LdVar              eR    nargs, e2.3
void                    Assume             D     %16.5, %14.6 (Typecheck@0x560a7137a690[Type#9])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#10 [unused] lgl$-
lgl$-           %16.8 = Lt                 d     %16.3, %16.7, elided   <lgl$->
dependent slot

Type#11 [unused] int$-
optimized away (dependency)

Type#12 [unused] int$-
optimized away (dependency)

Type#13 [unused] lgl$-
lgl$-           %17.0 = Gt                 d     %16.3, %16.7, elided   <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [used] nil-
val             %18.0 = ChkMissing         e     %14.4
void                    Assume             D     %18.1, %14.6 (Typecheck@0x560a7137a690[Type#84])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: nil-, expected: nil-, required: val?^ | miss

Type#85 [unused] str+
val?            %18.8 = Force!<wrapped>    !v    %18.7, e2.3   <str+>
dependent slot

Type#86 [unused] str+
val?            %18.15 = PopContext         C     %18.12, %18.9   <str+>
dependent slot

----------------------
Inlinee: packageSlot<- [0x560a71363290]
referenced: 3
referenced non-empty: 3
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|str)- (polluted)
optimized away

Type#1 [unused] str+
optimized away (dependency)

Type#2 [unused] str+
val?            %18.12 = NamedCall          !v    %18.11(%18.8, "package", value=%18.3) e18.10   <str+>
dependent slot

----------------------
Inlinee: packageSlot [0x560a6f2c7cd0]
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (str|other) (polluted)
val?            %14.2 = Force!<lazy>       !vL   %12.5, e14.1   <(str|other)>
other unused reason

Type#2 [unused] (nil|str)- (polluted)
val?            %14.3 = CallBuiltin        !v    attr(%14.2, "package") e14.1   <(nil|str)->
other unused reason

======================= ClosureVersion: .matchSigLength (!ExpMi,CorrOrd,!TMany,Argmatch;Eager3,NonRefl3,!Obj3) =======================
referenced: 93
referenced non-empty: 20
read non-empty: 20
used: 6
present non-empty: 8

Used
exact match: 4
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 6
dependent: 10
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 0

----------------------
.matchSigLength [0x560a71363170]
referenced: 87
referenced non-empty: 15
read non-empty: 15
used: 6
present non-empty: 5

Used
exact match: 4
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 4
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] env-
optimized away

Type#2 [used] int$-
val?            %2.6  = StaticCall         !v    .getGenericSigLength[0x560a7337dab0](%2.4, %2.5, true) e2.3   <int$->
void                    Assume             D     %2.7, %2.8 (Typecheck@0x560a7137a690[Type#2])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str+
val?            %6.4  = Force!<lazy>       !v    %6.3, e2.3   <str+>
void                    Assume             D     %6.5, %6.6 (Typecheck@0x560a7137a690[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?+

Type#5 [used] int$-
(int|real)$-    %8.2  = CallSafeBuiltin    wed   length(%8.1)    <int$->
void                    Assume             D     %8.3, %8.4 (Typecheck@0x560a7137a690[Type#5])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] str+
optimized away (dependency)

Type#7 [unused] nil-
val?            %14.4 = PopContext         C     %14.3, %12.4   <nil->
dependent slot

Type#8 [used] int$-
val?^ | miss    %16.0 = LdVar              eR    n, e2.3
void                    Assume             D     %16.1, %14.6 (Typecheck@0x560a7137a690[Type#8])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#9 [used] int$-
val?^ | miss    %16.4 = LdVar              eR    nargs, e2.3
void                    Assume             D     %16.5, %14.6 (Typecheck@0x560a7137a690[Type#9])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#10 [unused] lgl$-
lgl$-           %16.8 = Lt                 d     %16.3, %16.7, elided   <lgl$->
dependent slot

Type#11 [unused] int$-
optimized away (dependency)

Type#12 [unused] int$-
optimized away (dependency)

Type#13 [unused] lgl$-
lgl$-           %17.0 = Gt                 d     %16.3, %16.7, elided   <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [used] nil-
val             %18.0 = ChkMissing         e     %14.4
void                    Assume             D     %18.1, %14.6 (Typecheck@0x560a7137a690[Type#84])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: nil-, expected: nil-, required: val?^ | miss

Type#85 [unused] str+
val?            %18.8 = Force!<wrapped>    !v    %18.7, e2.3   <str+>
dependent slot

Type#86 [unused] str+
val?            %18.15 = PopContext         C     %18.12, %18.9   <str+>
dependent slot

----------------------
Inlinee: packageSlot<- [0x560a71363290]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|str)- (polluted)
optimized away

Type#1 [unused] str+
optimized away (dependency)

Type#2 [unused] str+
val?            %18.12 = NamedCall          !v    %18.11(%18.8, "package", value=%18.3) e18.10   <str+>
dependent slot

----------------------
Inlinee: packageSlot [0x560a6f2c7cd0]
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (str|other) (polluted)
val?            %14.2 = Force!<lazy>       !vL   %12.5, e14.1   <(str|other)>
other unused reason

Type#2 [unused] (nil|str)- (polluted)
val?            %14.3 = CallBuiltin        !v    attr(%14.2, "package") e14.1   <(nil|str)->
other unused reason

======================= ClosureVersion: body<- (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager2,NonRefl0,NonRefl2) =======================
referenced: 3
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
body<- [0x560a7144cb90]
referenced: 3
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] cls (polluted)
val?            %2.5  = CallBuiltin        !     standardGeneric("body<-") e2.4   <cls>
other unused reason

======================= ClosureVersion: .findMethodInTable (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 39
referenced non-empty: 21
read non-empty: 18
used: 3
present non-empty: 6

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 18
optimized away non-empty: 12
dependent: 12
other reasons unused non-empty: 6

Polluted
polluted: 6
used polluted: 0

----------------------
.findMethodInTable [0x560a7138f240]
referenced: 33
referenced non-empty: 15
read non-empty: 15
used: 3
present non-empty: 4

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 8
dependent: 12
other reasons unused non-empty: 0

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#1 [used] lgl$-
val?            %2.5  = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%2.4, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %2.6, %2.7 (Typecheck@0x560a713f8100[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] lgl$-
val?            %5.1  = Force!<lazy>       !v    %5.0, e2.3   <lgl$->
dependent slot

Type#3 [unused] str+
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] cls
optimized away (dependency)

Type#6 [unused] env-
optimized away (dependency)

Type#7 [unused] str+
val?            %37.6 = StaticCall         !v    .matchSigLength[0x560a7337d9b0](%37.3, %37.4, %37.5, false) e2.3   <str+>
dependent slot

Type#8 [unused] str+ (polluted)
optimized away (dependency)

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [used] env-
val?            %12.18 = Force!<lazy>       !v    %12.17, e2.3   <env->
void                    Assume             D     %12.20, %12.21 (Typecheck@0x560a713f8100[Type#10])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [used] str$-
val?^ | miss    %14.1 = LdVar              eR    label, e2.3
void                    Assume             D     %14.2, %12.21 (Typecheck@0x560a713f8100[Type#12])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#13 [unused] (nil|cls) (polluted)
val?            %14.8 = Extract2_1D        wed   %14.7, %14.5, elided   <(nil|cls)>
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] cls
optimized away (dependency)

Type#16 [unused] lgl$-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] cls
val?            %21.2 = Force!<value>      !     %21.0, e2.3   <cls>
dependent slot

----------------------
Inlinee: paste [0x560a55fd8390]
referenced: 4
referenced non-empty: 4
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec- (polluted)
val+            %12.14 = CallSafeBuiltin    wed   list(%12.13)    <vec->
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] (nil|str)- (polluted)
optimized away

Type#3 [unused] lgl$-
optimized away

----------------------
Inlinee: .sigLabel [0x560a7113f950]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str+ (polluted)
optimized away

Type#1 [unused] str$-
val+            %12.15 = CallSafeBuiltin    wed   paste(%12.14, " ", "#", false)    <str$->
other unused reason

======================= ClosureVersion: .getGenericSigLength (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl1,NonRefl2,!Obj2) =======================
referenced: 8
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 1

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
.getGenericSigLength [0x560a7108d500]
referenced: 8
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 1

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] lgl$-
val+            %1.3  = Force<value>             %1.0,    <lgl$->
dependent slot

Type#3 [unused] env-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %3.4  = StaticCall         !     exists[0x560a7352ffd0](".SigLength", missingArg, %3.3, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %3.5, %3.6 (Typecheck@0x560a714137e0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] env-
optimized away (dependency)

Type#7 [used] int$-
val?            %9.4  = StaticCall         !     get[0x560a73797150](".SigLength", missingArg, %9.3) { 0 2n } e2.3   <int$->
void                    Assume             D     %9.5, %9.6 (Typecheck@0x560a714137e0[Type#7])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

======================= ClosureVersion: .getGenericSigLength (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl2,!Obj2) =======================
referenced: 8
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 1

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
.getGenericSigLength [0x560a7108d500]
referenced: 8
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 1

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] lgl$-
val+            %1.3  = Force<value>             %1.0,    <lgl$->
dependent slot

Type#3 [unused] env-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %3.4  = StaticCall         !     exists[0x560a739bcdf0](".SigLength", missingArg, %3.3, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %3.5, %3.6 (Typecheck@0x560a714137e0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] env-
optimized away (dependency)

Type#7 [used] int$-
val?            %9.4  = StaticCall         !     get[0x560a73797150](".SigLength", missingArg, %9.3) { 0 2n } e2.3   <int$->
void                    Assume             D     %9.5, %9.6 (Typecheck@0x560a714137e0[Type#7])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

======================= ClosureVersion: .classEnv (CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj2) =======================
referenced: 38
referenced non-empty: 9
read non-empty: 9
used: 1
present non-empty: 5

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 3
dependent: 4
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

----------------------
.classEnv [0x560a713ff040]
referenced: 35
referenced non-empty: 7
read non-empty: 7
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 3
dependent: 4
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] str$+
val?            %5.4  = Force!<lazy>       !v    %5.3, e1.4   <str$+>
void                    Assume             D     %5.5, %5.6 (Typecheck@0x560a714d7840[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#3 [unused] lgl$-
lgl$#-          %7.2  = CallSafeBuiltin    wed   is.character(%7.1)    <lgl$->
other unused reason

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$+
optimized away (dependency)

Type#8 [unused] str$-
val?            %13.4 = PopContext         C     %13.3, %11.4   <str$->
dependent slot

Type#9 [unused] str$-
optimized away (dependency)

Type#10 [unused] str$-
optimized away (dependency)

Type#11 [unused] env-
val?            %16.4 = StaticCall         !     .requirePackage[0x560a7341b330](%16.3) e1.4   <env->
other unused reason

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: packageSlot [0x560a6f2c7cd0]
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (str|other) (polluted)
val?            %13.2 = Force!<lazy>       !vL   %11.5, e13.1   <(str|other)>
other unused reason

Type#2 [unused] (nil|str)- (polluted)
val?            %13.3 = CallBuiltin        !v    attr(%13.2, "package") e13.1   <(nil|str)->
other unused reason

======================= ClosureVersion: .cacheMethodInTable (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 113
referenced non-empty: 28
read non-empty: 25
used: 2
present non-empty: 11

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 15
dependent: 17
other reasons unused non-empty: 9

Polluted
polluted: 3
used polluted: 0

----------------------
.cacheMethodInTable [0x560a71d7cf70]
referenced: 32
referenced non-empty: 19
read non-empty: 19
used: 2
present non-empty: 6

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 17
optimized away non-empty: 11
dependent: 17
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] cls
val?            %2.4  = Force!<lazy>       !v    %1.3, e2.3   <cls>
dependent slot

Type#3 [unused] env-
val?            %2.6  = StaticCall         !v    environment[0x560a73a4ebe0](%2.5) e2.3   <env->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str+
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] env-
optimized away (dependency)

Type#10 [unused] str+
val?            %7.6  = StaticCall         !v    .matchSigLength[0x560a739dcb10](%7.3, %7.4, %7.5, true) e2.3   <str+>
dependent slot

Type#11 [unused] str+
optimized away (dependency)

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] str$-
optimized away (dependency)

Type#14 [unused] env-
optimized away (dependency)

Type#15 [used] lgl$-
val?            %11.5 = StaticCall         !v    exists[0x560a736bc130](%11.3, missingArg, %11.4, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %11.6, %11.7 (Typecheck@0x560a71f58000[Type#15])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#16 [unused] cls
val?            %13.4 = Force!<lazy>       !v    %13.3, e2.3   <cls>
dependent slot

Type#17 [used] lgl$-
val?            %16.3 = StaticCall         !v    .duplicateClassesExist[0x560a733b0c40]() e2.3   <lgl$->
void                    Assume             D     %16.4, %16.5 (Typecheck@0x560a71f58000[Type#17])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#18 [unused] cls
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] lgl$-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] cls
val?            %21.3 = PopContext         C     %21.2, %20.8   <cls>
dependent slot

Type#24 [unused] str$-
optimized away (dependency)

Type#25 [unused] cls
optimized away (dependency)

Type#26 [unused] env-
optimized away (dependency)

Type#27 [unused] cls
val?            %23.6 = StaticCall         !     assign[0x560a736b0820](%23.3, %23.4, missingArg, %23.5) { 0 1 3n } e2.3   <cls>
dependent slot

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: paste [0x560a55fd8390]
referenced: 4
referenced non-empty: 4
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec- (polluted)
val+            %9.14 = CallSafeBuiltin    wed   list(%9.13)    <vec->
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] (nil|str)- (polluted)
optimized away

Type#3 [unused] lgl$-
optimized away

----------------------
Inlinee: .methodPackageSlots [0x560a719ebdd0]
referenced: 75
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] str
val?            %20.18 = Call               !v    %20.15(%20.16, %20.17) e20.14   <str>
other unused reason

Type#3 [unused] lgl$-
val?            %20.22 = Force!<lazy>       !v    %20.21, e20.14   <lgl$->
other unused reason

Type#4 [unused] cls
val?            %21.2 = Force!<wrapped>    !     %21.0, e20.14   <cls>
other unused reason

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: .sigLabel [0x560a7113f950]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str+ (polluted)
optimized away

Type#1 [unused] str$-
val+            %9.15 = CallSafeBuiltin    wed   paste(%9.14, " ", "#", false)    <str$->
other unused reason

*********************** Compilation session for: FUN (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) ***********************
======================= ClosureVersion: FUN (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 7
referenced non-empty: 3
read non-empty: 3
used: 2
present non-empty: 1

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
FUN [0x560a730b5200]
referenced: 7
referenced non-empty: 3
read non-empty: 3
used: 2
present non-empty: 1

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] other$
val?            %1.3  = Force<wrapped>           %1.0,    <other$>
other unused reason

Type#2 [used] lgl$-
val+            %2.1  = CallSafeBuiltin    wed   is.logical(%1.3)    <lgl$->
void                    Assume             D     %2.2, %2.3 (Typecheck@0x560a730b5110[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [used] lgl$-
val?            %7.3  = Call               !     %7.0(%7.1, %7.2) e4.4   <lgl$->
void                    Assume             D     %7.4, %7.5 (Typecheck@0x560a730b5110[Type#6])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: mget (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,!Obj1 miss: 3) ***********************
======================= ClosureVersion: mget (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,!Obj1 miss: 3) =======================
referenced: 7
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

----------------------
mget [0x560a56774a90]
referenced: 7
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str+
val?            %1.4  = Force!<lazy>       !v    %1.1, e1.2   <str+>
void                    Assume             D     %1.5, %1.6 (Typecheck@0x560a565e0aa0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?^ | miss

Type#2 [unused] env-
val?            %2.3  = Force!<lazy>       !v    %2.2, e1.2   <env->
other unused reason

Type#3 [unused] str$-
val?            %2.5  = Force!<lazy>       !v    %2.4, e1.2   <str$->
other unused reason

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] vec$-
val+            %7.3  = CallSafeBuiltin    wed   list(%1.3)    <vec$->
other unused reason

Type#6 [unused] lgl$-
val?            %6.2  = Force!<lazy>       !v    %6.1, e1.2   <lgl$->
other unused reason

*********************** Compilation session for: packageSlot<- (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: packageSlot<- (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
packageSlot<- [0x560a71363290]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|str)- (polluted)
val+            %1.2  = Force<wrapped>           %1.0,    <(nil|str)->
other unused reason

Type#1 [unused] str+
val+            %1.5  = Force<value>             %1.1,    <str+>
dependent slot

Type#2 [unused] str+
val?            %1.6  = NamedCall          !v    %1.4(%1.5, "package", value=%1.2) e1.3   <str+>
dependent slot

*********************** Compilation session for: .identC (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,!Obj1) ***********************
======================= ClosureVersion: .identC (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,!Obj1) =======================
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

----------------------
.identC [0x560a569917c0]
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %2.5  = Force!<value>      !v    %2.3, e2.4   <vec>
other unused reason

Type#4 [unused] str$+ (polluted)
val?            %2.7  = Force!<lazy>       !v    %2.6, e2.4   <str$+>
dependent slot

Type#5 [unused] str$+ (polluted)
val?            %2.9  = Force!<lazy>       !v    %2.8, e2.4   <str$+>
dependent slot

Type#6 [used] lgl$-
val?            %2.10 = CallBuiltin        !     .Call(%2.5, %2.7, %2.9) e2.4   <lgl$->
void                    Assume             D     %2.11, %2.12 (Typecheck@0x560a5692fc50[Type#6])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: .cacheGenericTable (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0) ***********************
======================= ClosureVersion: .cacheGenericTable (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0) =======================
referenced: 64
referenced non-empty: 24
read non-empty: 24
used: 4
present non-empty: 11

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 20
optimized away non-empty: 9
dependent: 20
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

----------------------
.cacheGenericTable [0x560a59442440]
referenced: 56
referenced non-empty: 16
read non-empty: 16
used: 4
present non-empty: 9

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 3
dependent: 12
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
val?            %1.4  = Force!<lazy>       !vr   %1.1,    <cls>
dependent slot

Type#1 [used] env-
val?            %1.6  = Force!<lazy>       !v    %1.0, e1.3   <env->
void                    Assume             D     %4.0, %2.4 (Typecheck@0x560a594db2c0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] str$-
val?            %2.2  = Force!<lazy>       !v    %2.1, e1.3   <str$->
void                    Assume             D     %2.3, %2.4 (Typecheck@0x560a594db2c0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#4 [unused] cls
val?            %4.5  = Extract2_1D        wed   %4.2, %4.4, elided   <cls>
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %9.3  = Call               !v    %9.0(%9.1, %9.2) e1.3   <str$->
dependent slot

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] cls
val?            %11.4 = Force!<value>      !v    %11.3, e1.3   <cls>
dependent slot

Type#10 [used] lgl$-
val?            %11.5 = CallBuiltin        !v    is.function(%11.4) e1.3   <lgl$->
void                    Assume             D     %11.6, %11.7 (Typecheck@0x560a594db2c0[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] cls
optimized away (dependency)

Type#12 [unused] cls
optimized away (dependency)

Type#13 [used] lgl$-
val?            %15.12 = PopContext         C     %15.11, %15.5   <lgl$->
void                    Assume             D     %15.13, %15.14 (Typecheck@0x560a594db2c0[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#14 [unused] cls
val?            %19.2 = Force!<value>      !     %19.0, e1.3   <cls>
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] cls
optimized away (dependency)

Type#52 [unused] cls
val?            %7.6  = Force!<wrapped>    !v    %7.5, e1.3   <cls>
dependent slot

Type#53 [unused] env-
val?            %7.8  = Force!<wrapped>    !v    %7.7, e1.3   <env->
dependent slot

Type#54 [unused] str$-
val?            %7.10 = Force!<wrapped>    !v    %7.9, e1.3   <str$->
dependent slot

Type#55 [unused] cls
val?            %7.15 = Force!<value>      !     %7.13, e1.3   <cls>
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %15.9 = Force!<lazy>       !vL   %15.7, e15.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %15.10 = Force!<lazy>       !vL   %15.6, e15.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: .resetInheritedMethods (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: .resetInheritedMethods (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 54
referenced non-empty: 38
read non-empty: 36
used: 11
present non-empty: 8

Used
exact match: 4
widened: 7
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 27
optimized away non-empty: 19
dependent: 22
other reasons unused non-empty: 5

Polluted
polluted: 16
used polluted: 4

----------------------
.resetInheritedMethods [0x560a57543a30]
referenced: 49
referenced non-empty: 33
read non-empty: 33
used: 10
present non-empty: 8

Used
exact match: 4
widened: 6
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 23
optimized away non-empty: 15
dependent: 22
other reasons unused non-empty: 1

Polluted
polluted: 14
used polluted: 3

Type#0 [unused] str-
str-            %2.3  = CallSafeBuiltin    wed   vector("character", 0L)    <str->
dependent slot

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] env-
val+            %4.4  = Force!<lazy>       !vr   %1.0,    <env->
dependent slot

Type#3 [unused] str- (polluted)
val+            %4.5  = CallSafeBuiltin    wed   names(%4.4)    <str->
dependent slot

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [used] (nil|env)- (polluted)
val?            %4.10 = Call               !v    %4.7(%4.8, %4.9) e4.3   <(nil|env)->
void                    Assume             D     %46.4, %4.13 (Typecheck@0x560a56d63100[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (nil|env)-, expected: (nil|env)-, required: val?+

Type#7 [unused] env-
val?            %7.4  = Force!<wrapped>    !v    %7.3, e4.3   <env->
dependent slot

Type#8 [unused] env-
val+            %9.2  = CallSafeBuiltin    wed   new.env(true, %9.1, 29L)    <env->
dependent slot

Type#9 [unused] env-
optimized away (dependency)

Type#10 [unused] env-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] env-
optimized away (dependency)

Type#13 [unused] str- (polluted)
val+            %46.7 = CallSafeBuiltin    wed   names(%46.6)    <str->
dependent slot

Type#14 [unused] str- (polluted)
optimized away (dependency)

Type#15 [unused] str- (polluted)
optimized away (dependency)

Type#16 [unused] str-
optimized away (dependency)

Type#17 [unused] env-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] str- (polluted)
optimized away (dependency)

Type#22 [unused] str- (polluted)
optimized away (dependency)

Type#23 [used] int- (polluted)
val?            %14.8 = StaticCall         !v    match[0x560a743718a0](%14.6, %14.7) e4.3   <int->
void                    Assume             D     %14.9, %14.10 (Typecheck@0x560a56d63100[Type#23])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#24 [used] lgl$-
val+            %16.2 = CallSafeBuiltin    wed   anyNA(%16.1)    <lgl$->
void                    Assume             D     %16.3, %16.4 (Typecheck@0x560a56d63100[Type#24])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#25 [unused] env-
optimized away (dependency)

Type#26 [unused] vec+ (polluted)
optimized away

Type#27 [unused] env-
optimized away (dependency)

Type#28 [used] str- (polluted)
val?^ | miss    %22.0 = LdVar              eR    direct, e4.3
void                    Assume             D     %22.1, %20.0 (Typecheck@0x560a56d63100[Type#28])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#29 [used] env-
val?^ | miss    %25.0 = LdVar              eR    allTable, e4.3
void                    Assume             D     %25.1, %23.2 (Typecheck@0x560a56d63100[Type#29])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [used] str$-
val             %25.7 = ChkMissing         e     %23.0
void                    Assume             D     %25.8, %23.2 (Typecheck@0x560a56d63100[Type#31])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: str$-, expected: str$-, required: val?^ | miss

Type#32 [unused] (cls|blt) (polluted)
val?            %25.11 = Extract2_1D        wed   %25.4, %25.10, elided   <(cls|blt)>
dependent slot

Type#33 [unused] (cls|blt) (polluted)
optimized away (dependency)

Type#34 [used] lgl$-
val?            %27.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%27.3, "MethodWithNext") e4.3   <lgl$->
void                    Assume             D     %27.5, %27.6 (Typecheck@0x560a56d63100[Type#34])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [used] env-
val?^ | miss    %34.0 = LdVar              eR    allTable, e4.3
void                    Assume             D     %34.1, %32.2 (Typecheck@0x560a56d63100[Type#39])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [used] str$-
val             %34.7 = ChkMissing         e     %32.0
void                    Assume             D     %34.8, %32.2 (Typecheck@0x560a56d63100[Type#41])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: str$-, expected: str$-, required: val?^ | miss

Type#42 [unused] (cls|spec) (polluted)
val?            %34.11 = Extract2_1D        wed   %34.4, %34.10, elided   <(cls|spec)>
dependent slot

Type#43 [unused] (cls|spec) (polluted)
optimized away (dependency)

Type#44 [used] lgl$-
val?            %36.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%36.3, "MethodWithNext") e4.3   <lgl$->
void                    Assume             D     %36.5, %36.6 (Typecheck@0x560a56d63100[Type#44])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: new.env [0x560a5671c500]
referenced: 4
referenced non-empty: 4
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 1

Type#0 [unused] env-
optimized away

Type#1 [unused] lgl$-
optimized away

Type#2 [used] env+ (polluted)
val?            %7.4  = Force!<wrapped>    !v    %7.3, e4.3   <env->
void                    Assume             D     %7.5, %7.6 (Typecheck@0x560a56e31360[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: env+, expected: env+, required: val?+

Type#3 [unused] (int|real)$- (polluted)
optimized away

----------------------
Inlinee: character [0x560a55e4c150]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] int$-
optimized away

======================= ClosureVersion: assign (CorrOrd,!TMany,Argmatch;Eager0,Eager2,NonRefl0,NonRefl2,!Obj0 miss: 2) =======================
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

----------------------
assign [0x560a596bb7f0]
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [unused] str$-
val+            %5.2  = Force<lazy>              %1.3,    <str$->
other unused reason

Type#3 [unused] val? (polluted)
val?            %5.4  = Force!<lazy>       !v    %5.3, e1.6   <val?>
other unused reason

Type#4 [unused] env-
val?            %5.6  = Force!<lazy>       !v    %5.5, e1.6   <env->
dependent slot

Type#5 [unused] lgl$-
val?            %5.8  = Force!<lazy>       !v    %5.7, e1.6   <lgl$->
other unused reason

*********************** Compilation session for: .updateMethodsInTable (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,!Obj1,!Obj2) ***********************
======================= ClosureVersion: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
other unused reason

Type#2 [used] lgl$-
val+            %1.2  = CallSafeBuiltin    vwed  is.logical(%1.1)    <lgl$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a54e55690[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %3.0, %1.4 (Typecheck@0x560a54e55690[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %5.0, %1.4 (Typecheck@0x560a54e55690[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %5.3  = CallSafeBuiltin    vwed  is.na(%5.2)    <lgl$->
dependent slot

Type#10 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %9.1, %6.3 (Typecheck@0x560a54e55690[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

======================= ClosureVersion: environment (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
environment [0x560a55e84a10]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|cls) (polluted)
val+            %1.1  = Force!<lazy>             %1.0,    <(nil|cls)>
other unused reason

======================= ClosureVersion: .resetInheritedMethods (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 54
referenced non-empty: 38
read non-empty: 36
used: 12
present non-empty: 7

Used
exact match: 4
widened: 8
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 19
dependent: 21
other reasons unused non-empty: 5

Polluted
polluted: 16
used polluted: 4

----------------------
.resetInheritedMethods [0x560a57543a30]
referenced: 49
referenced non-empty: 33
read non-empty: 33
used: 11
present non-empty: 7

Used
exact match: 4
widened: 7
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 22
optimized away non-empty: 15
dependent: 21
other reasons unused non-empty: 1

Polluted
polluted: 14
used polluted: 3

Type#0 [unused] str-
str-            %2.3  = CallSafeBuiltin    wed   vector("character", 0L)    <str->
dependent slot

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] env-
val?            %4.4  = Force!<lazy>       !v    %1.0, e4.3   <env->
void                    Assume             D     %4.5, %4.6 (Typecheck@0x560a56d63100[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?^ | miss

Type#3 [unused] str- (polluted)
val+            %6.2  = CallSafeBuiltin    wed   names(%6.1)    <str->
dependent slot

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [used] (nil|env)- (polluted)
val?            %6.7  = Call               !v    %6.4(%6.5, %6.6) e4.3   <(nil|env)->
void                    Assume             D     %48.4, %6.10 (Typecheck@0x560a56d63100[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (nil|env)-, expected: (nil|env)-, required: val?+

Type#7 [unused] env-
val?            %9.4  = Force!<wrapped>    !v    %9.3, e4.3   <env->
dependent slot

Type#8 [unused] env-
val+            %11.2 = CallSafeBuiltin    wed   new.env(true, %11.1, 29L)    <env->
dependent slot

Type#9 [unused] env-
optimized away (dependency)

Type#10 [unused] env-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] env-
optimized away (dependency)

Type#13 [unused] str- (polluted)
val+            %48.7 = CallSafeBuiltin    wed   names(%48.6)    <str->
dependent slot

Type#14 [unused] str- (polluted)
optimized away (dependency)

Type#15 [unused] str- (polluted)
optimized away (dependency)

Type#16 [unused] str-
optimized away (dependency)

Type#17 [unused] env-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] str- (polluted)
optimized away (dependency)

Type#22 [unused] str- (polluted)
optimized away (dependency)

Type#23 [used] int- (polluted)
val?            %16.8 = StaticCall         !v    match[0x560a74aa6410](%16.6, %16.7) e4.3   <int->
void                    Assume             D     %16.9, %16.10 (Typecheck@0x560a56d63100[Type#23])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#24 [used] lgl$-
val+            %18.2 = CallSafeBuiltin    wed   anyNA(%18.1)    <lgl$->
void                    Assume             D     %18.3, %18.4 (Typecheck@0x560a56d63100[Type#24])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#25 [unused] env-
optimized away (dependency)

Type#26 [unused] vec+ (polluted)
optimized away

Type#27 [unused] env-
optimized away (dependency)

Type#28 [used] str- (polluted)
val?^ | miss    %24.0 = LdVar              eR    direct, e4.3
void                    Assume             D     %24.1, %22.0 (Typecheck@0x560a56d63100[Type#28])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#29 [used] env-
val?^ | miss    %27.0 = LdVar              eR    allTable, e4.3
void                    Assume             D     %27.1, %25.2 (Typecheck@0x560a56d63100[Type#29])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [used] str$-
val             %27.7 = ChkMissing         e     %25.0
void                    Assume             D     %27.8, %25.2 (Typecheck@0x560a56d63100[Type#31])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: str$-, expected: str$-, required: val?^ | miss

Type#32 [unused] (cls|blt) (polluted)
val?            %27.11 = Extract2_1D        wed   %27.4, %27.10, elided   <(cls|blt)>
dependent slot

Type#33 [unused] (cls|blt) (polluted)
optimized away (dependency)

Type#34 [used] lgl$-
val?            %29.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%29.3, "MethodWithNext") e4.3   <lgl$->
void                    Assume             D     %29.5, %29.6 (Typecheck@0x560a56d63100[Type#34])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [used] env-
val?^ | miss    %36.0 = LdVar              eR    allTable, e4.3
void                    Assume             D     %36.1, %34.2 (Typecheck@0x560a56d63100[Type#39])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [used] str$-
val             %36.7 = ChkMissing         e     %34.0
void                    Assume             D     %36.8, %34.2 (Typecheck@0x560a56d63100[Type#41])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: str$-, expected: str$-, required: val?^ | miss

Type#42 [unused] (cls|spec) (polluted)
val?            %36.11 = Extract2_1D        wed   %36.4, %36.10, elided   <(cls|spec)>
dependent slot

Type#43 [unused] (cls|spec) (polluted)
optimized away (dependency)

Type#44 [used] lgl$-
val?            %38.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%38.3, "MethodWithNext") e4.3   <lgl$->
void                    Assume             D     %38.5, %38.6 (Typecheck@0x560a56d63100[Type#44])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: new.env [0x560a5671c500]
referenced: 4
referenced non-empty: 4
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 1

Type#0 [unused] env-
optimized away

Type#1 [unused] lgl$-
optimized away

Type#2 [used] env+ (polluted)
val?            %9.4  = Force!<wrapped>    !v    %9.3, e4.3   <env->
void                    Assume             D     %9.5, %9.6 (Typecheck@0x560a56e31360[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: env+, expected: env+, required: val?+

Type#3 [unused] (int|real)$- (polluted)
optimized away

----------------------
Inlinee: character [0x560a55e4c150]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] int$-
optimized away

======================= ClosureVersion: .updateMethodsInTable (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,!Obj1,!Obj2) =======================
referenced: 106
referenced non-empty: 74
read non-empty: 73
used: 13
present non-empty: 19

Used
exact match: 7
widened: 6
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 61
optimized away non-empty: 42
dependent: 55
other reasons unused non-empty: 6

Polluted
polluted: 4
used polluted: 0

----------------------
.updateMethodsInTable [0x560a56c3cd80]
referenced: 83
referenced non-empty: 55
read non-empty: 55
used: 13
present non-empty: 12

Used
exact match: 7
widened: 6
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 42
optimized away non-empty: 30
dependent: 40
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] cls
val?            %2.4  = Force!<lazy>       !v    %1.2, e2.3   <cls>
dependent slot

Type#1 [unused] env-
val?            %2.6  = StaticCall         !v    environment[0x560a7472f880](%2.5) e2.3   <env->
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [used] lgl$-
val?            %4.9  = PopContext         C     %4.8, %4.4   <lgl$->
void                    Assume             D     %4.10, %4.11 (Typecheck@0x560a56f15b20[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] env-
val?            %6.6  = Call               !v    %6.3(%6.4, %6.5) e2.3   <env->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [used] lgl$-
val?^ | miss    %9.0  = LdVar              eR    reset, e2.3
void                    Assume             D     %9.1, %6.9 (Typecheck@0x560a56f15b20[Type#10])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] env-
val?            %59.4 = Force!<lazy>       !v    %59.3, e2.3   <env->
dependent slot

Type#13 [unused] env-
val?            %59.5 = CallBuiltin        !v    as.environment(%59.4) e2.3   <env->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] str$+
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] str$-
optimized away (dependency)

Type#20 [unused] str$-
val?            %65.14 = PopContext         C     %65.13, %61.5   <str$->
dependent slot

Type#21 [used] env-
val?^ | miss    %67.0 = LdVar              eR    env, e2.3
void                    Assume             D     %67.1, %65.16 (Typecheck@0x560a56f15b20[Type#21])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [used] str$-
val             %67.7 = ChkMissing         e     %65.14
void                    Assume             D     %67.8, %65.16 (Typecheck@0x560a56f15b20[Type#23])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: str$-, expected: str$-, required: val?^ | miss

Type#24 [unused] (nil|env)- (polluted)
val?            %67.11 = Extract2_1D        wed   %67.4, %67.10, elided   <(nil|env)->
other unused reason

Type#25 [unused] cls
optimized away (dependency)

Type#26 [unused] env-
optimized away (dependency)

Type#27 [unused] env-
optimized away (dependency)

Type#28 [unused] lgl$-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [used] vec-
val?            %13.6 = Call               !v    %13.3(%13.4, %13.5) e2.3   <vec->
void                    Assume             D     %13.7, %13.8 (Typecheck@0x560a56f15b20[Type#34])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#35 [used] int$-
(int|real)$-    %15.2 = CallSafeBuiltin    wed   length(%15.1)    <int$->
void                    Assume             D     %15.3, %15.4 (Typecheck@0x560a56f15b20[Type#35])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] vec$-
val?            %42.6 = Call               !v    %42.3(%42.4, %42.5) e2.3   <vec$->
dependent slot

Type#39 [unused] vec$-
val?            %42.7 = StaticCall         !v    as.list[0x560a74a9f990](%42.6) { 0 } e2.3   <vec$->
dependent slot

Type#40 [used] vec$-
val             %44.6 = ChkMissing         e     %42.7
void                    Assume             D     %44.7, %42.9 (Typecheck@0x560a56f15b20[Type#40])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#41 [used] int$-
(int|real)$-    %44.10 = CallSafeBuiltin    wed   length(%44.9)    <int$->
void                    Assume             D     %44.11, %44.12 (Typecheck@0x560a56f15b20[Type#41])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#42 [unused] vec$-
vec-            %46.2 = CallSafeBuiltin    wed   vector("list", %46.1)    <vec$->
dependent slot

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] vec$-
optimized away (dependency)

Type#45 [used] int$-
val?            %48.3 = CallBuiltin        !v    seq_along(%44.9) e2.3   <int$->
void                    Assume             D     %48.4, %48.5 (Typecheck@0x560a56f15b20[Type#45])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#46 [unused] vec$-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] int$-
optimized away (dependency)

Type#49 [unused] str$-
optimized away (dependency)

Type#50 [unused] cls
val?            %52.4 = StaticCall         !v    getGeneric[0x560a746fad10](%52.3) e2.3   <cls>
dependent slot

Type#51 [used] vec$-
val?^ | miss    %54.0 = LdVar              eR    generics !upd, e2.3
void                    Assume             D     %54.1, %52.5 (Typecheck@0x560a56f15b20[Type#51])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#52 [used] int$-
val?^ | miss    %54.5 = LdVar              eR    i, e2.3
void                    Assume             D     %54.6, %52.5 (Typecheck@0x560a56f15b20[Type#52])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] vec$-
optimized away (dependency)

Type#61 [unused] vec$-
optimized away (dependency)

Type#62 [unused] cls
optimized away (dependency)

Type#63 [used] lgl$-
val?            %21.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%21.3, "groupGenericFunction") e2.3   <lgl$->
void                    Assume             D     %21.5, %21.6 (Typecheck@0x560a56f15b20[Type#63])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] str$+
optimized away (dependency)

Type#67 [unused] vec$-
optimized away (dependency)

Type#68 [unused] cls
optimized away (dependency)

Type#69 [unused] vec$-
optimized away (dependency)

Type#70 [unused] cls
optimized away (dependency)

Type#71 [unused] str-
val?            %32.4 = StaticCall         !v    getGroupMembers[0x560a746fb6f0](%32.3) e2.3   <str->
other unused reason

Type#72 [unused] str$-
optimized away (dependency)

Type#73 [unused] cls
optimized away (dependency)

Type#74 [unused] env-
optimized away (dependency)

Type#75 [unused] lgl$-
optimized away (dependency)

Type#76 [unused] str$-
optimized away (dependency)

Type#77 [unused] cls
optimized away (dependency)

Type#78 [unused] env-
optimized away (dependency)

Type#79 [unused] lgl$-
optimized away (dependency)

Type#80 [unused] env-
optimized away (dependency)

Type#81 [unused] env-
optimized away (dependency)

Type#82 [used] env-
val?^ | miss    %29.0 = LdVar              eR    mtable, e2.3
void                    Assume             D     %29.1, %27.6 (Typecheck@0x560a56f15b20[Type#82])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

----------------------
Inlinee: methodsPackageMetaName [0x560a595b46a0]
referenced: 9
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 0
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] vec
val?            %65.5 = Force!<value>      !v    %65.3, e65.4   <vec>
other unused reason

Type#5 [unused] str$-
val?            %65.7 = Force!<value>      !v    %65.6, e65.4   <str$->
dependent slot

Type#6 [unused] str$-
val?            %65.9 = Force!<lazy>       !v    %65.8, e65.4   <str$->
dependent slot

Type#7 [unused] str$-
val?            %65.11 = Force!<lazy>       !v    %65.10, e65.4   <str$->
dependent slot

Type#8 [unused] str$-
val?            %65.12 = CallBuiltin        !v    .Call(%65.5, %65.7, %65.9, %65.11) e65.4   <str$->
dependent slot

----------------------
Inlinee: vector [0x560a55e99e90]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] (int|real)$- (polluted)
optimized away

----------------------
Inlinee: .TableMetaName [0x560a56d30040]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] str$-
val?            %65.13 = PopContext         C     %65.12, %63.5   <str$->
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 7
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %4.7  = Force!<lazy>       !vL   %4.5, e4.6   <val?>
dependent slot

Type#1 [unused] val? (polluted)
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

======================= ClosureVersion: .updateMethodsInTable (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 106
referenced non-empty: 74
read non-empty: 73
used: 13
present non-empty: 19

Used
exact match: 7
widened: 6
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 61
optimized away non-empty: 42
dependent: 55
other reasons unused non-empty: 6

Polluted
polluted: 4
used polluted: 0

----------------------
.updateMethodsInTable [0x560a56c3cd80]
referenced: 83
referenced non-empty: 55
read non-empty: 55
used: 13
present non-empty: 12

Used
exact match: 7
widened: 6
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 42
optimized away non-empty: 30
dependent: 40
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] cls
val?            %2.4  = Force!<lazy>       !v    %1.2, e2.3   <cls>
dependent slot

Type#1 [unused] env-
val?            %2.6  = StaticCall         !v    environment[0x560a7472f880](%2.5) e2.3   <env->
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [used] lgl$-
val?            %4.9  = PopContext         C     %4.8, %4.4   <lgl$->
void                    Assume             D     %4.10, %4.11 (Typecheck@0x560a56f15b20[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] env-
val?            %6.6  = Call               !v    %6.3(%6.4, %6.5) e2.3   <env->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [used] lgl$-
val?^ | miss    %9.0  = LdVar              eR    reset, e2.3
void                    Assume             D     %9.1, %6.9 (Typecheck@0x560a56f15b20[Type#10])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] env-
val?            %59.4 = Force!<lazy>       !v    %59.3, e2.3   <env->
dependent slot

Type#13 [unused] env-
val?            %59.5 = CallBuiltin        !v    as.environment(%59.4) e2.3   <env->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] str$+
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] str$-
optimized away (dependency)

Type#20 [unused] str$-
val?            %65.14 = PopContext         C     %65.13, %61.5   <str$->
dependent slot

Type#21 [used] env-
val?^ | miss    %67.0 = LdVar              eR    env, e2.3
void                    Assume             D     %67.1, %65.16 (Typecheck@0x560a56f15b20[Type#21])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [used] str$-
val             %67.7 = ChkMissing         e     %65.14
void                    Assume             D     %67.8, %65.16 (Typecheck@0x560a56f15b20[Type#23])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: str$-, expected: str$-, required: val?^ | miss

Type#24 [unused] (nil|env)- (polluted)
val?            %67.11 = Extract2_1D        wed   %67.4, %67.10, elided   <(nil|env)->
other unused reason

Type#25 [unused] cls
optimized away (dependency)

Type#26 [unused] env-
optimized away (dependency)

Type#27 [unused] env-
optimized away (dependency)

Type#28 [unused] lgl$-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [used] vec-
val?            %13.6 = Call               !v    %13.3(%13.4, %13.5) e2.3   <vec->
void                    Assume             D     %13.7, %13.8 (Typecheck@0x560a56f15b20[Type#34])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#35 [used] int$-
(int|real)$-    %15.2 = CallSafeBuiltin    wed   length(%15.1)    <int$->
void                    Assume             D     %15.3, %15.4 (Typecheck@0x560a56f15b20[Type#35])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] vec$-
val?            %42.6 = Call               !v    %42.3(%42.4, %42.5) e2.3   <vec$->
dependent slot

Type#39 [unused] vec$-
val?            %42.7 = StaticCall         !v    as.list[0x560a74a9f990](%42.6) { 0 } e2.3   <vec$->
dependent slot

Type#40 [used] vec$-
val             %44.6 = ChkMissing         e     %42.7
void                    Assume             D     %44.7, %42.9 (Typecheck@0x560a56f15b20[Type#40])
narrowed with static type: no
widened: yes
checkFor: val-, static: val, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#41 [used] int$-
(int|real)$-    %44.10 = CallSafeBuiltin    wed   length(%44.9)    <int$->
void                    Assume             D     %44.11, %44.12 (Typecheck@0x560a56f15b20[Type#41])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#42 [unused] vec$-
vec-            %46.2 = CallSafeBuiltin    wed   vector("list", %46.1)    <vec$->
dependent slot

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] vec$-
optimized away (dependency)

Type#45 [used] int$-
val?            %48.3 = CallBuiltin        !v    seq_along(%44.9) e2.3   <int$->
void                    Assume             D     %48.4, %48.5 (Typecheck@0x560a56f15b20[Type#45])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#46 [unused] vec$-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] int$-
optimized away (dependency)

Type#49 [unused] str$-
optimized away (dependency)

Type#50 [unused] cls
val?            %52.4 = StaticCall         !v    getGeneric[0x560a746fad10](%52.3) e2.3   <cls>
dependent slot

Type#51 [used] vec$-
val?^ | miss    %54.0 = LdVar              eR    generics !upd, e2.3
void                    Assume             D     %54.1, %52.5 (Typecheck@0x560a56f15b20[Type#51])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#52 [used] int$-
val?^ | miss    %54.5 = LdVar              eR    i, e2.3
void                    Assume             D     %54.6, %52.5 (Typecheck@0x560a56f15b20[Type#52])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] vec$-
optimized away (dependency)

Type#61 [unused] vec$-
optimized away (dependency)

Type#62 [unused] cls
optimized away (dependency)

Type#63 [used] lgl$-
val?            %21.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%21.3, "groupGenericFunction") e2.3   <lgl$->
void                    Assume             D     %21.5, %21.6 (Typecheck@0x560a56f15b20[Type#63])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] str$+
optimized away (dependency)

Type#67 [unused] vec$-
optimized away (dependency)

Type#68 [unused] cls
optimized away (dependency)

Type#69 [unused] vec$-
optimized away (dependency)

Type#70 [unused] cls
optimized away (dependency)

Type#71 [unused] str-
val?            %32.4 = StaticCall         !v    getGroupMembers[0x560a746fb6f0](%32.3) e2.3   <str->
other unused reason

Type#72 [unused] str$-
optimized away (dependency)

Type#73 [unused] cls
optimized away (dependency)

Type#74 [unused] env-
optimized away (dependency)

Type#75 [unused] lgl$-
optimized away (dependency)

Type#76 [unused] str$-
optimized away (dependency)

Type#77 [unused] cls
optimized away (dependency)

Type#78 [unused] env-
optimized away (dependency)

Type#79 [unused] lgl$-
optimized away (dependency)

Type#80 [unused] env-
optimized away (dependency)

Type#81 [unused] env-
optimized away (dependency)

Type#82 [used] env-
val?^ | miss    %29.0 = LdVar              eR    mtable, e2.3
void                    Assume             D     %29.1, %27.6 (Typecheck@0x560a56f15b20[Type#82])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

----------------------
Inlinee: methodsPackageMetaName [0x560a595b46a0]
referenced: 9
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 0
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] vec
val?            %65.5 = Force!<value>      !v    %65.3, e65.4   <vec>
other unused reason

Type#5 [unused] str$-
val?            %65.7 = Force!<value>      !v    %65.6, e65.4   <str$->
dependent slot

Type#6 [unused] str$-
val?            %65.9 = Force!<lazy>       !v    %65.8, e65.4   <str$->
dependent slot

Type#7 [unused] str$-
val?            %65.11 = Force!<lazy>       !v    %65.10, e65.4   <str$->
dependent slot

Type#8 [unused] str$-
val?            %65.12 = CallBuiltin        !v    .Call(%65.5, %65.7, %65.9, %65.11) e65.4   <str$->
dependent slot

----------------------
Inlinee: vector [0x560a55e99e90]
referenced: 2
referenced non-empty: 2
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] (int|real)$- (polluted)
optimized away

----------------------
Inlinee: .TableMetaName [0x560a56d30040]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away

Type#1 [unused] str$-
optimized away (dependency)

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] str$-
val?            %65.13 = PopContext         C     %65.12, %63.5   <str$->
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 7
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %4.7  = Force!<lazy>       !vL   %4.5, e4.6   <val?>
dependent slot

Type#1 [unused] val? (polluted)
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

======================= ClosureVersion: assign (CorrOrd,!TMany,Argmatch;Eager0,Eager2,NonRefl0,NonRefl2,!Obj0 miss: 2) =======================
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

----------------------
assign [0x560a596bb7f0]
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [unused] str$-
val+            %5.2  = Force<lazy>              %1.3,    <str$->
other unused reason

Type#3 [unused] val? (polluted)
val?            %5.4  = Force!<lazy>       !v    %5.3, e1.6   <val?>
other unused reason

Type#4 [unused] env-
val?            %5.6  = Force!<lazy>       !v    %5.5, e1.6   <env->
dependent slot

Type#5 [unused] lgl$-
val?            %5.8  = Force!<lazy>       !v    %5.7, e1.6   <lgl$->
other unused reason

*********************** Compilation session for: finalDefaultMethod (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: finalDefaultMethod (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 27
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

----------------------
finalDefaultMethod [0x560a55a5e230]
referenced: 27
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %2.4  = Force!<lazy>       !v    %1.0, e2.3   <val?>
dependent slot

Type#2 [used] lgl$-
val?            %2.5  = CallBuiltin        !v    is.function(%2.4) e2.3   <lgl$->
void                    Assume             D     %2.6, %2.7 (Typecheck@0x560a54337ae0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] nil-
val?            %5.1  = Force!<wrapped>    !v    %5.0, e2.3   <nil->
other unused reason

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] val? (polluted)
val?            %8.2  = Force!<wrapped>    !     %8.0, e2.3   <val?>
dependent slot

*********************** Compilation session for: dispatchIsInternal (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) ***********************
======================= ClosureVersion: dispatchIsInternal (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) =======================
referenced: 11
referenced non-empty: 7
read non-empty: 7
used: 1
present non-empty: 2

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 4
dependent: 1
other reasons unused non-empty: 5

Polluted
polluted: 4
used polluted: 0

----------------------
dispatchIsInternal [0x560a54161fa0]
referenced: 8
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 1
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] val? (polluted)
val?            %2.7  = Call               !v    %2.4(%2.5, %2.6) e2.3   <val?>
other unused reason

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] (nil|cls) (polluted)
optimized away

Type#7 [used] lgl$-
val?            %10.4 = Call               !     function(object, class2) <(rir::DispatchTable*|...(%10.3, "internalDispatchMethod") e2.3   <lgl$->
void                    Assume             D     %10.5, %10.6 (Typecheck@0x560a54632920[Type#7])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

----------------------
Inlinee: is.primitive [0x560a54179310]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

Type#1 [unused] str$-
str$-           %2.8  = CallSafeBuiltin    wed   typeof(%2.7)    <str$->
other unused reason

*********************** Compilation session for: .cacheGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0) ***********************
======================= ClosureVersion: .cacheGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0) =======================
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
.cacheGeneric [0x560a54a9d440]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] cls
optimized away (dependency)

Type#2 [unused] env-
optimized away

Type#3 [unused] cls
val?            %2.7  = StaticCall         !     .cacheGenericTable[0x560a75cfaaf0](%2.4, %2.5, %2.6) e2.3   <cls>
dependent slot

======================= ClosureVersion: .cacheGenericTable (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1) =======================
referenced: 64
referenced non-empty: 24
read non-empty: 18
used: 4
present non-empty: 11

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 20
optimized away non-empty: 9
dependent: 20
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

----------------------
.cacheGenericTable [0x560a59442440]
referenced: 56
referenced non-empty: 16
read non-empty: 16
used: 4
present non-empty: 9

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 3
dependent: 12
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
val?            %1.4  = Force!<lazy>       !vrd  %1.1,    <cls>
dependent slot

Type#1 [used] env-
val?            %1.6  = Force!<lazy>       !v    %1.0, e1.3   <env->
void                    Assume             D     %4.0, %2.4 (Typecheck@0x560a594db2c0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] str$-
val?            %2.2  = Force!<lazy>       !v    %2.1, e1.3   <str$->
void                    Assume             D     %2.3, %2.4 (Typecheck@0x560a594db2c0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#4 [unused] cls
val?            %4.5  = Extract2_1D        wed   %4.2, %4.4, elided   <cls>
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$-
val?            %9.3  = Call               !v    %9.0(%9.1, %9.2) e1.3   <str$->
dependent slot

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] cls
val?            %11.4 = Force!<value>      !v    %11.3, e1.3   <cls>
dependent slot

Type#10 [used] lgl$-
val?            %11.5 = CallBuiltin        !v    is.function(%11.4) e1.3   <lgl$->
void                    Assume             D     %11.6, %11.7 (Typecheck@0x560a594db2c0[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] cls
optimized away (dependency)

Type#12 [unused] cls
optimized away (dependency)

Type#13 [used] lgl$-
val?            %15.12 = PopContext         C     %15.11, %15.5   <lgl$->
void                    Assume             D     %15.13, %15.14 (Typecheck@0x560a594db2c0[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#14 [unused] cls
val?            %19.2 = Force!<value>      !     %19.0, e1.3   <cls>
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] cls
optimized away (dependency)

Type#52 [unused] cls
val?            %7.6  = Force!<wrapped>    !v    %7.5, e1.3   <cls>
dependent slot

Type#53 [unused] env-
val?            %7.8  = Force!<wrapped>    !v    %7.7, e1.3   <env->
dependent slot

Type#54 [unused] str$-
val?            %7.10 = Force!<wrapped>    !v    %7.9, e1.3   <str$->
dependent slot

Type#55 [unused] cls
val?            %7.15 = Force!<value>      !     %7.13, e1.3   <cls>
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %15.9 = Force!<lazy>       !vL   %15.7, e15.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %15.10 = Force!<lazy>       !vL   %15.6, e15.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: is.primitive (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: is.primitive (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 0

----------------------
is.primitive [0x560a54179310]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %1.2  = Force!<lazy>       !v    %1.0, e1.1   <val?>
other unused reason

Type#1 [unused] str$-
str$-           %1.3  = CallSafeBuiltin    wed   typeof(%1.2)    <str$->
other unused reason

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

*********************** Compilation session for: logical (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0,SimpleInt0) ***********************
======================= ClosureVersion: logical (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0,SimpleInt0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
logical [0x560a6b6d18c0]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (int|real)$- (polluted)
int$-           %1.1  = Force<value>             %1.0,    <(int|real)$->
other unused reason

*********************** Compilation session for: lastEnv (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: lastEnv (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 13
referenced non-empty: 13
read non-empty: 13
used: 2
present non-empty: 2

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 11
optimized away non-empty: 9
dependent: 10
other reasons unused non-empty: 1

Polluted
polluted: 3
used polluted: 0

----------------------
lastEnv [0x560a683d8f60]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env+ (polluted)
optimized away

Type#1 [used] lgl$-
val?            %4.2  = PopContext         C     %4.1, %2.5   <lgl$->
void                    Assume             D     %4.3, %4.4 (Typecheck@0x560a68661510[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %2.14 = Force!<lazy>       !vr   %2.12,    <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %2.15 = Force!<lazy>       !vL   %2.11, e2.13   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: isBaseNamespace [0x560a5643a450]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %2.17 = PopContext         C     %2.16, %2.10   <lgl$->
void                    Assume             D     %2.18, %2.19 (Typecheck@0x560a565938d0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: getFunction (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2) ***********************
======================= ClosureVersion: parent.env (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
parent.env [0x560a56e176a0]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] env-
val+            %1.1  = Force!<lazy>             %1.0,    <env->
void                    Assume             D     %1.2, %1.3 (Typecheck@0x560a56b6b500[Type#0])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: env-, expected: env-, required: val?^ | miss

======================= ClosureVersion: getFunction (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2) =======================
referenced: 57
referenced non-empty: 45
read non-empty: 45
used: 12
present non-empty: 19

Used
exact match: 11
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 33
optimized away non-empty: 14
dependent: 27
other reasons unused non-empty: 6

Polluted
polluted: 7
used polluted: 1

----------------------
getFunction [0x560a683d8d70]
referenced: 43
referenced non-empty: 31
read non-empty: 31
used: 10
present non-empty: 11

Used
exact match: 9
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 21
optimized away non-empty: 10
dependent: 17
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str$-
val+            %2.3  = Force!<lazy>       !vr   %1.3,    <str$->
dependent slot

Type#4 [used] lgl$-
val?            %2.4  = CallBuiltin        !v    nzchar(%2.3) e1.4   <lgl$->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a683d19e0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] env-
val?            %7.4  = Force!<lazy>       !v    %7.3, e1.4   <env->
dependent slot

Type#8 [unused] env-
val?            %7.5  = CallBuiltin        !v    as.environment(%7.4) e1.4   <env->
dependent slot

Type#9 [unused] env-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %9.8  = PopContext         C     %9.7, %9.4   <lgl$->
void                    Assume             D     %9.9, %9.10 (Typecheck@0x560a683d19e0[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [unused] env-
optimized away (dependency)

Type#13 [unused] (nil|cls) (polluted)
val?            %15.5 = StaticCall         !v    get0[0x560a765c7300](%15.3, %15.4, "function", false) { 0 1n 2n 3n } e1.4   <(nil|cls)>
other unused reason

Type#14 [unused] lgl$-
val?            %75.1 = Force!<lazy>       !v    %75.0, e1.4   <lgl$->
dependent slot

Type#15 [unused] cls
optimized away

Type#16 [used] lgl$-
val?            %78.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%78.3, "genericFunction") e1.4   <lgl$->
void                    Assume             D     %78.5, %78.6 (Typecheck@0x560a683d19e0[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [used] lgl$-
val?^ | miss    %19.0 = LdVar              eR    found, e1.4
void                    Assume             D     %19.1, %17.0 (Typecheck@0x560a683d19e0[Type#17])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#18 [unused] env-
optimized away (dependency)

Type#19 [used] lgl$-
val?            %26.2 = PopContext         C     %26.1, %20.9   <lgl$->
void                    Assume             D     %26.3, %26.4 (Typecheck@0x560a683d19e0[Type#19])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#20 [unused] env-
val?            %32.4 = Force!<value>      !v    %32.3, e1.4   <env->
dependent slot

Type#21 [unused] env+
val?            %32.6 = StaticCall         !v    parent.env[0x560a768651f0](%32.5) e1.4   <env+>
dependent slot

Type#22 [unused] str$-
optimized away (dependency)

Type#23 [unused] env+
optimized away (dependency)

Type#24 [unused] val? (polluted)
val?            %35.5 = StaticCall         !v    get0[0x560a765c7300](%35.3, %35.4, "function", false) { 0 1n 2n 3n } e1.4   <val?>
other unused reason

Type#25 [unused] lgl$-
val?            %65.1 = Force!<value>      !v    %65.0, e1.4   <lgl$->
dependent slot

Type#26 [unused] (cls|spec) (polluted)
optimized away

Type#27 [used] lgl$-
val?            %68.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%68.3, "genericFunction") e1.4   <lgl$->
void                    Assume             D     %68.5, %68.6 (Typecheck@0x560a683d19e0[Type#27])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#28 [used] lgl$-
val?^ | miss    %39.0 = LdVar              eR    found, e1.4
void                    Assume             D     %39.1, %37.0 (Typecheck@0x560a683d19e0[Type#28])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#29 [unused] env+
optimized away (dependency)

Type#30 [used] lgl$-
val?            %46.2 = PopContext         C     %46.1, %40.9   <lgl$->
void                    Assume             D     %46.3, %46.4 (Typecheck@0x560a683d19e0[Type#30])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#31 [unused] env+
optimized away (dependency)

Type#32 [unused] env-
val?            %52.7 = StaticCall         !v    parent.env[0x560a768651f0](%52.6) e1.4   <env->
dependent slot

Type#33 [used] lgl$-
val?^ | miss    %56.0 = LdVar              eR    found, e1.4
void                    Assume             D     %56.1, %54.0 (Typecheck@0x560a683d19e0[Type#33])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#34 [unused] lgl$-
val?            %57.1 = Force!<value>      !v    %57.0, e1.4   <lgl$->
dependent slot

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [used] val?- (polluted)
val?^ | miss    %61.0 = LdVar              eR    f, e1.4
void                    Assume             D     %61.1, %58.1 (Typecheck@0x560a683d19e0[Type#42])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: val?-, expected: val?-, required: val?^ | miss

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 0
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %42.14 = Force!<lazy>       !v    %42.12, e42.13   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %42.16 = Force!<lazy>       !v    %42.15, e42.13   <val?>
dependent slot

Type#2 [unused] lgl$-
val?            %42.18 = Force!<lazy>       !v    %42.17, e42.13   <lgl$->
dependent slot

Type#3 [unused] lgl$-
val?            %42.20 = Force!<lazy>       !v    %42.19, e42.13   <lgl$->
dependent slot

Type#4 [unused] lgl$-
val?            %42.22 = Force!<lazy>       !v    %42.21, e42.13   <lgl$->
dependent slot

Type#5 [unused] lgl$-
val?            %42.24 = Force!<lazy>       !v    %42.23, e42.13   <lgl$->
dependent slot

Type#6 [unused] lgl$-
val?            %42.26 = Force!<lazy>       !v    %42.25, e42.13   <lgl$->
dependent slot

Type#7 [unused] lgl$-
val?            %42.28 = Force!<lazy>       !v    %42.27, e42.13   <lgl$->
dependent slot

----------------------
Inlinee: isBaseNamespace [0x560a5643a450]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %42.30 = PopContext         C     %42.29, %42.10   <lgl$->
void                    Assume             D     %42.31, %42.32 (Typecheck@0x560a565938d0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: lastEnv [0x560a683d8f60]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env+ (polluted)
optimized away

Type#1 [used] lgl$-
val?            %44.2 = PopContext         C     %44.1, %42.5   <lgl$->
void                    Assume             D     %44.3, %44.4 (Typecheck@0x560a68661510[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away

*********************** Compilation session for: FUN (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) ***********************
======================= ClosureVersion: FUN (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) =======================
referenced: 11
referenced non-empty: 9
read non-empty: 9
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 6
dependent: 2
other reasons unused non-empty: 7

Polluted
polluted: 4
used polluted: 0

----------------------
FUN [0x560a562ca070]
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 4
dependent: 2
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] cls-
val?            %1.5  = Call               !v    %1.2(%1.3, %1.4) e1.1   <cls->
other unused reason

Type#3 [unused] str$-
optimized away

Type#4 [unused] env-
optimized away

Type#5 [unused] (nil|spec)- (polluted)
val?            %2.5  = StaticCall         !v    [0x560a769a9c40](%2.1, false, false, %2.2) e1.1   <(nil|spec)->
dependent slot

Type#6 [unused] (nil|spec)- (polluted)
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

----------------------
Inlinee: is.primitive [0x560a54179310]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

Type#1 [unused] str$-
str$-           %4.3  = CallSafeBuiltin    wed   typeof(%2.5)    <str$->
other unused reason

======================= ClosureVersion: parent.env (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
parent.env [0x560a56e176a0]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env+ (polluted)
val+            %1.1  = Force!<lazy>             %1.0,    <env+>
other unused reason

======================= ClosureVersion: parent.env (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

----------------------
parent.env [0x560a56e176a0]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

Type#0 [used] env+ (polluted)
val?            %1.1  = Force!<lazy>             %1.0,    <env+>
void                    Assume             D     %1.2, %1.3 (Typecheck@0x560a56b6b500[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: env+, expected: env+, required: val?^ | miss

======================= ClosureVersion: getFunction (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj1,!Obj2) =======================
referenced: 57
referenced non-empty: 45
read non-empty: 45
used: 13
present non-empty: 18

Used
exact match: 11
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 32
optimized away non-empty: 14
dependent: 26
other reasons unused non-empty: 6

Polluted
polluted: 7
used polluted: 1

----------------------
getFunction [0x560a683d8d70]
referenced: 43
referenced non-empty: 31
read non-empty: 31
used: 11
present non-empty: 10

Used
exact match: 9
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 20
optimized away non-empty: 10
dependent: 16
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] str$-
val?            %2.3  = Force!<lazy>       !v    %1.3, e1.4   <str$->
void                    Assume             D     %2.4, %2.5 (Typecheck@0x560a683d19e0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

Type#4 [used] lgl$-
val?            %4.2  = CallBuiltin        !v    nzchar(%4.1) e1.4   <lgl$->
void                    Assume             D     %4.3, %4.4 (Typecheck@0x560a683d19e0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] env-
val?            %9.4  = Force!<lazy>       !v    %9.3, e1.4   <env->
dependent slot

Type#8 [unused] env-
val?            %9.5  = CallBuiltin        !v    as.environment(%9.4) e1.4   <env->
dependent slot

Type#9 [unused] env-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %11.8 = PopContext         C     %11.7, %11.4   <lgl$->
void                    Assume             D     %11.9, %11.10 (Typecheck@0x560a683d19e0[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [unused] env-
optimized away (dependency)

Type#13 [unused] (nil|cls) (polluted)
val?            %17.5 = StaticCall         !v    get0[0x560a76995b10](%17.3, %17.4, "function", false) { 0 1n 2n 3n } e1.4   <(nil|cls)>
other unused reason

Type#14 [unused] lgl$-
val?            %77.1 = Force!<lazy>       !v    %77.0, e1.4   <lgl$->
dependent slot

Type#15 [unused] cls
optimized away

Type#16 [used] lgl$-
val?            %80.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%80.3, "genericFunction") e1.4   <lgl$->
void                    Assume             D     %80.5, %80.6 (Typecheck@0x560a683d19e0[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [used] lgl$-
val?^ | miss    %21.0 = LdVar              eR    found, e1.4
void                    Assume             D     %21.1, %19.0 (Typecheck@0x560a683d19e0[Type#17])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#18 [unused] env-
optimized away (dependency)

Type#19 [used] lgl$-
val?            %28.2 = PopContext         C     %28.1, %22.9   <lgl$->
void                    Assume             D     %28.3, %28.4 (Typecheck@0x560a683d19e0[Type#19])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#20 [unused] env-
val?            %34.4 = Force!<value>      !v    %34.3, e1.4   <env->
dependent slot

Type#21 [unused] env+
val?            %34.6 = StaticCall         !v    parent.env[0x560a76f04390](%34.5) e1.4   <env+>
dependent slot

Type#22 [unused] str$-
optimized away (dependency)

Type#23 [unused] env+
optimized away (dependency)

Type#24 [unused] val? (polluted)
val?            %37.5 = StaticCall         !v    get0[0x560a76995b10](%37.3, %37.4, "function", false) { 0 1n 2n 3n } e1.4   <val?>
other unused reason

Type#25 [unused] lgl$-
val?            %67.1 = Force!<value>      !v    %67.0, e1.4   <lgl$->
dependent slot

Type#26 [unused] (cls|spec) (polluted)
optimized away

Type#27 [used] lgl$-
val?            %70.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%70.3, "genericFunction") e1.4   <lgl$->
void                    Assume             D     %70.5, %70.6 (Typecheck@0x560a683d19e0[Type#27])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#28 [used] lgl$-
val?^ | miss    %41.0 = LdVar              eR    found, e1.4
void                    Assume             D     %41.1, %39.0 (Typecheck@0x560a683d19e0[Type#28])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#29 [unused] env+
optimized away (dependency)

Type#30 [used] lgl$-
val?            %48.2 = PopContext         C     %48.1, %42.9   <lgl$->
void                    Assume             D     %48.3, %48.4 (Typecheck@0x560a683d19e0[Type#30])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#31 [unused] env+
optimized away (dependency)

Type#32 [unused] env-
val?            %54.7 = StaticCall         !v    parent.env[0x560a76f04390](%54.6) e1.4   <env->
dependent slot

Type#33 [used] lgl$-
val?^ | miss    %58.0 = LdVar              eR    found, e1.4
void                    Assume             D     %58.1, %56.0 (Typecheck@0x560a683d19e0[Type#33])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#34 [unused] lgl$-
val?            %59.1 = Force!<value>      !v    %59.0, e1.4   <lgl$->
dependent slot

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [used] val?- (polluted)
val?^ | miss    %63.0 = LdVar              eR    f, e1.4
void                    Assume             D     %63.1, %60.1 (Typecheck@0x560a683d19e0[Type#42])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: val?-, expected: val?-, required: val?^ | miss

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 0
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %44.14 = Force!<lazy>       !v    %44.12, e44.13   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %44.16 = Force!<lazy>       !v    %44.15, e44.13   <val?>
dependent slot

Type#2 [unused] lgl$-
val?            %44.18 = Force!<lazy>       !v    %44.17, e44.13   <lgl$->
dependent slot

Type#3 [unused] lgl$-
val?            %44.20 = Force!<lazy>       !v    %44.19, e44.13   <lgl$->
dependent slot

Type#4 [unused] lgl$-
val?            %44.22 = Force!<lazy>       !v    %44.21, e44.13   <lgl$->
dependent slot

Type#5 [unused] lgl$-
val?            %44.24 = Force!<lazy>       !v    %44.23, e44.13   <lgl$->
dependent slot

Type#6 [unused] lgl$-
val?            %44.26 = Force!<lazy>       !v    %44.25, e44.13   <lgl$->
dependent slot

Type#7 [unused] lgl$-
val?            %44.28 = Force!<lazy>       !v    %44.27, e44.13   <lgl$->
dependent slot

----------------------
Inlinee: isBaseNamespace [0x560a5643a450]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %44.30 = PopContext         C     %44.29, %44.10   <lgl$->
void                    Assume             D     %44.31, %44.32 (Typecheck@0x560a565938d0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: lastEnv [0x560a683d8f60]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env+ (polluted)
optimized away

Type#1 [used] lgl$-
val?            %46.2 = PopContext         C     %46.1, %44.5   <lgl$->
void                    Assume             D     %46.3, %46.4 (Typecheck@0x560a68661510[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away

*********************** Compilation session for: getFunction (CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj2,!Obj3) ***********************
======================= ClosureVersion: parent.env (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
parent.env [0x560a56e176a0]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env+ (polluted)
val+            %1.1  = Force!<lazy>             %1.0,    <env+>
other unused reason

======================= ClosureVersion: parent.env (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

----------------------
parent.env [0x560a56e176a0]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 1
used polluted: 1

Type#0 [used] env+ (polluted)
val?            %1.1  = Force!<lazy>             %1.0,    <env+>
void                    Assume             D     %1.2, %1.3 (Typecheck@0x560a56b6b500[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: env+, expected: env+, required: val?^ | miss

======================= ClosureVersion: getFunction (CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj2,!Obj3) =======================
referenced: 57
referenced non-empty: 45
read non-empty: 45
used: 12
present non-empty: 19

Used
exact match: 11
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 33
optimized away non-empty: 14
dependent: 27
other reasons unused non-empty: 6

Polluted
polluted: 7
used polluted: 1

----------------------
getFunction [0x560a683d8d70]
referenced: 43
referenced non-empty: 31
read non-empty: 31
used: 10
present non-empty: 11

Used
exact match: 9
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 21
optimized away non-empty: 10
dependent: 17
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] str$-
val+            %7.2  = Force!<lazy>       !vr   %7.1,    <str$->
dependent slot

Type#4 [used] lgl$-
val?            %7.3  = CallBuiltin        !v    nzchar(%7.2) e1.6   <lgl$->
void                    Assume             D     %7.4, %7.5 (Typecheck@0x560a683d19e0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] env-
val?            %12.4 = Force!<lazy>       !v    %12.3, e1.6   <env->
dependent slot

Type#8 [unused] env-
val?            %12.5 = CallBuiltin        !v    as.environment(%12.4) e1.6   <env->
dependent slot

Type#9 [unused] env-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %14.8 = PopContext         C     %14.7, %14.4   <lgl$->
void                    Assume             D     %14.9, %14.10 (Typecheck@0x560a683d19e0[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [unused] env-
optimized away (dependency)

Type#13 [unused] (nil|cls) (polluted)
val?            %20.5 = StaticCall         !v    get0[0x560a76ba7f60](%20.3, %20.4, "function", false) { 0 1n 2n 3n } e1.6   <(nil|cls)>
other unused reason

Type#14 [unused] lgl$-
val?            %74.1 = Force!<lazy>       !v    %74.0, e1.6   <lgl$->
dependent slot

Type#15 [unused] cls
optimized away

Type#16 [used] lgl$-
val?            %77.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%77.3, "genericFunction") e1.6   <lgl$->
void                    Assume             D     %77.5, %77.6 (Typecheck@0x560a683d19e0[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [used] lgl$-
val?^ | miss    %24.0 = LdVar              eR    found, e1.6
void                    Assume             D     %24.1, %22.0 (Typecheck@0x560a683d19e0[Type#17])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#18 [unused] env-
optimized away (dependency)

Type#19 [used] lgl$-
val?            %25.2 = Call               !v    %25.0(%25.1) e1.6   <lgl$->
void                    Assume             D     %25.3, %25.4 (Typecheck@0x560a683d19e0[Type#19])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#20 [unused] env-
val?            %31.4 = Force!<value>      !v    %31.3, e1.6   <env->
dependent slot

Type#21 [unused] env+
val?            %31.6 = StaticCall         !v    parent.env[0x560a76fabaf0](%31.5) e1.6   <env+>
dependent slot

Type#22 [unused] str$-
optimized away (dependency)

Type#23 [unused] env+
optimized away (dependency)

Type#24 [unused] val? (polluted)
val?            %34.5 = StaticCall         !v    get0[0x560a76ba7f60](%34.3, %34.4, "function", false) { 0 1n 2n 3n } e1.6   <val?>
other unused reason

Type#25 [unused] lgl$-
val?            %64.1 = Force!<value>      !v    %64.0, e1.6   <lgl$->
dependent slot

Type#26 [unused] (cls|spec) (polluted)
optimized away

Type#27 [used] lgl$-
val?            %67.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%67.3, "genericFunction") e1.6   <lgl$->
void                    Assume             D     %67.5, %67.6 (Typecheck@0x560a683d19e0[Type#27])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#28 [used] lgl$-
val?^ | miss    %38.0 = LdVar              eR    found, e1.6
void                    Assume             D     %38.1, %36.0 (Typecheck@0x560a683d19e0[Type#28])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#29 [unused] env+
optimized away (dependency)

Type#30 [used] lgl$-
val?            %45.2 = PopContext         C     %45.1, %39.9   <lgl$->
void                    Assume             D     %45.3, %45.4 (Typecheck@0x560a683d19e0[Type#30])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#31 [unused] env+
optimized away (dependency)

Type#32 [unused] env-
val?            %51.7 = StaticCall         !v    parent.env[0x560a76fabaf0](%51.6) e1.6   <env->
dependent slot

Type#33 [used] lgl$-
val?^ | miss    %55.0 = LdVar              eR    found, e1.6
void                    Assume             D     %55.1, %53.0 (Typecheck@0x560a683d19e0[Type#33])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#34 [unused] lgl$-
val?            %56.1 = Force!<value>      !v    %56.0, e1.6   <lgl$->
dependent slot

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [used] val?- (polluted)
val?^ | miss    %60.0 = LdVar              eR    f, e1.6
void                    Assume             D     %60.1, %57.1 (Typecheck@0x560a683d19e0[Type#42])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: val?-, expected: val?-, required: val?^ | miss

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 0
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %41.14 = Force!<lazy>       !v    %41.12, e41.13   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %41.16 = Force!<lazy>       !v    %41.15, e41.13   <val?>
dependent slot

Type#2 [unused] lgl$-
val?            %41.18 = Force!<lazy>       !v    %41.17, e41.13   <lgl$->
dependent slot

Type#3 [unused] lgl$-
val?            %41.20 = Force!<lazy>       !v    %41.19, e41.13   <lgl$->
dependent slot

Type#4 [unused] lgl$-
val?            %41.22 = Force!<lazy>       !v    %41.21, e41.13   <lgl$->
dependent slot

Type#5 [unused] lgl$-
val?            %41.24 = Force!<lazy>       !v    %41.23, e41.13   <lgl$->
dependent slot

Type#6 [unused] lgl$-
val?            %41.26 = Force!<lazy>       !v    %41.25, e41.13   <lgl$->
dependent slot

Type#7 [unused] lgl$-
val?            %41.28 = Force!<lazy>       !v    %41.27, e41.13   <lgl$->
dependent slot

----------------------
Inlinee: isBaseNamespace [0x560a5643a450]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %41.30 = PopContext         C     %41.29, %41.10   <lgl$->
void                    Assume             D     %41.31, %41.32 (Typecheck@0x560a565938d0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: lastEnv [0x560a683d8f60]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env+ (polluted)
optimized away

Type#1 [used] lgl$-
val?            %43.2 = PopContext         C     %43.1, %41.5   <lgl$->
void                    Assume             D     %43.3, %43.4 (Typecheck@0x560a68661510[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away

*********************** Compilation session for: FUN (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj1,!Obj2 miss: 3) ***********************
======================= ClosureVersion: FUN (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj1,!Obj2 miss: 3) =======================
referenced: 18
referenced non-empty: 9
read non-empty: 9
used: 2
present non-empty: 7

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 0
dependent: 7
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
FUN [0x560a6e3c6cc0]
referenced: 18
referenced non-empty: 9
read non-empty: 9
used: 2
present non-empty: 7

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 0
dependent: 7
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] str$-
val?            %1.4  = Force!<lazy>       !v    %1.2, e1.3   <str$->
void                    Assume             D     %1.5, %1.6 (Typecheck@0x560a6e162160[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

Type#2 [unused] lgl$-
lgl$#-          %2.2  = CallSafeBuiltin    wed   is.character(%2.1)    <lgl$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] str$-
val?            %10.1 = Force!<wrapped>    !v    %10.0, e1.3   <str$->
dependent slot

Type#11 [unused] str$-
val?            %10.3 = Force!<lazy>       !v    %10.2, e1.3   <str$->
dependent slot

Type#12 [unused] str$-
val?            %10.5 = Force!<lazy>       !v    %10.4, e1.3   <str$->
dependent slot

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [used] lgl$-
val?            %12.4 = Force!<lazy>       !v    %12.3, e1.3   <lgl$->
void                    Assume             D     %12.5, %12.6 (Typecheck@0x560a6e162160[Type#14])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#15 [unused] str$-
val+            %14.2 = CallSafeBuiltin    wed   as.character(%14.1)    <str$->
dependent slot

Type#16 [unused] lgl$-
val?            %14.4 = Force!<lazy>       !v    %14.3, e1.3   <lgl$->
dependent slot

Type#17 [unused] lgl$-
val?            %14.6 = Force!<lazy>       !v    %14.5, e1.3   <lgl$->
dependent slot

*********************** Compilation session for: .getNamespace (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: .getNamespace (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
.getNamespace [0x560a6e307d30]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] sym-
val?            %1.2  = Force!<lazy>       !v    %1.0, e1.1   <sym->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a6e0cdd70[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: sym-, expected: sym-, required: val?^ | miss

*********************** Compilation session for: is.unit (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: is.unit (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 5
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

----------------------
is.unit [0x560a6b6cb6e0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] real
optimized away

Type#1 [used] lgl$-
val?            %2.10 = PopContext         C     %2.9, %2.5   <lgl$->
void                    Assume             D     %2.11, %2.12 (Typecheck@0x560a6b6cb5f0[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %2.8  = Force!<lazy>       !vL   %2.6, e2.7   <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

*********************** Compilation session for: numnotnull (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) ***********************
======================= ClosureVersion: numnotnull (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) =======================
referenced: 27
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

----------------------
numnotnull [0x560a78982e40]
referenced: 27
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$-
optimized away

Type#5 [unused] vec-
optimized away

Type#6 [unused] nil-
optimized away

Type#7 [used] int$-
val?            %2.7  = StaticCall         !v    match[0x560a78d3efb0](%2.5, %2.6) e2.4   <int$->
void                    Assume             D     %2.8, %2.9 (Typecheck@0x560a78982600[Type#7])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#8 [unused] lgl$-
lgl$-           %4.2  = CallSafeBuiltin    wed   is.na(%4.1)    <lgl$->
other unused reason

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: checkNA (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) ***********************
======================= ClosureVersion: checkNA (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0) =======================
referenced: 44
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

----------------------
checkNA [0x560a78987c20]
referenced: 44
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$-
optimized away

Type#5 [unused] vec-
optimized away

Type#6 [unused] nil-
optimized away

Type#7 [used] int$-
val?            %2.7  = StaticCall         !v    match[0x560a78ff36b0](%2.5, %2.6) e2.4   <int$->
void                    Assume             D     %2.8, %2.9 (Typecheck@0x560a78986590[Type#7])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#8 [unused] lgl$-
lgl$-           %4.2  = CallSafeBuiltin    wed   is.na(%4.1)    <lgl$->
other unused reason

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: unit (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleReal0 miss: 1) ***********************
======================= ClosureVersion: unit (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1,SimpleReal0 miss: 1) =======================
referenced: 52
referenced non-empty: 24
read non-empty: 23
used: 8
present non-empty: 10

Used
exact match: 6
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 16
optimized away non-empty: 6
dependent: 9
other reasons unused non-empty: 7

Polluted
polluted: 1
used polluted: 0

----------------------
unit [0x560a788def60]
referenced: 47
referenced non-empty: 19
read non-empty: 18
used: 7
present non-empty: 9

Used
exact match: 5
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 3
dependent: 9
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] real$-
optimized away (dependency)

Type#1 [used] lgl$-
val?            %6.2  = PopContext         C     %6.1, %2.5   <lgl$->
void                    Assume             D     %6.3, %6.4 (Typecheck@0x560a7894ce00[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [used] real$-
val?^ | miss    %9.3  = LdVar              eR    x, e2.3
void                    Assume             D     %9.4, %6.4 (Typecheck2@0x560a7894ce00[Type#5])
exact match
checkFor: real$-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?+

Type#6 [used] real$-
val+            %9.7  = CallSafeBuiltin    wed   as.double(%9.6)    <real$->
void                    Assume             D     %9.8, %9.9 (Typecheck@0x560a7894ce00[Type#6])
exact match
checkFor: real$-, static: val+, feedback: real$-, expected: real$-, required: val?^ | miss

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] str$-
val?            %13.4 = Force!<value>      !v    %13.3, e2.3   <str$->
void                    Assume             D     %13.5, %13.6 (Typecheck@0x560a7894ce00[Type#8])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#9 [unused] str$-
val+            %15.2 = CallSafeBuiltin    wed   as.character(%15.1)    <str$->
dependent slot

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [used] real$-
val?^ | miss    %17.3 = LdVar              eR    x, e2.3
void                    Assume             D     %17.4, %15.5 (Typecheck2@0x560a7894ce00[Type#11])
exact match
checkFor: real$-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?+

Type#12 [unused] int$-
optimized away (dependency)

Type#13 [unused] lgl$-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [used] str$-
val+            %15.2 = CallSafeBuiltin    wed   as.character(%15.1)    <str$->
void                    Assume             D     %15.4, %15.5 (Typecheck@0x560a7894ce00[Type#15])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: str$-, expected: str$-, required: val?+

Type#16 [used] int$-
(int|real)$-    %17.8 = CallSafeBuiltin    wed   length(%17.7)    <int$->
void                    Assume             D     %17.9, %17.10 (Typecheck@0x560a7894ce00[Type#16])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#17 [unused] lgl$-
lgl$-           %19.2 = Eq                 d     %19.1, 0, elided   <lgl$->
dependent slot

Type#18 [unused] nil-
val?            %20.1 = Force!<lazy>       !v    %20.0, e2.3   <nil->
other unused reason

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] vec$-
val+            %41.3 = CallSafeBuiltin    wed   list(nil)    <vec$->
dependent slot

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] vec
val?            %37.4 = Force!<value>      !v    %37.3, e2.3   <vec>
other unused reason

Type#43 [unused] real$-
val?            %37.6 = Force!<value>      !v    %37.5, e2.3   <real$->
dependent slot

Type#44 [unused] vec$-
val?            %37.8 = Force!<value>      !v    %37.7, e2.3   <vec$->
dependent slot

Type#45 [unused] str$-
val?            %37.10 = Force!<value>      !v    %37.9, e2.3   <str$->
dependent slot

Type#46 [unused] real$
val?            %37.11 = CallBuiltin        !     .Call(%37.4, %37.6, %37.8, %37.10) e2.3   <real$>
other unused reason

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %4.8  = Force!<lazy>       !vr   %4.6,    <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: is.unit [0x560a6b6cb6e0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] real
optimized away

Type#1 [used] lgl$-
val?            %4.10 = PopContext         C     %4.9, %4.5   <lgl$->
void                    Assume             D     %4.11, %4.12 (Typecheck@0x560a6b6cb5f0[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: textGrob (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0 miss: 11) ***********************
======================= ClosureVersion: textGrob (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0 miss: 11) =======================
referenced: 44
referenced non-empty: 33
read non-empty: 33
used: 3
present non-empty: 7

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 30
optimized away non-empty: 23
dependent: 23
other reasons unused non-empty: 7

Polluted
polluted: 1
used polluted: 0

----------------------
textGrob [0x560a78945f10]
referenced: 25
referenced non-empty: 19
read non-empty: 19
used: 2
present non-empty: 1

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 17
optimized away non-empty: 16
dependent: 16
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] real$
optimized away (dependency)

Type#1 [unused] real$
optimized away (dependency)

Type#2 [unused] vec
optimized away (dependency)

Type#3 [unused] real$
optimized away (dependency)

Type#4 [used] lgl$-
val?            %6.2  = PopContext         C     %6.1, %2.4   <lgl$->
void                    Assume             D     %6.3, %6.4 (Typecheck@0x560a78945dc0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] real$
optimized away (dependency)

Type#9 [used] lgl$-
val?            %13.2 = PopContext         C     %13.1, %9.4   <lgl$->
void                    Assume             D     %13.3, %13.4 (Typecheck@0x560a78945dc0[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] str$-
optimized away (dependency)

Type#14 [unused] real$
optimized away (dependency)

Type#15 [unused] real$
optimized away (dependency)

Type#16 [unused] str$-
optimized away (dependency)

Type#17 [unused] nil-
optimized away (dependency)

Type#18 [unused] nil-
optimized away (dependency)

Type#19 [unused] real$-
optimized away

Type#20 [unused] lgl$-
optimized away (dependency)

Type#21 [unused] nil-
optimized away (dependency)

Type#22 [unused] vec
optimized away (dependency)

Type#23 [unused] nil-
optimized away (dependency)

Type#24 [unused] vec
val?            %23.5 = PopContext         C     %23.4, %16.15   <vec>
dependent slot

----------------------
Inlinee: grob [0x560a78950c20]
referenced: 14
referenced non-empty: 9
read non-empty: 9
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 4
dependent: 7
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] nil-
optimized away (dependency)

Type#1 [unused] vec
optimized away (dependency)

Type#2 [unused] nil-
optimized away (dependency)

Type#3 [unused] vec+
val?            %16.24 = NamedCall          !v    %16.20(label=%16.3, x=%16.4, y=%16.5, just=%16.6, hjust=%16.7, vjust=%16.8, rot=%16.9, check.overlap=%16.10, name=%16.21, gp=%16.22, vp=%16.23) e16.19   <vec+>
other unused reason

Type#4 [unused] str$-
val?            %16.28 = Force!<value>      !     %16.26, e16.19   <str$->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] str$-
val?            %19.4 = Force!<value>      !v    %19.3, e16.19   <str$->
dependent slot

Type#7 [unused] lgl$-
lgl$#-          %19.5 = CallSafeBuiltin    vwed  is.character(%19.4)    <lgl$->
other unused reason

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] vec
optimized away (dependency)

Type#13 [unused] vec
val?            %23.4 = StaticCall         !     validGrob[0x560a79571c80](%23.3) { 0 } e16.19   <vec>
dependent slot

----------------------
Inlinee: is.unit [0x560a6b6cb6e0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] real
optimized away

Type#1 [used] lgl$-
val?            %11.10 = PopContext         C     %11.9, %11.5   <lgl$->
void                    Assume             D     %11.11, %11.12 (Typecheck@0x560a6b6cb5f0[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %11.8 = Force!<lazy>       !vL   %11.6, e11.7   <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

======================= ClosureVersion: validGrob (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
validGrob [0x560a78997790]
referenced: 1
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

*********************** Compilation session for: gpar (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) ***********************
======================= ClosureVersion: gpar (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 5
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
gpar [0x560a789574e0]
referenced: 5
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec-
optimized away (dependency)

Type#1 [unused] vec-
val?            %2.5  = Call               !v    function(gpars) <(rir::DispatchTable*)0x560a78|...(%2.4) e2.3   <vec->
dependent slot

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] vec
val?            %2.12 = Force!<value>      !     %2.10, e2.3   <vec>
other unused reason

*********************** Compilation session for: validGP (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: validGP (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 265
referenced non-empty: 58
read non-empty: 58
used: 14
present non-empty: 14

Used
exact match: 14
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 44
optimized away non-empty: 30
dependent: 35
other reasons unused non-empty: 9

Polluted
polluted: 4
used polluted: 1

----------------------
validGP [0x560a78994c90]
referenced: 190
referenced non-empty: 44
read non-empty: 44
used: 11
present non-empty: 11

Used
exact match: 11
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 33
optimized away non-empty: 22
dependent: 33
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec-
optimized away (dependency)

Type#1 [unused] nil-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %62.3 = PopContext         C     %62.2, %60.4   <lgl$->
void                    Assume             D     %62.4, %62.5 (Typecheck@0x560a78981130[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] vec-
optimized away (dependency)

Type#10 [unused] nil-
optimized away (dependency)

Type#11 [used] int$-
val?            %75.7 = StaticCall         !v    match[0x560a79b415d0]("col", %75.6) e1.1   <int$->
void                    Assume             D     %75.8, %75.9 (Typecheck@0x560a78981130[Type#11])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#12 [unused] lgl$-
lgl$-           %77.2 = CallSafeBuiltin    wed   is.na(%77.1)    <lgl$->
dependent slot

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] vec-
optimized away (dependency)

Type#23 [unused] nil-
optimized away (dependency)

Type#24 [used] int$-
val?            %80.7 = StaticCall         !v    match[0x560a79b415d0]("fill", %80.6) e1.1   <int$->
void                    Assume             D     %80.8, %80.9 (Typecheck@0x560a78981130[Type#24])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#25 [unused] lgl$-
lgl$-           %82.2 = CallSafeBuiltin    wed   is.na(%82.1)    <lgl$->
dependent slot

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] vec-
optimized away (dependency)

Type#40 [unused] nil-
optimized away (dependency)

Type#41 [used] int$-
val?            %85.7 = StaticCall         !v    match[0x560a79b415d0]("lty", %85.6) e1.1   <int$->
void                    Assume             D     %85.8, %85.9 (Typecheck@0x560a78981130[Type#41])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#42 [unused] lgl$-
lgl$-           %87.2 = CallSafeBuiltin    wed   is.na(%87.1)    <lgl$->
dependent slot

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] vec-
optimized away (dependency)

Type#53 [unused] nil-
optimized away (dependency)

Type#54 [used] int$-
val?            %90.7 = StaticCall         !v    match[0x560a79b415d0]("lineend", %90.6) e1.1   <int$->
void                    Assume             D     %90.8, %90.9 (Typecheck@0x560a78981130[Type#54])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#55 [unused] lgl$-
lgl$-           %92.2 = CallSafeBuiltin    wed   is.na(%92.1)    <lgl$->
dependent slot

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] vec-
optimized away (dependency)

Type#66 [unused] nil-
optimized away (dependency)

Type#67 [used] int$-
val?            %95.7 = StaticCall         !v    match[0x560a79b415d0]("linejoin", %95.6) e1.1   <int$->
void                    Assume             D     %95.8, %95.9 (Typecheck@0x560a78981130[Type#67])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#68 [unused] lgl$-
lgl$-           %97.2 = CallSafeBuiltin    wed   is.na(%97.1)    <lgl$->
dependent slot

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] vec-
optimized away (dependency)

Type#79 [unused] nil-
optimized away (dependency)

Type#80 [used] int$-
val?            %110.7 = StaticCall         !v    match[0x560a79b415d0]("linemitre", %110.6) e1.1   <int$->
void                    Assume             D     %110.8, %110.9 (Typecheck@0x560a78981130[Type#80])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#81 [unused] lgl$-
lgl$-           %112.2 = CallSafeBuiltin    wed   is.na(%112.1)    <lgl$->
dependent slot

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] $#-
optimized away (dependency)

Type#87 [unused] $#-
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] $#-
optimized away (dependency)

Type#90 [unused] $#-
optimized away (dependency)

Type#91 [unused] $#-
optimized away (dependency)

Type#92 [unused] $#-
optimized away (dependency)

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] vec-
optimized away (dependency)

Type#95 [unused] nil-
optimized away (dependency)

Type#96 [used] int$-
val?            %115.7 = StaticCall         !v    match[0x560a79b415d0]("alpha", %115.6) e1.1   <int$->
void                    Assume             D     %115.8, %115.9 (Typecheck@0x560a78981130[Type#96])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#97 [unused] lgl$-
lgl$-           %117.2 = CallSafeBuiltin    wed   is.na(%117.1)    <lgl$->
dependent slot

Type#98 [unused] $#-
optimized away (dependency)

Type#99 [unused] $#-
optimized away (dependency)

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [unused] $#-
optimized away (dependency)

Type#102 [unused] $#-
optimized away (dependency)

Type#103 [unused] $#-
optimized away (dependency)

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] $#-
optimized away (dependency)

Type#106 [unused] $#-
optimized away (dependency)

Type#107 [unused] $#-
optimized away (dependency)

Type#108 [unused] $#-
optimized away (dependency)

Type#109 [unused] $#-
optimized away (dependency)

Type#110 [unused] $#-
optimized away (dependency)

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] $#-
optimized away (dependency)

Type#113 [unused] $#-
optimized away (dependency)

Type#114 [unused] $#-
optimized away (dependency)

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

Type#117 [unused] $#-
optimized away (dependency)

Type#118 [unused] $#-
optimized away (dependency)

Type#119 [unused] vec-
optimized away (dependency)

Type#120 [unused] nil-
optimized away (dependency)

Type#121 [used] int$-
val?            %120.7 = StaticCall         !v    match[0x560a79b415d0]("font", %120.6) e1.1   <int$->
void                    Assume             D     %120.8, %120.9 (Typecheck@0x560a78981130[Type#121])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#122 [unused] lgl$-
lgl$-           %122.2 = CallSafeBuiltin    wed   is.na(%122.1)    <lgl$->
dependent slot

Type#123 [unused] $#-
optimized away (dependency)

Type#124 [unused] $#-
optimized away (dependency)

Type#125 [unused] $#-
optimized away (dependency)

Type#126 [unused] $#-
optimized away (dependency)

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] $#-
optimized away (dependency)

Type#129 [unused] $#-
optimized away (dependency)

Type#130 [unused] $#-
optimized away (dependency)

Type#131 [unused] $#-
optimized away (dependency)

Type#132 [unused] $#-
optimized away (dependency)

Type#133 [unused] $#-
optimized away (dependency)

Type#134 [unused] $#-
optimized away (dependency)

Type#135 [unused] $#-
optimized away (dependency)

Type#136 [unused] $#-
optimized away (dependency)

Type#137 [unused] $#-
optimized away (dependency)

Type#138 [unused] $#-
optimized away (dependency)

Type#139 [unused] vec-
optimized away (dependency)

Type#140 [unused] nil-
optimized away (dependency)

Type#141 [used] int$-
val?            %125.7 = StaticCall         !v    match[0x560a79b415d0]("fontfamily", %125.6) e1.1   <int$->
void                    Assume             D     %125.8, %125.9 (Typecheck@0x560a78981130[Type#141])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#142 [unused] lgl$-
lgl$-           %127.2 = CallSafeBuiltin    wed   is.na(%127.1)    <lgl$->
dependent slot

Type#143 [unused] $#-
optimized away (dependency)

Type#144 [unused] $#-
optimized away (dependency)

Type#145 [unused] $#-
optimized away (dependency)

Type#146 [unused] $#-
optimized away (dependency)

Type#147 [unused] $#-
optimized away (dependency)

Type#148 [unused] $#-
optimized away (dependency)

Type#149 [unused] $#-
optimized away (dependency)

Type#150 [unused] $#-
optimized away (dependency)

Type#151 [unused] $#-
optimized away (dependency)

Type#152 [unused] $#-
optimized away (dependency)

Type#153 [unused] $#-
optimized away (dependency)

Type#154 [unused] $#-
optimized away (dependency)

Type#155 [unused] $#-
optimized away (dependency)

Type#156 [unused] $#-
optimized away (dependency)

Type#157 [unused] $#-
optimized away (dependency)

Type#158 [unused] $#-
optimized away (dependency)

Type#159 [unused] vec-
optimized away (dependency)

Type#160 [unused] nil-
optimized away (dependency)

Type#161 [used] int$-
val?            %130.7 = StaticCall         !v    match[0x560a79b415d0]("fontface", %130.6) e1.1   <int$->
void                    Assume             D     %130.8, %130.9 (Typecheck@0x560a78981130[Type#161])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#162 [unused] lgl$-
lgl$-           %132.2 = CallSafeBuiltin    wed   is.na(%132.1)    <lgl$->
dependent slot

Type#163 [unused] $#-
optimized away (dependency)

Type#164 [unused] $#-
optimized away (dependency)

Type#165 [unused] $#-
optimized away (dependency)

Type#166 [unused] $#-
optimized away (dependency)

Type#167 [unused] $#-
optimized away (dependency)

Type#168 [unused] $#-
optimized away (dependency)

Type#169 [unused] $#-
optimized away (dependency)

Type#170 [unused] $#-
optimized away (dependency)

Type#171 [unused] $#-
optimized away (dependency)

Type#172 [unused] $#-
optimized away (dependency)

Type#173 [unused] $#-
optimized away (dependency)

Type#174 [unused] $#-
optimized away (dependency)

Type#175 [unused] $#-
optimized away (dependency)

Type#176 [unused] $#-
optimized away (dependency)

Type#177 [unused] $#-
optimized away (dependency)

Type#178 [unused] $#-
optimized away (dependency)

Type#179 [unused] $#-
optimized away (dependency)

Type#180 [unused] $#-
optimized away (dependency)

Type#181 [unused] $#-
optimized away (dependency)

Type#182 [unused] $#-
optimized away (dependency)

Type#183 [unused] $#-
optimized away (dependency)

Type#184 [unused] $#-
optimized away (dependency)

Type#185 [unused] $#-
optimized away (dependency)

Type#186 [unused] $#-
optimized away (dependency)

Type#187 [unused] $#-
optimized away (dependency)

Type#188 [unused] $#-
optimized away (dependency)

Type#189 [unused] vec-
val?            %133.2 = Force!<wrapped>    !     %133.0, e1.1   <vec->
dependent slot

----------------------
Inlinee: checkNA [0x560a78987c20]
referenced: 44
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$-
optimized away

Type#5 [unused] vec-
optimized away

Type#6 [unused] nil-
optimized away

Type#7 [used] int$-
val?            %38.13 = StaticCall         !v    match[0x560a79b415d0](%38.11, %38.12) e38.10   <int$->
void                    Assume             D     %38.14, %38.15 (Typecheck@0x560a78986590[Type#7])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#8 [unused] lgl$-
lgl$-           %40.2 = CallSafeBuiltin    wed   is.na(%40.1)    <lgl$->
other unused reason

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#1 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#2 [used] int- (polluted)
val?            %60.9 = StaticCall         !v    match[0x560a79bf8d40](%60.7, %60.8, 0L) { 0 1 2n } e60.6   <int->
void                    Assume             D     %60.10, %60.11 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %62.2 = Gt                 wed   %62.1, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: numnotnull [0x560a78982e40]
referenced: 27
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$-
optimized away

Type#5 [unused] vec-
optimized away

Type#6 [unused] nil-
optimized away

Type#7 [used] int$-
val?            %104.6 = StaticCall         !v    match[0x560a79b415d0](%104.4, %104.5) e104.0   <int$->
void                    Assume             D     %104.7, %104.8 (Typecheck@0x560a78982600[Type#7])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#8 [unused] lgl$-
lgl$-           %106.2 = CallSafeBuiltin    wed   is.na(%106.1)    <lgl$->
other unused reason

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: modifyList (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1) ***********************
======================= ClosureVersion: modifyList (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1) =======================
referenced: 153
referenced non-empty: 33
read non-empty: 33
used: 17
present non-empty: 6

Used
exact match: 6
widened: 11
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 16
optimized away non-empty: 10
dependent: 15
other reasons unused non-empty: 1

Polluted
polluted: 22
used polluted: 9

----------------------
modifyList [0x560a56d9db00]
referenced: 149
referenced non-empty: 29
read non-empty: 29
used: 16
present non-empty: 5

Used
exact match: 5
widened: 11
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 13
optimized away non-empty: 8
dependent: 13
other reasons unused non-empty: 0

Polluted
polluted: 18
used polluted: 8

Type#0 [unused] vec+ (polluted)
optimized away (dependency)

Type#1 [unused] vec+ (polluted)
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] vec+ (polluted)
val?            %4.4  = Force!<wrapped>    !v    %4.3, e2.3   <vec+>
void                    Assume             D     %4.5, %4.6 (Typecheck@0x560a5a5d2340[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#4 [unused] (nil|str)- (polluted)
val+            %6.2  = CallSafeBuiltin    wed   names(%6.1)    <(nil|str)->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [used] vec+ (polluted)
val?            %8.4  = Force!<wrapped>    !v    %8.3, e2.3   <vec+>
void                    Assume             D     %8.5, %8.6 (Typecheck@0x560a5a5d2340[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#7 [unused] str- (polluted)
val+            %10.2 = CallSafeBuiltin    wed   names(%10.1)    <str->
dependent slot

Type#8 [unused] str- (polluted)
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] str- (polluted)
optimized away (dependency)

Type#13 [used] lgl- (polluted)
val?            %12.3 = CallBuiltin        !v    nzchar(%10.2) e2.3   <lgl->
void                    Assume             D     %12.4, %12.5 (Typecheck@0x560a5a5d2340[Type#13])
exact match
checkFor: lgl-, static: val?, feedback: lgl-, expected: lgl-, required: val?+

Type#14 [unused] str- (polluted)
val?            %14.2 = Extract1_1D        wed   %10.2, %14.1, elided   <str->
dependent slot

Type#15 [unused] lgl$-
val?            %14.5 = Force!<lazy>       !v    %14.4, e2.3   <lgl$->
dependent slot

Type#16 [used] str- (polluted)
val?^ | miss    %17.0 = LdVar              eR    vnames, e2.3
void                    Assume             D     %17.1, %14.7 (Typecheck@0x560a5a5d2340[Type#16])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#17 [unused] str$-
optimized away (dependency)

Type#18 [unused] (nil|str)- (polluted)
optimized away (dependency)

Type#19 [used] lgl$-
val?            %21.3 = PopContext         C     %21.2, %19.5   <lgl$->
void                    Assume             D     %21.4, %21.5 (Typecheck@0x560a5a5d2340[Type#19])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [used] vec+ (polluted)
val?            %32.1 = Force!<wrapped>    !v    %32.0, e2.3   <vec+>
void                    Assume             D     %32.3, %32.4 (Typecheck@0x560a5a5d2340[Type#28])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [used] str$-
val?^ | miss    %34.1 = LdVar              eR    v, e2.3
void                    Assume             D     %34.2, %32.4 (Typecheck@0x560a5a5d2340[Type#30])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#31 [used] val?- (polluted)
val?            %34.8 = Extract2_1D        wed   %34.7, %34.5, elided   <val?->
void                    Assume             D     %34.12, %34.13 (Typecheck@0x560a5a5d2340[Type#31])
exact match
checkFor: val?-, static: val?, feedback: val?-, expected: val?-, required: val?+

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [used] vec+ (polluted)
val?            %34.10 = Force!<wrapped>    !v    %34.9, e2.3   <vec+>
void                    Assume             D     %34.11, %34.13 (Typecheck@0x560a5a5d2340[Type#42])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#43 [used] str$-
val?^ | miss    %36.0 = LdVar              eR    v, e2.3
void                    Assume             D     %36.1, %34.13 (Typecheck@0x560a5a5d2340[Type#43])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#44 [unused] str$-
optimized away (dependency)

Type#45 [unused] (nil|str)- (polluted)
optimized away (dependency)

Type#46 [used] lgl$-
val?            %44.3 = PopContext         C     %44.2, %40.6   <lgl$->
void                    Assume             D     %44.4, %44.5 (Typecheck@0x560a5a5d2340[Type#46])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [used] vec+
val?            %55.1 = Force!<wrapped>    !v    %55.0, e2.3   <vec+>
void                    Assume             D     %55.3, %55.4 (Typecheck@0x560a5a5d2340[Type#55])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [used] str$-
val?^ | miss    %57.1 = LdVar              eR    v, e2.3
void                    Assume             D     %57.2, %55.4 (Typecheck@0x560a5a5d2340[Type#57])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#58 [used] val?+ (polluted)
val?            %57.8 = Extract2_1D        wed   %57.7, %57.5, elided   <val?+>
void                    Assume             D     %57.12, %57.13 (Typecheck@0x560a5a5d2340[Type#58])
exact match
checkFor: val?+, static: val?, feedback: val?+, expected: val?+, required: val?+

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [used] vec+
val?            %57.10 = Force!<value>      !v    %57.9, e2.3   <vec+>
void                    Assume             D     %57.11, %57.13 (Typecheck@0x560a5a5d2340[Type#69])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#70 [used] str$-
val?^ | miss    %59.0 = LdVar              eR    v, e2.3
void                    Assume             D     %59.1, %57.13 (Typecheck@0x560a5a5d2340[Type#70])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] $#-
optimized away (dependency)

Type#87 [unused] $#-
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] $#-
optimized away (dependency)

Type#90 [unused] $#-
optimized away (dependency)

Type#91 [unused] $#-
optimized away (dependency)

Type#92 [unused] $#-
optimized away (dependency)

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] $#-
optimized away (dependency)

Type#99 [unused] $#-
optimized away (dependency)

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [unused] $#-
optimized away (dependency)

Type#102 [unused] $#-
optimized away (dependency)

Type#103 [unused] $#-
optimized away (dependency)

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] $#-
optimized away (dependency)

Type#106 [unused] $#-
optimized away (dependency)

Type#107 [unused] $#-
optimized away (dependency)

Type#108 [unused] $#-
optimized away (dependency)

Type#109 [unused] $#-
optimized away (dependency)

Type#110 [unused] $#-
optimized away (dependency)

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] $#-
optimized away (dependency)

Type#113 [unused] $#-
optimized away (dependency)

Type#114 [unused] $#-
optimized away (dependency)

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

Type#117 [unused] $#-
optimized away (dependency)

Type#118 [unused] $#-
optimized away (dependency)

Type#119 [unused] $#-
optimized away (dependency)

Type#120 [unused] $#-
optimized away (dependency)

Type#121 [unused] $#-
optimized away (dependency)

Type#122 [unused] $#-
optimized away (dependency)

Type#123 [unused] $#-
optimized away (dependency)

Type#124 [unused] $#-
optimized away (dependency)

Type#125 [unused] $#-
optimized away (dependency)

Type#126 [unused] $#-
optimized away (dependency)

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] $#-
optimized away (dependency)

Type#129 [unused] $#-
optimized away (dependency)

Type#130 [unused] $#-
optimized away (dependency)

Type#131 [unused] $#-
optimized away (dependency)

Type#132 [unused] $#-
optimized away (dependency)

Type#133 [unused] $#-
optimized away (dependency)

Type#134 [unused] $#-
optimized away (dependency)

Type#135 [unused] $#-
optimized away (dependency)

Type#136 [unused] $#-
optimized away (dependency)

Type#137 [unused] $#-
optimized away (dependency)

Type#138 [unused] $#-
optimized away (dependency)

Type#139 [unused] $#-
optimized away (dependency)

Type#140 [unused] $#-
optimized away (dependency)

Type#141 [unused] $#-
optimized away (dependency)

Type#142 [unused] $#-
optimized away (dependency)

Type#143 [unused] $#-
optimized away (dependency)

Type#144 [unused] $#-
optimized away (dependency)

Type#145 [unused] $#-
optimized away (dependency)

Type#146 [unused] $#-
optimized away (dependency)

Type#147 [unused] $#-
optimized away (dependency)

Type#148 [unused] vec+ (polluted)
val?            %66.2 = Force!<value>      !     %66.0, e2.3   <vec+>
dependent slot

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#1 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#2 [used] int- (polluted)
val?            %42.6 = StaticCall         !v    match[0x560a7a2e5f20](%42.4, %42.5, 0L) { 0 1 2n } e42.0   <int->
void                    Assume             D     %42.7, %42.8 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %44.2 = Gt                 wed   %44.1, 0L, elided   <lgl->
other unused reason

*********************** Compilation session for: registerS3method (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl3,!Obj3) ***********************
======================= ClosureVersion: exists (CorrOrd,!TMany,Argmatch;Eager1,NonRefl1 miss: 3) =======================
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

----------------------
exists [0x560a572da620]
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] (int|env)- (polluted)
optimized away

Type#3 [unused] env+ (polluted)
optimized away (dependency)

Type#4 [used] str$+ (polluted)
val?            %5.3  = Force!<lazy>       !v    %5.2, e1.5   <str$+>
void                    Assume             D     %5.4, %5.5 (Typecheck@0x560a574dece0[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#5 [unused] env+ (polluted)
val?            %7.3  = Force!<lazy>       !v    %7.2, e1.5   <env+>
dependent slot

Type#6 [unused] str$-
val?            %7.5  = Force!<lazy>       !v    %7.4, e1.5   <str$->
other unused reason

Type#7 [unused] lgl$-
val?            %7.7  = Force!<lazy>       !v    %7.6, e1.5   <lgl$->
other unused reason

======================= ClosureVersion: registerS3method (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl3,!Obj3) =======================
referenced: 116
referenced non-empty: 72
read non-empty: 72
used: 10
present non-empty: 24

Used
exact match: 8
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 62
optimized away non-empty: 38
dependent: 54
other reasons unused non-empty: 8

Polluted
polluted: 20
used polluted: 1

----------------------
registerS3method [0x560a5aa747f0]
referenced: 67
referenced non-empty: 49
read non-empty: 49
used: 8
present non-empty: 14

Used
exact match: 6
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 41
optimized away non-empty: 27
dependent: 40
other reasons unused non-empty: 1

Polluted
polluted: 11
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str-
str-            %1.8  = CallSafeBuiltin    wed   c("Math", "Ops", "Summary", "Complex")    <str->
dependent slot

Type#2 [unused] str$+ (polluted)
optimized away (dependency)

Type#3 [unused] str-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %2.3  = PopContext         C     %2.2, %1.12   <lgl$->
void                    Assume             D     %2.4, %2.5 (Typecheck@0x560a5aa753a0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] str$+ (polluted)
optimized away (dependency)

Type#6 [unused] env-
optimized away (dependency)

Type#7 [unused] cls (polluted)
val?            %5.5  = StaticCall         !v    get[0x560a7a3bf990](%5.3, missingArg, %5.4) { 0 2n } e1.4   <cls>
dependent slot

Type#8 [used] lgl$-
val?            %7.3  = CallBuiltin        !v    .isMethodsDispatchOn() e1.4   <lgl$->
void                    Assume             D     %7.4, %7.5 (Typecheck@0x560a5aa753a0[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] cls-
val?            %10.3 = Call               !v    %10.0(%10.1, %10.2) e1.4   <cls->
dependent slot

Type#12 [unused] cls (polluted)
optimized away (dependency)

Type#13 [used] lgl$-
val?            %10.6 = Call               !v    %10.4(%10.5, "genericFunction") e1.4   <lgl$->
void                    Assume             D     %10.7, %10.8 (Typecheck@0x560a5aa753a0[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] cls-
val?            %63.3 = Call               !v    %63.0(%63.1, %63.2) e1.4   <cls->
dependent slot

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] cls
optimized away (dependency)

Type#20 [unused] cls
val?            %73.2 = PopContext         C     %73.1, %65.5   <cls>
dependent slot

Type#21 [unused] cls (polluted)
val?            %17.4 = Force!<value>      !v    %17.3, e1.4   <cls>
dependent slot

Type#22 [unused] str$-
str$-           %17.5 = CallSafeBuiltin    wed   typeof(%17.4)    <str$->
dependent slot

Type#23 [unused] lgl$-
lgl$-           %19.0 = Eq                 d     %17.5, "closure", elided   <lgl$->
dependent slot

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] cls (polluted)
optimized away (dependency)

Type#26 [unused] env-
val?            %62.7 = StaticCall         !v    environment[0x560a78713a30](%62.6) e1.4   <env->
dependent slot

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [used] env-
val?            %22.0 = Phi                      %21.0:BB21, %76.1:BB76   <env->
void                    Assume             D     %22.3, %22.4 (Typecheck@0x560a5aa753a0[Type#28])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#29 [unused] env-
val?            %24.4 = Extract2_1D        wed   %24.3, ".__S3MethodsTable__.", elided   <env->
dependent slot

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] (str|cls)+ (polluted)
val?            %27.4 = Force!<lazy>       !v    %27.3, e1.4   <(str|cls)+>
dependent slot

Type#36 [unused] lgl$-
lgl$#-          %27.5 = CallSafeBuiltin    wed   is.character(%27.4)    <lgl$->
dependent slot

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [used] cls-
val?            %30.4 = Force!<wrapped>    !v    %30.3, e1.4   <cls->
void                    Assume             D     %30.5, %30.6 (Typecheck@0x560a5aa753a0[Type#38])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: cls-, expected: cls-, required: val?+

Type#39 [unused] lgl$-
lgl$#-          %32.2 = CallSafeBuiltin    wed   is.function(%32.1)    <lgl$->
dependent slot

Type#40 [unused] str$+ (polluted)
optimized away (dependency)

Type#41 [unused] str$+ (polluted)
optimized away (dependency)

Type#42 [unused] str$-
optimized away (dependency)

Type#43 [unused] cls-
optimized away (dependency)

Type#44 [unused] env-
optimized away (dependency)

Type#45 [unused] str$+
optimized away (dependency)

Type#46 [unused] env-
optimized away (dependency)

Type#47 [used] lgl$-
val?            %54.5 = StaticCall         !v    exists[0x560a78919de0](%54.3, missingArg, %54.4) { 0 2n } e1.4   <lgl$->
void                    Assume             D     %54.6, %54.7 (Typecheck@0x560a5aa753a0[Type#47])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#48 [unused] str$+
optimized away (dependency)

Type#49 [unused] str$+
optimized away (dependency)

Type#50 [unused] str$-
optimized away (dependency)

Type#51 [unused] str$+
optimized away (dependency)

Type#52 [unused] env-
optimized away (dependency)

Type#53 [unused] env-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] env-
optimized away (dependency)

Type#58 [used] lgl$-
val?            %39.9 = PopContext         C     %39.8, %39.4   <lgl$->
void                    Assume             D     %39.10, %39.11 (Typecheck@0x560a5aa753a0[Type#58])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#59 [unused] env-
optimized away (dependency)

Type#60 [unused] env-
optimized away (dependency)

Type#61 [used] lgl$-
val?            %42.12 = PopContext         C     %42.11, %42.5   <lgl$->
void                    Assume             D     %42.13, %42.14 (Typecheck@0x560a5aa753a0[Type#61])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#62 [unused] env-
optimized away (dependency)

Type#63 [unused] str$+
optimized away (dependency)

Type#64 [unused] str$+
optimized away (dependency)

Type#65 [unused] (str|cls)+ (polluted)
optimized away (dependency)

Type#66 [unused] (str|vec)+ (polluted)
val?            %50.7 = StaticCall         !     addNamespaceS3method[0x560a76e507b0](%50.3, %50.4, %50.5, %50.6) from %1.5 e1.4   <(str|vec)+>
other unused reason

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %42.9 = Force!<lazy>       !vL   %42.7, e42.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %42.10 = Force!<lazy>       !vL   %42.6, e42.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val?            %39.7 = Force!<lazy>       !vL   %39.5, e39.6   <env->
other unused reason

----------------------
Inlinee: finalDefaultMethod [0x560a55a5e230]
referenced: 27
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %67.2 = Force!<lazy>       !vL   %65.3, e67.1   <val?>
dependent slot

Type#2 [used] lgl$-
val?            %67.3 = CallBuiltin        !v    is.function(%67.2) e67.1   <lgl$->
void                    Assume             D     %67.4, %67.5 (Typecheck@0x560a54337ae0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] nil-
val?            %70.1 = Force!<wrapped>    !v    %70.0, e67.1   <nil->
other unused reason

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] val? (polluted)
val?            %73.1 = Force!<wrapped>    !v    %73.0, e67.1   <val?>
dependent slot

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#1 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#2 [used] int- (polluted)
val?            %1.18 = StaticCall         !v    match[0x560a79e459d0](%1.16, %1.17, 0L) { 0 1 2n } e1.15   <int->
void                    Assume             D     %1.19, %1.20 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %2.2  = Gt                 wed   %2.1, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: assignWrapped [0x560a5aa75cd0]
referenced: 8
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
val?            %57.13 = Force!<lazy>       !vL   %57.10, e57.12   <str$+>
other unused reason

Type#1 [unused] env-
val?            %57.15 = Force!<lazy>       !vL   %57.9, e57.12   <env->
dependent slot

Type#2 [unused] str$-
optimized away

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] env-
optimized away (dependency)

Type#7 [unused] nil-
val?            %59.6 = StaticCall         !v    delayedAssign[0x560a789c27c0](%59.3, %59.4, missingArg, %59.5) { 0 1 3n } e57.12   <nil->
other unused reason

*********************** Compilation session for: FUN (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) ***********************
======================= ClosureVersion: FUN (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 3
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
FUN [0x560a6e1c6c60]
referenced: 3
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] real$-
val?            %1.5  = Call               !     %1.2(%1.3, %1.4) e1.1   <real$->
void                    Assume             D     %1.6, %1.7 (Typecheck@0x560a6ead2bf0[Type#2])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?^ | miss

*********************** Compilation session for: FUN (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) ***********************
======================= ClosureVersion: FUN (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 3
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
FUN [0x560a6d10d480]
referenced: 3
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] real$-
val?            %1.5  = Call               !     %1.2(%1.3, %1.4) e1.1   <real$->
void                    Assume             D     %1.6, %1.7 (Typecheck@0x560a6e9dddf0[Type#2])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?^ | miss

*********************** Compilation session for: .cacheClass (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj2,!Obj3) ***********************
======================= ClosureVersion: .cacheClass (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj2,!Obj3) =======================
referenced: 74
referenced non-empty: 44
read non-empty: 38
used: 10
present non-empty: 17

Used
exact match: 8
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 34
optimized away non-empty: 17
dependent: 28
other reasons unused non-empty: 6

Polluted
polluted: 5
used polluted: 0

----------------------
.cacheClass [0x560a5a69c000]
referenced: 53
referenced non-empty: 26
read non-empty: 26
used: 6
present non-empty: 11

Used
exact match: 4
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 20
optimized away non-empty: 9
dependent: 17
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] lgl$-
optimized away (dependency)

Type#1 [used] lgl$-
val?            %16.1 = PopContext         C     %16.0, %2.5   <lgl$->
void                    Assume             D     %16.2, %16.3 (Typecheck@0x560a557ccf40[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$+
optimized away

Type#5 [unused] other$
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [used] env-
val?            %20.1 = Force!<wrapped>    !v    %20.0, e2.3   <env->
void                    Assume             D     %24.0, %22.4 (Typecheck@0x560a557ccf40[Type#7])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [used] str$-
val?            %22.2 = Force!<lazy>       !v    %22.1, e2.3   <str$->
void                    Assume             D     %22.3, %22.4 (Typecheck@0x560a557ccf40[Type#9])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#10 [unused] (nil|other) (polluted)
val?            %24.5 = Extract2_1D        wed   %24.2, %24.4, elided   <(nil|other)>
other unused reason

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] str$-
val?            %28.3 = Call               !v    %28.0(%28.1, %28.2) e2.3   <str$->
dependent slot

Type#14 [unused] other$
optimized away (dependency)

Type#15 [used] lgl$-
val?            %30.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%30.3, "classRepresentation") e2.3   <lgl$->
void                    Assume             D     %30.5, %30.6 (Typecheck@0x560a557ccf40[Type#15])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#16 [unused] other$
optimized away (dependency)

Type#17 [unused] other$
optimized away (dependency)

Type#18 [used] lgl$-
val?            %38.12 = PopContext         C     %38.11, %38.5   <lgl$->
void                    Assume             D     %38.13, %38.14 (Typecheck@0x560a557ccf40[Type#18])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] str$-
val?            %41.3 = Call               !v    %41.0(%41.1, %41.2) e2.3   <str$->
dependent slot

Type#22 [unused] str$-
optimized away (dependency)

Type#23 [unused] str$-
optimized away (dependency)

Type#24 [used] lgl$-
val?            %43.11 = PopContext         C     %43.10, %43.5   <lgl$->
void                    Assume             D     %43.12, %43.13 (Typecheck@0x560a557ccf40[Type#24])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] str$-
val?            %47.4 = Force!<wrapped>    !v    %47.3, e2.3   <str$->
dependent slot

Type#32 [unused] other$
optimized away (dependency)

Type#33 [unused] str-
val?            %49.10 = PopContext         C     %49.9, %49.4   <str->
other unused reason

Type#34 [unused] other$
val?            %49.13 = Force!<wrapped>    !v    %49.12, e2.3   <other$>
dependent slot

Type#35 [unused] env-
val?            %49.15 = Force!<wrapped>    !v    %49.14, e2.3   <env->
dependent slot

Type#36 [unused] str$-
val?            %49.17 = Force!<wrapped>    !v    %49.16, e2.3   <str$->
dependent slot

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
val?            %33.1 = Force!             !v    %33.0, e2.3   <>
dependent slot

Type#43 [unused] $#-
val?            %33.3 = Force!             !v    %33.2, e2.3   <>
dependent slot

Type#44 [unused] $#-
val?            %33.5 = Force!             !v    %33.4, e2.3   <>
dependent slot

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
val?            %33.6 = Subassign2_1D      !v    %33.1, %33.3, %33.5, e2.3   <>
dependent slot

Type#48 [unused] $#-
val?            %35.0 = CallBuiltin        !v    length(%33.6) e2.3   <>
dependent slot

Type#49 [unused] $#-
val?            %35.1 = Gt                 !v    %35.0, 1L, e2.3   <>
dependent slot

Type#50 [unused] other$
val?            %26.1 = Force!<lazy>       !v    %26.0, e2.3   <other$>
dependent slot

Type#51 [unused] env-
val?            %26.3 = Force!<wrapped>    !v    %26.2, e2.3   <env->
dependent slot

Type#52 [unused] str$-
val?            %26.5 = Force!<wrapped>    !v    %26.4, e2.3   <str$->
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %38.9 = Force!<lazy>       !vL   %38.7, e38.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %43.9 = Force!<lazy>       !vL   %43.6, e43.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: .extendsForS3 [0x560a6c353b80]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (str|other)$ (polluted)
optimized away

Type#1 [unused] str-
val?            %49.9 = NamedCall          !v    %49.7(%49.8, maybe=false) e49.6   <str->
other unused reason

----------------------
Inlinee: isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 8
used: 4
present non-empty: 3

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %2.8  = Force!<lazy>       !vr   %2.6,    <val?>
other unused reason

Type#2 [used] lgl$-
val+            %2.9  = CallSafeBuiltin    wed   is.logical(%2.8)    <lgl$->
void                    Assume             D     %2.10, %2.11 (Typecheck@0x560a54e55690[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [used] int$-
val?            %5.0  = CallBuiltin        !vL   length(%2.8) e2.7   <int$->
void                    Assume             D     %5.1, %5.2 (Typecheck@0x560a54e55690[Type#5])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] lgl$-
lgl$-           %7.4  = Eq                 d     %7.1, 1L, elided   <lgl$->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %2.8  = Force!<lazy>       !vr   %2.6,    <val?>
void                    Assume             D     %11.2, %8.3 (Typecheck@0x560a54e55690[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %11.5 = CallSafeBuiltin    wed   is.na(%11.4)    <lgl$->
dependent slot

Type#10 [used] lgl$-
val?            %2.8  = Force!<lazy>       !vr   %2.6,    <val?>
void                    Assume             D     %15.2, %12.3 (Typecheck@0x560a54e55690[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

======================= ClosureVersion: .cacheClass (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl2,!Obj2) =======================
referenced: 74
referenced non-empty: 44
read non-empty: 38
used: 10
present non-empty: 17

Used
exact match: 8
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 34
optimized away non-empty: 17
dependent: 28
other reasons unused non-empty: 6

Polluted
polluted: 5
used polluted: 0

----------------------
.cacheClass [0x560a5a69c000]
referenced: 53
referenced non-empty: 26
read non-empty: 26
used: 6
present non-empty: 11

Used
exact match: 4
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 20
optimized away non-empty: 9
dependent: 17
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] lgl$-
optimized away (dependency)

Type#1 [used] lgl$-
val?            %16.1 = PopContext         C     %16.0, %2.5   <lgl$->
void                    Assume             D     %16.2, %16.3 (Typecheck@0x560a557ccf40[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$+
optimized away

Type#5 [unused] other$
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [used] env-
val?            %20.1 = Force!<wrapped>    !v    %20.0, e2.3   <env->
void                    Assume             D     %24.0, %22.4 (Typecheck@0x560a557ccf40[Type#7])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [used] str$-
val?            %22.2 = Force!<lazy>       !v    %22.1, e2.3   <str$->
void                    Assume             D     %22.3, %22.4 (Typecheck@0x560a557ccf40[Type#9])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#10 [unused] (nil|other) (polluted)
val?            %24.5 = Extract2_1D        wed   %24.2, %24.4, elided   <(nil|other)>
other unused reason

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] str$-
val?            %28.3 = Call               !v    %28.0(%28.1, %28.2) e2.3   <str$->
dependent slot

Type#14 [unused] other$
optimized away (dependency)

Type#15 [used] lgl$-
val?            %30.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%30.3, "classRepresentation") e2.3   <lgl$->
void                    Assume             D     %30.5, %30.6 (Typecheck@0x560a557ccf40[Type#15])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#16 [unused] other$
optimized away (dependency)

Type#17 [unused] other$
optimized away (dependency)

Type#18 [used] lgl$-
val?            %40.12 = PopContext         C     %40.11, %40.5   <lgl$->
void                    Assume             D     %40.13, %40.14 (Typecheck@0x560a557ccf40[Type#18])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] str$-
val?            %43.3 = Call               !v    %43.0(%43.1, %43.2) e2.3   <str$->
dependent slot

Type#22 [unused] str$-
optimized away (dependency)

Type#23 [unused] str$-
optimized away (dependency)

Type#24 [used] lgl$-
val?            %45.11 = PopContext         C     %45.10, %45.5   <lgl$->
void                    Assume             D     %45.12, %45.13 (Typecheck@0x560a557ccf40[Type#24])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] str$-
val?            %49.4 = Force!<wrapped>    !v    %49.3, e2.3   <str$->
dependent slot

Type#32 [unused] other$
optimized away (dependency)

Type#33 [unused] str-
val?            %51.10 = PopContext         C     %51.9, %51.4   <str->
other unused reason

Type#34 [unused] other$
val?            %51.13 = Force!<wrapped>    !v    %51.12, e2.3   <other$>
dependent slot

Type#35 [unused] env-
val?            %51.15 = Force!<wrapped>    !v    %51.14, e2.3   <env->
dependent slot

Type#36 [unused] str$-
val?            %51.17 = Force!<wrapped>    !v    %51.16, e2.3   <str$->
dependent slot

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] other$
val?            %26.1 = Force!<lazy>       !v    %26.0, e2.3   <other$>
dependent slot

Type#51 [unused] env-
val?            %26.3 = Force!<wrapped>    !v    %26.2, e2.3   <env->
dependent slot

Type#52 [unused] str$-
val?            %26.5 = Force!<wrapped>    !v    %26.4, e2.3   <str$->
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %40.9 = Force!<lazy>       !vL   %40.7, e40.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %45.9 = Force!<lazy>       !vL   %45.6, e45.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: .extendsForS3 [0x560a6c353b80]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (str|other)$ (polluted)
optimized away

Type#1 [unused] str-
val?            %51.9 = NamedCall          !v    %51.7(%51.8, maybe=false) e51.6   <str->
other unused reason

----------------------
Inlinee: isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 8
used: 4
present non-empty: 3

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %2.8  = Force!<lazy>       !vr   %2.6,    <val?>
other unused reason

Type#2 [used] lgl$-
val+            %2.9  = CallSafeBuiltin    wed   is.logical(%2.8)    <lgl$->
void                    Assume             D     %2.10, %2.11 (Typecheck@0x560a54e55690[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [used] int$-
val?            %5.0  = CallBuiltin        !vL   length(%2.8) e2.7   <int$->
void                    Assume             D     %5.1, %5.2 (Typecheck@0x560a54e55690[Type#5])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] lgl$-
lgl$-           %7.4  = Eq                 d     %7.1, 1L, elided   <lgl$->
dependent slot

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %2.8  = Force!<lazy>       !vr   %2.6,    <val?>
void                    Assume             D     %11.2, %8.3 (Typecheck@0x560a54e55690[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %11.5 = CallSafeBuiltin    wed   is.na(%11.4)    <lgl$->
dependent slot

Type#10 [used] lgl$-
val?            %2.8  = Force!<lazy>       !vr   %2.6,    <val?>
void                    Assume             D     %15.2, %12.3 (Typecheck@0x560a54e55690[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

======================= ClosureVersion: get0 (CorrOrd,!TMany,Argmatch;Eager2,NonRefl2 miss: 1) =======================
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

----------------------
get0 [0x560a56361ae0]
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

Type#0 [unused] $#-
optimized away

Type#1 [used] str$+ (polluted)
val?            %7.2  = Force!<lazy>       !v    %7.1, e1.6   <str$+>
void                    Assume             D     %7.3, %7.4 (Typecheck@0x560a563ebd40[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#2 [unused] env+ (polluted)
val?            %9.3  = Force!<lazy>       !v    %9.2, e1.6   <env+>
other unused reason

Type#3 [unused] str$-
val?            %9.5  = Force!<lazy>       !v    %9.4, e1.6   <str$->
other unused reason

Type#4 [unused] lgl$-
val?            %9.7  = Force!<lazy>       !v    %9.6, e1.6   <lgl$->
other unused reason

Type#5 [unused] (nil|vec)+ (polluted)
val?            %9.9  = Force!<lazy>       !v    %9.8, e1.6   <(nil|vec)+>
other unused reason

======================= ClosureVersion: getClassDef (CorrOrd,!TMany,Argmatch;Eager1,NonRefl1 miss: 1) =======================
referenced: 60
referenced non-empty: 38
read non-empty: 38
used: 1
present non-empty: 21

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 37
optimized away non-empty: 16
dependent: 30
other reasons unused non-empty: 7

Polluted
polluted: 5
used polluted: 0

----------------------
getClassDef [0x560a569916a0]
referenced: 42
referenced non-empty: 27
read non-empty: 27
used: 1
present non-empty: 11

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 15
dependent: 24
other reasons unused non-empty: 2

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] str$+ (polluted)
optimized away

Type#6 [unused] (nil|other) (polluted)
val?            %9.9  = PopContext         C     %9.8, %7.4   <(nil|other)>
dependent slot

Type#7 [unused] (nil|other) (polluted)
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] (nil|other) (polluted)
val             %13.0 = ChkMissing         e     %11.0   <(nil|other)>
dependent slot

Type#13 [unused] str$-
optimized away (dependency)

Type#14 [unused] int$-
optimized away

Type#15 [unused] lgl$-
optimized away (dependency)

Type#16 [unused] str$-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] str$-
val?            %20.14 = PopContext         C     %20.13, %16.4   <str$->
dependent slot

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] env-
val?            %22.4 = Force!<lazy>       !v    %22.3, e1.5   <env->
dependent slot

Type#22 [unused] lgl$-
lgl$#-          %22.5 = CallSafeBuiltin    wed   is.character(%22.4)    <lgl$->
dependent slot

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] str$-
optimized away (dependency)

Type#25 [unused] lgl$-
optimized away (dependency)

Type#26 [used] lgl$-
val?            %26.4 = StaticCall         !v    isTRUE[0x560a7a7c08a0](%26.3) e1.5   <lgl$->
void                    Assume             D     %26.5, %26.6 (Typecheck@0x560a56991590[Type#26])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#27 [unused] str$-
optimized away (dependency)

Type#28 [unused] env-
val?            %40.4 = StaticCall         !v    .requirePackage[0x560a7a7dc590](%40.3) e1.5   <env->
dependent slot

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] env-
val?            %32.4 = Force!<value>      !v    %32.3, e1.5   <env->
dependent slot

Type#31 [unused] lgl$-
lgl$#-          %32.5 = CallSafeBuiltin    wed   is.environment(%32.4)    <lgl$->
dependent slot

Type#32 [unused] str$-
optimized away (dependency)

Type#33 [unused] env-
optimized away (dependency)

Type#34 [unused] lgl$-
optimized away (dependency)

Type#35 [unused] other$
val?            %39.6 = StaticCall         !v    get0[0x560a7a7d0ae0](%39.3, %39.4, missingArg, %39.5) { 0 1 3n } e1.5   <other$>
dependent slot

Type#36 [unused] other$
val?            %36.1 = Force!<value>      !v    %36.0, e1.5   <other$>
dependent slot

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] other$
val?            %15.2 = Force!<value>      !     %15.0, e1.5   <other$>
dependent slot

----------------------
Inlinee: methodsPackageMetaName [0x560a595b46a0]
referenced: 9
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 0
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] vec
val?            %20.5 = Force!<value>      !v    %20.3, e20.4   <vec>
other unused reason

Type#5 [unused] str$-
val?            %20.7 = Force!<value>      !v    %20.6, e20.4   <str$->
dependent slot

Type#6 [unused] str$-
val?            %20.9 = Force!<lazy>       !v    %20.8, e20.4   <str$->
dependent slot

Type#7 [unused] str$-
val?            %20.11 = Force!<lazy>       !v    %20.10, e20.4   <str$->
dependent slot

Type#8 [unused] str$-
val?            %20.12 = CallBuiltin        !v    .Call(%20.5, %20.7, %20.9, %20.11) e20.4   <str$->
dependent slot

----------------------
Inlinee: classMetaName [0x560a59d31030]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] str$-
val?            %20.13 = PopContext         C     %20.12, %18.5   <str$->
dependent slot

----------------------
Inlinee: .getClassesFromCache [0x560a5695c4d0]
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %9.3  = Force!<value>      !v    %9.1, e9.2   <vec>
other unused reason

Type#4 [unused] str$+ (polluted)
val?            %9.5  = Force!<lazy>       !v    %9.4, e9.2   <str$+>
other unused reason

Type#5 [unused] env-
val?            %9.7  = Force!<wrapped>    !v    %9.6, e9.2   <env->
other unused reason

Type#6 [unused] other$
val?            %9.8  = CallBuiltin        !v    .Call(%9.3, %9.5, %9.7) e9.2   <other$>
other unused reason

======================= ClosureVersion: .recacheSubclasses (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 129
referenced non-empty: 59
read non-empty: 59
used: 17
present non-empty: 16

Used
exact match: 8
widened: 9
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 42
optimized away non-empty: 26
dependent: 42
other reasons unused non-empty: 0

Polluted
polluted: 9
used polluted: 3

----------------------
.recacheSubclasses [0x560a6d3df0c0]
referenced: 129
referenced non-empty: 59
read non-empty: 59
used: 17
present non-empty: 16

Used
exact match: 8
widened: 9
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 42
optimized away non-empty: 26
dependent: 42
other reasons unused non-empty: 0

Polluted
polluted: 9
used polluted: 3

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] vec+
val?            %1.7  = Call               !v    %1.4(%1.5, %1.6) e1.3   <vec+>
void                    Assume             D     %1.9, %1.10 (Typecheck@0x560a6630e620[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] vec+
optimized away (dependency)

Type#5 [unused] str-
val+            %2.6  = CallSafeBuiltin    wed   names(%2.5)    <str->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] vec+
optimized away (dependency)

Type#8 [unused] int-
val?            %4.3  = CallBuiltin        !v    seq_along(%2.5) e1.3   <int->
dependent slot

Type#9 [used] str-
val?^ | miss    %8.0  = LdVar              eR    subNames, e1.3
void                    Assume             D     %8.1, %6.8 (Typecheck@0x560a6630e620[Type#9])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [used] int$-
val             %8.7  = ChkMissing         e     %6.6
void                    Assume             D     %8.8, %6.8 (Typecheck@0x560a6630e620[Type#11])
exact match
checkFor: int$-, static: val, feedback: int$-, expected: int$-, required: val?^ | miss

Type#12 [unused] str$-
val?            %8.11 = Extract2_1D        wed   %8.4, %8.10, elided   <str$->
dependent slot

Type#13 [unused] str$-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] other$
val?            %10.5 = StaticCall         !v    getClassDef[0x560a743d33d0](%10.3, missingArg, %10.4) { 0 2n } e1.3   <other$>
dependent slot

Type#20 [unused] other$
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] other$
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] str$-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] vec+
optimized away (dependency)

Type#35 [unused] str-
optimized away (dependency)

Type#36 [used] int$-
val?            %13.8 = StaticCall         !v    match[0x560a7a815360](%13.6, %13.7) e1.3   <int$->
void                    Assume             D     %13.9, %13.10 (Typecheck@0x560a6630e620[Type#36])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#37 [unused] lgl$-
lgl$-           %15.2 = CallSafeBuiltin    wed   is.na(%15.1)    <lgl$->
dependent slot

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] vec+
val?            %44.3 = Call               !v    %44.0(%44.1, %44.2) e1.3   <vec+>
dependent slot

Type#41 [used] vec+
val?^ | miss    %46.0 = LdVar              eR    subs, e1.3
void                    Assume             D     %46.1, %44.5 (Typecheck@0x560a6630e620[Type#41])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: vec+, expected: vec+, required: val?^ | miss

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [used] int$-
val?^ | miss    %46.7 = LdVar              eR    i, e1.3
void                    Assume             D     %46.8, %44.5 (Typecheck@0x560a6630e620[Type#43])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#44 [unused] other$
val?            %46.11 = Extract2_1D        wed   %46.4, %46.10, elided   <other$>
dependent slot

Type#45 [used] vec+
val             %48.0 = ChkMissing         e     %44.3
void                    Assume             D     %48.1, %46.12 (Typecheck@0x560a6630e620[Type#45])
narrowed with static type: no
widened: yes
checkFor: val+, static: val, feedback: vec+, expected: vec+, required: val?^ | miss

Type#46 [unused] str$+
val?            %48.5 = Force!<lazy>       !v    %48.4, e1.3   <str$+>
dependent slot

Type#47 [used] vec+
val?            %48.6 = Subassign2_1D      !v    %46.11, %48.3, %48.5, e1.3   <vec+>
void                    Assume             D     %52.0, %50.8 (Typecheck@0x560a6630e620[Type#47])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] vec+
optimized away (dependency)

Type#52 [unused] real+
optimized away (dependency)

Type#53 [used] int-
val?            %50.6 = Call               !v    function(x, partial=NULL, na.last=TRUE, decrea|...(%50.5) e1.3   <int->
void                    Assume             D     %50.7, %50.8 (Typecheck@0x560a6630e620[Type#53])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#54 [unused] vec+
val?            %52.5 = Extract1_1D        wed   %52.2, %52.4, elided   <vec+>
dependent slot

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] str$-
optimized away (dependency)

Type#60 [unused] other$
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [used] str-
val?^ | miss    %21.0 = LdVar              eR    subNames, e1.3
void                    Assume             D     %21.1, %19.2 (Typecheck@0x560a6630e620[Type#69])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [used] int$-
val             %21.7 = ChkMissing         e     %19.0
void                    Assume             D     %21.8, %19.2 (Typecheck@0x560a6630e620[Type#71])
exact match
checkFor: int$-, static: val, feedback: int$-, expected: int$-, required: val?^ | miss

Type#72 [unused] str$-
val?            %21.11 = Extract2_1D        wed   %21.4, %21.10, elided   <str$->
dependent slot

Type#73 [unused] str$-
optimized away (dependency)

Type#74 [unused] vec+
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] int$-
optimized away (dependency)

Type#77 [unused] other$
optimized away (dependency)

Type#78 [unused] str$-
optimized away (dependency)

Type#79 [unused] other$
val?            %23.5 = StaticCall         !v    getClassDef[0x560a743d33d0](%23.3, missingArg, %23.4) { 0 2n } e1.3   <other$>
dependent slot

Type#80 [unused] other$
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] other$
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] $#-
optimized away (dependency)

Type#87 [unused] $#-
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] $#-
optimized away (dependency)

Type#90 [unused] $#-
optimized away (dependency)

Type#91 [unused] str$-
optimized away (dependency)

Type#92 [unused] $#-
optimized away (dependency)

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] vec+ (polluted)
optimized away (dependency)

Type#95 [unused] str- (polluted)
optimized away (dependency)

Type#96 [used] int$-
val?            %26.8 = StaticCall         !v    match[0x560a7a815360](%26.6, %26.7) e1.3   <int$->
void                    Assume             D     %26.9, %26.10 (Typecheck@0x560a6630e620[Type#96])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#97 [unused] lgl$-
lgl$-           %28.2 = CallSafeBuiltin    wed   is.na(%28.1)    <lgl$->
dependent slot

Type#98 [unused] $#-
optimized away (dependency)

Type#99 [unused] $#-
optimized away (dependency)

Type#100 [unused] vec+ (polluted)
val?            %31.3 = Call               !v    %31.0(%31.1, %31.2) e1.3   <vec+>
dependent slot

Type#101 [used] vec+
val?^ | miss    %33.0 = LdVar              eR    subs, e1.3
void                    Assume             D     %33.1, %31.5 (Typecheck@0x560a6630e620[Type#101])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: vec+, expected: vec+, required: val?^ | miss

Type#102 [unused] $#-
optimized away (dependency)

Type#103 [used] int$-
val?^ | miss    %33.7 = LdVar              eR    i, e1.3
void                    Assume             D     %33.8, %31.5 (Typecheck@0x560a6630e620[Type#103])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#104 [unused] other$
val?            %33.11 = Extract2_1D        wed   %33.4, %33.10, elided   <other$>
dependent slot

Type#105 [used] vec+ (polluted)
val             %35.0 = ChkMissing         e     %31.3
void                    Assume             D     %35.1, %33.12 (Typecheck@0x560a6630e620[Type#105])
narrowed with static type: no
widened: yes
checkFor: val+, static: val, feedback: vec+, expected: vec+, required: val?^ | miss

Type#106 [unused] str$+
val?            %35.5 = Force!<wrapped>    !v    %35.4, e1.3   <str$+>
dependent slot

Type#107 [used] vec+ (polluted)
val?            %35.6 = Subassign2_1D      !v    %33.11, %35.3, %35.5, e1.3   <vec+>
void                    Assume             D     %39.0, %37.8 (Typecheck@0x560a6630e620[Type#107])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#108 [unused] $#-
optimized away (dependency)

Type#109 [unused] $#-
optimized away (dependency)

Type#110 [unused] $#-
optimized away (dependency)

Type#111 [unused] vec+ (polluted)
optimized away (dependency)

Type#112 [unused] real+ (polluted)
optimized away (dependency)

Type#113 [used] int- (polluted)
val?            %37.6 = Call               !v    function(x, partial=NULL, na.last=TRUE, decrea|...(%37.5) e1.3   <int->
void                    Assume             D     %37.7, %37.8 (Typecheck@0x560a6630e620[Type#113])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#114 [unused] vec+ (polluted)
val?            %39.5 = Extract1_1D        wed   %39.2, %39.4, elided   <vec+>
dependent slot

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

Type#117 [unused] $#-
optimized away (dependency)

Type#118 [unused] $#-
optimized away (dependency)

Type#119 [unused] str$-
optimized away (dependency)

Type#120 [unused] other$
optimized away (dependency)

Type#121 [unused] $#-
optimized away (dependency)

Type#122 [unused] $#-
optimized away (dependency)

Type#123 [unused] $#-
optimized away (dependency)

Type#124 [unused] $#-
optimized away (dependency)

Type#125 [unused] $#-
optimized away (dependency)

Type#126 [unused] $#-
optimized away (dependency)

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: sort.list (!ExpMi,CorrOrd,!TMany,Argmatch miss: 4) ***********************
======================= ClosureVersion: sort.list (!ExpMi,CorrOrd,!TMany,Argmatch miss: 4) =======================
referenced: 84
referenced non-empty: 34
read non-empty: 33
used: 13
present non-empty: 11

Used
exact match: 6
widened: 7
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 21
optimized away non-empty: 10
dependent: 20
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
sort.list [0x560a700fb1d0]
referenced: 84
referenced non-empty: 34
read non-empty: 33
used: 13
present non-empty: 11

Used
exact match: 6
widened: 7
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 21
optimized away non-empty: 10
dependent: 20
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] nil-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [used] real+
val?            %1.6  = Force!<lazy>       !v    %1.0, e1.1   <real+>
void                    Assume             D     %1.7, %1.8 (Typecheck@0x560a6d078680[Type#6])
exact match
checkFor: real+, static: val?, feedback: real+, expected: real+, required: val?^ | miss

Type#7 [unused] lgl$-
lgl$#-          %2.2  = CallSafeBuiltin    wed   is.numeric(%2.1)    <lgl$->
dependent slot

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] real+
val?            %73.4 = Force!<wrapped>    !v    %73.3, e1.1   <real+>
dependent slot

Type#10 [unused] lgl$-
lgl$#-          %73.5 = CallSafeBuiltin    wed   is.object(%73.4)    <lgl$->
dependent slot

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [used] real+
val?^ | miss    %9.3  = LdVar              eR    x, e1.1
void                    Assume             D     %9.4, %6.3 (Typecheck2@0x560a6d078680[Type#12])
narrowed with static type: no
widened: yes
checkFor: real~+, static: val?^ | miss, feedback: real+, expected: real+, required: val?+

Type#13 [used] int$-
(int|real)$-    %9.8  = CallSafeBuiltin    wed   length(%9.7)    <int$->
void                    Assume             D     %9.9, %9.10 (Typecheck@0x560a6d078680[Type#13])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#14 [unused] lgl$-
lgl$-           %11.2 = Gt                 d     %11.1, 0, elided   <lgl$->
dependent slot

Type#15 [unused] real+
val?            %67.1 = Force!<wrapped>    !v    %67.0, e1.1   <real+>
dependent slot

Type#16 [unused] lgl$-
val?            %67.3 = Force!<value>      !v    %67.2, e1.1   <lgl$->
dependent slot

Type#17 [unused] lgl$-
val?            %67.5 = Force!<lazy>       !v    %67.4, e1.1   <lgl$->
dependent slot

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] str-
optimized away (dependency)

Type#22 [used] str$-
val?            %16.4 = StaticCall         !v    match.arg[0x560a7517fec0](%16.3, <str [1] "auto" "shell" "quick" "radix">) e1.1   <str$->
void                    Assume             D     %16.6, %16.7 (Typecheck@0x560a6d078680[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#23 [unused] str$-
optimized away (dependency)

Type#24 [used] lgl$-
lgl-            %18.3 = Eq                 wed   %18.2, "auto", elided   <lgl$->
void                    Assume             D     %18.4, %18.5 (Typecheck@0x560a6d078680[Type#24])
exact match
checkFor: lgl$-, static: lgl-, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [used] real+
val?^ | miss    %21.3 = LdVar              eR    x, e1.1
void                    Assume             D     %21.4, %18.5 (Typecheck2@0x560a6d078680[Type#26])
narrowed with static type: no
widened: yes
checkFor: real~+, static: val?^ | miss, feedback: real+, expected: real+, required: val?+

Type#27 [unused] lgl$-
lgl$#-          %21.8 = CallSafeBuiltin    wed   is.numeric(%21.7)    <lgl$->
dependent slot

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [used] real+
val?^ | miss    %27.6 = LdVar              eR    x, e1.1
void                    Assume             D     %27.7, %24.3 (Typecheck2@0x560a6d078680[Type#42])
narrowed with static type: no
widened: yes
checkFor: real~+, static: val?^ | miss, feedback: real+, expected: real+, required: val?+

Type#43 [used] int$-
(int|real)$-    %27.11 = CallSafeBuiltin    wed   length(%27.10)    <int$->
void                    Assume             D     %27.12, %27.13 (Typecheck@0x560a6d078680[Type#43])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#44 [unused] lgl$-
optimized away (dependency)

Type#45 [unused] nil-
val?            %32.1 = Force!<wrapped>    !v    %32.0, e1.1   <nil->
dependent slot

Type#46 [used] str$-
val?            %33.1 = Force!<value>      !v    %33.0, e1.1   <str$->
void                    Assume             D     %33.2, %33.3 (Typecheck@0x560a6d078680[Type#46])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#47 [used] lgl$-
lgl-            %35.2 = Eq                 wed   %35.1, "quick", elided   <lgl$->
void                    Assume             D     %35.3, %35.4 (Typecheck@0x560a6d078680[Type#47])
exact match
checkFor: lgl$-, static: lgl-, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [used] lgl$-
val?^ | miss    %38.3 = LdVar              eR    na.last, e1.1
void                    Assume             D     %38.4, %35.4 (Typecheck2@0x560a6d078680[Type#63])
narrowed with static type: no
widened: yes
checkFor: lgl$~-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?+

Type#64 [unused] lgl$-
lgl$-           %38.8 = CallSafeBuiltin    wed   is.na(%38.7)    <lgl$->
dependent slot

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [used] str$-
val?            %40.1 = Force!<value>      !v    %40.0, e1.1   <str$->
void                    Assume             D     %40.2, %40.3 (Typecheck@0x560a6d078680[Type#72])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#73 [used] lgl$-
lgl-            %42.3 = Eq                 vwed  %42.2, "radix", elided   <lgl$->
void                    Assume             D     %42.4, %42.5 (Typecheck@0x560a6d078680[Type#73])
exact match
checkFor: lgl$-, static: lgl-, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#74 [unused] real+
optimized away (dependency)

Type#75 [unused] lgl$-
optimized away (dependency)

Type#76 [unused] lgl$-
optimized away (dependency)

Type#77 [unused] int-
val?            %53.4 = NamedCall          !     %53.0(%53.1, na.last=%53.2, decreasing=%53.3, method="radix") e1.1   <int->
other unused reason

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: rep_len (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: rep_len (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 2
present non-empty: 0

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
rep_len [0x560a6fe94f30]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 2
present non-empty: 0

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] lgl$-
val?            %1.3  = Force!<lazy>       !vL   %1.1, e1.2   <lgl$->
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a6789d480[Type#0])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#1 [used] int$-
val?            %2.4  = Force!<lazy>       !vL   %1.0, e1.2   <int$->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a6789d480[Type#1])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

*********************** Compilation session for: packageSlot (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: packageSlot (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

----------------------
packageSlot [0x560a6f2c7cd0]
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (str|other) (polluted)
val?            %2.4  = Force!<lazy>       !v    %1.0, e2.3   <(str|other)>
other unused reason

Type#2 [unused] (nil|str)- (polluted)
val?            %2.5  = CallBuiltin        !     attr(%2.4, "package") e2.3   <(nil|str)->
other unused reason

*********************** Compilation session for: .mergeMethodsTable (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj1,!Obj2,!Obj3) ***********************
======================= ClosureVersion: get (CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0 miss: 2) =======================
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 1
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 1

----------------------
get [0x560a56b53b40]
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 1
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (int|env)- (polluted)
optimized away

Type#1 [unused] env+ (polluted)
optimized away (dependency)

Type#2 [unused] str$+ (polluted)
val+            %5.3  = Force<lazy>              %1.2,    <str$+>
other unused reason

Type#3 [used] env+ (polluted)
val?            %5.5  = Force<lazy>        !v    %5.4, e1.5   <env+>
void                    Assume             D     %5.6, %5.7 (Typecheck@0x560a56e45650[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: env+, expected: env+, required: val?^ | miss

Type#4 [unused] str$-
val?            %7.3  = Force!<lazy>       !v    %7.2, e1.5   <str$->
other unused reason

Type#5 [unused] lgl$-
val?            %7.5  = Force!<lazy>       !v    %7.4, e1.5   <lgl$->
other unused reason

======================= ClosureVersion: exists (CorrOrd,!TMany,Argmatch;Eager0,Eager1,Eager3,Eager4,Eager5,NonRefl0,NonRefl1,NonRefl2,NonRefl3,NonRefl4,NonRefl5,!Obj0,!Obj5) =======================
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 1
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 1

----------------------
exists [0x560a572da620]
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 1
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] (int|env)- (polluted)
optimized away

Type#3 [unused] env+ (polluted)
optimized away (dependency)

Type#4 [unused] str$+ (polluted)
val+            %7.0  = Force<lazy>              %1.5,    <str$+>
other unused reason

Type#5 [used] env+ (polluted)
val?            %7.2  = Force<lazy>        !v    %7.1, e1.8   <env+>
void                    Assume             D     %7.3, %7.4 (Typecheck@0x560a574dece0[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: env+, expected: env+, required: val?^ | miss

Type#6 [unused] str$-
val?            %9.3  = Force!<lazy>       !v    %9.2, e1.8   <str$->
other unused reason

Type#7 [unused] lgl$-
val?            %9.5  = Force!<lazy>       !v    %9.4, e1.8   <lgl$->
other unused reason

======================= ClosureVersion: .mergeMethodsTable (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj1,!Obj2,!Obj3) =======================
referenced: 409
referenced non-empty: 72
read non-empty: 72
used: 25
present non-empty: 26

Used
exact match: 12
widened: 13
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 47
optimized away non-empty: 21
dependent: 43
other reasons unused non-empty: 4

Polluted
polluted: 7
used polluted: 0

----------------------
.mergeMethodsTable [0x560a71c0ad30]
referenced: 332
referenced non-empty: 67
read non-empty: 67
used: 24
present non-empty: 24

Used
exact match: 11
widened: 13
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 43
optimized away non-empty: 19
dependent: 43
other reasons unused non-empty: 0

Polluted
polluted: 5
used polluted: 0

Type#0 [unused] cls
val?            %2.4  = Force!<lazy>       !vr   %1.3,    <cls>
dependent slot

Type#1 [unused] env-
val?            %2.6  = StaticCall         !v    environment[0x560a7c6c6b90](%2.5) e2.3   <env->
dependent slot

Type#2 [unused] env-
optimized away (dependency)

Type#3 [used] lgl$-
val?            %4.4  = StaticCall         !v    exists[0x560a7c536ce0](".SigLength", missingArg, %4.3, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %4.5, %4.6 (Typecheck@0x560a71d8b840[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [used] lgl$-
val?            %7.1  = Force!<lazy>       !v    %7.0, e2.3   <lgl$->
void                    Assume             D     %7.2, %7.3 (Typecheck@0x560a71d8b840[Type#5])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] env-
optimized away (dependency)

Type#9 [used] real$-
val?            %12.4 = StaticCall         !v    get[0x560a7c4f4910](".SigLength", missingArg, %12.3) { 0 2n } e2.3   <real$->
void                    Assume             D     %12.5, %12.6 (Typecheck@0x560a71d8b840[Type#9])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?^ | miss

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] str- (polluted)
val?            %14.5 = Call               !v    %14.3("ANY", %14.4) e2.3   <str->
dependent slot

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [used] env-
val?            %16.4 = Force!<lazy>       !v    %16.3, e2.3   <env->
void                    Assume             D     %16.5, %16.6 (Typecheck@0x560a71d8b840[Type#13])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#14 [unused] str-
val+            %18.2 = CallSafeBuiltin    wed   names(%18.1)    <str->
dependent slot

Type#15 [unused] str-
optimized away (dependency)

Type#16 [used] env-
val?            %20.7 = Force!<wrapped>    !v    %20.6, e2.3   <env->
void                    Assume             D     %20.9, %20.10 (Typecheck@0x560a71d8b840[Type#16])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [used] str$-
val?^ | miss    %22.1 = LdVar              eR    what, e2.3
void                    Assume             D     %22.2, %20.10 (Typecheck@0x560a71d8b840[Type#18])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#19 [unused] cls
val?            %22.8 = Extract2_1D        wed   %22.7, %22.5, elided   <cls>
dependent slot

Type#20 [unused] cls
optimized away (dependency)

Type#21 [unused] lgl$-
optimized away (dependency)

Type#22 [unused] cls
optimized away (dependency)

Type#23 [used] lgl$-
val?            %32.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%32.3, "MethodDefinition") e2.3   <lgl$->
void                    Assume             D     %32.5, %32.6 (Typecheck@0x560a71d8b840[Type#23])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] str (polluted)
val?            %40.3 = Call               !v    %40.0(%40.1, %40.2) e2.3   <str>
dependent slot

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] str (polluted)
val             %43.3 = ChkMissing         e     %41.0   <str>
dependent slot

Type#73 [used] int$-
val?            %43.4 = CallBuiltin        !v    length(%43.3) e2.3   <int$->
void                    Assume             D     %43.5, %43.6 (Typecheck@0x560a71d8b840[Type#73])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#74 [unused] int$-
optimized away (dependency)

Type#75 [used] real$-
val?^ | miss    %47.0 = LdVar              eR    n, e2.3
void                    Assume             D     %47.1, %45.3 (Typecheck@0x560a71d8b840[Type#75])
exact match
checkFor: real$-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?^ | miss

Type#76 [unused] lgl$-
lgl$-           %47.4 = Eq                 d     %45.1, %47.3, elided   <lgl$->
dependent slot

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] $#-
optimized away (dependency)

Type#87 [unused] $#-
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] $#-
optimized away (dependency)

Type#90 [unused] $#-
optimized away (dependency)

Type#91 [unused] $#-
optimized away (dependency)

Type#92 [unused] $#-
optimized away (dependency)

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] $#-
optimized away (dependency)

Type#99 [unused] $#-
optimized away (dependency)

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [unused] $#-
optimized away (dependency)

Type#102 [unused] $#-
optimized away (dependency)

Type#103 [unused] $#-
optimized away (dependency)

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] $#-
optimized away (dependency)

Type#106 [unused] $#-
optimized away (dependency)

Type#107 [unused] $#-
optimized away (dependency)

Type#108 [unused] $#-
optimized away (dependency)

Type#109 [unused] $#-
optimized away (dependency)

Type#110 [unused] $#-
optimized away (dependency)

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] $#-
optimized away (dependency)

Type#113 [unused] $#-
optimized away (dependency)

Type#114 [unused] $#-
optimized away (dependency)

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

Type#117 [unused] $#-
optimized away (dependency)

Type#118 [unused] $#-
optimized away (dependency)

Type#119 [unused] $#-
optimized away (dependency)

Type#120 [unused] $#-
optimized away (dependency)

Type#121 [unused] $#-
optimized away (dependency)

Type#122 [unused] $#-
optimized away (dependency)

Type#123 [unused] $#-
optimized away (dependency)

Type#124 [unused] $#-
optimized away (dependency)

Type#125 [unused] $#-
optimized away (dependency)

Type#126 [unused] $#-
optimized away (dependency)

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] $#-
optimized away (dependency)

Type#129 [unused] $#-
optimized away (dependency)

Type#130 [unused] $#-
optimized away (dependency)

Type#131 [unused] $#-
optimized away (dependency)

Type#132 [unused] $#-
optimized away (dependency)

Type#133 [unused] $#-
optimized away (dependency)

Type#134 [unused] $#-
optimized away (dependency)

Type#135 [unused] $#-
optimized away (dependency)

Type#136 [unused] $#-
optimized away (dependency)

Type#137 [unused] $#-
optimized away (dependency)

Type#138 [unused] $#-
optimized away (dependency)

Type#139 [unused] $#-
optimized away (dependency)

Type#140 [unused] $#-
optimized away (dependency)

Type#141 [unused] lgl$-
val?            %51.1 = Force!<wrapped>    !v    %51.0, e2.3   <lgl$->
dependent slot

Type#142 [unused] $#-
optimized away (dependency)

Type#143 [unused] $#-
optimized away (dependency)

Type#144 [unused] $#-
optimized away (dependency)

Type#145 [unused] $#-
optimized away (dependency)

Type#146 [unused] $#-
optimized away (dependency)

Type#147 [unused] $#-
optimized away (dependency)

Type#148 [unused] $#-
optimized away (dependency)

Type#149 [unused] $#-
optimized away (dependency)

Type#150 [unused] $#-
optimized away (dependency)

Type#151 [unused] $#-
optimized away (dependency)

Type#152 [unused] $#-
optimized away (dependency)

Type#153 [unused] $#-
optimized away (dependency)

Type#154 [unused] $#-
optimized away (dependency)

Type#155 [unused] $#-
optimized away (dependency)

Type#156 [unused] $#-
optimized away (dependency)

Type#157 [unused] $#-
optimized away (dependency)

Type#158 [unused] str$-
optimized away (dependency)

Type#159 [unused] env-
optimized away (dependency)

Type#160 [used] lgl$-
val?            %55.5 = StaticCall         !v    exists[0x560a7c4f5a20](%55.3, missingArg, %55.4, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %55.6, %55.7 (Typecheck@0x560a71d8b840[Type#160])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#161 [unused] cls
optimized away (dependency)

Type#162 [unused] $#-
optimized away (dependency)

Type#163 [unused] $#-
optimized away (dependency)

Type#164 [unused] cls
val?            %137.2 = PopContext         C     %135.0, %129.6   <cls>
dependent slot

Type#165 [used] nil-
val?^ | miss    %139.0 = LdVar              eR    allTable, e2.3
void                    Assume             D     %139.1, %137.4 (Typecheck@0x560a71d8b840[Type#165])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: nil-, expected: nil-, required: val?^ | miss

Type#166 [unused] env-
optimized away (dependency)

Type#167 [unused] env-
val?            %144.4 = StaticCall         !v    get[0x560a7c4f4910](".AllMTable", missingArg, %144.3) { 0 2n } e2.3   <env->
dependent slot

Type#168 [unused] cls
val?            %141.1 = Force!<value>      !v    %141.0, e2.3   <cls>
dependent slot

Type#169 [used] env-
val?^ | miss    %143.0 = LdVar              eR    allTable !upd, e2.3
void                    Assume             D     %143.1, %141.2 (Typecheck@0x560a71d8b840[Type#169])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#170 [used] str$-
val?^ | miss    %143.5 = LdVar              eR    what, e2.3
void                    Assume             D     %143.6, %141.2 (Typecheck@0x560a71d8b840[Type#170])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#171 [unused] cls
val?            %59.1 = Force!<value>      !v    %59.0, e2.3   <cls>
dependent slot

Type#172 [unused] env-
val?            %59.3 = Force!<wrapped>    !v    %59.2, e2.3   <env->
dependent slot

Type#173 [used] str$-
val?^ | miss    %61.0 = LdVar              eR    what, e2.3
void                    Assume             D     %61.1, %59.4 (Typecheck@0x560a71d8b840[Type#173])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#174 [used] env-
val?            %63.3 = Force!<wrapped>    !v    %63.2, e2.3   <env->
void                    Assume             D     %63.5, %63.6 (Typecheck@0x560a71d8b840[Type#174])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#175 [unused] $#-
optimized away (dependency)

Type#176 [used] str$-
val?^ | miss    %65.1 = LdVar              eR    what, e2.3
void                    Assume             D     %65.2, %63.6 (Typecheck@0x560a71d8b840[Type#176])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#177 [unused] cls
val?            %65.8 = Extract2_1D        wed   %65.7, %65.5, elided   <cls>
dependent slot

Type#178 [unused] cls
optimized away (dependency)

Type#179 [unused] lgl$-
optimized away (dependency)

Type#180 [unused] cls
optimized away (dependency)

Type#181 [used] lgl$-
val?            %75.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%75.3, "MethodDefinition") e2.3   <lgl$->
void                    Assume             D     %75.5, %75.6 (Typecheck@0x560a71d8b840[Type#181])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#182 [unused] $#-
optimized away (dependency)

Type#183 [unused] $#-
optimized away (dependency)

Type#184 [unused] $#-
optimized away (dependency)

Type#185 [unused] $#-
optimized away (dependency)

Type#186 [unused] $#-
optimized away (dependency)

Type#187 [unused] $#-
optimized away (dependency)

Type#188 [unused] $#-
optimized away (dependency)

Type#189 [unused] $#-
optimized away (dependency)

Type#190 [unused] $#-
optimized away (dependency)

Type#191 [unused] $#-
optimized away (dependency)

Type#192 [unused] $#-
optimized away (dependency)

Type#193 [unused] $#-
optimized away (dependency)

Type#194 [unused] $#-
optimized away (dependency)

Type#195 [unused] $#-
optimized away (dependency)

Type#196 [unused] $#-
optimized away (dependency)

Type#197 [unused] $#-
optimized away (dependency)

Type#198 [unused] $#-
optimized away (dependency)

Type#199 [unused] $#-
optimized away (dependency)

Type#200 [unused] $#-
optimized away (dependency)

Type#201 [unused] $#-
optimized away (dependency)

Type#202 [unused] $#-
optimized away (dependency)

Type#203 [unused] $#-
optimized away (dependency)

Type#204 [unused] $#-
optimized away (dependency)

Type#205 [unused] $#-
optimized away (dependency)

Type#206 [unused] $#-
optimized away (dependency)

Type#207 [unused] $#-
optimized away (dependency)

Type#208 [unused] $#-
optimized away (dependency)

Type#209 [unused] $#-
optimized away (dependency)

Type#210 [unused] $#-
optimized away (dependency)

Type#211 [unused] $#-
optimized away (dependency)

Type#212 [unused] $#-
optimized away (dependency)

Type#213 [unused] $#-
optimized away (dependency)

Type#214 [unused] $#-
optimized away (dependency)

Type#215 [unused] $#-
optimized away (dependency)

Type#216 [unused] $#-
optimized away (dependency)

Type#217 [unused] $#-
optimized away (dependency)

Type#218 [unused] $#-
optimized away (dependency)

Type#219 [unused] $#-
optimized away (dependency)

Type#220 [unused] $#-
optimized away (dependency)

Type#221 [unused] $#-
optimized away (dependency)

Type#222 [unused] $#-
optimized away (dependency)

Type#223 [unused] $#-
optimized away (dependency)

Type#224 [unused] $#-
optimized away (dependency)

Type#225 [unused] $#-
optimized away (dependency)

Type#226 [unused] $#-
optimized away (dependency)

Type#227 [unused] str (polluted)
val?            %83.3 = Call               !v    %83.0(%83.1, %83.2) e2.3   <str>
dependent slot

Type#228 [unused] $#-
optimized away (dependency)

Type#229 [unused] $#-
optimized away (dependency)

Type#230 [unused] str (polluted)
val             %86.3 = ChkMissing         e     %84.0   <str>
dependent slot

Type#231 [used] int$-
val?            %86.4 = CallBuiltin        !v    length(%86.3) e2.3   <int$->
void                    Assume             D     %86.5, %86.6 (Typecheck@0x560a71d8b840[Type#231])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#232 [unused] int$-
optimized away (dependency)

Type#233 [used] real$-
val?^ | miss    %90.0 = LdVar              eR    n, e2.3
void                    Assume             D     %90.1, %88.3 (Typecheck@0x560a71d8b840[Type#233])
exact match
checkFor: real$-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?^ | miss

Type#234 [unused] lgl$-
lgl$-           %90.4 = Eq                 d     %88.1, %90.3, elided   <lgl$->
dependent slot

Type#235 [unused] $#-
optimized away (dependency)

Type#236 [unused] $#-
optimized away (dependency)

Type#237 [unused] $#-
optimized away (dependency)

Type#238 [unused] $#-
optimized away (dependency)

Type#239 [unused] $#-
optimized away (dependency)

Type#240 [unused] $#-
optimized away (dependency)

Type#241 [unused] $#-
optimized away (dependency)

Type#242 [unused] $#-
optimized away (dependency)

Type#243 [unused] $#-
optimized away (dependency)

Type#244 [unused] $#-
optimized away (dependency)

Type#245 [unused] $#-
optimized away (dependency)

Type#246 [unused] $#-
optimized away (dependency)

Type#247 [unused] $#-
optimized away (dependency)

Type#248 [unused] $#-
optimized away (dependency)

Type#249 [unused] $#-
optimized away (dependency)

Type#250 [unused] $#-
optimized away (dependency)

Type#251 [unused] $#-
optimized away (dependency)

Type#252 [unused] $#-
optimized away (dependency)

Type#253 [unused] $#-
optimized away (dependency)

Type#254 [unused] $#-
optimized away (dependency)

Type#255 [unused] $#-
optimized away (dependency)

Type#256 [unused] $#-
optimized away (dependency)

Type#257 [unused] $#-
optimized away (dependency)

Type#258 [unused] $#-
optimized away (dependency)

Type#259 [unused] $#-
optimized away (dependency)

Type#260 [unused] $#-
optimized away (dependency)

Type#261 [unused] $#-
optimized away (dependency)

Type#262 [unused] $#-
optimized away (dependency)

Type#263 [unused] $#-
optimized away (dependency)

Type#264 [unused] $#-
optimized away (dependency)

Type#265 [unused] $#-
optimized away (dependency)

Type#266 [unused] $#-
optimized away (dependency)

Type#267 [unused] $#-
optimized away (dependency)

Type#268 [unused] $#-
optimized away (dependency)

Type#269 [unused] $#-
optimized away (dependency)

Type#270 [unused] $#-
optimized away (dependency)

Type#271 [unused] $#-
optimized away (dependency)

Type#272 [unused] $#-
optimized away (dependency)

Type#273 [unused] $#-
optimized away (dependency)

Type#274 [unused] $#-
optimized away (dependency)

Type#275 [unused] $#-
optimized away (dependency)

Type#276 [unused] $#-
optimized away (dependency)

Type#277 [unused] $#-
optimized away (dependency)

Type#278 [unused] $#-
optimized away (dependency)

Type#279 [unused] $#-
optimized away (dependency)

Type#280 [unused] $#-
optimized away (dependency)

Type#281 [unused] $#-
optimized away (dependency)

Type#282 [unused] $#-
optimized away (dependency)

Type#283 [unused] $#-
optimized away (dependency)

Type#284 [unused] $#-
optimized away (dependency)

Type#285 [unused] $#-
optimized away (dependency)

Type#286 [unused] $#-
optimized away (dependency)

Type#287 [unused] $#-
optimized away (dependency)

Type#288 [unused] $#-
optimized away (dependency)

Type#289 [unused] $#-
optimized away (dependency)

Type#290 [unused] $#-
optimized away (dependency)

Type#291 [unused] $#-
optimized away (dependency)

Type#292 [unused] $#-
optimized away (dependency)

Type#293 [unused] $#-
optimized away (dependency)

Type#294 [unused] $#-
optimized away (dependency)

Type#295 [unused] $#-
optimized away (dependency)

Type#296 [unused] $#-
optimized away (dependency)

Type#297 [unused] $#-
optimized away (dependency)

Type#298 [unused] $#-
optimized away (dependency)

Type#299 [unused] lgl$-
val?            %94.1 = Force!<wrapped>    !v    %94.0, e2.3   <lgl$->
dependent slot

Type#300 [unused] $#-
optimized away (dependency)

Type#301 [unused] $#-
optimized away (dependency)

Type#302 [unused] $#-
optimized away (dependency)

Type#303 [unused] $#-
optimized away (dependency)

Type#304 [unused] $#-
optimized away (dependency)

Type#305 [unused] $#-
optimized away (dependency)

Type#306 [unused] $#-
optimized away (dependency)

Type#307 [unused] $#-
optimized away (dependency)

Type#308 [unused] $#-
optimized away (dependency)

Type#309 [unused] $#-
optimized away (dependency)

Type#310 [unused] $#-
optimized away (dependency)

Type#311 [unused] $#-
optimized away (dependency)

Type#312 [unused] $#-
optimized away (dependency)

Type#313 [unused] $#-
optimized away (dependency)

Type#314 [unused] $#-
optimized away (dependency)

Type#315 [unused] $#-
optimized away (dependency)

Type#316 [unused] str$-
optimized away (dependency)

Type#317 [unused] env-
optimized away (dependency)

Type#318 [used] lgl$-
val?            %98.5 = StaticCall         !v    exists[0x560a7c4f5a20](%98.3, missingArg, %98.4, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %98.6, %98.7 (Typecheck@0x560a71d8b840[Type#318])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#319 [unused] cls
optimized away (dependency)

Type#320 [unused] $#-
optimized away (dependency)

Type#321 [unused] $#-
optimized away (dependency)

Type#322 [unused] cls
val?            %113.2 = PopContext         C     %111.1, %105.6   <cls>
dependent slot

Type#323 [used] nil-
val?^ | miss    %115.0 = LdVar              eR    allTable, e2.3
void                    Assume             D     %115.1, %113.4 (Typecheck@0x560a71d8b840[Type#323])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: nil-, expected: nil-, required: val?^ | miss

Type#324 [unused] env-
optimized away (dependency)

Type#325 [unused] env-
val?            %120.4 = StaticCall         !v    get[0x560a7c4f4910](".AllMTable", missingArg, %120.3) { 0 2n } e2.3   <env->
dependent slot

Type#326 [unused] cls
val?            %117.1 = Force!<value>      !v    %117.0, e2.3   <cls>
dependent slot

Type#327 [used] env-
val?^ | miss    %119.0 = LdVar              eR    allTable !upd, e2.3
void                    Assume             D     %119.1, %117.2 (Typecheck@0x560a71d8b840[Type#327])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#328 [used] str$-
val?^ | miss    %119.5 = LdVar              eR    what, e2.3
void                    Assume             D     %119.6, %117.2 (Typecheck@0x560a71d8b840[Type#328])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#329 [unused] cls
val?            %102.1 = Force!<value>      !v    %102.0, e2.3   <cls>
dependent slot

Type#330 [unused] env-
val?            %102.3 = Force!<value>      !v    %102.2, e2.3   <env->
dependent slot

Type#331 [used] str$-
val?^ | miss    %104.0 = LdVar              eR    what, e2.3
void                    Assume             D     %104.1, %102.4 (Typecheck@0x560a71d8b840[Type#331])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

----------------------
Inlinee: .newOrMultipleMethod [0x560a71d88ce0]
referenced: 74
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [used] lgl$-
val?            %107.4 = StaticCall         !v    .duplicateClassesExist[0x560a7c52ce70]() e107.3   <lgl$->
void                    Assume             D     %107.5, %107.6 (Typecheck@0x560a71d88be0[Type#0])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#1 [unused] cls
val?            %111.1 = Force!<lazy>       !v    %111.0, e107.3   <cls>
other unused reason

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: is.primitive [0x560a54179310]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

Type#1 [unused] str$-
str$-           %67.4 = CallSafeBuiltin    wed   typeof(%65.8)    <str$->
other unused reason

*********************** Compilation session for: initialize (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 1) ***********************
======================= ClosureVersion: initialize (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 1) =======================
referenced: 55
referenced non-empty: 15
read non-empty: 15
used: 1
present non-empty: 4

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 10
dependent: 14
other reasons unused non-empty: 0

Polluted
polluted: 6
used polluted: 0

----------------------
initialize [0x560a70be7a20]
referenced: 47
referenced non-empty: 7
read non-empty: 7
used: 1
present non-empty: 2

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 4
dependent: 6
other reasons unused non-empty: 0

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] (str|cls) (polluted)
val?            %2.4  = CallBuiltin        !v    standardGeneric("initialize") e2.3   <(str|cls)>
dependent slot

Type#1 [unused] (str|cls) (polluted)
optimized away (dependency)

Type#2 [unused] str$+
optimized away (dependency)

Type#3 [unused] (str|cls) (polluted)
optimized away (dependency)

Type#4 [unused] str$+
optimized away (dependency)

Type#5 [used] lgl$-
val?            %4.12 = PopContext         C     %4.11, %4.5   <lgl$->
void                    Assume             D     %4.13, %4.14 (Typecheck@0x560a70bb1900[Type#5])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] (str|cls) (polluted)
val?            %7.2  = Force!<value>      !     %7.0, e2.3   <(str|cls)>
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %4.9  = Force!<lazy>       !vL   %4.7, e4.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %4.10 = Force!<lazy>       !vL   %4.6, e4.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: .allowPrimitiveMethods (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: .allowPrimitiveMethods (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 6
referenced non-empty: 4
read non-empty: 4
used: 3
present non-empty: 1

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
.allowPrimitiveMethods [0x560a732730e0]
referenced: 6
referenced non-empty: 4
read non-empty: 4
used: 3
present non-empty: 1

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [used] lgl$-
val+            %1.2  = Force!<lazy>       !vr   %1.0,    <lgl$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a73115530[Type#0])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %6.4  = Force!<value>      !v    %6.3, e1.1   <vec>
other unused reason

Type#4 [used] str$-
val?^ | miss    %8.0  = LdVar              eR    code, e1.1
void                    Assume             D     %8.1, %6.5 (Typecheck@0x560a73115530[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#5 [used] lgl$-
val?            %8.5  = CallBuiltin        !     .Call(%6.4, "", nil, %8.4, nil, nil) e1.1   <lgl$->
void                    Assume             D     %8.6, %8.7 (Typecheck@0x560a73115530[Type#5])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

*********************** Compilation session for: cacheGenericsMetaData (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,NonRefl5,!Obj0,!Obj2,!Obj3,!Obj5) ***********************
======================= ClosureVersion: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
other unused reason

Type#2 [used] lgl$-
val+            %1.2  = CallSafeBuiltin    vwed  is.logical(%1.1)    <lgl$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a54e55690[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %3.0, %1.4 (Typecheck@0x560a54e55690[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %5.0, %1.4 (Typecheck@0x560a54e55690[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %5.3  = CallSafeBuiltin    vwed  is.na(%5.2)    <lgl$->
dependent slot

Type#10 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %9.1, %6.3 (Typecheck@0x560a54e55690[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

======================= ClosureVersion: cacheGenericsMetaData (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,NonRefl5,!Obj0,!Obj2,!Obj3,!Obj5) =======================
referenced: 107
referenced non-empty: 53
read non-empty: 53
used: 7
present non-empty: 17

Used
exact match: 7
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 46
optimized away non-empty: 29
dependent: 35
other reasons unused non-empty: 11

Polluted
polluted: 9
used polluted: 0

----------------------
cacheGenericsMetaData [0x560a5523bcf0]
referenced: 52
referenced non-empty: 35
read non-empty: 35
used: 5
present non-empty: 4

Used
exact match: 5
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 30
optimized away non-empty: 26
dependent: 29
other reasons unused non-empty: 1

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] cls
optimized away (dependency)

Type#3 [used] lgl$-
val?            %2.5  = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%2.4, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %2.6, %2.7 (Typecheck@0x560a5a7d7b70[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] str$-
val?            %74.3 = Call               !v    %74.0(%74.1, %74.2) e2.3   <str$->
dependent slot

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] val? (polluted)
optimized away (dependency)

Type#13 [unused] val? (polluted)
optimized away (dependency)

Type#14 [unused] cls
optimized away (dependency)

Type#15 [used] lgl$-
val?            %32.1 = PopContext         C     %32.0, %19.4   <lgl$->
void                    Assume             D     %32.2, %32.3 (Typecheck@0x560a5a7d7b70[Type#15])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] cls
optimized away (dependency)

Type#18 [used] lgl$-
val?            %35.5 = StaticCall         !v    isGroup[0x560a7bd2f7f0](%35.3, missingArg, %35.4) { 0 2n } e2.3   <lgl$->
void                    Assume             D     %35.6, %35.7 (Typecheck@0x560a5a7d7b70[Type#18])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] vec-
val?            %41.3 = Call               !v    %41.0(%41.1, %41.2) e2.3   <vec->
dependent slot

Type#22 [unused] vec-
optimized away (dependency)

Type#23 [unused] str$-
optimized away (dependency)

Type#24 [unused] env-
optimized away (dependency)

Type#25 [unused] cls
val?            %45.5 = StaticCall         !v    getGeneric[0x560a7c217b40](%45.3, missingArg, %45.4) { 0 2n } e2.3   <cls>
dependent slot

Type#26 [unused] cls
optimized away (dependency)

Type#27 [used] lgl$-
val?            %47.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%47.3, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %47.5, %47.6 (Typecheck@0x560a5a7d7b70[Type#27])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#28 [unused] str$-
optimized away (dependency)

Type#29 [unused] cls
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] env-
optimized away (dependency)

Type#32 [unused] cls
optimized away (dependency)

Type#33 [unused] env-
optimized away (dependency)

Type#34 [unused] str$-
optimized away (dependency)

Type#35 [unused] env-
optimized away (dependency)

Type#36 [unused] cls
val?            %54.5 = StaticCall         !v    getGeneric[0x560a7c217b40](%54.3, missingArg, %54.4) { 0 2n } e2.3   <cls>
dependent slot

Type#37 [unused] cls
optimized away (dependency)

Type#38 [used] lgl$-
val?            %56.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%56.3, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %56.5, %56.6 (Typecheck@0x560a5a7d7b70[Type#38])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#39 [unused] str$-
optimized away (dependency)

Type#40 [unused] cls
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] env-
optimized away (dependency)

Type#43 [unused] cls
optimized away (dependency)

Type#44 [unused] env-
optimized away (dependency)

Type#45 [unused] str$-
optimized away (dependency)

Type#46 [unused] (spec|blt)- (polluted)
optimized away

Type#47 [unused] cls
optimized away (dependency)

Type#48 [unused] env-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: is.primitive [0x560a54179310]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

Type#1 [unused] str$-
str$-           %21.8 = CallSafeBuiltin    wed   typeof(%21.7)    <str$->
other unused reason

----------------------
Inlinee: dispatchIsInternal [0x560a54161fa0]
referenced: 8
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 1
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] val? (polluted)
val?            %21.7 = Call               !v    %21.4(%21.5, %21.6) e21.3   <val?>
other unused reason

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] (nil|cls) (polluted)
optimized away

Type#7 [used] lgl$-
val?            %29.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%29.3, "internalDispatchMethod") e21.3   <lgl$->
void                    Assume             D     %29.5, %29.6 (Typecheck@0x560a54632920[Type#7])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: Recall [0x560a5a3adf30]
referenced: 2
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (lgl|vec)- (polluted)
val?            %61.12 = Call               !v    <spec .Internal>(%61.11) e61.10   <(lgl|vec)->
other unused reason

----------------------
Inlinee: setPrimitiveMethods [0x560a54311ba0]
referenced: 16
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 7

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 0
dependent: 3
other reasons unused non-empty: 4

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] vec
val?            %67.3 = Force!<value>      !v    %67.1, e67.2   <vec>
other unused reason

Type#10 [unused] str$-
val?            %67.5 = Force!<lazy>       !v    %67.4, e67.2   <str$->
dependent slot

Type#11 [unused] blt-
val?            %67.7 = Force!<lazy>       !v    %67.6, e67.2   <blt->
other unused reason

Type#12 [unused] str$-
val?            %67.9 = Force!<value>      !v    %67.8, e67.2   <str$->
dependent slot

Type#13 [unused] cls
val?            %67.11 = Force!<lazy>       !v    %67.10, e67.2   <cls>
other unused reason

Type#14 [unused] env-
val?            %67.13 = Force!<lazy>       !v    %67.12, e67.2   <env->
other unused reason

Type#15 [unused] str$-
val?            %67.14 = CallBuiltin        !v    .Call(%67.3, %67.5, %67.7, %67.9, %67.11, %67.13) e67.2   <str$->
dependent slot

----------------------
Inlinee: finalDefaultMethod [0x560a55a5e230]
referenced: 27
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %11.2 = Force!<lazy>       !vL   %9.5, e11.1   <val?>
dependent slot

Type#2 [used] lgl$-
val?            %11.3 = CallBuiltin        !v    is.function(%11.2) e11.1   <lgl$->
void                    Assume             D     %11.4, %11.5 (Typecheck@0x560a54337ae0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] nil-
val?            %14.1 = Force!<wrapped>    !v    %14.0, e11.1   <nil->
other unused reason

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] val? (polluted)
val?            %17.1 = Force!<wrapped>    !v    %17.0, e11.1   <val?>
dependent slot

*********************** Compilation session for: .newOrMultipleMethod (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj1,!Obj2) ***********************
======================= ClosureVersion: .newOrMultipleMethod (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj1,!Obj2) =======================
referenced: 74
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
.newOrMultipleMethod [0x560a71d88ce0]
referenced: 74
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [used] lgl$-
val?            %2.4  = StaticCall         !v    .duplicateClassesExist[0x560a7bd2f7f0]() e2.3   <lgl$->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a71d88be0[Type#0])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#1 [unused] cls
val?            %6.2  = Force!<lazy>       !     %6.0, e2.3   <cls>
other unused reason

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: .mergeMethodsTable (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj1,!Obj2,!Obj3) ***********************
======================= ClosureVersion: .newOrMultipleMethod (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 74
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
.newOrMultipleMethod [0x560a71d88ce0]
referenced: 74
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [used] lgl$-
val?            %2.4  = StaticCall         !v    .duplicateClassesExist[0x560a7cd3e2d0]() e2.3   <lgl$->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a71d88be0[Type#0])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#1 [unused] cls
val?            %6.2  = Force!<lazy>       !     %6.0, e2.3   <cls>
other unused reason

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

======================= ClosureVersion: .mergeMethodsTable (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj1,!Obj2,!Obj3) =======================
referenced: 409
referenced non-empty: 85
read non-empty: 85
used: 31
present non-empty: 28

Used
exact match: 14
widened: 17
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 54
optimized away non-empty: 26
dependent: 50
other reasons unused non-empty: 4

Polluted
polluted: 11
used polluted: 3

----------------------
.mergeMethodsTable [0x560a71c0ad30]
referenced: 332
referenced non-empty: 80
read non-empty: 80
used: 30
present non-empty: 26

Used
exact match: 13
widened: 17
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 50
optimized away non-empty: 24
dependent: 50
other reasons unused non-empty: 0

Polluted
polluted: 9
used polluted: 3

Type#0 [unused] cls
val?            %2.4  = Force!<lazy>       !vr   %1.3,    <cls>
dependent slot

Type#1 [unused] env-
val?            %2.6  = StaticCall         !v    environment[0x560a7bbdaea0](%2.5) e2.3   <env->
dependent slot

Type#2 [unused] env-
optimized away (dependency)

Type#3 [used] lgl$-
val?            %4.4  = StaticCall         !v    exists[0x560a7d6cd910](".SigLength", missingArg, %4.3, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %4.5, %4.6 (Typecheck@0x560a71d8b840[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [used] lgl$-
val?            %7.1  = Force!<lazy>       !v    %7.0, e2.3   <lgl$->
void                    Assume             D     %7.2, %7.3 (Typecheck@0x560a71d8b840[Type#5])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] env-
optimized away (dependency)

Type#9 [unused] (int|real)$- (polluted)
val?            %12.4 = StaticCall         !v    get[0x560a7cd074a0](".SigLength", missingArg, %12.3) { 0 2n } e2.3   <(int|real)$->
dependent slot

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] str- (polluted)
val?            %12.8 = Call               !v    %12.6("ANY", %12.7) e2.3   <str->
dependent slot

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [used] env-
val?            %14.4 = Force!<lazy>       !v    %14.3, e2.3   <env->
void                    Assume             D     %14.5, %14.6 (Typecheck@0x560a71d8b840[Type#13])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#14 [unused] str-
val+            %16.2 = CallSafeBuiltin    wed   names(%16.1)    <str->
dependent slot

Type#15 [unused] str-
optimized away (dependency)

Type#16 [used] env-
val?            %18.7 = Force!<wrapped>    !v    %18.6, e2.3   <env->
void                    Assume             D     %18.9, %18.10 (Typecheck@0x560a71d8b840[Type#16])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [used] str$-
val?^ | miss    %20.1 = LdVar              eR    what, e2.3
void                    Assume             D     %20.2, %18.10 (Typecheck@0x560a71d8b840[Type#18])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#19 [unused] cls
val?            %20.8 = Extract2_1D        wed   %20.7, %20.5, elided   <cls>
dependent slot

Type#20 [unused] cls
optimized away (dependency)

Type#21 [unused] lgl$-
optimized away (dependency)

Type#22 [unused] cls
optimized away (dependency)

Type#23 [used] lgl$-
val?            %30.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%30.3, "MethodDefinition") e2.3   <lgl$->
void                    Assume             D     %30.5, %30.6 (Typecheck@0x560a71d8b840[Type#23])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] str (polluted)
val?            %38.3 = Call               !v    %38.0(%38.1, %38.2) e2.3   <str>
dependent slot

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] str (polluted)
val             %41.3 = ChkMissing         e     %39.0   <str>
dependent slot

Type#73 [used] int$-
val?            %41.4 = CallBuiltin        !v    length(%41.3) e2.3   <int$->
void                    Assume             D     %41.5, %41.6 (Typecheck@0x560a71d8b840[Type#73])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#74 [unused] int$-
optimized away (dependency)

Type#75 [used] (int|real)$- (polluted)
val?^ | miss    %45.0 = LdVar              eR    n, e2.3
void                    Assume             D     %45.1, %43.3 (Typecheck@0x560a71d8b840[Type#75])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: (int|real)$-, expected: (int|real)$-, required: val?^ | miss

Type#76 [used] lgl$-
lgl-            %45.5 = Eq                 wed   %43.1, %45.4, elided   <lgl$->
void                    Assume             D     %45.6, %45.7 (Typecheck@0x560a71d8b840[Type#76])
exact match
checkFor: lgl$-, static: lgl-, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#77 [unused] int$-
optimized away (dependency)

Type#78 [used] real$-
val?~- | miss   %45.3 = CastType           d     dn %45.0
void                    Assume             D     %48.0, %45.7 (Typecheck@0x560a71d8b840[Type#78])
exact match
checkFor: real$-, static: val?~- | miss, feedback: real$-, expected: real$-, required: val?^ | miss

Type#79 [unused] lgl$-
lgl$-           %48.3 = Lt                 d     %43.1, %48.2, elided   <lgl$->
dependent slot

Type#80 [unused] lgl$-
val?            %49.1 = Force!<wrapped>    !v    %49.0, e2.3   <lgl$->
dependent slot

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] str-
val?            %140.3 = Call               !v    %140.0(%140.1, %140.2) e2.3   <str->
dependent slot

Type#84 [used] int$-
val?^ | miss    %142.0 = LdVar              eR    ns, e2.3
void                    Assume             D     %142.1, %140.5 (Typecheck@0x560a71d8b840[Type#84])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#85 [used] str-
val?^ | miss    %144.0 = LdVar              eR    signames, e2.3
void                    Assume             D     %144.1, %142.5 (Typecheck@0x560a71d8b840[Type#85])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#86 [unused] env-
optimized away (dependency)

Type#87 [unused] int$-
optimized away (dependency)

Type#88 [unused] str-
optimized away (dependency)

Type#89 [used] int$-
val?^ | miss    %148.0 = LdVar              eR    ns, e2.3
void                    Assume             D     %148.1, %146.7 (Typecheck@0x560a71d8b840[Type#89])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#90 [used] env-
val?^ | miss    %148.4 = LdVar              eR    fenv !upd, e2.3
void                    Assume             D     %148.5, %146.7 (Typecheck@0x560a71d8b840[Type#90])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#91 [unused] int$-
optimized away (dependency)

Type#92 [unused] $#-
optimized away (dependency)

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] $#-
optimized away (dependency)

Type#99 [unused] $#-
optimized away (dependency)

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [unused] $#-
optimized away (dependency)

Type#102 [unused] $#-
optimized away (dependency)

Type#103 [unused] $#-
optimized away (dependency)

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] $#-
optimized away (dependency)

Type#106 [unused] $#-
optimized away (dependency)

Type#107 [unused] $#-
optimized away (dependency)

Type#108 [unused] $#-
optimized away (dependency)

Type#109 [unused] $#-
optimized away (dependency)

Type#110 [unused] $#-
optimized away (dependency)

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] $#-
optimized away (dependency)

Type#113 [unused] $#-
optimized away (dependency)

Type#114 [unused] $#-
optimized away (dependency)

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

Type#117 [unused] $#-
optimized away (dependency)

Type#118 [unused] $#-
optimized away (dependency)

Type#119 [unused] $#-
optimized away (dependency)

Type#120 [unused] $#-
optimized away (dependency)

Type#121 [unused] $#-
optimized away (dependency)

Type#122 [unused] $#-
optimized away (dependency)

Type#123 [unused] $#-
optimized away (dependency)

Type#124 [unused] $#-
optimized away (dependency)

Type#125 [unused] $#-
optimized away (dependency)

Type#126 [unused] $#-
optimized away (dependency)

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] $#-
optimized away (dependency)

Type#129 [unused] $#-
optimized away (dependency)

Type#130 [unused] $#-
optimized away (dependency)

Type#131 [unused] $#-
optimized away (dependency)

Type#132 [unused] $#-
optimized away (dependency)

Type#133 [unused] $#-
optimized away (dependency)

Type#134 [unused] $#-
optimized away (dependency)

Type#135 [unused] $#-
optimized away (dependency)

Type#136 [unused] $#-
optimized away (dependency)

Type#137 [unused] $#-
optimized away (dependency)

Type#138 [unused] $#-
optimized away (dependency)

Type#139 [unused] $#-
optimized away (dependency)

Type#140 [unused] $#-
optimized away (dependency)

Type#141 [unused] lgl$-
val?            %52.1 = Force!<wrapped>    !v    %52.0, e2.3   <lgl$->
dependent slot

Type#142 [unused] $#-
optimized away (dependency)

Type#143 [unused] $#-
optimized away (dependency)

Type#144 [unused] $#-
optimized away (dependency)

Type#145 [unused] $#-
optimized away (dependency)

Type#146 [unused] $#-
optimized away (dependency)

Type#147 [unused] $#-
optimized away (dependency)

Type#148 [unused] $#-
optimized away (dependency)

Type#149 [unused] $#-
optimized away (dependency)

Type#150 [unused] $#-
optimized away (dependency)

Type#151 [unused] $#-
optimized away (dependency)

Type#152 [unused] $#-
optimized away (dependency)

Type#153 [unused] $#-
optimized away (dependency)

Type#154 [unused] $#-
optimized away (dependency)

Type#155 [unused] $#-
optimized away (dependency)

Type#156 [unused] $#-
optimized away (dependency)

Type#157 [unused] $#-
optimized away (dependency)

Type#158 [unused] str$-
optimized away (dependency)

Type#159 [unused] env-
optimized away (dependency)

Type#160 [used] lgl$-
val?            %56.5 = StaticCall         !v    exists[0x560a7cd08400](%56.3, missingArg, %56.4, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %56.6, %56.7 (Typecheck@0x560a71d8b840[Type#160])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#161 [unused] cls
optimized away (dependency)

Type#162 [unused] $#-
optimized away (dependency)

Type#163 [unused] $#-
optimized away (dependency)

Type#164 [unused] cls
val?            %132.6 = StaticCall         !v    .newOrMultipleMethod[0x560a7cd3fb10](%132.3, %132.4, %132.5) e2.3   <cls>
dependent slot

Type#165 [used] nil-
val?^ | miss    %134.0 = LdVar              eR    allTable, e2.3
void                    Assume             D     %134.1, %132.8 (Typecheck@0x560a71d8b840[Type#165])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: nil-, expected: nil-, required: val?^ | miss

Type#166 [unused] env-
optimized away (dependency)

Type#167 [unused] env-
val?            %139.4 = StaticCall         !v    get[0x560a7cd074a0](".AllMTable", missingArg, %139.3) { 0 2n } e2.3   <env->
dependent slot

Type#168 [unused] cls
val?            %136.1 = Force!<value>      !v    %136.0, e2.3   <cls>
dependent slot

Type#169 [used] env-
val?^ | miss    %138.0 = LdVar              eR    allTable !upd, e2.3
void                    Assume             D     %138.1, %136.2 (Typecheck@0x560a71d8b840[Type#169])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#170 [used] str$-
val?^ | miss    %138.5 = LdVar              eR    what, e2.3
void                    Assume             D     %138.6, %136.2 (Typecheck@0x560a71d8b840[Type#170])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#171 [unused] cls
val?            %60.1 = Force!<value>      !v    %60.0, e2.3   <cls>
dependent slot

Type#172 [unused] env-
val?            %60.3 = Force!<wrapped>    !v    %60.2, e2.3   <env->
dependent slot

Type#173 [used] str$-
val?^ | miss    %62.0 = LdVar              eR    what, e2.3
void                    Assume             D     %62.1, %60.4 (Typecheck@0x560a71d8b840[Type#173])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#174 [used] env-
val?            %64.3 = Force!<wrapped>    !v    %64.2, e2.3   <env->
void                    Assume             D     %64.5, %64.6 (Typecheck@0x560a71d8b840[Type#174])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#175 [unused] $#-
optimized away (dependency)

Type#176 [used] str$-
val?^ | miss    %66.1 = LdVar              eR    what, e2.3
void                    Assume             D     %66.2, %64.6 (Typecheck@0x560a71d8b840[Type#176])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#177 [unused] cls
val?            %66.8 = Extract2_1D        wed   %66.7, %66.5, elided   <cls>
dependent slot

Type#178 [unused] cls
optimized away (dependency)

Type#179 [unused] lgl$-
optimized away (dependency)

Type#180 [unused] cls
optimized away (dependency)

Type#181 [used] lgl$-
val?            %76.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%76.3, "MethodDefinition") e2.3   <lgl$->
void                    Assume             D     %76.5, %76.6 (Typecheck@0x560a71d8b840[Type#181])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#182 [unused] $#-
optimized away (dependency)

Type#183 [unused] $#-
optimized away (dependency)

Type#184 [unused] $#-
optimized away (dependency)

Type#185 [unused] $#-
optimized away (dependency)

Type#186 [unused] $#-
optimized away (dependency)

Type#187 [unused] $#-
optimized away (dependency)

Type#188 [unused] $#-
optimized away (dependency)

Type#189 [unused] $#-
optimized away (dependency)

Type#190 [unused] $#-
optimized away (dependency)

Type#191 [unused] $#-
optimized away (dependency)

Type#192 [unused] $#-
optimized away (dependency)

Type#193 [unused] $#-
optimized away (dependency)

Type#194 [unused] $#-
optimized away (dependency)

Type#195 [unused] $#-
optimized away (dependency)

Type#196 [unused] $#-
optimized away (dependency)

Type#197 [unused] $#-
optimized away (dependency)

Type#198 [unused] $#-
optimized away (dependency)

Type#199 [unused] $#-
optimized away (dependency)

Type#200 [unused] $#-
optimized away (dependency)

Type#201 [unused] $#-
optimized away (dependency)

Type#202 [unused] $#-
optimized away (dependency)

Type#203 [unused] $#-
optimized away (dependency)

Type#204 [unused] $#-
optimized away (dependency)

Type#205 [unused] $#-
optimized away (dependency)

Type#206 [unused] $#-
optimized away (dependency)

Type#207 [unused] $#-
optimized away (dependency)

Type#208 [unused] $#-
optimized away (dependency)

Type#209 [unused] $#-
optimized away (dependency)

Type#210 [unused] $#-
optimized away (dependency)

Type#211 [unused] $#-
optimized away (dependency)

Type#212 [unused] $#-
optimized away (dependency)

Type#213 [unused] $#-
optimized away (dependency)

Type#214 [unused] $#-
optimized away (dependency)

Type#215 [unused] $#-
optimized away (dependency)

Type#216 [unused] $#-
optimized away (dependency)

Type#217 [unused] $#-
optimized away (dependency)

Type#218 [unused] $#-
optimized away (dependency)

Type#219 [unused] $#-
optimized away (dependency)

Type#220 [unused] $#-
optimized away (dependency)

Type#221 [unused] $#-
optimized away (dependency)

Type#222 [unused] $#-
optimized away (dependency)

Type#223 [unused] $#-
optimized away (dependency)

Type#224 [unused] $#-
optimized away (dependency)

Type#225 [unused] $#-
optimized away (dependency)

Type#226 [unused] $#-
optimized away (dependency)

Type#227 [unused] str (polluted)
val?            %84.3 = Call               !v    %84.0(%84.1, %84.2) e2.3   <str>
dependent slot

Type#228 [unused] $#-
optimized away (dependency)

Type#229 [unused] $#-
optimized away (dependency)

Type#230 [unused] str (polluted)
val             %87.3 = ChkMissing         e     %85.0   <str>
dependent slot

Type#231 [used] int$-
val?            %87.4 = CallBuiltin        !v    length(%87.3) e2.3   <int$->
void                    Assume             D     %87.5, %87.6 (Typecheck@0x560a71d8b840[Type#231])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#232 [unused] int$-
optimized away (dependency)

Type#233 [used] (int|real)$- (polluted)
val?^ | miss    %91.0 = LdVar              eR    n, e2.3
void                    Assume             D     %91.1, %89.3 (Typecheck@0x560a71d8b840[Type#233])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: (int|real)$-, expected: (int|real)$-, required: val?^ | miss

Type#234 [used] lgl$-
lgl-            %91.5 = Eq                 wed   %89.1, %91.4, elided   <lgl$->
void                    Assume             D     %91.6, %91.7 (Typecheck@0x560a71d8b840[Type#234])
exact match
checkFor: lgl$-, static: lgl-, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#235 [unused] $#-
optimized away (dependency)

Type#236 [unused] $#-
optimized away (dependency)

Type#237 [unused] $#-
optimized away (dependency)

Type#238 [unused] $#-
optimized away (dependency)

Type#239 [unused] $#-
optimized away (dependency)

Type#240 [unused] $#-
optimized away (dependency)

Type#241 [unused] $#-
optimized away (dependency)

Type#242 [unused] $#-
optimized away (dependency)

Type#243 [unused] $#-
optimized away (dependency)

Type#244 [unused] $#-
optimized away (dependency)

Type#245 [unused] $#-
optimized away (dependency)

Type#246 [unused] $#-
optimized away (dependency)

Type#247 [unused] $#-
optimized away (dependency)

Type#248 [unused] $#-
optimized away (dependency)

Type#249 [unused] $#-
optimized away (dependency)

Type#250 [unused] $#-
optimized away (dependency)

Type#251 [unused] $#-
optimized away (dependency)

Type#252 [unused] $#-
optimized away (dependency)

Type#253 [unused] $#-
optimized away (dependency)

Type#254 [unused] $#-
optimized away (dependency)

Type#255 [unused] $#-
optimized away (dependency)

Type#256 [unused] $#-
optimized away (dependency)

Type#257 [unused] $#-
optimized away (dependency)

Type#258 [unused] $#-
optimized away (dependency)

Type#259 [unused] $#-
optimized away (dependency)

Type#260 [unused] $#-
optimized away (dependency)

Type#261 [unused] $#-
optimized away (dependency)

Type#262 [unused] $#-
optimized away (dependency)

Type#263 [unused] $#-
optimized away (dependency)

Type#264 [unused] $#-
optimized away (dependency)

Type#265 [unused] $#-
optimized away (dependency)

Type#266 [unused] $#-
optimized away (dependency)

Type#267 [unused] $#-
optimized away (dependency)

Type#268 [unused] $#-
optimized away (dependency)

Type#269 [unused] $#-
optimized away (dependency)

Type#270 [unused] $#-
optimized away (dependency)

Type#271 [unused] $#-
optimized away (dependency)

Type#272 [unused] $#-
optimized away (dependency)

Type#273 [unused] $#-
optimized away (dependency)

Type#274 [unused] $#-
optimized away (dependency)

Type#275 [unused] $#-
optimized away (dependency)

Type#276 [unused] $#-
optimized away (dependency)

Type#277 [unused] $#-
optimized away (dependency)

Type#278 [unused] $#-
optimized away (dependency)

Type#279 [unused] $#-
optimized away (dependency)

Type#280 [unused] $#-
optimized away (dependency)

Type#281 [unused] $#-
optimized away (dependency)

Type#282 [unused] $#-
optimized away (dependency)

Type#283 [unused] $#-
optimized away (dependency)

Type#284 [unused] $#-
optimized away (dependency)

Type#285 [unused] $#-
optimized away (dependency)

Type#286 [unused] $#-
optimized away (dependency)

Type#287 [unused] $#-
optimized away (dependency)

Type#288 [unused] $#-
optimized away (dependency)

Type#289 [unused] $#-
optimized away (dependency)

Type#290 [unused] $#-
optimized away (dependency)

Type#291 [unused] $#-
optimized away (dependency)

Type#292 [unused] $#-
optimized away (dependency)

Type#293 [unused] $#-
optimized away (dependency)

Type#294 [unused] $#-
optimized away (dependency)

Type#295 [unused] $#-
optimized away (dependency)

Type#296 [unused] $#-
optimized away (dependency)

Type#297 [unused] $#-
optimized away (dependency)

Type#298 [unused] $#-
optimized away (dependency)

Type#299 [unused] lgl$-
val?            %97.1 = Force!<wrapped>    !v    %97.0, e2.3   <lgl$->
dependent slot

Type#300 [unused] $#-
optimized away (dependency)

Type#301 [unused] $#-
optimized away (dependency)

Type#302 [unused] $#-
optimized away (dependency)

Type#303 [unused] $#-
optimized away (dependency)

Type#304 [unused] $#-
optimized away (dependency)

Type#305 [unused] $#-
optimized away (dependency)

Type#306 [unused] $#-
optimized away (dependency)

Type#307 [unused] $#-
optimized away (dependency)

Type#308 [unused] $#-
optimized away (dependency)

Type#309 [unused] $#-
optimized away (dependency)

Type#310 [unused] $#-
optimized away (dependency)

Type#311 [unused] $#-
optimized away (dependency)

Type#312 [unused] $#-
optimized away (dependency)

Type#313 [unused] $#-
optimized away (dependency)

Type#314 [unused] $#-
optimized away (dependency)

Type#315 [unused] $#-
optimized away (dependency)

Type#316 [unused] str$-
optimized away (dependency)

Type#317 [unused] env-
optimized away (dependency)

Type#318 [used] lgl$-
val?            %101.5 = StaticCall         !v    exists[0x560a7cd08400](%101.3, missingArg, %101.4, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %101.6, %101.7 (Typecheck@0x560a71d8b840[Type#318])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#319 [unused] cls
optimized away (dependency)

Type#320 [unused] $#-
optimized away (dependency)

Type#321 [unused] $#-
optimized away (dependency)

Type#322 [unused] cls
val?            %116.2 = PopContext         C     %114.1, %108.6   <cls>
dependent slot

Type#323 [used] (nil|env)- (polluted)
val?^ | miss    %118.0 = LdVar              eR    allTable, e2.3
void                    Assume             D     %118.1, %116.4 (Typecheck@0x560a71d8b840[Type#323])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: (nil|env)-, expected: (nil|env)-, required: val?^ | miss

Type#324 [unused] env-
optimized away (dependency)

Type#325 [unused] env-
val?            %123.4 = StaticCall         !v    get[0x560a7cd074a0](".AllMTable", missingArg, %123.3) { 0 2n } e2.3   <env->
dependent slot

Type#326 [unused] cls
val?            %120.1 = Force!<value>      !v    %120.0, e2.3   <cls>
dependent slot

Type#327 [used] env-
val?^ | miss    %122.0 = LdVar              eR    allTable !upd, e2.3
void                    Assume             D     %122.1, %120.2 (Typecheck@0x560a71d8b840[Type#327])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#328 [used] str$-
val?^ | miss    %122.5 = LdVar              eR    what, e2.3
void                    Assume             D     %122.6, %120.2 (Typecheck@0x560a71d8b840[Type#328])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#329 [unused] cls
val?            %105.1 = Force!<value>      !v    %105.0, e2.3   <cls>
dependent slot

Type#330 [unused] env-
val?            %105.3 = Force!<value>      !v    %105.2, e2.3   <env->
dependent slot

Type#331 [used] str$-
val?^ | miss    %107.0 = LdVar              eR    what, e2.3
void                    Assume             D     %107.1, %105.4 (Typecheck@0x560a71d8b840[Type#331])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

----------------------
Inlinee: .newOrMultipleMethod [0x560a71d88ce0]
referenced: 74
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [used] lgl$-
val?            %110.4 = StaticCall         !v    .duplicateClassesExist[0x560a7cd3e2d0]() e110.3   <lgl$->
void                    Assume             D     %110.5, %110.6 (Typecheck@0x560a71d88be0[Type#0])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#1 [unused] cls
val?            %114.1 = Force!<lazy>       !v    %114.0, e110.3   <cls>
other unused reason

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: is.primitive [0x560a54179310]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

Type#1 [unused] str$-
str$-           %68.4 = CallSafeBuiltin    wed   typeof(%66.8)    <str$->
other unused reason

*********************** Compilation session for: getGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2,!Obj3) ***********************
======================= ClosureVersion: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
other unused reason

Type#2 [used] lgl$-
val+            %1.2  = CallSafeBuiltin    vwed  is.logical(%1.1)    <lgl$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a54e55690[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %3.0, %1.4 (Typecheck@0x560a54e55690[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %5.0, %1.4 (Typecheck@0x560a54e55690[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %5.3  = CallSafeBuiltin    vwed  is.na(%5.2)    <lgl$->
dependent slot

Type#10 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %9.1, %6.3 (Typecheck@0x560a54e55690[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

======================= ClosureVersion: getGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj1,!Obj2,!Obj3) =======================
referenced: 68
referenced non-empty: 32
read non-empty: 32
used: 6
present non-empty: 13

Used
exact match: 3
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 13
dependent: 22
other reasons unused non-empty: 4

Polluted
polluted: 5
used polluted: 1

----------------------
getGeneric [0x560a54ffa020]
referenced: 64
referenced non-empty: 28
read non-empty: 28
used: 6
present non-empty: 12

Used
exact match: 3
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 22
optimized away non-empty: 10
dependent: 20
other reasons unused non-empty: 2

Polluted
polluted: 5
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|cls) (polluted)
val+            %2.2  = Force!<lazy>       !vr   %1.3,    <(str|cls)>
other unused reason

Type#2 [unused] lgl$-
lgl$#-          %2.3  = CallSafeBuiltin    wed   is.function(%2.2)    <lgl$->
dependent slot

Type#3 [unused] cls
optimized away (dependency)

Type#4 [used] lgl$-
val?            %60.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%60.3, "genericFunction") e2.1   <lgl$->
void                    Assume             D     %60.5, %60.6 (Typecheck@0x560a574f80c0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] cls
val?            %64.2 = Force!<wrapped>    !     %64.0, e2.1   <cls>
dependent slot

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] env-
optimized away (dependency)

Type#14 [unused] str$-
optimized away (dependency)

Type#15 [unused] (nil|cls) (polluted)
val?            %6.6  = StaticCall         !v    .getGeneric[0x560a7cb06460](%6.3, %6.4, %6.5) e2.1   <(nil|cls)>
dependent slot

Type#16 [unused] str$+
optimized away

Type#17 [unused] str$-
optimized away (dependency)

Type#18 [unused] cls
val?            %59.5 = StaticCall         !v    .getGeneric[0x560a7caee140](%59.3, missingArg, %59.4) e2.1   <cls>
dependent slot

Type#19 [unused] (nil|cls) (polluted)
val?            %7.0  = Phi                      %6.6:BB6, %59.5:BB59   <(nil|cls)>
dependent slot

Type#20 [used] env-
val?            %10.3 = CallBuiltin        !v    baseenv() e2.1   <env->
void                    Assume             D     %14.0, %12.4 (Typecheck@0x560a574f80c0[Type#20])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [used] str$-
val?            %12.2 = Force!<wrapped>    !v    %12.1, e2.1   <str$->
void                    Assume             D     %12.3, %12.4 (Typecheck@0x560a574f80c0[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#23 [unused] (spec|blt)- (polluted)
val?            %14.5 = Extract2_1D        wed   %14.2, %14.4, elided   <(spec|blt)->
dependent slot

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [used] (spec|blt)- (polluted)
val?^ | miss    %45.3 = LdVar              eR    baseDef, e2.1
void                    Assume             D     %45.4, %15.1 (Typecheck@0x560a574f80c0[Type#25])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: (spec|blt)-, expected: (spec|blt)-, required: val?^ | miss

Type#26 [unused] lgl$-
lgl$#-          %45.8 = CallSafeBuiltin    wed   is.function(%45.7)    <lgl$->
dependent slot

Type#27 [unused] str$-
optimized away (dependency)

Type#28 [unused] cls
val?            %49.4 = StaticCall         !v    genericForBasic[0x560a7de38950](%49.3, missingArg, false) { 0 2n } e2.1   <cls>
dependent slot

Type#29 [unused] cls
optimized away (dependency)

Type#30 [used] lgl$-
val?            %51.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%51.3, "genericFunction") e2.1   <lgl$->
void                    Assume             D     %51.5, %51.6 (Typecheck@0x560a574f80c0[Type#30])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#31 [unused] str$-
optimized away (dependency)

Type#32 [unused] cls
optimized away (dependency)

Type#33 [unused] cls
val?            %57.8 = PopContext         C     %57.7, %55.5   <cls>
dependent slot

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] cls
val?            %21.4 = Force!<value>      !v    %21.3, e2.1   <cls>
dependent slot

Type#36 [used] lgl$-
val?            %21.5 = CallBuiltin        !v    is.function(%21.4) e2.1   <lgl$->
void                    Assume             D     %21.6, %21.7 (Typecheck@0x560a574f80c0[Type#36])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] cls
val?            %44.2 = Force!<value>      !     %44.0, e2.1   <cls>
dependent slot

----------------------
Inlinee: .cacheGeneric [0x560a54a9d440]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] cls
optimized away (dependency)

Type#2 [unused] env-
optimized away

Type#3 [unused] cls
val?            %57.7 = StaticCall         !v    .cacheGenericTable[0x560a7caf2ee0](%57.4, %57.5, %57.6) e57.3   <cls>
dependent slot

*********************** Compilation session for: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 7
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 7
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val+            %1.1  = Force!<lazy>       !vr   %1.0,    <val?>
other unused reason

Type#2 [used] lgl$-
val+            %1.2  = CallSafeBuiltin    vwed  is.logical(%1.1)    <lgl$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a54e55690[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val+            %1.1  = Force!<lazy>       !vr   %1.0,    <val?>
void                    Assume             D     %3.0, %1.4 (Typecheck@0x560a54e55690[Type#4])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val+            %1.1  = Force!<lazy>       !vr   %1.0,    <val?>
void                    Assume             D     %5.0, %1.4 (Typecheck@0x560a54e55690[Type#8])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %5.3  = CallSafeBuiltin    vwed  is.na(%5.2)    <lgl$->
dependent slot

Type#10 [used] lgl$-
val+            %1.1  = Force!<lazy>       !vr   %1.0,    <val?>
void                    Assume             D     %9.1, %6.3 (Typecheck@0x560a54e55690[Type#10])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?+

*********************** Compilation session for: .class1 (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) ***********************
======================= ClosureVersion: .class1 (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) =======================
referenced: 10
referenced non-empty: 6
read non-empty: 6
used: 2
present non-empty: 2

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
.class1 [0x560a713f90f0]
referenced: 10
referenced non-empty: 6
read non-empty: 6
used: 2
present non-empty: 2

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|cls) (polluted)
val?            %2.2  = Force!<lazy>       !vr   %1.0,    <(str|cls)>
other unused reason

Type#2 [used] str$+
val?            %2.3  = CallBuiltin        !v    class(%2.2) e2.1   <str$+>
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a7143c850[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$+
optimized away (dependency)

Type#5 [used] int$-
(int|real)$-    %4.6  = CallSafeBuiltin    wed   length(%4.5)    <int$->
void                    Assume             D     %4.7, %4.8 (Typecheck@0x560a7143c850[Type#5])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] lgl$-
lgl$-           %6.2  = Gt                 d     %6.1, 1L, elided   <lgl$->
other unused reason

Type#7 [unused] str$+
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: body<- (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: body<- (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 3
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
body<- [0x560a7144cb90]
referenced: 3
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] cls (polluted)
val?            %2.5  = CallBuiltin        !     standardGeneric("body<-") e2.4   <cls>
other unused reason

*********************** Compilation session for: as (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1 miss: 2) ***********************
======================= ClosureVersion: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,!Obj0) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val+            %1.1  = Force!<lazy>             %1.0,    <val?>
other unused reason

Type#2 [used] lgl$-
val+            %1.2  = CallSafeBuiltin    vwed  is.logical(%1.1)    <lgl$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a54e55690[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val+            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %3.0, %1.4 (Typecheck@0x560a54e55690[Type#4])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val+            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %5.0, %1.4 (Typecheck@0x560a54e55690[Type#8])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %5.3  = CallSafeBuiltin    vwed  is.na(%5.2)    <lgl$->
dependent slot

Type#10 [used] lgl$-
val+            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %9.1, %6.3 (Typecheck@0x560a54e55690[Type#10])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?+

======================= ClosureVersion: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
other unused reason

Type#2 [used] lgl$-
val+            %1.2  = CallSafeBuiltin    vwed  is.logical(%1.1)    <lgl$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a54e55690[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %3.0, %1.4 (Typecheck@0x560a54e55690[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %5.0, %1.4 (Typecheck@0x560a54e55690[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %5.3  = CallSafeBuiltin    vwed  is.na(%5.2)    <lgl$->
dependent slot

Type#10 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %9.1, %6.3 (Typecheck@0x560a54e55690[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

======================= ClosureVersion: environment (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
environment [0x560a55e84a10]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|cls) (polluted)
val+            %1.1  = Force!<lazy>             %1.0,    <(nil|cls)>
other unused reason

======================= ClosureVersion: isTRUE (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 3
present non-empty: 2

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
isTRUE [0x560a55e9e1e0]
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 3
present non-empty: 2

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
other unused reason

Type#2 [used] lgl$-
val+            %1.2  = CallSafeBuiltin    vwed  is.logical(%1.1)    <lgl$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a55e9bc50[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %3.0, %1.4 (Typecheck@0x560a55e9bc50[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %5.0, %1.4 (Typecheck@0x560a55e9bc50[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %5.3  = CallSafeBuiltin    vwed  is.na(%5.2)    <lgl$->
dependent slot

Type#10 [unused] lgl$-
optimized away (dependency)

======================= ClosureVersion: getClassDef (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl2,!Obj2 miss: 1) =======================
referenced: 60
referenced non-empty: 38
read non-empty: 36
used: 1
present non-empty: 21

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 37
optimized away non-empty: 16
dependent: 30
other reasons unused non-empty: 7

Polluted
polluted: 5
used polluted: 0

----------------------
getClassDef [0x560a569916a0]
referenced: 42
referenced non-empty: 27
read non-empty: 25
used: 1
present non-empty: 11

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 15
dependent: 24
other reasons unused non-empty: 2

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] str$+ (polluted)
optimized away

Type#6 [unused] (nil|other) (polluted)
val?            %4.9  = PopContext         C     %4.8, %2.5   <(nil|other)>
dependent slot

Type#7 [unused] (nil|other) (polluted)
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] (nil|other) (polluted)
val             %6.0  = ChkMissing         e     %4.9   <(nil|other)>
dependent slot

Type#13 [unused] str$-
optimized away (dependency)

Type#14 [unused] int$-
optimized away

Type#15 [unused] lgl$-
optimized away (dependency)

Type#16 [unused] str$-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] str$-
val?            %14.14 = PopContext         C     %14.13, %10.4   <str$->
dependent slot

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] env-
val?            %16.4 = Force!<lazy>       !v    %16.3, e2.3   <env->
dependent slot

Type#22 [unused] lgl$-
lgl$#-          %16.5 = CallSafeBuiltin    wed   is.character(%16.4)    <lgl$->
dependent slot

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] str$-
optimized away (dependency)

Type#25 [unused] lgl$-
optimized away (dependency)

Type#26 [used] lgl$-
val?            %20.4 = StaticCall         !v    isTRUE[0x560a7db829d0](%20.3) e2.3   <lgl$->
void                    Assume             D     %20.5, %20.6 (Typecheck@0x560a56991590[Type#26])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#27 [unused] str$-
optimized away (dependency)

Type#28 [unused] env-
val?            %34.4 = StaticCall         !v    .requirePackage[0x560a7dcfa400](%34.3) e2.3   <env->
dependent slot

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] env-
val?            %26.4 = Force!<value>      !v    %26.3, e2.3   <env->
dependent slot

Type#31 [unused] lgl$-
lgl$#-          %26.5 = CallSafeBuiltin    wed   is.environment(%26.4)    <lgl$->
dependent slot

Type#32 [unused] str$-
optimized away (dependency)

Type#33 [unused] env-
optimized away (dependency)

Type#34 [unused] lgl$-
optimized away (dependency)

Type#35 [unused] other$
val?            %33.6 = StaticCall         !v    get0[0x560a7db96760](%33.3, %33.4, missingArg, %33.5) { 0 1 3n } e2.3   <other$>
dependent slot

Type#36 [unused] other$
val?            %30.1 = Force!<value>      !v    %30.0, e2.3   <other$>
dependent slot

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] other$
val?            %9.2  = Force!<value>      !     %9.0, e2.3   <other$>
dependent slot

----------------------
Inlinee: methodsPackageMetaName [0x560a595b46a0]
referenced: 9
referenced non-empty: 5
read non-empty: 5
used: 0
present non-empty: 5

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 0
dependent: 4
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] vec
val?            %14.5 = Force!<value>      !v    %14.3, e14.4   <vec>
other unused reason

Type#5 [unused] str$-
val?            %14.7 = Force!<value>      !v    %14.6, e14.4   <str$->
dependent slot

Type#6 [unused] str$-
val?            %14.9 = Force!<lazy>       !v    %14.8, e14.4   <str$->
dependent slot

Type#7 [unused] str$-
val?            %14.11 = Force!<lazy>       !v    %14.10, e14.4   <str$->
dependent slot

Type#8 [unused] str$-
val?            %14.12 = CallBuiltin        !v    .Call(%14.5, %14.7, %14.9, %14.11) e14.4   <str$->
dependent slot

----------------------
Inlinee: classMetaName [0x560a59d31030]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] str$-
val?            %14.13 = PopContext         C     %14.12, %12.5   <str$->
dependent slot

----------------------
Inlinee: .getClassesFromCache [0x560a5695c4d0]
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %4.3  = Force!<value>      !v    %4.1, e4.2   <vec>
other unused reason

Type#4 [unused] str$+ (polluted)
val?            %4.5  = Force!<lazy>       !v    %4.4, e4.2   <str$+>
other unused reason

Type#5 [unused] env-
val?            %4.7  = Force!<wrapped>    !v    %4.6, e4.2   <env->
other unused reason

Type#6 [unused] other$
val?            %4.8  = CallBuiltin        !v    .Call(%4.3, %4.5, %4.7) e4.2   <other$>
other unused reason

======================= ClosureVersion: exists (CorrOrd,!TMany,Argmatch;Eager0,Eager1,Eager3,Eager4,Eager5,NonRefl0,NonRefl1,NonRefl3,NonRefl4,NonRefl5,!Obj0,!Obj5) =======================
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

----------------------
exists [0x560a572da620]
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] (int|env)- (polluted)
optimized away

Type#3 [unused] env+ (polluted)
optimized away (dependency)

Type#4 [unused] str$+ (polluted)
val+            %7.1  = Force!<lazy>       !vr   %7.0,    <str$+>
other unused reason

Type#5 [unused] env+ (polluted)
val?            %7.3  = Force!<lazy>       !v    %7.2, e1.8   <env+>
dependent slot

Type#6 [unused] str$-
val?            %7.5  = Force!<lazy>       !v    %7.4, e1.8   <str$->
other unused reason

Type#7 [unused] lgl$-
val?            %7.7  = Force!<lazy>       !v    %7.6, e1.8   <lgl$->
other unused reason

======================= ClosureVersion: as (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1 miss: 2) =======================
referenced: 131
referenced non-empty: 73
read non-empty: 73
used: 14
present non-empty: 24

Used
exact match: 10
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 59
optimized away non-empty: 35
dependent: 55
other reasons unused non-empty: 4

Polluted
polluted: 9
used polluted: 0

----------------------
as [0x560a7137abc0]
referenced: 114
referenced non-empty: 63
read non-empty: 63
used: 11
present non-empty: 19

Used
exact match: 8
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 52
optimized away non-empty: 33
dependent: 51
other reasons unused non-empty: 1

Polluted
polluted: 6
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] (str|cls) (polluted)
optimized away (dependency)

Type#4 [unused] str$+
val?            %10.1 = PopContext         C     %10.0, %2.4   <str$+>
dependent slot

Type#5 [unused] str$+
optimized away (dependency)

Type#6 [unused] str$-
optimized away (dependency)

Type#7 [used] lgl$-
val?            %16.2 = PopContext         C     %16.1, %12.5   <lgl$->
void                    Assume             D     %16.3, %16.4 (Typecheck@0x560a70d5bd90[Type#7])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#8 [unused] str$-
optimized away (dependency)

Type#9 [used] lgl$-
val?            %23.2 = PopContext         C     %23.1, %19.4   <lgl$->
void                    Assume             D     %23.3, %23.4 (Typecheck@0x560a70d5bd90[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [unused] (str|cls)- (polluted)
val?            %92.2 = Force!<wrapped>    !     %92.0, e1.2   <(str|cls)->
other unused reason

Type#11 [unused] str$+
optimized away (dependency)

Type#12 [unused] env-
val?            %29.4 = StaticCall         !v    .classEnv[0x560a7dd50760](%29.3, missingArg, false) { 0 2n } e1.2   <env->
dependent slot

Type#13 [unused] env-
optimized away (dependency)

Type#14 [unused] cls
val?            %31.4 = StaticCall         !v    getGeneric[0x560a7dbacc80]("coerce", missingArg, %31.3) { 0 2n } e1.2   <cls>
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] cls
optimized away (dependency)

Type#17 [unused] env-
optimized away (dependency)

Type#18 [unused] env-
val?            %33.5 = StaticCall         !v    .getMethodsTable[0x560a7dbca1f0](%33.3, %33.4, missingArg, true) { 0 1 3n } e1.2   <env->
dependent slot

Type#19 [unused] str$+
optimized away (dependency)

Type#20 [unused] str$-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] env-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] (nil|cls) (polluted)
val?            %35.8 = StaticCall         !v    .quickCoerceSelect[0x560a7db8e2d0](%35.3, %35.4, %35.5, %35.6, %35.7) e1.2   <(nil|cls)>
dependent slot

Type#25 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [used] str$+
val?^ | miss    %43.3 = LdVar              eR    thisClass, e1.2
void                    Assume             D     %43.4, %35.11 (Typecheck@0x560a70d5bd90[Type#28])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str$+, expected: str$+, required: val?^ | miss

Type#29 [unused] str$-
val?            %43.9 = Force!<wrapped>    !v    %43.8, e1.2   <str$->
dependent slot

Type#30 [unused] str+
val?            %43.10 = NamedCall          !v    <blt c>(from=%43.7, to=%43.9) e1.2   <str+>
dependent slot

Type#31 [unused] str+
optimized away (dependency)

Type#32 [unused] cls
optimized away (dependency)

Type#33 [unused] cls
optimized away (dependency)

Type#34 [unused] env-
optimized away (dependency)

Type#35 [unused] nil-
val?            %43.16 = NamedCall          !v    %43.12("coerce", %43.13, optional=true, useInherited=false, fdef=%43.14, mlist=%43.15) e1.2   <nil->
dependent slot

Type#36 [unused] nil-
optimized away (dependency)

Type#37 [unused] cls
optimized away (dependency)

Type#38 [unused] str$-
optimized away (dependency)

Type#39 [used] lgl$-
val?            %47.5 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%47.3, %47.4) e1.2   <lgl$->
void                    Assume             D     %47.6, %47.7 (Typecheck@0x560a70d5bd90[Type#39])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#40 [unused] str$-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] other$
val?            %70.5 = StaticCall         !v    getClassDef[0x560a7e105bc0](%70.3, %70.4) e1.2   <other$>
dependent slot

Type#43 [unused] other$
val?            %72.4 = Force!<lazy>       !v    %72.3, e1.2   <other$>
dependent slot

Type#44 [used] lgl$-
val?            %72.6 = StaticCall         !v    isFALSE[0x560a7e165d20](%72.5) e1.2   <lgl$->
void                    Assume             D     %72.7, %72.8 (Typecheck@0x560a70d5bd90[Type#44])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#45 [unused] other$
val?            %75.4 = Force!<wrapped>    !v    %75.3, e1.2   <other$>
dependent slot

Type#46 [used] lgl$-
val?            %75.6 = StaticCall         !v    isTRUE[0x560a7e08f520](%75.5) e1.2   <lgl$->
void                    Assume             D     %75.7, %75.8 (Typecheck@0x560a70d5bd90[Type#46])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] cls-
val?            %78.3 = Call               !v    %78.0(%78.1, %78.2) e1.2   <cls->
dependent slot

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] cls-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] lgl$-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] cls-
val?            %80.8 = StaticCall         !v    .makeAsMethod[0x560a7e1901c0](%80.3, %80.4, %80.5, %80.6, %80.7) e1.2   <cls->
dependent slot

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [used] cls-
val?^ | miss    %82.3 = LdVar              eR    test, e1.2
void                    Assume             D     %82.4, %80.10 (Typecheck@0x560a70d5bd90[Type#61])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: cls-, expected: cls-, required: val?^ | miss

Type#62 [unused] lgl$-
lgl$#-          %82.8 = CallSafeBuiltin    wed   is.function(%82.7)    <lgl$->
dependent slot

Type#63 [unused] cls-
optimized away (dependency)

Type#64 [unused] lgl$-
optimized away (dependency)

Type#65 [used] lgl$-
val?            %87.4 = StaticCall         !v    isTRUE[0x560a7db829d0](%87.3) e1.2   <lgl$->
void                    Assume             D     %87.5, %87.6 (Typecheck@0x560a70d5bd90[Type#65])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [used] cls-
val?^ | miss    %53.0 = LdVar              eR    asMethod, e1.2
void                    Assume             D     %53.1, %51.0 (Typecheck@0x560a70d5bd90[Type#74])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: cls-, expected: cls-, required: val?^ | miss

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] cls-
optimized away (dependency)

Type#87 [used] lgl$-
val?^ | miss    %57.0 = LdVar              eR    canCache, e1.2
void                    Assume             D     %57.1, %51.0 (Typecheck@0x560a70d5bd90[Type#87])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#88 [unused] cls-
optimized away (dependency)

Type#89 [unused] str$+
optimized away (dependency)

Type#90 [unused] other$
optimized away (dependency)

Type#91 [unused] $#-
optimized away (dependency)

Type#92 [unused] cls
val?            %67.7 = StaticCall         !v    .asCoerceMethod[0x560a7e176290](%67.3, %67.4, %67.5, false, %67.6) e1.2   <cls>
dependent slot

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] cls
val?            %59.1 = Force!<value>      !v    %59.0, e1.2   <cls>
dependent slot

Type#99 [used] lgl$-
val?^ | miss    %62.0 = LdVar              eR    canCache, e1.2
void                    Assume             D     %62.1, %59.3 (Typecheck@0x560a70d5bd90[Type#99])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#100 [unused] str+
optimized away (dependency)

Type#101 [unused] cls
optimized away (dependency)

Type#102 [unused] cls
optimized away (dependency)

Type#103 [unused] lgl$-
optimized away (dependency)

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] $#-
optimized away (dependency)

Type#106 [unused] $#-
optimized away (dependency)

Type#107 [unused] $#-
optimized away (dependency)

Type#108 [unused] $#-
optimized away (dependency)

Type#109 [unused] lgl$-
val?            %39.2 = Force!<lazy>       !     %39.0, e1.2   <lgl$->
dependent slot

Type#110 [unused] $#-
optimized away (dependency)

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] (str|cls) (polluted)
optimized away (dependency)

Type#113 [unused] (str|cls) (polluted)
val?            %41.2 = Call               !     %41.0(%41.1) e1.2   <(str|cls)>
dependent slot

----------------------
Inlinee: .identC [0x560a569917c0]
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %21.3 = Force!<value>      !v    %21.1, e21.2   <vec>
other unused reason

Type#4 [unused] str$+ (polluted)
val?            %21.5 = Force!<lazy>       !v    %21.4, e21.2   <str$+>
dependent slot

Type#5 [unused] str$+ (polluted)
val?            %21.7 = Force!<lazy>       !v    %21.6, e21.2   <str$+>
dependent slot

Type#6 [used] lgl$-
val?            %21.8 = CallBuiltin        !v    .Call(%21.3, %21.5, %21.7) e21.2   <lgl$->
void                    Assume             D     %21.9, %21.10 (Typecheck@0x560a5692fc50[Type#6])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: .class1 [0x560a713f90f0]
referenced: 10
referenced non-empty: 6
read non-empty: 6
used: 2
present non-empty: 2

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|cls) (polluted)
val?            %4.2  = Force!<lazy>       !vL   %2.5, e4.1   <(str|cls)>
other unused reason

Type#2 [used] str$+
val?            %4.3  = CallBuiltin        !v    class(%4.2) e4.1   <str$+>
void                    Assume             D     %4.5, %4.6 (Typecheck@0x560a7143c850[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$+
optimized away (dependency)

Type#5 [used] int$-
(int|real)$-    %6.6  = CallSafeBuiltin    wed   length(%6.5)    <int$->
void                    Assume             D     %6.7, %6.8 (Typecheck@0x560a7143c850[Type#5])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] lgl$-
lgl$-           %8.2  = Gt                 d     %8.1, 1L, elided   <lgl$->
other unused reason

Type#7 [unused] str$+
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

======================= ClosureVersion: formalArgs (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 7
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
formalArgs [0x560a7137a2c0]
referenced: 7
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] cls (polluted)
val?            %2.8  = Force!<lazy>       !v    %1.0, e2.6   <cls>
other unused reason

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [used] list-
val?            %2.10 = StaticCall         !vr   formals[0x560a7db444d0](%2.9, %2.7) { 0 1n } e2.6   <list->
void                    Assume             D     %2.11, %2.12 (Typecheck@0x560a7137a1d0[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: list-, expected: list-, required: val?+

Type#6 [unused] str-
val+            %4.2  = CallSafeBuiltin    vwed  names(%4.1)    <str->
other unused reason

======================= ClosureVersion: .matchSigLength (!ExpMi,CorrOrd,!TMany,Argmatch;Eager3,NonRefl3,!Obj3) =======================
referenced: 93
referenced non-empty: 20
read non-empty: 20
used: 6
present non-empty: 8

Used
exact match: 4
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 6
dependent: 10
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 0

----------------------
.matchSigLength [0x560a71363170]
referenced: 87
referenced non-empty: 15
read non-empty: 15
used: 6
present non-empty: 5

Used
exact match: 4
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 4
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] env-
optimized away

Type#2 [used] int$-
val?            %2.6  = StaticCall         !v    .getGenericSigLength[0x560a7e0436a0](%2.4, %2.5, true) e2.3   <int$->
void                    Assume             D     %2.7, %2.8 (Typecheck@0x560a7137a690[Type#2])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str+
val?            %6.4  = Force!<lazy>       !v    %6.3, e2.3   <str+>
void                    Assume             D     %6.5, %6.6 (Typecheck@0x560a7137a690[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?+

Type#5 [used] int$-
(int|real)$-    %8.2  = CallSafeBuiltin    wed   length(%8.1)    <int$->
void                    Assume             D     %8.3, %8.4 (Typecheck@0x560a7137a690[Type#5])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] str+
optimized away (dependency)

Type#7 [unused] nil-
val?            %14.4 = PopContext         C     %14.3, %12.4   <nil->
dependent slot

Type#8 [used] int$-
val?^ | miss    %16.0 = LdVar              eR    n, e2.3
void                    Assume             D     %16.1, %14.6 (Typecheck@0x560a7137a690[Type#8])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#9 [used] int$-
val?^ | miss    %16.4 = LdVar              eR    nargs, e2.3
void                    Assume             D     %16.5, %14.6 (Typecheck@0x560a7137a690[Type#9])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#10 [unused] lgl$-
lgl$-           %16.8 = Lt                 d     %16.3, %16.7, elided   <lgl$->
dependent slot

Type#11 [unused] int$-
optimized away (dependency)

Type#12 [unused] int$-
optimized away (dependency)

Type#13 [unused] lgl$-
lgl$-           %17.0 = Gt                 d     %16.3, %16.7, elided   <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [used] nil-
val?^ | miss    %22.0 = LdVar              eR    pkgs, e2.3
void                    Assume             D     %22.1, %20.0 (Typecheck@0x560a7137a690[Type#84])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: nil-, expected: nil-, required: val?^ | miss

Type#85 [unused] str+
val?            %22.9 = Force!<wrapped>    !v    %22.8, e2.3   <str+>
dependent slot

Type#86 [unused] str+
val?            %22.16 = PopContext         C     %22.13, %22.10   <str+>
dependent slot

----------------------
Inlinee: packageSlot<- [0x560a71363290]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|str)- (polluted)
optimized away

Type#1 [unused] str+
optimized away (dependency)

Type#2 [unused] str+
val?            %22.13 = NamedCall          !v    %22.12(%22.9, "package", value=%22.4) e22.11   <str+>
dependent slot

----------------------
Inlinee: packageSlot [0x560a6f2c7cd0]
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (str|other) (polluted)
val?            %14.2 = Force!<lazy>       !vL   %12.5, e14.1   <(str|other)>
other unused reason

Type#2 [unused] (nil|str)- (polluted)
val?            %14.3 = CallBuiltin        !v    attr(%14.2, "package") e14.1   <(nil|str)->
other unused reason

======================= ClosureVersion: body<- (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager2,NonRefl0,NonRefl2) =======================
referenced: 3
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
body<- [0x560a7144cb90]
referenced: 3
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] cls (polluted)
val?            %2.5  = CallBuiltin        !     standardGeneric("body<-") e2.4   <cls>
other unused reason

======================= ClosureVersion: .getGenericSigLength (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl2,!Obj2) =======================
referenced: 8
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 1

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
.getGenericSigLength [0x560a7108d500]
referenced: 8
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 1

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] lgl$-
val+            %1.3  = Force<value>             %1.0,    <lgl$->
dependent slot

Type#3 [unused] env-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %3.4  = StaticCall         !     exists[0x560a7e285a10](".SigLength", missingArg, %3.3, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %3.5, %3.6 (Typecheck@0x560a714137e0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] env-
optimized away (dependency)

Type#7 [used] int$-
val?            %10.4 = StaticCall         !     get[0x560a7dbe9210](".SigLength", missingArg, %10.3) { 0 2n } e2.3   <int$->
void                    Assume             D     %10.5, %10.6 (Typecheck@0x560a714137e0[Type#7])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

======================= ClosureVersion: .quickCoerceSelect (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl3) =======================
referenced: 38
referenced non-empty: 11
read non-empty: 8
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 10
optimized away non-empty: 8
dependent: 7
other reasons unused non-empty: 3

Polluted
polluted: 3
used polluted: 0

----------------------
.quickCoerceSelect [0x560a71382c20]
referenced: 38
referenced non-empty: 11
read non-empty: 8
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 10
optimized away non-empty: 8
dependent: 7
other reasons unused non-empty: 3

Polluted
polluted: 3
used polluted: 0

Type#0 [used] env-
val?            %1.6  = Force!<lazy>       !vrd  %1.1,    <env->
void                    Assume             D     %1.8, %1.9 (Typecheck@0x560a7144d410[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?^ | miss

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] lgl$-
lgl$#-          %3.3  = CallSafeBuiltin    wed   is.environment(%1.6)    <lgl$->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] str$+
optimized away

Type#30 [unused] str$-
optimized away

Type#31 [unused] str-
optimized away

Type#32 [unused] env-
optimized away (dependency)

Type#33 [unused] (nil|cls) (polluted)
val?            %7.5  = StaticCall         !v    .findMethodInTable[0x560a7e0438a0](%7.3, %7.4) e1.5   <(nil|cls)>
dependent slot

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#36 [unused] lgl$-
optimized away (dependency)

Type#37 [unused] (nil|cls) (polluted)
optimized away (dependency)

======================= ClosureVersion: .classEnv (CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj2) =======================
referenced: 38
referenced non-empty: 16
read non-empty: 16
used: 2
present non-empty: 7

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 7
dependent: 11
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 0

----------------------
.classEnv [0x560a713ff040]
referenced: 35
referenced non-empty: 14
read non-empty: 14
used: 2
present non-empty: 5

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 7
dependent: 11
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] str$+
val?            %5.4  = Force!<lazy>       !v    %5.3, e1.4   <str$+>
void                    Assume             D     %5.5, %5.6 (Typecheck@0x560a714d7840[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#3 [unused] lgl$-
lgl$#-          %7.2  = CallSafeBuiltin    wed   is.character(%7.1)    <lgl$->
other unused reason

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$+
optimized away (dependency)

Type#8 [unused] (nil|str)- (polluted)
val?            %13.4 = PopContext         C     %13.3, %11.4   <(nil|str)->
dependent slot

Type#9 [unused] (nil|str)- (polluted)
optimized away (dependency)

Type#10 [unused] str$-
optimized away (dependency)

Type#11 [unused] env-
val?            %16.4 = StaticCall         !     .requirePackage[0x560a7dcfa400](%16.3) e1.4   <env->
dependent slot

Type#12 [unused] env-
val?            %18.1 = Force!<lazy>       !v    %18.0, e1.4   <env->
dependent slot

Type#13 [unused] str$-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] other$
val?            %20.5 = StaticCall         !v    getClassDef[0x560a7db5bb60](%20.3, %20.4, nil) e1.4   <other$>
dependent slot

Type#16 [unused] other$
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] other$
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [used] env-
val?^ | miss    %26.0 = LdVar              eR    value, e1.4
void                    Assume             D     %26.1, %23.1 (Typecheck@0x560a714d7840[Type#34])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

----------------------
Inlinee: packageSlot [0x560a6f2c7cd0]
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (str|other) (polluted)
val?            %13.2 = Force!<lazy>       !vL   %11.5, e13.1   <(str|other)>
other unused reason

Type#2 [unused] (nil|str)- (polluted)
val?            %13.3 = CallBuiltin        !v    attr(%13.2, "package") e13.1   <(nil|str)->
other unused reason

======================= ClosureVersion: .cacheMethodInTable (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 113
referenced non-empty: 28
read non-empty: 25
used: 2
present non-empty: 11

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 15
dependent: 17
other reasons unused non-empty: 9

Polluted
polluted: 3
used polluted: 0

----------------------
.cacheMethodInTable [0x560a71d7cf70]
referenced: 32
referenced non-empty: 19
read non-empty: 19
used: 2
present non-empty: 6

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 17
optimized away non-empty: 11
dependent: 17
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] cls
val?            %2.4  = Force!<lazy>       !v    %1.3, e2.3   <cls>
dependent slot

Type#3 [unused] env-
val?            %2.6  = StaticCall         !v    environment[0x560a7e0bd620](%2.5) e2.3   <env->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str+
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] env-
optimized away (dependency)

Type#10 [unused] str+
val?            %10.6 = StaticCall         !v    .matchSigLength[0x560a7e0435a0](%10.3, %10.4, %10.5, true) e2.3   <str+>
dependent slot

Type#11 [unused] str+
optimized away (dependency)

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] str$-
optimized away (dependency)

Type#14 [unused] env-
optimized away (dependency)

Type#15 [used] lgl$-
val?            %14.5 = StaticCall         !v    exists[0x560a7e051bb0](%14.3, missingArg, %14.4, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %14.6, %14.7 (Typecheck@0x560a71f58000[Type#15])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#16 [unused] cls
val?            %16.4 = Force!<lazy>       !v    %16.3, e2.3   <cls>
dependent slot

Type#17 [used] lgl$-
val?            %19.3 = StaticCall         !v    .duplicateClassesExist[0x560a7e0e1b00]() e2.3   <lgl$->
void                    Assume             D     %19.4, %19.5 (Typecheck@0x560a71f58000[Type#17])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#18 [unused] cls
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] lgl$-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] cls
val?            %24.3 = PopContext         C     %24.2, %23.8   <cls>
dependent slot

Type#24 [unused] str$-
optimized away (dependency)

Type#25 [unused] cls
optimized away (dependency)

Type#26 [unused] env-
optimized away (dependency)

Type#27 [unused] cls
val?            %26.6 = StaticCall         !     assign[0x560a7e1ec720](%26.3, %26.4, missingArg, %26.5) { 0 1 3n } e2.3   <cls>
dependent slot

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: paste [0x560a55fd8390]
referenced: 4
referenced non-empty: 4
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec- (polluted)
val+            %12.14 = CallSafeBuiltin    wed   list(%12.13)    <vec->
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] (nil|str)- (polluted)
optimized away

Type#3 [unused] lgl$-
optimized away

----------------------
Inlinee: .methodPackageSlots [0x560a719ebdd0]
referenced: 75
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] str
val?            %23.18 = Call               !v    %23.15(%23.16, %23.17) e23.14   <str>
other unused reason

Type#3 [unused] lgl$-
val?            %23.22 = Force!<lazy>       !v    %23.21, e23.14   <lgl$->
other unused reason

Type#4 [unused] cls
val?            %24.2 = Force!<wrapped>    !     %24.0, e23.14   <cls>
other unused reason

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: .sigLabel [0x560a7113f950]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str (polluted)
optimized away

Type#1 [unused] str$-
val+            %12.15 = CallSafeBuiltin    wed   paste(%12.14, " ", "#", false)    <str$->
other unused reason

*********************** Compilation session for: .classEnv (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) ***********************
======================= ClosureVersion: .classEnv (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 38
referenced non-empty: 16
read non-empty: 16
used: 2
present non-empty: 7

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 7
dependent: 11
other reasons unused non-empty: 3

Polluted
polluted: 4
used polluted: 0

----------------------
.classEnv [0x560a713ff040]
referenced: 35
referenced non-empty: 14
read non-empty: 14
used: 2
present non-empty: 5

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 7
dependent: 11
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] str$+
val?            %2.3  = Force!<lazy>       !v    %1.0, e1.1   <str$+>
void                    Assume             D     %2.4, %2.5 (Typecheck@0x560a714d7840[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#3 [unused] lgl$-
lgl$#-          %4.2  = CallSafeBuiltin    wed   is.character(%4.1)    <lgl$->
other unused reason

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$+
optimized away (dependency)

Type#8 [unused] (nil|str)- (polluted)
val?            %10.4 = PopContext         C     %10.3, %8.4   <(nil|str)->
dependent slot

Type#9 [unused] (nil|str)- (polluted)
optimized away (dependency)

Type#10 [unused] str$-
optimized away (dependency)

Type#11 [unused] env-
val?            %13.4 = StaticCall         !     .requirePackage[0x560a7e72e610](%13.3) e1.1   <env->
dependent slot

Type#12 [unused] env-
val?            %15.1 = Force!<lazy>       !v    %15.0, e1.1   <env->
dependent slot

Type#13 [unused] str$-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] other$
val?            %17.5 = StaticCall         !v    getClassDef[0x560a7e45f140](%17.3, %17.4, nil) e1.1   <other$>
dependent slot

Type#16 [unused] other$
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] other$
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [used] env-
val?^ | miss    %23.0 = LdVar              eR    value, e1.1
void                    Assume             D     %23.1, %20.1 (Typecheck@0x560a714d7840[Type#34])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

----------------------
Inlinee: packageSlot [0x560a6f2c7cd0]
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (str|other) (polluted)
val?            %10.2 = Force!<lazy>       !vL   %8.5, e10.1   <(str|other)>
other unused reason

Type#2 [unused] (nil|str)- (polluted)
val?            %10.3 = CallBuiltin        !v    attr(%10.2, "package") e10.1   <(nil|str)->
other unused reason

*********************** Compilation session for: getGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2 miss: 1) ***********************
======================= ClosureVersion: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
other unused reason

Type#2 [used] lgl$-
val+            %1.2  = CallSafeBuiltin    vwed  is.logical(%1.1)    <lgl$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a54e55690[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %3.0, %1.4 (Typecheck@0x560a54e55690[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %5.0, %1.4 (Typecheck@0x560a54e55690[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %5.3  = CallSafeBuiltin    vwed  is.na(%5.2)    <lgl$->
dependent slot

Type#10 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %9.1, %6.3 (Typecheck@0x560a54e55690[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

======================= ClosureVersion: getGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2 miss: 1) =======================
referenced: 68
referenced non-empty: 32
read non-empty: 32
used: 6
present non-empty: 13

Used
exact match: 3
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 13
dependent: 22
other reasons unused non-empty: 4

Polluted
polluted: 5
used polluted: 1

----------------------
getGeneric [0x560a54ffa020]
referenced: 64
referenced non-empty: 28
read non-empty: 28
used: 6
present non-empty: 12

Used
exact match: 3
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 22
optimized away non-empty: 10
dependent: 20
other reasons unused non-empty: 2

Polluted
polluted: 5
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|cls) (polluted)
val+            %2.4  = Force!<lazy>       !vr   %1.2,    <(str|cls)>
other unused reason

Type#2 [unused] lgl$-
lgl$#-          %2.5  = CallSafeBuiltin    wed   is.function(%2.4)    <lgl$->
dependent slot

Type#3 [unused] cls
optimized away (dependency)

Type#4 [used] lgl$-
val?            %60.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%60.3, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %60.5, %60.6 (Typecheck@0x560a574f80c0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] cls
val?            %64.2 = Force!<wrapped>    !     %64.0, e2.3   <cls>
dependent slot

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] env-
optimized away (dependency)

Type#14 [unused] str$-
optimized away (dependency)

Type#15 [unused] (nil|cls) (polluted)
val?            %6.6  = StaticCall         !v    .getGeneric[0x560a7e726b70](%6.3, %6.4, %6.5) e2.3   <(nil|cls)>
dependent slot

Type#16 [unused] str$+
optimized away

Type#17 [unused] str$-
optimized away (dependency)

Type#18 [unused] cls
val?            %59.5 = StaticCall         !v    .getGeneric[0x560a7e5b98c0](%59.3, missingArg, %59.4) e2.3   <cls>
dependent slot

Type#19 [unused] (nil|cls) (polluted)
val?            %7.0  = Phi                      %6.6:BB6, %59.5:BB59   <(nil|cls)>
dependent slot

Type#20 [used] env-
val?            %10.3 = CallBuiltin        !v    baseenv() e2.3   <env->
void                    Assume             D     %14.0, %12.4 (Typecheck@0x560a574f80c0[Type#20])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [used] str$-
val?            %12.2 = Force!<wrapped>    !v    %12.1, e2.3   <str$->
void                    Assume             D     %12.3, %12.4 (Typecheck@0x560a574f80c0[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#23 [unused] (spec|blt)- (polluted)
val?            %14.5 = Extract2_1D        wed   %14.2, %14.4, elided   <(spec|blt)->
dependent slot

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [used] (spec|blt)- (polluted)
val?^ | miss    %45.3 = LdVar              eR    baseDef, e2.3
void                    Assume             D     %45.4, %15.1 (Typecheck@0x560a574f80c0[Type#25])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: (spec|blt)-, expected: (spec|blt)-, required: val?^ | miss

Type#26 [unused] lgl$-
lgl$#-          %45.8 = CallSafeBuiltin    wed   is.function(%45.7)    <lgl$->
dependent slot

Type#27 [unused] str$-
optimized away (dependency)

Type#28 [unused] cls
val?            %49.4 = StaticCall         !v    genericForBasic[0x560a7e325e20](%49.3, missingArg, false) { 0 2n } e2.3   <cls>
dependent slot

Type#29 [unused] cls
optimized away (dependency)

Type#30 [used] lgl$-
val?            %51.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%51.3, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %51.5, %51.6 (Typecheck@0x560a574f80c0[Type#30])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#31 [unused] str$-
optimized away (dependency)

Type#32 [unused] cls
optimized away (dependency)

Type#33 [unused] cls
val?            %57.8 = PopContext         C     %57.7, %55.5   <cls>
dependent slot

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] cls
val?            %21.4 = Force!<value>      !v    %21.3, e2.3   <cls>
dependent slot

Type#36 [used] lgl$-
val?            %21.5 = CallBuiltin        !v    is.function(%21.4) e2.3   <lgl$->
void                    Assume             D     %21.6, %21.7 (Typecheck@0x560a574f80c0[Type#36])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] cls
val?            %44.2 = Force!<value>      !     %44.0, e2.3   <cls>
dependent slot

----------------------
Inlinee: .cacheGeneric [0x560a54a9d440]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] cls
optimized away (dependency)

Type#2 [unused] env-
optimized away

Type#3 [unused] cls
val?            %57.7 = StaticCall         !v    .cacheGenericTable[0x560a7e326c20](%57.4, %57.5, %57.6) e57.3   <cls>
dependent slot

*********************** Compilation session for: .checkGroupSigLength (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
other unused reason

Type#2 [used] lgl$-
val+            %1.2  = CallSafeBuiltin    vwed  is.logical(%1.1)    <lgl$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a54e55690[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %3.0, %1.4 (Typecheck@0x560a54e55690[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %5.0, %1.4 (Typecheck@0x560a54e55690[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %5.3  = CallSafeBuiltin    vwed  is.na(%5.2)    <lgl$->
dependent slot

Type#10 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %9.1, %6.3 (Typecheck@0x560a54e55690[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

======================= ClosureVersion: environment (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
environment [0x560a55e84a10]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|cls) (polluted)
val+            %1.1  = Force!<lazy>             %1.0,    <(nil|cls)>
other unused reason

======================= ClosureVersion: getGeneric (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl1,!Obj1 miss: 1) =======================
referenced: 68
referenced non-empty: 32
read non-empty: 32
used: 7
present non-empty: 12

Used
exact match: 4
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 25
optimized away non-empty: 13
dependent: 21
other reasons unused non-empty: 4

Polluted
polluted: 5
used polluted: 1

----------------------
getGeneric [0x560a54ffa020]
referenced: 64
referenced non-empty: 28
read non-empty: 28
used: 7
present non-empty: 11

Used
exact match: 4
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 21
optimized away non-empty: 10
dependent: 19
other reasons unused non-empty: 2

Polluted
polluted: 5
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|cls) (polluted)
val?            %2.4  = Force!<lazy>       !v    %1.2, e2.3   <(str|cls)>
other unused reason

Type#2 [used] lgl$-
val?            %2.5  = CallBuiltin        !v    is.function(%2.4) e2.3   <lgl$->
void                    Assume             D     %2.6, %2.7 (Typecheck@0x560a574f80c0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] cls
optimized away (dependency)

Type#4 [used] lgl$-
val?            %60.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%60.3, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %60.5, %60.6 (Typecheck@0x560a574f80c0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] cls
val?            %64.2 = Force!<wrapped>    !     %64.0, e2.3   <cls>
dependent slot

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] env-
optimized away (dependency)

Type#14 [unused] str$-
optimized away (dependency)

Type#15 [unused] (nil|cls) (polluted)
val?            %6.6  = StaticCall         !v    .getGeneric[0x560a7e5d9320](%6.3, %6.4, %6.5) e2.3   <(nil|cls)>
dependent slot

Type#16 [unused] str$+
optimized away

Type#17 [unused] str$-
optimized away (dependency)

Type#18 [unused] cls
val?            %59.5 = StaticCall         !v    .getGeneric[0x560a7ed82830](%59.3, missingArg, %59.4) e2.3   <cls>
dependent slot

Type#19 [unused] (nil|cls) (polluted)
val?            %7.0  = Phi                      %6.6:BB6, %59.5:BB59   <(nil|cls)>
dependent slot

Type#20 [used] env-
val?            %10.3 = CallBuiltin        !v    baseenv() e2.3   <env->
void                    Assume             D     %14.0, %12.4 (Typecheck@0x560a574f80c0[Type#20])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [used] str$-
val?            %12.2 = Force!<wrapped>    !v    %12.1, e2.3   <str$->
void                    Assume             D     %12.3, %12.4 (Typecheck@0x560a574f80c0[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#23 [unused] (spec|blt)- (polluted)
val?            %14.5 = Extract2_1D        wed   %14.2, %14.4, elided   <(spec|blt)->
dependent slot

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [used] (spec|blt)- (polluted)
val?^ | miss    %45.3 = LdVar              eR    baseDef, e2.3
void                    Assume             D     %45.4, %15.1 (Typecheck@0x560a574f80c0[Type#25])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: (spec|blt)-, expected: (spec|blt)-, required: val?^ | miss

Type#26 [unused] lgl$-
lgl$#-          %45.8 = CallSafeBuiltin    wed   is.function(%45.7)    <lgl$->
dependent slot

Type#27 [unused] str$-
optimized away (dependency)

Type#28 [unused] cls
val?            %49.4 = StaticCall         !v    genericForBasic[0x560a7ef41e30](%49.3, missingArg, false) { 0 2n } e2.3   <cls>
dependent slot

Type#29 [unused] cls
optimized away (dependency)

Type#30 [used] lgl$-
val?            %51.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%51.3, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %51.5, %51.6 (Typecheck@0x560a574f80c0[Type#30])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#31 [unused] str$-
optimized away (dependency)

Type#32 [unused] cls
optimized away (dependency)

Type#33 [unused] cls
val?            %57.8 = PopContext         C     %57.7, %55.5   <cls>
dependent slot

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] cls
val?            %21.4 = Force!<value>      !v    %21.3, e2.3   <cls>
dependent slot

Type#36 [used] lgl$-
val?            %21.5 = CallBuiltin        !v    is.function(%21.4) e2.3   <lgl$->
void                    Assume             D     %21.6, %21.7 (Typecheck@0x560a574f80c0[Type#36])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] cls
val?            %44.2 = Force!<value>      !     %44.0, e2.3   <cls>
dependent slot

----------------------
Inlinee: .cacheGeneric [0x560a54a9d440]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] cls
optimized away (dependency)

Type#2 [unused] env-
optimized away

Type#3 [unused] cls
val?            %57.7 = StaticCall         !v    .cacheGenericTable[0x560a7ef40c90](%57.4, %57.5, %57.6) e57.3   <cls>
dependent slot

======================= ClosureVersion: .checkGroupSigLength (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 194
referenced non-empty: 82
read non-empty: 82
used: 36
present non-empty: 22

Used
exact match: 20
widened: 16
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 46
optimized away non-empty: 24
dependent: 42
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

----------------------
.checkGroupSigLength [0x560a5883e850]
referenced: 192
referenced non-empty: 81
read non-empty: 81
used: 36
present non-empty: 21

Used
exact match: 20
widened: 16
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 45
optimized away non-empty: 24
dependent: 42
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec$-
val+            %1.3  = Force!<lazy>       !vr   %1.1,    <vec$->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] vec$-
optimized away (dependency)

Type#6 [used] int$-
val?            %2.3  = CallBuiltin        !v    seq_along(%1.3) e1.2   <int$->
void                    Assume             D     %2.4, %2.5 (Typecheck@0x560a586bffc0[Type#6])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#7 [used] vec$-
val?            %4.9  = Force!<wrapped>    !v    %4.8, e1.2   <vec$->
void                    Assume             D     %4.11, %4.12 (Typecheck@0x560a586bffc0[Type#7])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [used] int$-
val?^ | miss    %6.1  = LdVar              eR    i, e1.2
void                    Assume             D     %6.2, %4.12 (Typecheck@0x560a586bffc0[Type#9])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#10 [unused] str$+
val?            %6.7  = Extract2_1D        wed   %6.6, %6.4, elided   <str$+>
dependent slot

Type#11 [used] vec$-
val?            %6.10 = Force!<lazy>       !v    %6.9, e1.2   <vec$->
void                    Assume             D     %6.12, %6.13 (Typecheck@0x560a586bffc0[Type#11])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [used] int$-
val?^ | miss    %8.1  = LdVar              eR    i, e1.2
void                    Assume             D     %8.2, %6.13 (Typecheck@0x560a586bffc0[Type#13])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#14 [unused] cls
val?            %8.7  = Extract2_1D        wed   %8.6, %8.4, elided   <cls>
dependent slot

Type#15 [unused] cls
optimized away (dependency)

Type#16 [used] lgl$-
val?            %10.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%10.3, "groupGenericFunction") e1.2   <lgl$->
void                    Assume             D     %10.5, %10.6 (Typecheck@0x560a586bffc0[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [used] vec-
val?            %13.6 = Call               !v    %13.3(%13.4, %13.5) e1.2   <vec->
void                    Assume             D     %13.7, %13.8 (Typecheck@0x560a586bffc0[Type#24])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#25 [used] int$-
(int|real)$-    %15.2 = CallSafeBuiltin    wed   length(%15.1)    <int$->
void                    Assume             D     %15.3, %15.4 (Typecheck@0x560a586bffc0[Type#25])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [used] vec$-
val?            %99.3 = Call               !v    %99.0(%99.1, %99.2) e1.2   <vec$->
void                    Assume             D     %99.7, %99.8 (Typecheck@0x560a586bffc0[Type#28])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#29 [used] vec$-
val?            %99.5 = Force!<wrapped>    !v    %99.4, e1.2   <vec$->
void                    Assume             D     %99.6, %99.8 (Typecheck@0x560a586bffc0[Type#29])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#30 [used] int$-
val?^ | miss    %101.0 = LdVar              eR    i, e1.2
void                    Assume             D     %101.1, %99.8 (Typecheck@0x560a586bffc0[Type#30])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] vec$-
optimized away (dependency)

Type#34 [unused] cls-
optimized away

Type#35 [used] vec$-
val?            %103.5 = StaticCall         !v    lapply[0x560a7b9d1790](%103.3, %103.4) { 0 1 } e1.2   <vec$->
void                    Assume             D     %103.9, %103.10 (Typecheck@0x560a586bffc0[Type#35])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#36 [used] vec$-
val?            %103.7 = Force!<wrapped>    !v    %103.6, e1.2   <vec$->
void                    Assume             D     %103.8, %103.10 (Typecheck@0x560a586bffc0[Type#36])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#37 [used] int$-
val?^ | miss    %105.0 = LdVar              eR    i, e1.2
void                    Assume             D     %105.1, %103.10 (Typecheck@0x560a586bffc0[Type#37])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [used] vec$-
val?^ | miss    %18.3 = LdVar              eR    funs, e1.2
void                    Assume             D     %18.4, %15.4 (Typecheck@0x560a586bffc0[Type#41])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#42 [unused] cls
optimized away (dependency)

Type#43 [used] vec-
val?            %18.12 = StaticCall         !v    getGroupMembers[0x560a7e8ef130](%18.11, true, false) e1.2   <vec->
void                    Assume             D     %18.13, %18.14 (Typecheck@0x560a586bffc0[Type#43])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#44 [unused] vec-
val+            %20.2 = CallSafeBuiltin    wed   c(%18.7, %20.1)    <vec->
dependent slot

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [used] lgl$-
val?^ | miss    %31.0 = LdVar              eR    recall, e1.2
void                    Assume             D     %31.1, %21.0 (Typecheck@0x560a586bffc0[Type#83])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#84 [unused] vec$-
optimized away (dependency)

Type#85 [unused] vec$-
optimized away (dependency)

Type#86 [unused] vec$-
optimized away (dependency)

Type#87 [unused] vec$-
optimized away (dependency)

Type#88 [unused] vec-
val?            %98.10 = PopContext         C     %98.9, %98.6   <vec->
dependent slot

Type#89 [used] vec-
val?^ | miss    %32.3 = LdVar              eR    funs, e1.2
void                    Assume             D     %32.4, %21.0 (Typecheck@0x560a586bffc0[Type#89])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#90 [unused] vec-
val?            %32.8 = StaticCall         !v    unique[0x560a7b9ed490](%32.7) { 0 } e1.2   <vec->
dependent slot

Type#91 [unused] vec-
optimized away (dependency)

Type#92 [unused] vec-
val?            %34.6 = StaticCall         !v    lapply[0x560a7b9ec4b0](%34.3, %34.5) { 0 1 } e1.2   <vec->
dependent slot

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] real-
val?            %34.10 = Call               !v    %34.8(0, %34.9) e1.2   <real->
dependent slot

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] real-
optimized away (dependency)

Type#98 [unused] int-
val?            %36.4 = CallBuiltin        !v    seq_along(%34.10) e1.2   <int->
other unused reason

Type#99 [used] vec-
val?^ | miss    %40.0 = LdVar              eR    funs, e1.2
void                    Assume             D     %40.1, %38.7 (Typecheck@0x560a586bffc0[Type#99])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [used] int$-
val             %40.7 = ChkMissing         e     %38.5
void                    Assume             D     %40.8, %38.7 (Typecheck@0x560a586bffc0[Type#101])
exact match
checkFor: int$-, static: val, feedback: int$-, expected: int$-, required: val?^ | miss

Type#102 [unused] str$+
val?            %40.11 = Extract2_1D        wed   %40.4, %40.10, elided   <str$+>
dependent slot

Type#103 [used] vec-
val?^ | miss    %42.0 = LdVar              eR    fdefs, e1.2
void                    Assume             D     %42.1, %40.13 (Typecheck@0x560a586bffc0[Type#103])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] int$-
optimized away (dependency)

Type#106 [unused] cls
val?            %42.7 = Extract2_1D        wed   %42.4, %40.10, elided   <cls>
dependent slot

Type#107 [unused] cls
optimized away (dependency)

Type#108 [unused] cls
optimized away (dependency)

Type#109 [used] lgl$-
val?            %45.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%45.3, "genericFunction") e1.2   <lgl$->
void                    Assume             D     %45.5, %45.6 (Typecheck@0x560a586bffc0[Type#109])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#110 [unused] cls
val?            %48.4 = Force!<value>      !v    %48.3, e1.2   <cls>
dependent slot

Type#111 [unused] env-
val?            %48.6 = StaticCall         !v    environment[0x560a7b88fb40](%48.5) e1.2   <env->
dependent slot

Type#112 [unused] env-
optimized away (dependency)

Type#113 [unused] $#-
optimized away (dependency)

Type#114 [used] (int|real)$- (polluted)
val?            %48.11 = Call               !v    %48.8(%48.9, %48.10) e1.2   <(int|real)$->
void                    Assume             D     %51.9, %48.14 (Typecheck@0x560a586bffc0[Type#114])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (int|real)$-, expected: (int|real)$-, required: val?+

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

Type#117 [unused] $#-
optimized away (dependency)

Type#118 [unused] (int|real)$- (polluted)
optimized away (dependency)

Type#119 [used] real-
val?^ | miss    %51.1 = LdVar              eR    sigs !upd, e1.2
void                    Assume             D     %51.2, %48.14 (Typecheck@0x560a586bffc0[Type#119])
exact match
checkFor: real-, static: val?^ | miss, feedback: real-, expected: real-, required: val?^ | miss

Type#120 [used] int$-
val?^ | miss    %51.5 = LdVar              eR    i, e1.2
void                    Assume             D     %51.6, %48.14 (Typecheck@0x560a586bffc0[Type#120])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#121 [unused] $#-
optimized away (dependency)

Type#122 [unused] $#-
optimized away (dependency)

Type#123 [unused] $#-
optimized away (dependency)

Type#124 [unused] $#-
optimized away (dependency)

Type#125 [unused] $#-
optimized away (dependency)

Type#126 [unused] $#-
optimized away (dependency)

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] $#-
optimized away (dependency)

Type#129 [unused] $#-
optimized away (dependency)

Type#130 [used] vec-
val?^ | miss    %57.0 = LdVar              eR    funs, e1.2
void                    Assume             D     %57.1, %55.2 (Typecheck@0x560a586bffc0[Type#130])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#131 [unused] $#-
optimized away (dependency)

Type#132 [used] int$-
val             %57.7 = ChkMissing         e     %55.0
void                    Assume             D     %57.8, %55.2 (Typecheck@0x560a586bffc0[Type#132])
exact match
checkFor: int$-, static: val, feedback: int$-, expected: int$-, required: val?^ | miss

Type#133 [unused] str$-
val?            %57.11 = Extract2_1D        wed   %57.4, %57.10, elided   <str$->
other unused reason

Type#134 [used] vec-
val?^ | miss    %59.0 = LdVar              eR    fdefs, e1.2
void                    Assume             D     %59.1, %57.13 (Typecheck@0x560a586bffc0[Type#134])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#135 [unused] $#-
optimized away (dependency)

Type#136 [used] int$-
val             %59.7 = ChkMissing         e     %55.0
void                    Assume             D     %59.8, %57.13 (Typecheck@0x560a586bffc0[Type#136])
exact match
checkFor: int$-, static: val, feedback: int$-, expected: int$-, required: val?^ | miss

Type#137 [unused] cls
val?            %59.11 = Extract2_1D        wed   %59.4, %59.10, elided   <cls>
dependent slot

Type#138 [unused] cls
optimized away (dependency)

Type#139 [unused] cls
optimized away (dependency)

Type#140 [used] lgl$-
val?            %62.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%62.3, "genericFunction") e1.2   <lgl$->
void                    Assume             D     %62.5, %62.6 (Typecheck@0x560a586bffc0[Type#140])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#141 [unused] cls
val?            %65.4 = Force!<value>      !v    %65.3, e1.2   <cls>
dependent slot

Type#142 [unused] env-
val?            %65.6 = StaticCall         !v    environment[0x560a7b88fb40](%65.5) e1.2   <env->
dependent slot

Type#143 [unused] env-
optimized away (dependency)

Type#144 [unused] $#-
optimized away (dependency)

Type#145 [used] real$-
val?            %65.11 = Call               !v    %65.8(%65.9, %65.10) e1.2   <real$->
void                    Assume             D     %65.13, %65.14 (Typecheck@0x560a586bffc0[Type#145])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?^ | miss

Type#146 [unused] $#-
optimized away (dependency)

Type#147 [unused] $#-
optimized away (dependency)

Type#148 [unused] $#-
optimized away (dependency)

Type#149 [unused] real$-
optimized away (dependency)

Type#150 [used] real-
val?^ | miss    %70.0 = LdVar              eR    sigs !upd, e1.2
void                    Assume             D     %70.1, %67.3 (Typecheck@0x560a586bffc0[Type#150])
exact match
checkFor: real-, static: val?^ | miss, feedback: real-, expected: real-, required: val?^ | miss

Type#151 [used] int$-
val?^ | miss    %70.4 = LdVar              eR    i, e1.2
void                    Assume             D     %70.5, %67.3 (Typecheck@0x560a586bffc0[Type#151])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#152 [unused] $#-
optimized away (dependency)

Type#153 [unused] $#-
optimized away (dependency)

Type#154 [unused] $#-
optimized away (dependency)

Type#155 [unused] $#-
optimized away (dependency)

Type#156 [unused] $#-
optimized away (dependency)

Type#157 [unused] $#-
optimized away (dependency)

Type#158 [unused] $#-
optimized away (dependency)

Type#159 [unused] $#-
optimized away (dependency)

Type#160 [unused] $#-
optimized away (dependency)

Type#161 [unused] $#-
optimized away (dependency)

Type#162 [used] real-
val?^ | miss    %74.3 = LdVar              eR    sigs, e1.2
void                    Assume             D     %74.4, %52.2 (Typecheck@0x560a586bffc0[Type#162])
exact match
checkFor: real-, static: val?^ | miss, feedback: real-, expected: real-, required: val?^ | miss

Type#163 [unused] real$-
real$-          %74.7 = CallSafeBuiltin    wed   max(%74.6)    <real$->
dependent slot

Type#164 [unused] $#-
optimized away (dependency)

Type#165 [unused] $#-
optimized away (dependency)

Type#166 [unused] $#-
optimized away (dependency)

Type#167 [unused] $#-
optimized away (dependency)

Type#168 [unused] $#-
optimized away (dependency)

Type#169 [unused] real-
optimized away (dependency)

Type#170 [unused] real$-
optimized away (dependency)

Type#171 [unused] lgl-
lgl-            %76.3 = Lt                 wed   %74.6, %74.7, elided   <lgl->
dependent slot

Type#172 [unused] real-
optimized away (dependency)

Type#173 [unused] lgl-
lgl-            %76.4 = Gt                 wed   %74.6, 0, elided   <lgl->
dependent slot

Type#174 [unused] lgl-
val+            %76.5 = CallSafeBuiltin    wed   &(%76.3, %76.4)    <lgl->
dependent slot

Type#175 [unused] $#-
optimized away (dependency)

Type#176 [unused] lgl-
optimized away (dependency)

Type#177 [used] lgl$-
val?            %78.3 = CallBuiltin        !v    any(%76.5) e1.2   <lgl$->
void                    Assume             D     %78.4, %78.5 (Typecheck@0x560a586bffc0[Type#177])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#178 [unused] $#-
optimized away (dependency)

Type#179 [unused] $#-
optimized away (dependency)

Type#180 [unused] $#-
optimized away (dependency)

Type#181 [unused] $#-
optimized away (dependency)

Type#182 [unused] $#-
optimized away (dependency)

Type#183 [unused] $#-
optimized away (dependency)

Type#184 [unused] $#-
optimized away (dependency)

Type#185 [unused] $#-
optimized away (dependency)

Type#186 [unused] $#-
optimized away (dependency)

Type#187 [unused] $#-
optimized away (dependency)

Type#188 [unused] $#-
optimized away (dependency)

Type#189 [unused] $#-
optimized away (dependency)

Type#190 [unused] $#-
optimized away (dependency)

Type#191 [used] vec-
val?^ | miss    %84.0 = LdVar              eR    funs, e1.2
void                    Assume             D     %84.1, %82.0 (Typecheck@0x560a586bffc0[Type#191])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

----------------------
Inlinee: Recall [0x560a5a3adf30]
referenced: 2
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (lgl|vec)- (polluted)
val?            %98.9 = Call               !     <spec .Internal>(%98.8) e98.7   <(lgl|vec)->
other unused reason

======================= ClosureVersion: getGroupMembers (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj1,!Obj2) =======================
referenced: 38
referenced non-empty: 25
read non-empty: 18
used: 3
present non-empty: 7

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 22
optimized away non-empty: 15
dependent: 20
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

----------------------
getGroupMembers [0x560a5a44b620]
referenced: 30
referenced non-empty: 17
read non-empty: 17
used: 3
present non-empty: 7

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 7
dependent: 12
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
optimized away (dependency)

Type#1 [unused] cls
val?            %2.4  = StaticCall         !v    getGeneric[0x560a7e0dbf10](%2.3) e1.3   <cls>
dependent slot

Type#2 [unused] cls
optimized away (dependency)

Type#3 [unused] cls
optimized away (dependency)

Type#4 [used] lgl$-
val?            %5.4  = Call               !     function(object, class2) <(rir::DispatchTable*|...(%5.3, "groupGenericFunction") e1.3   <lgl$->
void                    Assume             D     %5.5, %5.6 (Typecheck@0x560a59e504c0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] vec-
val?            %8.3  = Call               !v    %8.0(%8.1, %8.2) e1.3   <vec->
dependent slot

Type#8 [unused] lgl$-
val?            %8.6  = Force!<lazy>       !v    %8.5, e1.3   <lgl$->
dependent slot

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] str$-
val?            %18.3 = Call               !v    %18.0(%18.1, %18.2) e1.3   <str$->
dependent slot

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [used] lgl$-
val?            %20.8 = PopContext         C     %20.7, %20.4   <lgl$->
void                    Assume             D     %20.9, %20.10 (Typecheck@0x560a59e504c0[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] vec-
optimized away (dependency)

Type#19 [unused] env-
optimized away

Type#20 [unused] vec-
val?            %26.5 = StaticCall         !v    .recMembers[0x560a7b8b6580](%26.3, %26.4) from %1.4 e1.3   <vec->
dependent slot

Type#21 [unused] lgl$-
val?            %10.2 = Force!<lazy>       !     %10.0, e1.3   <lgl$->
dependent slot

Type#22 [used] vec-
val?^ | miss    %13.0 = LdVar              eR    members, e1.3
void                    Assume             D     %13.1, %10.4 (Typecheck@0x560a59e504c0[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#23 [unused] vec-
optimized away (dependency)

Type#24 [unused] str-
val?            %17.6 = StaticCall         !     sapply[0x560a7ee57c10](%17.3, %17.5) { 0 1 } e1.3   <str->
other unused reason

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 8
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away (dependency)

Type#1 [unused] val? (polluted)
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: getGeneric (CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj2 miss: 1) ***********************
======================= ClosureVersion: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
other unused reason

Type#2 [used] lgl$-
val+            %1.2  = CallSafeBuiltin    vwed  is.logical(%1.1)    <lgl$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a54e55690[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %3.0, %1.4 (Typecheck@0x560a54e55690[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %5.0, %1.4 (Typecheck@0x560a54e55690[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %5.3  = CallSafeBuiltin    vwed  is.na(%5.2)    <lgl$->
dependent slot

Type#10 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %9.1, %6.3 (Typecheck@0x560a54e55690[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

======================= ClosureVersion: getGeneric (CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj2 miss: 1) =======================
referenced: 68
referenced non-empty: 32
read non-empty: 32
used: 6
present non-empty: 13

Used
exact match: 3
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 13
dependent: 22
other reasons unused non-empty: 4

Polluted
polluted: 5
used polluted: 1

----------------------
getGeneric [0x560a54ffa020]
referenced: 64
referenced non-empty: 28
read non-empty: 28
used: 6
present non-empty: 12

Used
exact match: 3
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 22
optimized away non-empty: 10
dependent: 20
other reasons unused non-empty: 2

Polluted
polluted: 5
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|cls) (polluted)
val+            %5.4  = Force!<lazy>       !vr   %5.3,    <(str|cls)>
other unused reason

Type#2 [unused] lgl$-
lgl$#-          %5.5  = CallSafeBuiltin    wed   is.function(%5.4)    <lgl$->
dependent slot

Type#3 [unused] cls
optimized away (dependency)

Type#4 [used] lgl$-
val?            %63.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%63.3, "genericFunction") e1.4   <lgl$->
void                    Assume             D     %63.5, %63.6 (Typecheck@0x560a574f80c0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] cls
val?            %67.2 = Force!<wrapped>    !     %67.0, e1.4   <cls>
dependent slot

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] env-
optimized away (dependency)

Type#14 [unused] str$-
optimized away (dependency)

Type#15 [unused] (nil|cls) (polluted)
val?            %9.6  = StaticCall         !v    .getGeneric[0x560a7edee310](%9.3, %9.4, %9.5) e1.4   <(nil|cls)>
dependent slot

Type#16 [unused] str$+
optimized away

Type#17 [unused] str$-
optimized away (dependency)

Type#18 [unused] cls
val?            %62.5 = StaticCall         !v    .getGeneric[0x560a7d7b05f0](%62.3, missingArg, %62.4) e1.4   <cls>
dependent slot

Type#19 [unused] (nil|cls) (polluted)
val?            %10.0 = Phi                      %9.6:BB9, %62.5:BB62   <(nil|cls)>
dependent slot

Type#20 [used] env-
val?            %13.3 = CallBuiltin        !v    baseenv() e1.4   <env->
void                    Assume             D     %17.0, %15.4 (Typecheck@0x560a574f80c0[Type#20])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [used] str$-
val?            %15.2 = Force!<wrapped>    !v    %15.1, e1.4   <str$->
void                    Assume             D     %15.3, %15.4 (Typecheck@0x560a574f80c0[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#23 [unused] (spec|blt)- (polluted)
val?            %17.5 = Extract2_1D        wed   %17.2, %17.4, elided   <(spec|blt)->
dependent slot

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [used] (spec|blt)- (polluted)
val?^ | miss    %48.3 = LdVar              eR    baseDef, e1.4
void                    Assume             D     %48.4, %18.1 (Typecheck@0x560a574f80c0[Type#25])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: (spec|blt)-, expected: (spec|blt)-, required: val?^ | miss

Type#26 [unused] lgl$-
lgl$#-          %48.8 = CallSafeBuiltin    wed   is.function(%48.7)    <lgl$->
dependent slot

Type#27 [unused] str$-
optimized away (dependency)

Type#28 [unused] cls
val?            %52.4 = StaticCall         !v    genericForBasic[0x560a7aecd930](%52.3, missingArg, false) { 0 2n } e1.4   <cls>
dependent slot

Type#29 [unused] cls
optimized away (dependency)

Type#30 [used] lgl$-
val?            %54.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%54.3, "genericFunction") e1.4   <lgl$->
void                    Assume             D     %54.5, %54.6 (Typecheck@0x560a574f80c0[Type#30])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#31 [unused] str$-
optimized away (dependency)

Type#32 [unused] cls
optimized away (dependency)

Type#33 [unused] cls
val?            %60.8 = PopContext         C     %60.7, %58.5   <cls>
dependent slot

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] cls
val?            %24.4 = Force!<value>      !v    %24.3, e1.4   <cls>
dependent slot

Type#36 [used] lgl$-
val?            %24.5 = CallBuiltin        !v    is.function(%24.4) e1.4   <lgl$->
void                    Assume             D     %24.6, %24.7 (Typecheck@0x560a574f80c0[Type#36])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] cls
val?            %47.2 = Force!<value>      !     %47.0, e1.4   <cls>
dependent slot

----------------------
Inlinee: .cacheGeneric [0x560a54a9d440]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] cls
optimized away (dependency)

Type#2 [unused] env-
optimized away

Type#3 [unused] cls
val?            %60.7 = StaticCall         !v    .cacheGenericTable[0x560a7ee31680](%60.4, %60.5, %60.6) e60.3   <cls>
dependent slot

*********************** Compilation session for: checkTrace (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 2) ***********************
======================= ClosureVersion: checkTrace (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 2) =======================
referenced: 9
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
checkTrace [0x560a7121ab10]
referenced: 9
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
optimized away (dependency)

Type#1 [used] lgl$-
val?            %2.5  = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%2.4, "traceable") e2.3   <lgl$->
void                    Assume             D     %2.6, %2.7 (Typecheck@0x560a70c14280[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] cls
val?            %5.2  = Force!<wrapped>    !     %5.0, e2.3   <cls>
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: getDataPart (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj1) ***********************
======================= ClosureVersion: match (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0,!Obj0 miss: 2) =======================
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 1

----------------------
match [0x560a55e4d070]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
val+            %1.2  = Force<lazy>              %1.1,    <(nil|str)+>
other unused reason

Type#1 [used] str+ (polluted)
val?            %1.4  = Force!<lazy>       !vL   %1.0, e1.3   <str+>
void                    Assume             D     %1.5, %1.6 (Typecheck@0x560a55e4cf60[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?^ | miss

Type#2 [unused] int$-
optimized away

Type#3 [unused] nil-
optimized away

======================= ClosureVersion: getDataPart (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj1) =======================
referenced: 103
referenced non-empty: 22
read non-empty: 21
used: 6
present non-empty: 8

Used
exact match: 3
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 16
optimized away non-empty: 8
dependent: 12
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

----------------------
getDataPart [0x560a71e181a0]
referenced: 102
referenced non-empty: 21
read non-empty: 20
used: 6
present non-empty: 8

Used
exact match: 3
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 7
dependent: 12
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
val?            %1.2  = Force<lazy>              %1.1,    <cls>
dependent slot

Type#1 [unused] str$-
str$-           %2.3  = CallSafeBuiltin    wed   typeof(%1.2)    <str$->
other unused reason

Type#2 [unused] lgl$-
lgl$-           %2.4  = Eq                 d     %2.3, "S4", elided   <lgl$->
dependent slot

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [used] vec+
val?            %3.3  = Call               !v    %3.0(%3.1, %3.2) e2.6   <vec+>
void                    Assume             D     %3.5, %3.6 (Typecheck@0x560a7190e0f0[Type#20])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] vec+
optimized away (dependency)

Type#23 [used] int$-
(int|real)$-    %5.6  = CallSafeBuiltin    wed   length(%5.5)    <int$->
void                    Assume             D     %5.7, %5.8 (Typecheck@0x560a7190e0f0[Type#23])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#24 [unused] lgl$-
lgl$-           %7.2  = Eq                 d     %7.1, 0L, elided   <lgl$->
dependent slot

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] vec+
optimized away (dependency)

Type#30 [unused] str-
optimized away (dependency)

Type#31 [used] int$-
val?            %8.7  = StaticCall         !v    match[0x560a7ebc8d10](".Data", %8.6) e2.6   <int$->
void                    Assume             D     %8.8, %8.9 (Typecheck@0x560a7190e0f0[Type#31])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#32 [unused] lgl$-
lgl$-           %10.2 = CallSafeBuiltin    wed   is.na(%10.1)    <lgl$->
dependent slot

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [used] vec+
val?^ | miss    %13.0 = LdVar              eR    temp, e2.6
void                    Assume             D     %13.1, %10.3 (Typecheck@0x560a7190e0f0[Type#38])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: vec+, expected: vec+, required: val?^ | miss

Type#39 [used] str$+
val?            %13.7 = Extract2_1D        wed   %13.4, ".Data", elided   <str$+>
void                    Assume             D     %13.29, %13.30 (Typecheck@0x560a7190e0f0[Type#39])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?+

Type#40 [unused] str$+
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] str$+
optimized away (dependency)

Type#65 [unused] str-
optimized away (dependency)

Type#66 [used] int$-
val?            %37.9 = StaticCall         !v    match[0x560a7ea64540](%37.7, %37.8) e2.6   <int$->
void                    Assume             D     %37.10, %37.11 (Typecheck@0x560a7190e0f0[Type#66])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#67 [unused] lgl$-
lgl$-           %39.2 = CallSafeBuiltin    wed   is.na(%39.1)    <lgl$->
dependent slot

Type#68 [unused] cls
val?            %40.2 = Force!<wrapped>    !v    %40.1, e2.6   <cls>
dependent slot

Type#69 [unused] nil-
optimized away

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] $#-
optimized away (dependency)

Type#87 [unused] $#-
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] $#-
optimized away (dependency)

Type#90 [unused] $#-
optimized away (dependency)

Type#91 [unused] $#-
optimized away (dependency)

Type#92 [unused] $#-
optimized away (dependency)

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] $#-
optimized away (dependency)

Type#99 [unused] $#-
optimized away (dependency)

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [unused] cls-
val?            %40.3 = NamedCall          !v    %40.0(%40.2, value=nil) e2.6   <cls->
other unused reason

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

*********************** Compilation session for: asMethod (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 2) ***********************
======================= ClosureVersion: asMethod (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 2) =======================
referenced: 9
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
asMethod [0x560a71e10710]
referenced: 9
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] lgl$-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] cls
val?            %1.6  = Force!<value>      !v    %1.5, e1.1   <cls>
other unused reason

Type#5 [unused] lgl$-
val?            %1.10 = Force!<wrapped>    !     %1.8, e1.1   <lgl$->
dependent slot

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] cls-
val?            %2.3  = Call               !     %2.0(%2.1, %2.2) e1.1   <cls->
other unused reason

*********************** Compilation session for: .class1 (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: .class1 (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 10
referenced non-empty: 6
read non-empty: 6
used: 2
present non-empty: 2

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
.class1 [0x560a713f90f0]
referenced: 10
referenced non-empty: 6
read non-empty: 6
used: 2
present non-empty: 2

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|cls) (polluted)
val?            %2.4  = Force!<lazy>       !v    %1.0, e2.3   <(str|cls)>
other unused reason

Type#2 [used] str$+
val?            %2.5  = CallBuiltin        !v    class(%2.4) e2.3   <str$+>
void                    Assume             D     %2.7, %2.8 (Typecheck@0x560a7143c850[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$+
optimized away (dependency)

Type#5 [used] int$-
(int|real)$-    %4.6  = CallSafeBuiltin    wed   length(%4.5)    <int$->
void                    Assume             D     %4.7, %4.8 (Typecheck@0x560a7143c850[Type#5])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] lgl$-
lgl$-           %6.2  = Gt                 d     %6.1, 1L, elided   <lgl$->
other unused reason

Type#7 [unused] str$+
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: genericForBasic (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2) ***********************
======================= ClosureVersion: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
other unused reason

Type#2 [used] lgl$-
val+            %1.2  = CallSafeBuiltin    vwed  is.logical(%1.1)    <lgl$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a54e55690[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %3.0, %1.4 (Typecheck@0x560a54e55690[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %5.0, %1.4 (Typecheck@0x560a54e55690[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %5.3  = CallSafeBuiltin    vwed  is.na(%5.2)    <lgl$->
dependent slot

Type#10 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %9.1, %6.3 (Typecheck@0x560a54e55690[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

======================= ClosureVersion: genericForBasic (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 2) =======================
referenced: 13
referenced non-empty: 7
read non-empty: 7
used: 3
present non-empty: 4

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

----------------------
genericForBasic [0x560a5685bec0]
referenced: 13
referenced non-empty: 7
read non-empty: 7
used: 3
present non-empty: 4

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] vec+
val?            %1.7  = Force!<wrapped>    !v    %1.6, e1.1   <vec+>
void                    Assume             D     %4.0, %2.4 (Typecheck@0x560a55ff3030[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str$-
val?            %2.2  = Force!<lazy>       !v    %2.1, e1.1   <str$->
void                    Assume             D     %2.3, %2.4 (Typecheck@0x560a55ff3030[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#5 [unused] (nil|cls) (polluted)
val?            %4.5  = Extract2_1D        wed   %4.2, %4.4, elided   <(nil|cls)>
dependent slot

Type#6 [unused] lgl$-
val?            %4.8  = Force!<lazy>       !v    %4.7, e1.1   <lgl$->
dependent slot

Type#7 [unused] nil-
val?            %7.4  = Force!<value>      !v    %7.3, e1.1   <nil->
other unused reason

Type#8 [used] lgl$-
val?            %7.6  = StaticCall         !v    isFALSE[0x560a7f7962e0](%7.5) e1.1   <lgl$->
void                    Assume             D     %7.7, %7.8 (Typecheck@0x560a55ff3030[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] (nil|cls) (polluted)
val?            %11.2 = Force!<value>      !     %11.0, e1.1   <(nil|cls)>
dependent slot

*********************** Compilation session for: as (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,!Obj1 miss: 2) ***********************
======================= ClosureVersion: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,!Obj0) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val+            %1.1  = Force!<lazy>             %1.0,    <val?>
other unused reason

Type#2 [used] lgl$-
val+            %1.2  = CallSafeBuiltin    vwed  is.logical(%1.1)    <lgl$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a54e55690[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val+            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %3.0, %1.4 (Typecheck@0x560a54e55690[Type#4])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val+            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %5.0, %1.4 (Typecheck@0x560a54e55690[Type#8])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %5.3  = CallSafeBuiltin    vwed  is.na(%5.2)    <lgl$->
dependent slot

Type#10 [used] lgl$-
val+            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %9.1, %6.3 (Typecheck@0x560a54e55690[Type#10])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?+

======================= ClosureVersion: environment (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
environment [0x560a55e84a10]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|cls) (polluted)
val+            %1.1  = Force!<lazy>             %1.0,    <(nil|cls)>
other unused reason

======================= ClosureVersion: isTRUE (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 3
present non-empty: 2

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
isTRUE [0x560a55e9e1e0]
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 3
present non-empty: 2

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 3
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
other unused reason

Type#2 [used] lgl$-
val+            %1.2  = CallSafeBuiltin    vwed  is.logical(%1.1)    <lgl$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a55e9bc50[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %3.0, %1.4 (Typecheck@0x560a55e9bc50[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %5.0, %1.4 (Typecheck@0x560a55e9bc50[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %5.3  = CallSafeBuiltin    vwed  is.na(%5.2)    <lgl$->
dependent slot

Type#10 [unused] lgl$-
optimized away (dependency)

======================= ClosureVersion: exists (CorrOrd,!TMany,Argmatch;Eager0,Eager1,Eager3,Eager4,Eager5,NonRefl0,NonRefl1,NonRefl3,NonRefl4,NonRefl5,!Obj0,!Obj5) =======================
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

----------------------
exists [0x560a572da620]
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] (int|env)- (polluted)
optimized away

Type#3 [unused] env+ (polluted)
optimized away (dependency)

Type#4 [unused] str$+ (polluted)
val+            %7.1  = Force!<lazy>       !vr   %7.0,    <str$+>
other unused reason

Type#5 [unused] env+ (polluted)
val?            %7.3  = Force!<lazy>       !v    %7.2, e1.8   <env+>
dependent slot

Type#6 [unused] str$-
val?            %7.5  = Force!<lazy>       !v    %7.4, e1.8   <str$->
other unused reason

Type#7 [unused] lgl$-
val?            %7.7  = Force!<lazy>       !v    %7.6, e1.8   <lgl$->
other unused reason

======================= ClosureVersion: as (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,!Obj1 miss: 2) =======================
referenced: 131
referenced non-empty: 73
read non-empty: 73
used: 14
present non-empty: 24

Used
exact match: 10
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 59
optimized away non-empty: 35
dependent: 55
other reasons unused non-empty: 4

Polluted
polluted: 9
used polluted: 0

----------------------
as [0x560a7137abc0]
referenced: 114
referenced non-empty: 63
read non-empty: 63
used: 11
present non-empty: 19

Used
exact match: 8
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 52
optimized away non-empty: 33
dependent: 51
other reasons unused non-empty: 1

Polluted
polluted: 6
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] (str|cls) (polluted)
optimized away (dependency)

Type#4 [unused] str$+
val?            %10.1 = PopContext         C     %10.0, %2.4   <str$+>
dependent slot

Type#5 [unused] str$+
optimized away (dependency)

Type#6 [unused] str$-
optimized away (dependency)

Type#7 [used] lgl$-
val?            %16.2 = PopContext         C     %16.1, %12.5   <lgl$->
void                    Assume             D     %16.3, %16.4 (Typecheck@0x560a70d5bd90[Type#7])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#8 [unused] str$-
optimized away (dependency)

Type#9 [used] lgl$-
val?            %23.2 = PopContext         C     %23.1, %19.4   <lgl$->
void                    Assume             D     %23.3, %23.4 (Typecheck@0x560a70d5bd90[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [unused] (str|cls)- (polluted)
val?            %92.2 = Force!<wrapped>    !     %92.0, e1.2   <(str|cls)->
other unused reason

Type#11 [unused] str$+
optimized away (dependency)

Type#12 [unused] env-
val?            %29.4 = StaticCall         !v    .classEnv[0x560a7f7d2f30](%29.3, missingArg, false) { 0 2n } e1.2   <env->
dependent slot

Type#13 [unused] env-
optimized away (dependency)

Type#14 [unused] cls
val?            %31.4 = StaticCall         !v    getGeneric[0x560a7faee240]("coerce", missingArg, %31.3) { 0 2n } e1.2   <cls>
dependent slot

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] cls
optimized away (dependency)

Type#17 [unused] env-
optimized away (dependency)

Type#18 [unused] env-
val?            %33.5 = StaticCall         !v    .getMethodsTable[0x560a7fab12a0](%33.3, %33.4, missingArg, true) { 0 1 3n } e1.2   <env->
dependent slot

Type#19 [unused] str$+
optimized away (dependency)

Type#20 [unused] str$-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] env-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] (nil|cls) (polluted)
val?            %35.8 = StaticCall         !v    .quickCoerceSelect[0x560a7fbe23d0](%35.3, %35.4, %35.5, %35.6, %35.7) e1.2   <(nil|cls)>
dependent slot

Type#25 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [used] str$+
val?^ | miss    %43.3 = LdVar              eR    thisClass, e1.2
void                    Assume             D     %43.4, %35.11 (Typecheck@0x560a70d5bd90[Type#28])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: str$+, expected: str$+, required: val?^ | miss

Type#29 [unused] str$-
val?            %43.9 = Force!<wrapped>    !v    %43.8, e1.2   <str$->
dependent slot

Type#30 [unused] str+
val?            %43.10 = NamedCall          !v    <blt c>(from=%43.7, to=%43.9) e1.2   <str+>
dependent slot

Type#31 [unused] str+
optimized away (dependency)

Type#32 [unused] cls
optimized away (dependency)

Type#33 [unused] cls
optimized away (dependency)

Type#34 [unused] env-
optimized away (dependency)

Type#35 [unused] nil-
val?            %43.16 = NamedCall          !v    %43.12("coerce", %43.13, optional=true, useInherited=false, fdef=%43.14, mlist=%43.15) e1.2   <nil->
dependent slot

Type#36 [unused] nil-
optimized away (dependency)

Type#37 [unused] cls
optimized away (dependency)

Type#38 [unused] str$-
optimized away (dependency)

Type#39 [used] lgl$-
val?            %47.5 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%47.3, %47.4) e1.2   <lgl$->
void                    Assume             D     %47.6, %47.7 (Typecheck@0x560a70d5bd90[Type#39])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#40 [unused] str$-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] other$
val?            %70.5 = StaticCall         !v    getClassDef[0x560a7fce3210](%70.3, %70.4) e1.2   <other$>
dependent slot

Type#43 [unused] other$
val?            %72.4 = Force!<lazy>       !v    %72.3, e1.2   <other$>
dependent slot

Type#44 [used] lgl$-
val?            %72.6 = StaticCall         !v    isFALSE[0x560a7fcc0630](%72.5) e1.2   <lgl$->
void                    Assume             D     %72.7, %72.8 (Typecheck@0x560a70d5bd90[Type#44])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#45 [unused] other$
val?            %75.4 = Force!<wrapped>    !v    %75.3, e1.2   <other$>
dependent slot

Type#46 [used] lgl$-
val?            %75.6 = StaticCall         !v    isTRUE[0x560a7fc2a870](%75.5) e1.2   <lgl$->
void                    Assume             D     %75.7, %75.8 (Typecheck@0x560a70d5bd90[Type#46])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] cls-
val?            %78.3 = Call               !v    %78.0(%78.1, %78.2) e1.2   <cls->
dependent slot

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] cls-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] lgl$-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] cls-
val?            %80.8 = StaticCall         !v    .makeAsMethod[0x560a7fcc5db0](%80.3, %80.4, %80.5, %80.6, %80.7) e1.2   <cls->
dependent slot

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [used] cls-
val?^ | miss    %82.3 = LdVar              eR    test, e1.2
void                    Assume             D     %82.4, %80.10 (Typecheck@0x560a70d5bd90[Type#61])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: cls-, expected: cls-, required: val?^ | miss

Type#62 [unused] lgl$-
lgl$#-          %82.8 = CallSafeBuiltin    wed   is.function(%82.7)    <lgl$->
dependent slot

Type#63 [unused] cls-
optimized away (dependency)

Type#64 [unused] lgl$-
optimized away (dependency)

Type#65 [used] lgl$-
val?            %87.4 = StaticCall         !v    isTRUE[0x560a7fab9550](%87.3) e1.2   <lgl$->
void                    Assume             D     %87.5, %87.6 (Typecheck@0x560a70d5bd90[Type#65])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [used] cls-
val?^ | miss    %53.0 = LdVar              eR    asMethod, e1.2
void                    Assume             D     %53.1, %51.0 (Typecheck@0x560a70d5bd90[Type#74])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: cls-, expected: cls-, required: val?^ | miss

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] cls-
optimized away (dependency)

Type#87 [used] lgl$-
val?^ | miss    %57.0 = LdVar              eR    canCache, e1.2
void                    Assume             D     %57.1, %51.0 (Typecheck@0x560a70d5bd90[Type#87])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#88 [unused] cls-
optimized away (dependency)

Type#89 [unused] str$+
optimized away (dependency)

Type#90 [unused] other$
optimized away (dependency)

Type#91 [unused] $#-
optimized away (dependency)

Type#92 [unused] cls
val?            %67.7 = StaticCall         !v    .asCoerceMethod[0x560a7fce92a0](%67.3, %67.4, %67.5, false, %67.6) e1.2   <cls>
dependent slot

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] cls
val?            %59.1 = Force!<value>      !v    %59.0, e1.2   <cls>
dependent slot

Type#99 [used] lgl$-
val?^ | miss    %62.0 = LdVar              eR    canCache, e1.2
void                    Assume             D     %62.1, %59.3 (Typecheck@0x560a70d5bd90[Type#99])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#100 [unused] str+
optimized away (dependency)

Type#101 [unused] cls
optimized away (dependency)

Type#102 [unused] cls
optimized away (dependency)

Type#103 [unused] lgl$-
optimized away (dependency)

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] $#-
optimized away (dependency)

Type#106 [unused] $#-
optimized away (dependency)

Type#107 [unused] $#-
optimized away (dependency)

Type#108 [unused] $#-
optimized away (dependency)

Type#109 [unused] lgl$-
val?            %39.2 = Force!<lazy>       !     %39.0, e1.2   <lgl$->
dependent slot

Type#110 [unused] $#-
optimized away (dependency)

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] (str|cls) (polluted)
optimized away (dependency)

Type#113 [unused] (str|cls) (polluted)
val?            %41.2 = Call               !     %41.0(%41.1) e1.2   <(str|cls)>
dependent slot

----------------------
Inlinee: .identC [0x560a569917c0]
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %21.3 = Force!<value>      !v    %21.1, e21.2   <vec>
other unused reason

Type#4 [unused] str$+ (polluted)
val?            %21.5 = Force!<lazy>       !v    %21.4, e21.2   <str$+>
dependent slot

Type#5 [unused] str$+ (polluted)
val?            %21.7 = Force!<lazy>       !v    %21.6, e21.2   <str$+>
dependent slot

Type#6 [used] lgl$-
val?            %21.8 = CallBuiltin        !v    .Call(%21.3, %21.5, %21.7) e21.2   <lgl$->
void                    Assume             D     %21.9, %21.10 (Typecheck@0x560a5692fc50[Type#6])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: .class1 [0x560a713f90f0]
referenced: 10
referenced non-empty: 6
read non-empty: 6
used: 2
present non-empty: 2

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|cls) (polluted)
val?            %4.2  = Force!<lazy>       !vL   %2.5, e4.1   <(str|cls)>
other unused reason

Type#2 [used] str$+
val?            %4.3  = CallBuiltin        !v    class(%4.2) e4.1   <str$+>
void                    Assume             D     %4.5, %4.6 (Typecheck@0x560a7143c850[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$+
optimized away (dependency)

Type#5 [used] int$-
(int|real)$-    %6.6  = CallSafeBuiltin    wed   length(%6.5)    <int$->
void                    Assume             D     %6.7, %6.8 (Typecheck@0x560a7143c850[Type#5])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] lgl$-
lgl$-           %8.2  = Gt                 d     %8.1, 1L, elided   <lgl$->
other unused reason

Type#7 [unused] str$+
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

======================= ClosureVersion: formalArgs (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 7
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
formalArgs [0x560a7137a2c0]
referenced: 7
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] cls (polluted)
val?            %2.8  = Force!<lazy>       !v    %1.0, e2.6   <cls>
other unused reason

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [used] list-
val?            %2.10 = StaticCall         !vr   formals[0x560a7fc5ff80](%2.9, %2.7) { 0 1n } e2.6   <list->
void                    Assume             D     %2.11, %2.12 (Typecheck@0x560a7137a1d0[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: list-, expected: list-, required: val?+

Type#6 [unused] str-
val+            %4.2  = CallSafeBuiltin    vwed  names(%4.1)    <str->
other unused reason

======================= ClosureVersion: .matchSigLength (!ExpMi,CorrOrd,!TMany,Argmatch;Eager3,NonRefl3,!Obj3) =======================
referenced: 93
referenced non-empty: 20
read non-empty: 20
used: 6
present non-empty: 8

Used
exact match: 4
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 6
dependent: 10
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 0

----------------------
.matchSigLength [0x560a71363170]
referenced: 87
referenced non-empty: 15
read non-empty: 15
used: 6
present non-empty: 5

Used
exact match: 4
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 4
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] env-
optimized away

Type#2 [used] int$-
val?            %2.6  = StaticCall         !v    .getGenericSigLength[0x560a7fbb1780](%2.4, %2.5, true) e2.3   <int$->
void                    Assume             D     %2.7, %2.8 (Typecheck@0x560a7137a690[Type#2])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str+
val?            %6.4  = Force!<lazy>       !v    %6.3, e2.3   <str+>
void                    Assume             D     %6.5, %6.6 (Typecheck@0x560a7137a690[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?+

Type#5 [used] int$-
(int|real)$-    %8.2  = CallSafeBuiltin    wed   length(%8.1)    <int$->
void                    Assume             D     %8.3, %8.4 (Typecheck@0x560a7137a690[Type#5])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] str+
optimized away (dependency)

Type#7 [unused] nil-
val?            %14.4 = PopContext         C     %14.3, %12.4   <nil->
dependent slot

Type#8 [used] int$-
val?^ | miss    %16.0 = LdVar              eR    n, e2.3
void                    Assume             D     %16.1, %14.6 (Typecheck@0x560a7137a690[Type#8])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#9 [used] int$-
val?^ | miss    %16.4 = LdVar              eR    nargs, e2.3
void                    Assume             D     %16.5, %14.6 (Typecheck@0x560a7137a690[Type#9])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#10 [unused] lgl$-
lgl$-           %16.8 = Lt                 d     %16.3, %16.7, elided   <lgl$->
dependent slot

Type#11 [unused] int$-
optimized away (dependency)

Type#12 [unused] int$-
optimized away (dependency)

Type#13 [unused] lgl$-
lgl$-           %17.0 = Gt                 d     %16.3, %16.7, elided   <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [used] nil-
val?^ | miss    %22.0 = LdVar              eR    pkgs, e2.3
void                    Assume             D     %22.1, %20.0 (Typecheck@0x560a7137a690[Type#84])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: nil-, expected: nil-, required: val?^ | miss

Type#85 [unused] str+
val?            %22.9 = Force!<wrapped>    !v    %22.8, e2.3   <str+>
dependent slot

Type#86 [unused] str+
val?            %22.16 = PopContext         C     %22.13, %22.10   <str+>
dependent slot

----------------------
Inlinee: packageSlot<- [0x560a71363290]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|str)- (polluted)
optimized away

Type#1 [unused] str+
optimized away (dependency)

Type#2 [unused] str+
val?            %22.13 = NamedCall          !v    %22.12(%22.9, "package", value=%22.4) e22.11   <str+>
dependent slot

----------------------
Inlinee: packageSlot [0x560a6f2c7cd0]
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (str|other) (polluted)
val?            %14.2 = Force!<lazy>       !vL   %12.5, e14.1   <(str|other)>
other unused reason

Type#2 [unused] (nil|str)- (polluted)
val?            %14.3 = CallBuiltin        !v    attr(%14.2, "package") e14.1   <(nil|str)->
other unused reason

======================= ClosureVersion: body<- (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager2,NonRefl0,NonRefl2) =======================
referenced: 3
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
body<- [0x560a7144cb90]
referenced: 3
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] cls (polluted)
val?            %2.5  = CallBuiltin        !     standardGeneric("body<-") e2.4   <cls>
other unused reason

======================= ClosureVersion: .getGenericSigLength (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl2,!Obj2) =======================
referenced: 8
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 1

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
.getGenericSigLength [0x560a7108d500]
referenced: 8
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 1

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] lgl$-
val+            %1.3  = Force<value>             %1.0,    <lgl$->
dependent slot

Type#3 [unused] env-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %3.4  = StaticCall         !     exists[0x560a7fd82040](".SigLength", missingArg, %3.3, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %3.5, %3.6 (Typecheck@0x560a714137e0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] env-
optimized away (dependency)

Type#7 [used] int$-
val?            %10.4 = StaticCall         !     get[0x560a7fb23850](".SigLength", missingArg, %10.3) { 0 2n } e2.3   <int$->
void                    Assume             D     %10.5, %10.6 (Typecheck@0x560a714137e0[Type#7])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

======================= ClosureVersion: .cacheMethodInTable (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 113
referenced non-empty: 28
read non-empty: 25
used: 2
present non-empty: 11

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 15
dependent: 17
other reasons unused non-empty: 9

Polluted
polluted: 3
used polluted: 0

----------------------
.cacheMethodInTable [0x560a71d7cf70]
referenced: 32
referenced non-empty: 19
read non-empty: 19
used: 2
present non-empty: 6

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 17
optimized away non-empty: 11
dependent: 17
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] cls
val?            %2.4  = Force!<lazy>       !v    %1.3, e2.3   <cls>
dependent slot

Type#3 [unused] env-
val?            %2.6  = StaticCall         !v    environment[0x560a7fc87ae0](%2.5) e2.3   <env->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str+
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] env-
optimized away (dependency)

Type#10 [unused] str+
val?            %10.6 = StaticCall         !v    .matchSigLength[0x560a7fbb1680](%10.3, %10.4, %10.5, true) e2.3   <str+>
dependent slot

Type#11 [unused] str+
optimized away (dependency)

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] str$-
optimized away (dependency)

Type#14 [unused] env-
optimized away (dependency)

Type#15 [used] lgl$-
val?            %14.5 = StaticCall         !v    exists[0x560a7fae67a0](%14.3, missingArg, %14.4, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %14.6, %14.7 (Typecheck@0x560a71f58000[Type#15])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#16 [unused] cls
val?            %16.4 = Force!<lazy>       !v    %16.3, e2.3   <cls>
dependent slot

Type#17 [used] lgl$-
val?            %19.3 = StaticCall         !v    .duplicateClassesExist[0x560a7fd5a750]() e2.3   <lgl$->
void                    Assume             D     %19.4, %19.5 (Typecheck@0x560a71f58000[Type#17])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#18 [unused] cls
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] lgl$-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] cls
val?            %24.3 = PopContext         C     %24.2, %23.8   <cls>
dependent slot

Type#24 [unused] str$-
optimized away (dependency)

Type#25 [unused] cls
optimized away (dependency)

Type#26 [unused] env-
optimized away (dependency)

Type#27 [unused] cls
val?            %26.6 = StaticCall         !     assign[0x560a7fccdfc0](%26.3, %26.4, missingArg, %26.5) { 0 1 3n } e2.3   <cls>
dependent slot

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: paste [0x560a55fd8390]
referenced: 4
referenced non-empty: 4
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec- (polluted)
val+            %12.14 = CallSafeBuiltin    wed   list(%12.13)    <vec->
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] (nil|str)- (polluted)
optimized away

Type#3 [unused] lgl$-
optimized away

----------------------
Inlinee: .methodPackageSlots [0x560a719ebdd0]
referenced: 75
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] str
val?            %23.18 = Call               !v    %23.15(%23.16, %23.17) e23.14   <str>
other unused reason

Type#3 [unused] lgl$-
val?            %23.22 = Force!<lazy>       !v    %23.21, e23.14   <lgl$->
other unused reason

Type#4 [unused] cls
val?            %24.2 = Force!<wrapped>    !     %24.0, e23.14   <cls>
other unused reason

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: .sigLabel [0x560a7113f950]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str (polluted)
optimized away

Type#1 [unused] str$-
val+            %12.15 = CallSafeBuiltin    wed   paste(%12.14, " ", "#", false)    <str$->
other unused reason

*********************** Compilation session for: .getGenericFromCache (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2) ***********************
======================= ClosureVersion: .getGenericFromCache (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2) =======================
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

----------------------
.getGenericFromCache [0x560a5a356500]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str$+
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away

Type#3 [unused] env-
optimized away

Type#4 [unused] (nil|cls) (polluted)
val?            %2.8  = StaticCall         !     .getGenericFromCacheTable[0x560a7fcb62b0](%2.4, %2.5, %2.6, %2.7) e2.3   <(nil|cls)>
other unused reason

======================= ClosureVersion: .getGenericFromCacheTable (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2) =======================
referenced: 59
referenced non-empty: 10
read non-empty: 9
used: 2
present non-empty: 3

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 5
dependent: 7
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
.getGenericFromCacheTable [0x560a54351240]
referenced: 59
referenced non-empty: 10
read non-empty: 9
used: 2
present non-empty: 3

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 5
dependent: 7
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$+
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %2.6  = StaticCall         !v    exists[0x560a70246f50](%2.4, missingArg, %2.5, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %2.7, %2.8 (Typecheck@0x560a59dbfa60[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] str$+
optimized away (dependency)

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] cls
val?            %7.5  = StaticCall         !v    get[0x560a7fcb7a30](%7.3, missingArg, %7.4) { 0 2n } e2.3   <cls>
dependent slot

Type#6 [unused] cls
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] str$-
val?            %10.4 = Force!<lazy>       !v    %10.3, e2.3   <str$->
other unused reason

Type#9 [used] lgl$-
val?            %10.5 = CallBuiltin        !v    nzchar(%10.4) e2.3   <lgl$->
void                    Assume             D     %10.6, %10.7 (Typecheck@0x560a59dbfa60[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] cls
val?            %15.2 = Force!<value>      !     %15.0, e2.3   <cls>
dependent slot

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: assign (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj2 miss: 3) ***********************
======================= ClosureVersion: assign (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj2 miss: 3) =======================
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

----------------------
assign [0x560a596bb7f0]
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [unused] str$-
val+            %1.9  = Force!<lazy>       !vr   %1.2,    <str$->
other unused reason

Type#3 [unused] val? (polluted)
val?            %1.10 = Force!<lazy>       !vr   %1.1,    <val?>
other unused reason

Type#4 [unused] env-
val?            %1.11 = Force!<lazy>       !v    %1.5, e1.3   <env->
dependent slot

Type#5 [unused] lgl$-
val?            %1.13 = Force!<lazy>       !v    %1.12, e1.3   <lgl$->
other unused reason

*********************** Compilation session for: .genericOrImplicit (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2) ***********************
======================= ClosureVersion: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,!Obj0) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 3
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val+            %1.1  = Force!<lazy>             %1.0,    <val?>
other unused reason

Type#2 [used] lgl$-
val+            %1.2  = CallSafeBuiltin    vwed  is.logical(%1.1)    <lgl$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a54e55690[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val+            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %3.0, %1.4 (Typecheck@0x560a54e55690[Type#4])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val+            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %5.0, %1.4 (Typecheck@0x560a54e55690[Type#8])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %5.3  = CallSafeBuiltin    vwed  is.na(%5.2)    <lgl$->
dependent slot

Type#10 [used] lgl$-
val+            %1.1  = Force!<lazy>             %1.0,    <val?>
void                    Assume             D     %9.1, %6.3 (Typecheck@0x560a54e55690[Type#10])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?+

======================= ClosureVersion: genericForBasic (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 13
referenced non-empty: 7
read non-empty: 7
used: 3
present non-empty: 4

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

----------------------
genericForBasic [0x560a5685bec0]
referenced: 13
referenced non-empty: 7
read non-empty: 7
used: 3
present non-empty: 4

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 3
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] vec+
val?            %1.7  = Force!<wrapped>    !v    %1.6, e1.1   <vec+>
void                    Assume             D     %4.0, %2.4 (Typecheck@0x560a55ff3030[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str$-
val?            %2.2  = Force!<lazy>       !v    %2.1, e1.1   <str$->
void                    Assume             D     %2.3, %2.4 (Typecheck@0x560a55ff3030[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#5 [unused] (nil|cls) (polluted)
val?            %4.5  = Extract2_1D        wed   %4.2, %4.4, elided   <(nil|cls)>
dependent slot

Type#6 [unused] lgl$-
val?            %4.8  = Force!<lazy>       !v    %4.7, e1.1   <lgl$->
dependent slot

Type#7 [unused] nil-
val?            %7.4  = Force!<value>      !v    %7.3, e1.1   <nil->
other unused reason

Type#8 [used] lgl$-
val?            %7.6  = StaticCall         !v    isFALSE[0x560a802d2050](%7.5) e1.1   <lgl$->
void                    Assume             D     %7.7, %7.8 (Typecheck@0x560a55ff3030[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] (nil|cls) (polluted)
val?            %11.2 = Force!<value>      !     %11.0, e1.1   <(nil|cls)>
dependent slot

======================= ClosureVersion: parent.env (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
parent.env [0x560a56e176a0]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env+ (polluted)
val+            %1.1  = Force!<lazy>             %1.0,    <env+>
other unused reason

======================= ClosureVersion: getFunction (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj1,!Obj2) =======================
referenced: 57
referenced non-empty: 45
read non-empty: 45
used: 13
present non-empty: 18

Used
exact match: 11
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 32
optimized away non-empty: 14
dependent: 26
other reasons unused non-empty: 6

Polluted
polluted: 7
used polluted: 1

----------------------
getFunction [0x560a683d8d70]
referenced: 43
referenced non-empty: 31
read non-empty: 31
used: 11
present non-empty: 10

Used
exact match: 9
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 20
optimized away non-empty: 10
dependent: 16
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] str$-
val?            %2.3  = Force!<lazy>       !v    %1.3, e1.4   <str$->
void                    Assume             D     %2.4, %2.5 (Typecheck@0x560a683d19e0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

Type#4 [used] lgl$-
val?            %4.2  = CallBuiltin        !v    nzchar(%4.1) e1.4   <lgl$->
void                    Assume             D     %4.3, %4.4 (Typecheck@0x560a683d19e0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] env-
val?            %10.4 = Force!<lazy>       !v    %10.3, e1.4   <env->
dependent slot

Type#8 [unused] env-
val?            %10.5 = CallBuiltin        !v    as.environment(%10.4) e1.4   <env->
dependent slot

Type#9 [unused] env-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %12.8 = PopContext         C     %12.7, %12.4   <lgl$->
void                    Assume             D     %12.9, %12.10 (Typecheck@0x560a683d19e0[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [unused] env-
optimized away (dependency)

Type#13 [unused] (nil|cls) (polluted)
val?            %18.5 = StaticCall         !v    get0[0x560a80319590](%18.3, %18.4, "function", false) { 0 1n 2n 3n } e1.4   <(nil|cls)>
other unused reason

Type#14 [unused] lgl$-
val?            %73.1 = Force!<lazy>       !v    %73.0, e1.4   <lgl$->
dependent slot

Type#15 [unused] cls
optimized away

Type#16 [used] lgl$-
val?            %76.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%76.3, "genericFunction") e1.4   <lgl$->
void                    Assume             D     %76.5, %76.6 (Typecheck@0x560a683d19e0[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [used] lgl$-
val?^ | miss    %22.0 = LdVar              eR    found, e1.4
void                    Assume             D     %22.1, %20.0 (Typecheck@0x560a683d19e0[Type#17])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#18 [unused] env-
optimized away (dependency)

Type#19 [used] lgl$-
val?            %23.2 = Call               !v    %23.0(%23.1) e1.4   <lgl$->
void                    Assume             D     %23.3, %23.4 (Typecheck@0x560a683d19e0[Type#19])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#20 [unused] env-
val?            %29.4 = Force!<value>      !v    %29.3, e1.4   <env->
dependent slot

Type#21 [unused] env+
val?            %29.6 = StaticCall         !v    parent.env[0x560a80318460](%29.5) e1.4   <env+>
dependent slot

Type#22 [unused] str$-
optimized away (dependency)

Type#23 [unused] env+
optimized away (dependency)

Type#24 [unused] val? (polluted)
val?            %32.5 = StaticCall         !v    get0[0x560a80319590](%32.3, %32.4, "function", false) { 0 1n 2n 3n } e1.4   <val?>
other unused reason

Type#25 [unused] lgl$-
val?            %63.1 = Force!<value>      !v    %63.0, e1.4   <lgl$->
dependent slot

Type#26 [unused] (cls|spec) (polluted)
optimized away

Type#27 [used] lgl$-
val?            %66.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%66.3, "genericFunction") e1.4   <lgl$->
void                    Assume             D     %66.5, %66.6 (Typecheck@0x560a683d19e0[Type#27])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#28 [used] lgl$-
val?^ | miss    %36.0 = LdVar              eR    found, e1.4
void                    Assume             D     %36.1, %34.0 (Typecheck@0x560a683d19e0[Type#28])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#29 [unused] env+
optimized away (dependency)

Type#30 [used] lgl$-
val?            %43.2 = PopContext         C     %43.1, %37.9   <lgl$->
void                    Assume             D     %43.3, %43.4 (Typecheck@0x560a683d19e0[Type#30])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#31 [unused] env+
optimized away (dependency)

Type#32 [unused] env-
val?            %49.7 = StaticCall         !v    parent.env[0x560a80318460](%49.6) e1.4   <env->
dependent slot

Type#33 [used] lgl$-
val?^ | miss    %53.0 = LdVar              eR    found, e1.4
void                    Assume             D     %53.1, %51.0 (Typecheck@0x560a683d19e0[Type#33])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#34 [unused] lgl$-
val?            %54.1 = Force!<value>      !v    %54.0, e1.4   <lgl$->
dependent slot

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [used] val?- (polluted)
val?^ | miss    %59.0 = LdVar              eR    f, e1.4
void                    Assume             D     %59.1, %57.0 (Typecheck@0x560a683d19e0[Type#42])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: val?-, expected: val?-, required: val?^ | miss

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 0
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %39.14 = Force!<lazy>       !v    %39.12, e39.13   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %39.16 = Force!<lazy>       !v    %39.15, e39.13   <val?>
dependent slot

Type#2 [unused] lgl$-
val?            %39.18 = Force!<lazy>       !v    %39.17, e39.13   <lgl$->
dependent slot

Type#3 [unused] lgl$-
val?            %39.20 = Force!<lazy>       !v    %39.19, e39.13   <lgl$->
dependent slot

Type#4 [unused] lgl$-
val?            %39.22 = Force!<lazy>       !v    %39.21, e39.13   <lgl$->
dependent slot

Type#5 [unused] lgl$-
val?            %39.24 = Force!<lazy>       !v    %39.23, e39.13   <lgl$->
dependent slot

Type#6 [unused] lgl$-
val?            %39.26 = Force!<lazy>       !v    %39.25, e39.13   <lgl$->
dependent slot

Type#7 [unused] lgl$-
val?            %39.28 = Force!<lazy>       !v    %39.27, e39.13   <lgl$->
dependent slot

----------------------
Inlinee: isBaseNamespace [0x560a5643a450]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %39.30 = PopContext         C     %39.29, %39.10   <lgl$->
void                    Assume             D     %39.31, %39.32 (Typecheck@0x560a565938d0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: lastEnv [0x560a683d8f60]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env+ (polluted)
optimized away

Type#1 [used] lgl$-
val?            %41.2 = PopContext         C     %41.1, %39.5   <lgl$->
void                    Assume             D     %41.3, %41.4 (Typecheck@0x560a68661510[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away

======================= ClosureVersion: getFunction (CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj2) =======================
referenced: 57
referenced non-empty: 45
read non-empty: 45
used: 13
present non-empty: 18

Used
exact match: 11
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 32
optimized away non-empty: 14
dependent: 26
other reasons unused non-empty: 6

Polluted
polluted: 7
used polluted: 1

----------------------
getFunction [0x560a683d8d70]
referenced: 43
referenced non-empty: 31
read non-empty: 31
used: 11
present non-empty: 10

Used
exact match: 9
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 20
optimized away non-empty: 10
dependent: 16
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] str$-
val?            %7.4  = Force!<lazy>       !v    %7.3, e1.6   <str$->
void                    Assume             D     %7.5, %7.6 (Typecheck@0x560a683d19e0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

Type#4 [used] lgl$-
val?            %9.2  = CallBuiltin        !v    nzchar(%9.1) e1.6   <lgl$->
void                    Assume             D     %9.3, %9.4 (Typecheck@0x560a683d19e0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] env-
val?            %14.4 = Force!<lazy>       !v    %14.3, e1.6   <env->
dependent slot

Type#8 [unused] env-
val?            %14.5 = CallBuiltin        !v    as.environment(%14.4) e1.6   <env->
dependent slot

Type#9 [unused] env-
optimized away (dependency)

Type#10 [used] lgl$-
val?            %16.8 = PopContext         C     %16.7, %16.4   <lgl$->
void                    Assume             D     %16.9, %16.10 (Typecheck@0x560a683d19e0[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [unused] env-
optimized away (dependency)

Type#13 [unused] (nil|cls) (polluted)
val?            %22.5 = StaticCall         !v    get0[0x560a80319590](%22.3, %22.4, "function", false) { 0 1n 2n 3n } e1.6   <(nil|cls)>
other unused reason

Type#14 [unused] lgl$-
val?            %76.1 = Force!<lazy>       !v    %76.0, e1.6   <lgl$->
dependent slot

Type#15 [unused] cls
optimized away

Type#16 [used] lgl$-
val?            %79.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%79.3, "genericFunction") e1.6   <lgl$->
void                    Assume             D     %79.5, %79.6 (Typecheck@0x560a683d19e0[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [used] lgl$-
val?^ | miss    %26.0 = LdVar              eR    found, e1.6
void                    Assume             D     %26.1, %24.0 (Typecheck@0x560a683d19e0[Type#17])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#18 [unused] env-
optimized away (dependency)

Type#19 [used] lgl$-
val?            %27.2 = Call               !v    %27.0(%27.1) e1.6   <lgl$->
void                    Assume             D     %27.3, %27.4 (Typecheck@0x560a683d19e0[Type#19])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#20 [unused] env-
val?            %33.4 = Force!<value>      !v    %33.3, e1.6   <env->
dependent slot

Type#21 [unused] env+
val?            %33.6 = StaticCall         !v    parent.env[0x560a80318460](%33.5) e1.6   <env+>
dependent slot

Type#22 [unused] str$-
optimized away (dependency)

Type#23 [unused] env+
optimized away (dependency)

Type#24 [unused] val? (polluted)
val?            %36.5 = StaticCall         !v    get0[0x560a80319590](%36.3, %36.4, "function", false) { 0 1n 2n 3n } e1.6   <val?>
other unused reason

Type#25 [unused] lgl$-
val?            %66.1 = Force!<value>      !v    %66.0, e1.6   <lgl$->
dependent slot

Type#26 [unused] (cls|spec) (polluted)
optimized away

Type#27 [used] lgl$-
val?            %69.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%69.3, "genericFunction") e1.6   <lgl$->
void                    Assume             D     %69.5, %69.6 (Typecheck@0x560a683d19e0[Type#27])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#28 [used] lgl$-
val?^ | miss    %40.0 = LdVar              eR    found, e1.6
void                    Assume             D     %40.1, %38.0 (Typecheck@0x560a683d19e0[Type#28])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#29 [unused] env+
optimized away (dependency)

Type#30 [used] lgl$-
val?            %47.2 = PopContext         C     %47.1, %41.9   <lgl$->
void                    Assume             D     %47.3, %47.4 (Typecheck@0x560a683d19e0[Type#30])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#31 [unused] env+
optimized away (dependency)

Type#32 [unused] env-
val?            %53.7 = StaticCall         !v    parent.env[0x560a80318460](%53.6) e1.6   <env->
dependent slot

Type#33 [used] lgl$-
val?^ | miss    %57.0 = LdVar              eR    found, e1.6
void                    Assume             D     %57.1, %55.0 (Typecheck@0x560a683d19e0[Type#33])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#34 [unused] lgl$-
val?            %58.1 = Force!<value>      !v    %58.0, e1.6   <lgl$->
dependent slot

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [used] val?- (polluted)
val?^ | miss    %62.0 = LdVar              eR    f, e1.6
void                    Assume             D     %62.1, %59.1 (Typecheck@0x560a683d19e0[Type#42])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: val?-, expected: val?-, required: val?^ | miss

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 8

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 0
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %43.14 = Force!<lazy>       !v    %43.12, e43.13   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %43.16 = Force!<lazy>       !v    %43.15, e43.13   <val?>
dependent slot

Type#2 [unused] lgl$-
val?            %43.18 = Force!<lazy>       !v    %43.17, e43.13   <lgl$->
dependent slot

Type#3 [unused] lgl$-
val?            %43.20 = Force!<lazy>       !v    %43.19, e43.13   <lgl$->
dependent slot

Type#4 [unused] lgl$-
val?            %43.22 = Force!<lazy>       !v    %43.21, e43.13   <lgl$->
dependent slot

Type#5 [unused] lgl$-
val?            %43.24 = Force!<lazy>       !v    %43.23, e43.13   <lgl$->
dependent slot

Type#6 [unused] lgl$-
val?            %43.26 = Force!<lazy>       !v    %43.25, e43.13   <lgl$->
dependent slot

Type#7 [unused] lgl$-
val?            %43.28 = Force!<lazy>       !v    %43.27, e43.13   <lgl$->
dependent slot

----------------------
Inlinee: isBaseNamespace [0x560a5643a450]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %43.30 = PopContext         C     %43.29, %43.10   <lgl$->
void                    Assume             D     %43.31, %43.32 (Typecheck@0x560a565938d0[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: lastEnv [0x560a683d8f60]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 0

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env+ (polluted)
optimized away

Type#1 [used] lgl$-
val?            %45.2 = PopContext         C     %45.1, %43.5   <lgl$->
void                    Assume             D     %45.3, %45.4 (Typecheck@0x560a68661510[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away

======================= ClosureVersion: implicitGeneric (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 208
referenced non-empty: 102
read non-empty: 96
used: 19
present non-empty: 26

Used
exact match: 8
widened: 11
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 83
optimized away non-empty: 57
dependent: 71
other reasons unused non-empty: 12

Polluted
polluted: 14
used polluted: 2

----------------------
implicitGeneric [0x560a70842fe0]
referenced: 80
referenced non-empty: 42
read non-empty: 42
used: 7
present non-empty: 11

Used
exact match: 4
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 35
optimized away non-empty: 24
dependent: 35
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [used] str$-
val?            %2.3  = Force!<lazy>       !v    %1.1, e1.2   <str$->
void                    Assume             D     %2.4, %2.5 (Typecheck@0x560a709250d0[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

Type#7 [used] lgl$-
val?            %4.2  = CallBuiltin        !v    nzchar(%4.1) e1.2   <lgl$->
void                    Assume             D     %4.3, %4.4 (Typecheck@0x560a709250d0[Type#7])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] str$-
optimized away (dependency)

Type#22 [unused] env-
optimized away (dependency)

Type#23 [used] lgl$-
val?            %27.1 = PopContext         C     %27.0, %15.5   <lgl$->
void                    Assume             D     %27.2, %27.3 (Typecheck@0x560a709250d0[Type#23])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#24 [unused] lgl$-
optimized away (dependency)

Type#25 [unused] str$-
optimized away (dependency)

Type#26 [unused] env-
optimized away (dependency)

Type#27 [unused] cls-
val?            %36.5 = StaticCall         !v    getFunction[0x560a801e3600](%36.3, missingArg, false, %36.4) { 0 3n 2n } e1.2   <cls->
dependent slot

Type#28 [unused] cls-
optimized away (dependency)

Type#29 [unused] cls-
optimized away (dependency)

Type#30 [unused] env-
val?            %39.4 = StaticCall         !v    environment[0x560a8023d980](%39.3) e1.2   <env->
dependent slot

Type#31 [unused] cls-
optimized away (dependency)

Type#32 [unused] cls
val?            %51.1 = PopContext         C     %51.0, %41.4   <cls>
dependent slot

Type#33 [unused] cls
optimized away (dependency)

Type#34 [used] lgl$-
val?            %53.4 = StaticCall         !v    isBaseFun[0x560a8023c200](%53.3) e1.2   <lgl$->
void                    Assume             D     %53.5, %53.6 (Typecheck@0x560a709250d0[Type#34])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#35 [unused] env-
optimized away (dependency)

Type#36 [unused] str$-
val?            %56.4 = Call               !v    function(where=topenv(parent.frame()), create=|...(%56.3) e1.2   <str$->
dependent slot

Type#37 [unused] str$-
optimized away (dependency)

Type#38 [used] nil-
val?            %104.4 = StaticCall         !v    genericForBasic[0x560a80774b70](%104.3) e1.2   <nil->
void                    Assume             D     %104.6, %104.7 (Typecheck@0x560a709250d0[Type#38])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: nil-, expected: nil-, required: val?+

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] nil-
optimized away (dependency)

Type#41 [unused] lgl$-
lgl$#-          %106.6 = CallSafeBuiltin    wed   is.function(%106.5)    <lgl$->
dependent slot

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] str$-
optimized away (dependency)

Type#53 [unused] str$-
optimized away (dependency)

Type#54 [used] lgl$-
val?            %59.17 = PopContext         C     %59.16, %59.11   <lgl$->
void                    Assume             D     %59.18, %59.19 (Typecheck@0x560a709250d0[Type#54])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#55 [unused] cls
val?            %62.4 = Force!<value>      !v    %62.3, e1.2   <cls>
dependent slot

Type#56 [unused] env-
val?            %62.6 = StaticCall         !v    environment[0x560a8023d980](%62.5) from function(fun=NULL) <(rir::DispatchTable*)0x560|... { 0 } e1.2   <env->
dependent slot

Type#57 [used] env-
val?^ | miss    %103.0 = LdVar              eR    .methodsNamespace, e1.2
void                    Assume             D     %103.1, %59.19 (Typecheck@0x560a709250d0[Type#57])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#58 [unused] vec-
val?            %74.0 = Phi                      list():BB73, %100.7:BB102   <vec->
dependent slot

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] str$-
optimized away (dependency)

Type#68 [unused] env-
optimized away (dependency)

Type#69 [unused] str$-
optimized away (dependency)

Type#70 [unused] (nil|cls) (polluted)
val?            %89.2 = PopContext         C     %89.1, %78.6   <(nil|cls)>
dependent slot

Type#71 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#72 [unused] str$-
optimized away (dependency)

Type#73 [unused] cls
optimized away (dependency)

Type#74 [unused] str$-
optimized away (dependency)

Type#75 [unused] vec-
optimized away (dependency)

Type#76 [unused] cls
val?            %91.5 = NamedCall          !v    %91.0(%91.1, fdefault=%91.2, package=%91.3, group=%91.4) e1.2   <cls>
dependent slot

Type#77 [unused] str$-
optimized away (dependency)

Type#78 [unused] cls
optimized away (dependency)

Type#79 [unused] cls
val?            %34.2 = Force!<value>      !     %34.0, e1.2   <cls>
dependent slot

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#1 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#2 [used] int- (polluted)
val?            %148.9 = StaticCall         !v    match[0x560a801d66a0](%148.7, %148.8, 0L) { 0 1 2n } e148.6   <int->
void                    Assume             D     %148.10, %148.11 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %150.2 = Gt                 wed   %150.1, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee: isGeneric [0x560a6861ac40]
referenced: 53
referenced non-empty: 16
read non-empty: 13
used: 4
present non-empty: 3

Used
exact match: 3
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 9
dependent: 11
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] nil-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] nil-
optimized away (dependency)

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [unused] env-
optimized away

Type#14 [unused] cls-
val?            %16.5 = StaticCall         !v    getFunction[0x560a801e3600](%16.3, missingArg, false, %16.4) { 0 3n 2n } e15.8   <cls->
dependent slot

Type#15 [unused] cls-
val             %18.0 = ChkMissing         e     %16.5   <cls->
dependent slot

Type#16 [unused] cls-
optimized away (dependency)

Type#17 [used] lgl$-
val?            %19.4 = StaticCall         !v    isBaseFun[0x560a8023c200](%19.3) e15.8   <lgl$->
void                    Assume             D     %19.5, %19.6 (Typecheck@0x560a686896c0[Type#17])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] str$-
optimized away (dependency)

Type#22 [used] lgl$-
val?            %150.3 = PopContext         C     %150.2, %148.4   <lgl$->
void                    Assume             D     %150.4, %150.5 (Typecheck@0x560a686896c0[Type#22])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#23 [unused] str$-
optimized away (dependency)

Type#24 [used] nil-
val?            %138.4 = StaticCall         !v    genericForBasic[0x560a801ce230](%138.3, missingArg, false) { 0 2n } e15.8   <nil->
void                    Assume             D     %138.6, %138.7 (Typecheck@0x560a686896c0[Type#24])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: nil-, expected: nil-, required: val?+

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] nil-
optimized away (dependency)

Type#27 [unused] lgl$-
lgl$#-          %140.6 = CallSafeBuiltin    wed   is.function(%140.5)    <lgl$->
dependent slot

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] cls-
optimized away (dependency)

Type#39 [used] lgl$-
val?            %22.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%22.3, "genericFunction") e15.8   <lgl$->
void                    Assume             D     %22.5, %22.6 (Typecheck@0x560a686896c0[Type#39])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 7
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %59.15 = Force!<lazy>       !vrL  %59.12, e59.13   <val?>
dependent slot

Type#1 [unused] val? (polluted)
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: .getImplicitGenericFromCache [0x560a710914f0]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] env-
optimized away

Type#4 [unused] (nil|cls) (polluted)
val?            %82.8 = StaticCall         !v    .getGenericFromCacheTable[0x560a7feb58e0](%82.4, %82.5, %82.6, %82.7) e82.3   <(nil|cls)>
other unused reason

----------------------
Inlinee: .cacheImplicitGeneric [0x560a71bf2fb0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

Type#1 [unused] cls
optimized away (dependency)

Type#2 [unused] env-
optimized away

Type#3 [unused] cls
val?            %95.7 = StaticCall         !v    .cacheGenericTable[0x560a80299030](%95.4, %95.5, %95.6) e95.3   <cls>
dependent slot

----------------------
Inlinee: .getImplicitGeneric [0x560a70f2f4d0]
referenced: 15
referenced non-empty: 8
read non-empty: 7
used: 2
present non-empty: 3

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 3
dependent: 5
other reasons unused non-empty: 1

Polluted
polluted: 3
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] (nil|cls) (polluted)
val?            %82.9 = PopContext         C     %82.8, %80.7   <(nil|cls)>
dependent slot

Type#4 [unused] (nil|cls) (polluted)
optimized away (dependency)

Type#5 [used] env-
val?            %83.1 = Force!<lazy>       !v    %83.0, e80.3   <env->
void                    Assume             D     %87.0, %85.4 (Typecheck@0x560a70f6a830[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [used] str$-
val?            %85.2 = Force!<wrapped>    !v    %85.1, e80.3   <str$->
void                    Assume             D     %85.3, %85.4 (Typecheck@0x560a70f6a830[Type#7])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#8 [unused] nil-
val?            %87.5 = Extract2_1D        wed   %87.2, %87.4, elided   <nil->
other unused reason

Type#9 [unused] (nil|cls) (polluted)
val?            %89.1 = Force!<value>      !v    %89.0, e80.3   <(nil|cls)>
dependent slot

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: .getImplicitGroup [0x560a70f69820]
referenced: 10
referenced non-empty: 7
read non-empty: 5
used: 4
present non-empty: 1

Used
exact match: 0
widened: 4
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 1
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 1

Type#0 [used] env-
val?            %63.0 = Phi                      %62.6:BB62, %103.4:BB103   <env->
void                    Assume             D     %67.2, %65.6 (Typecheck@0x560a71144f10[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] str$-
val?            %65.4 = Force!<wrapped>    !vL   %65.3, e59.14   <str$->
void                    Assume             D     %65.5, %65.6 (Typecheck@0x560a71144f10[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#3 [used] (nil|env)- (polluted)
val?            %67.7 = Extract2_1D        wed   %67.4, %67.6, elided   <(nil|env)->
void                    Assume             D     %100.2, %98.5 (Typecheck@0x560a71144f10[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (nil|env)-, expected: (nil|env)-, required: val?+

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [used] str$-
val?            %98.3 = Force!<lazy>       !vL   %59.6, e59.14   <str$->
void                    Assume             D     %98.4, %98.5 (Typecheck@0x560a71144f10[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#7 [unused] nil-
val?            %100.7 = Extract2_1D        wed   %100.4, %100.6, elided   <nil->
other unused reason

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] vec-
optimized away

----------------------
Inlinee: is.primitive [0x560a54179310]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

Type#1 [unused] str$-
str$-           %116.3 = CallSafeBuiltin    wed   typeof(%45.1)    <str$->
other unused reason

----------------------
Inlinee: .derivedDefaultMethod [0x560a7090f2a0]
referenced: 27
referenced non-empty: 7
read non-empty: 7
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 3
dependent: 5
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] cls-
val?            %43.4 = Force!<lazy>       !vL   %41.5, e43.3   <cls->
void                    Assume             D     %43.5, %43.6 (Typecheck@0x560a709262a0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: cls-, expected: cls-, required: val?+

Type#2 [unused] lgl$-
lgl$#-          %45.2 = CallSafeBuiltin    wed   is.function(%45.1)    <lgl$->
dependent slot

Type#3 [unused] cls-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] nil-
optimized away

Type#7 [unused] cls
val?            %115.3 = StaticCall         !v    new[0x560a80256d10]("derivedDefaultMethod") { 0 } e43.3   <cls>
dependent slot

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] cls
val?            %115.14 = Force!<value>      !v    %115.13, e43.3   <cls>
dependent slot

======================= ClosureVersion: .genericOrImplicit (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2) =======================
referenced: 42
referenced non-empty: 27
read non-empty: 27
used: 3
present non-empty: 7

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 24
optimized away non-empty: 17
dependent: 16
other reasons unused non-empty: 8

Polluted
polluted: 3
used polluted: 0

----------------------
.genericOrImplicit [0x560a704c9da0]
referenced: 33
referenced non-empty: 19
read non-empty: 19
used: 3
present non-empty: 5

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 16
optimized away non-empty: 11
dependent: 16
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] nil-
val?            %4.9  = PopContext         C     %4.8, %2.7   <nil->
dependent slot

Type#4 [unused] nil-
optimized away (dependency)

Type#5 [unused] str$-
optimized away (dependency)

Type#6 [unused] env-
optimized away (dependency)

Type#7 [unused] env-
val?            %9.7  = StaticCall         !v    tryCatch[0x560a802dd960](%9.3, %9.6) { 0 1n } e2.3   <env->
dependent slot

Type#8 [unused] env-
optimized away (dependency)

Type#9 [used] lgl$-
val?            %11.8 = PopContext         C     %11.7, %11.4   <lgl$->
void                    Assume             D     %11.9, %11.10 (Typecheck@0x560a70b3e430[Type#9])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] str$-
optimized away (dependency)

Type#20 [unused] env-
optimized away (dependency)

Type#21 [unused] cls-
val?            %14.5 = StaticCall         !v    getFunction[0x560a8030c980](%14.3, true, false, %14.4) e2.3   <cls->
dependent slot

Type#22 [unused] cls-
optimized away (dependency)

Type#23 [used] lgl$-
val?            %16.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%16.3, "genericFunction") e2.3   <lgl$->
void                    Assume             D     %16.5, %16.6 (Typecheck@0x560a70b3e430[Type#23])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#24 [used] cls-
val?^ | miss    %20.3 = LdVar              eR    fdef, e2.3
void                    Assume             D     %20.4, %16.6 (Typecheck@0x560a70b3e430[Type#24])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: cls-, expected: cls-, required: val?^ | miss

Type#25 [unused] lgl$-
optimized away (dependency)

Type#26 [unused] str$-
optimized away (dependency)

Type#27 [unused] env-
optimized away (dependency)

Type#28 [unused] cls
val?            %28.5 = StaticCall         !v    implicitGeneric[0x560a801c7ea0](%28.3, %28.4) e2.3   <cls>
dependent slot

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] cls
val?            %8.2  = Force!<value>      !     %8.0, e2.3   <cls>
dependent slot

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

----------------------
Inlinee: isNamespace [0x560a564ccb20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away

----------------------
Inlinee: .getGenericFromCache [0x560a5a356500]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str$+
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] str$-
optimized away

Type#3 [unused] env-
optimized away

Type#4 [unused] (nil|cls) (polluted)
val?            %4.8  = StaticCall         !v    .getGenericFromCacheTable[0x560a7feb58e0](%4.4, %4.5, %4.6, %4.7) e4.3   <(nil|cls)>
other unused reason

----------------------
Inlinee: is.primitive [0x560a54179310]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

Type#1 [unused] str$-
str$-           %20.8 = CallSafeBuiltin    wed   typeof(%20.7)    <str$->
other unused reason

*********************** Compilation session for: .assignOverBinding (!ExpMi,CorrOrd,!TMany,Argmatch;Eager3,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj2,!Obj3) ***********************
======================= ClosureVersion: assign (!ExpMi,CorrOrd,!TMany,Argmatch miss: 3) =======================
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
assign [0x560a596bb7f0]
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] str$-
val?            %1.9  = Force!<lazy>       !v    %1.2, e1.3   <str$->
void                    Assume             D     %1.10, %1.11 (Typecheck@0x560a596c4aa0[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

Type#3 [unused] val? (polluted)
val?            %2.3  = Force!<lazy>       !v    %2.2, e1.3   <val?>
other unused reason

Type#4 [unused] env-
val?            %2.5  = Force!<lazy>       !v    %2.4, e1.3   <env->
dependent slot

Type#5 [unused] lgl$-
val?            %2.7  = Force!<lazy>       !v    %2.6, e1.3   <lgl$->
other unused reason

======================= ClosureVersion: bindingIsLocked (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 8
referenced non-empty: 7
read non-empty: 7
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

----------------------
bindingIsLocked [0x560a71c01380]
referenced: 7
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 1
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [used] str$-
val?            %1.2  = Force!<lazy>             %1.1,    <str$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a718d42c0[Type#1])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?^ | miss

Type#2 [unused] lgl$-
lgl$#-          %2.2  = CallSafeBuiltin    wed   is.character(%2.1)    <lgl$->
other unused reason

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] sym-
val             %5.0  = CallSafeBuiltin    wed   as.vector(%2.1, "symbol")    <sym->
dependent slot

Type#5 [unused] sym-
val?            %4.1  = Force!<value>      !v    %4.0, e2.3   <sym->
dependent slot

Type#6 [unused] env-
val?            %4.3  = Force!<lazy>       !v    %4.2, e2.3   <env->
other unused reason

----------------------
Inlinee: as.name [0x560a564eda10]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away

======================= ClosureVersion: .assignOverBinding (!ExpMi,CorrOrd,!TMany,Argmatch;Eager3,NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj0,!Obj2,!Obj3) =======================
referenced: 62
referenced non-empty: 31
read non-empty: 31
used: 5
present non-empty: 9

Used
exact match: 5
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 26
optimized away non-empty: 17
dependent: 25
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

----------------------
.assignOverBinding [0x560a71ba98e0]
referenced: 54
referenced non-empty: 23
read non-empty: 23
used: 5
present non-empty: 7

Used
exact match: 5
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 18
optimized away non-empty: 11
dependent: 17
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] lgl$-
val+            %1.4  = Force<value>             %1.0,    <lgl$->
dependent slot

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] vec$+
val?            %3.9  = PopContext         C     %3.8, %3.6   <vec$+>
other unused reason

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] cls
val?            %5.4  = Force!<lazy>       !v    %5.3, e3.5   <cls>
dependent slot

Type#15 [used] lgl$-
val?            %5.5  = CallBuiltin        !     is.function(%5.4) e3.5   <lgl$->
void                    Assume             D     %5.6, %5.7 (Typecheck@0x560a71ccbb90[Type#15])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#16 [unused] cls
val?            %23.4 = Force!<wrapped>    !v    %23.3, e3.5   <cls>
dependent slot

Type#17 [unused] env-
val?            %23.6 = StaticCall         !v    environment[0x560a80808090](%23.5) e3.5   <env->
dependent slot

Type#18 [unused] env-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] env-
optimized away (dependency)

Type#21 [unused] env-
optimized away (dependency)

Type#22 [used] lgl$-
val?            %27.12 = PopContext         C     %27.11, %27.5   <lgl$->
void                    Assume             D     %27.13, %27.14 (Typecheck@0x560a71ccbb90[Type#22])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#23 [unused] str$-
optimized away (dependency)

Type#24 [unused] env-
optimized away (dependency)

Type#25 [used] lgl$-
val?            %30.5 = StaticCall         !     exists[0x560a7fed1690](%30.3, missingArg, %30.4, missingArg, missingArg, false) { 0 2n 5n } e3.5   <lgl$->
void                    Assume             D     %30.6, %30.7 (Typecheck@0x560a71ccbb90[Type#25])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] str$-
optimized away (dependency)

Type#37 [unused] env-
optimized away (dependency)

Type#38 [used] lgl$-
val?            %11.5 = StaticCall         !     exists[0x560a7fed1690](%11.3, missingArg, %11.4, missingArg, missingArg, false) { 0 2n 5n } e3.5   <lgl$->
void                    Assume             D     %11.6, %11.7 (Typecheck@0x560a71ccbb90[Type#38])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#39 [unused] str$-
val?            %14.6 = Force!<wrapped>    !     %14.4, e3.5   <str$->
dependent slot

Type#40 [unused] env-
optimized away (dependency)

Type#41 [used] lgl$-
val?            %14.8 = StaticCall         !     bindingIsLocked[0x560a8073e2c0](%14.7, %14.3) e3.5   <lgl$->
void                    Assume             D     %14.9, %14.10 (Typecheck@0x560a71ccbb90[Type#41])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#42 [unused] str$-
optimized away (dependency)

Type#43 [unused] cls
optimized away (dependency)

Type#44 [unused] env-
optimized away (dependency)

Type#45 [unused] cls
val?            %20.6 = StaticCall         !     assign[0x560a8022d5b0](%20.3, %20.4, %20.5) e3.5   <cls>
dependent slot

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %27.9 = Force!<lazy>       !vrL  %27.7, e27.8   <val?>
dependent slot

Type#1 [unused] val? (polluted)
val?            %27.10 = Force!<lazy>       !vL   %27.6, e27.8   <val?>
dependent slot

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: options [0x560a56774350]
referenced: 0
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

*********************** Compilation session for: .checkGroupSigLength (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: environment (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,!Obj0) =======================
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

----------------------
environment [0x560a55e84a10]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|cls) (polluted)
val+            %1.1  = Force!<lazy>             %1.0,    <(nil|cls)>
other unused reason

======================= ClosureVersion: .checkGroupSigLength (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 194
referenced non-empty: 82
read non-empty: 82
used: 37
present non-empty: 22

Used
exact match: 20
widened: 17
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 45
optimized away non-empty: 23
dependent: 41
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

----------------------
.checkGroupSigLength [0x560a5883e850]
referenced: 192
referenced non-empty: 81
read non-empty: 81
used: 37
present non-empty: 21

Used
exact match: 20
widened: 17
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 44
optimized away non-empty: 23
dependent: 41
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] vec$-
val?            %1.3  = Force!<lazy>       !v    %1.1, e1.2   <vec$->
void                    Assume             D     %1.4, %1.5 (Typecheck@0x560a586bffc0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] vec$-
val?            %4.4  = Force!<wrapped>    !v    %4.3, e1.2   <vec$->
dependent slot

Type#6 [used] int$-
val?            %4.5  = CallBuiltin        !v    seq_along(%4.4) e1.2   <int$->
void                    Assume             D     %4.6, %4.7 (Typecheck@0x560a586bffc0[Type#6])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#7 [used] vec$-
val?            %6.9  = Force!<wrapped>    !v    %6.8, e1.2   <vec$->
void                    Assume             D     %6.11, %6.12 (Typecheck@0x560a586bffc0[Type#7])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [used] int$-
val?^ | miss    %8.1  = LdVar              eR    i, e1.2
void                    Assume             D     %8.2, %6.12 (Typecheck@0x560a586bffc0[Type#9])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#10 [unused] str$+
val?            %8.7  = Extract2_1D        wed   %8.6, %8.4, elided   <str$+>
dependent slot

Type#11 [used] vec$-
val?            %8.10 = Force!<lazy>       !v    %8.9, e1.2   <vec$->
void                    Assume             D     %8.12, %8.13 (Typecheck@0x560a586bffc0[Type#11])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [used] int$-
val?^ | miss    %10.1 = LdVar              eR    i, e1.2
void                    Assume             D     %10.2, %8.13 (Typecheck@0x560a586bffc0[Type#13])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#14 [unused] cls
val?            %10.7 = Extract2_1D        wed   %10.6, %10.4, elided   <cls>
dependent slot

Type#15 [unused] cls
optimized away (dependency)

Type#16 [used] lgl$-
val?            %12.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%12.3, "groupGenericFunction") e1.2   <lgl$->
void                    Assume             D     %12.5, %12.6 (Typecheck@0x560a586bffc0[Type#16])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [used] vec-
val?            %15.6 = Call               !v    %15.3(%15.4, %15.5) e1.2   <vec->
void                    Assume             D     %15.7, %15.8 (Typecheck@0x560a586bffc0[Type#24])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#25 [used] int$-
(int|real)$-    %17.2 = CallSafeBuiltin    wed   length(%17.1)    <int$->
void                    Assume             D     %17.3, %17.4 (Typecheck@0x560a586bffc0[Type#25])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [used] vec$-
val?            %101.3 = Call               !v    %101.0(%101.1, %101.2) e1.2   <vec$->
void                    Assume             D     %101.7, %101.8 (Typecheck@0x560a586bffc0[Type#28])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#29 [used] vec$-
val?            %101.5 = Force!<wrapped>    !v    %101.4, e1.2   <vec$->
void                    Assume             D     %101.6, %101.8 (Typecheck@0x560a586bffc0[Type#29])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#30 [used] int$-
val?^ | miss    %103.0 = LdVar              eR    i, e1.2
void                    Assume             D     %103.1, %101.8 (Typecheck@0x560a586bffc0[Type#30])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] vec$-
optimized away (dependency)

Type#34 [unused] cls-
optimized away

Type#35 [used] vec$-
val?            %105.5 = StaticCall         !v    lapply[0x560a81306830](%105.3, %105.4) { 0 1 } e1.2   <vec$->
void                    Assume             D     %105.9, %105.10 (Typecheck@0x560a586bffc0[Type#35])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#36 [used] vec$-
val?            %105.7 = Force!<wrapped>    !v    %105.6, e1.2   <vec$->
void                    Assume             D     %105.8, %105.10 (Typecheck@0x560a586bffc0[Type#36])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec$-, expected: vec$-, required: val?+

Type#37 [used] int$-
val?^ | miss    %107.0 = LdVar              eR    i, e1.2
void                    Assume             D     %107.1, %105.10 (Typecheck@0x560a586bffc0[Type#37])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [used] vec$-
val?^ | miss    %20.3 = LdVar              eR    funs, e1.2
void                    Assume             D     %20.4, %17.4 (Typecheck@0x560a586bffc0[Type#41])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec$-, expected: vec$-, required: val?^ | miss

Type#42 [unused] cls
optimized away (dependency)

Type#43 [used] vec-
val?            %20.12 = StaticCall         !v    getGroupMembers[0x560a806144f0](%20.11, true, false) e1.2   <vec->
void                    Assume             D     %20.13, %20.14 (Typecheck@0x560a586bffc0[Type#43])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: vec-, expected: vec-, required: val?+

Type#44 [unused] vec-
val+            %22.2 = CallSafeBuiltin    wed   c(%20.7, %22.1)    <vec->
dependent slot

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [used] lgl$-
val?^ | miss    %33.0 = LdVar              eR    recall, e1.2
void                    Assume             D     %33.1, %23.0 (Typecheck@0x560a586bffc0[Type#83])
exact match
checkFor: lgl$-, static: val?^ | miss, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#84 [unused] vec$-
optimized away (dependency)

Type#85 [unused] vec$-
optimized away (dependency)

Type#86 [unused] vec$-
optimized away (dependency)

Type#87 [unused] vec$-
optimized away (dependency)

Type#88 [unused] vec-
val?            %100.10 = PopContext         C     %100.9, %100.6   <vec->
dependent slot

Type#89 [used] vec-
val?^ | miss    %34.3 = LdVar              eR    funs, e1.2
void                    Assume             D     %34.4, %23.0 (Typecheck@0x560a586bffc0[Type#89])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#90 [unused] vec-
val?            %34.8 = StaticCall         !v    unique[0x560a81306a20](%34.7) { 0 } e1.2   <vec->
dependent slot

Type#91 [unused] vec-
optimized away (dependency)

Type#92 [unused] vec-
val?            %36.6 = StaticCall         !v    lapply[0x560a80e646e0](%36.3, %36.5) { 0 1 } e1.2   <vec->
dependent slot

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] real-
val?            %36.10 = Call               !v    %36.8(0, %36.9) e1.2   <real->
dependent slot

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] real-
optimized away (dependency)

Type#98 [unused] int-
val?            %38.4 = CallBuiltin        !v    seq_along(%36.10) e1.2   <int->
other unused reason

Type#99 [used] vec-
val?^ | miss    %42.0 = LdVar              eR    funs, e1.2
void                    Assume             D     %42.1, %40.7 (Typecheck@0x560a586bffc0[Type#99])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [used] int$-
val             %42.7 = ChkMissing         e     %40.5
void                    Assume             D     %42.8, %40.7 (Typecheck@0x560a586bffc0[Type#101])
exact match
checkFor: int$-, static: val, feedback: int$-, expected: int$-, required: val?^ | miss

Type#102 [unused] str$+
val?            %42.11 = Extract2_1D        wed   %42.4, %42.10, elided   <str$+>
dependent slot

Type#103 [used] vec-
val?^ | miss    %44.0 = LdVar              eR    fdefs, e1.2
void                    Assume             D     %44.1, %42.13 (Typecheck@0x560a586bffc0[Type#103])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] int$-
optimized away (dependency)

Type#106 [unused] cls
val?            %44.7 = Extract2_1D        wed   %44.4, %42.10, elided   <cls>
dependent slot

Type#107 [unused] cls
optimized away (dependency)

Type#108 [unused] cls
optimized away (dependency)

Type#109 [used] lgl$-
val?            %47.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%47.3, "genericFunction") e1.2   <lgl$->
void                    Assume             D     %47.5, %47.6 (Typecheck@0x560a586bffc0[Type#109])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#110 [unused] cls
val?            %50.4 = Force!<value>      !v    %50.3, e1.2   <cls>
dependent slot

Type#111 [unused] env-
val?            %50.6 = StaticCall         !v    environment[0x560a80358eb0](%50.5) e1.2   <env->
dependent slot

Type#112 [unused] env-
optimized away (dependency)

Type#113 [unused] $#-
optimized away (dependency)

Type#114 [used] (int|real)$- (polluted)
val?            %50.11 = Call               !v    %50.8(%50.9, %50.10) e1.2   <(int|real)$->
void                    Assume             D     %53.9, %50.14 (Typecheck@0x560a586bffc0[Type#114])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (int|real)$-, expected: (int|real)$-, required: val?+

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

Type#117 [unused] $#-
optimized away (dependency)

Type#118 [unused] (int|real)$- (polluted)
optimized away (dependency)

Type#119 [used] real-
val?^ | miss    %53.1 = LdVar              eR    sigs !upd, e1.2
void                    Assume             D     %53.2, %50.14 (Typecheck@0x560a586bffc0[Type#119])
exact match
checkFor: real-, static: val?^ | miss, feedback: real-, expected: real-, required: val?^ | miss

Type#120 [used] int$-
val?^ | miss    %53.5 = LdVar              eR    i, e1.2
void                    Assume             D     %53.6, %50.14 (Typecheck@0x560a586bffc0[Type#120])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#121 [unused] $#-
optimized away (dependency)

Type#122 [unused] $#-
optimized away (dependency)

Type#123 [unused] $#-
optimized away (dependency)

Type#124 [unused] $#-
optimized away (dependency)

Type#125 [unused] $#-
optimized away (dependency)

Type#126 [unused] $#-
optimized away (dependency)

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] $#-
optimized away (dependency)

Type#129 [unused] $#-
optimized away (dependency)

Type#130 [used] vec-
val?^ | miss    %59.0 = LdVar              eR    funs, e1.2
void                    Assume             D     %59.1, %57.2 (Typecheck@0x560a586bffc0[Type#130])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#131 [unused] $#-
optimized away (dependency)

Type#132 [used] int$-
val             %59.7 = ChkMissing         e     %57.0
void                    Assume             D     %59.8, %57.2 (Typecheck@0x560a586bffc0[Type#132])
exact match
checkFor: int$-, static: val, feedback: int$-, expected: int$-, required: val?^ | miss

Type#133 [unused] str$-
val?            %59.11 = Extract2_1D        wed   %59.4, %59.10, elided   <str$->
other unused reason

Type#134 [used] vec-
val?^ | miss    %61.0 = LdVar              eR    fdefs, e1.2
void                    Assume             D     %61.1, %59.13 (Typecheck@0x560a586bffc0[Type#134])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#135 [unused] $#-
optimized away (dependency)

Type#136 [used] int$-
val             %61.7 = ChkMissing         e     %57.0
void                    Assume             D     %61.8, %59.13 (Typecheck@0x560a586bffc0[Type#136])
exact match
checkFor: int$-, static: val, feedback: int$-, expected: int$-, required: val?^ | miss

Type#137 [unused] cls
val?            %61.11 = Extract2_1D        wed   %61.4, %61.10, elided   <cls>
dependent slot

Type#138 [unused] cls
optimized away (dependency)

Type#139 [unused] cls
optimized away (dependency)

Type#140 [used] lgl$-
val?            %64.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%64.3, "genericFunction") e1.2   <lgl$->
void                    Assume             D     %64.5, %64.6 (Typecheck@0x560a586bffc0[Type#140])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#141 [unused] cls
val?            %67.4 = Force!<value>      !v    %67.3, e1.2   <cls>
dependent slot

Type#142 [unused] env-
val?            %67.6 = StaticCall         !v    environment[0x560a80358eb0](%67.5) e1.2   <env->
dependent slot

Type#143 [unused] env-
optimized away (dependency)

Type#144 [unused] $#-
optimized away (dependency)

Type#145 [used] real$-
val?            %67.11 = Call               !v    %67.8(%67.9, %67.10) e1.2   <real$->
void                    Assume             D     %67.13, %67.14 (Typecheck@0x560a586bffc0[Type#145])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?^ | miss

Type#146 [unused] $#-
optimized away (dependency)

Type#147 [unused] $#-
optimized away (dependency)

Type#148 [unused] $#-
optimized away (dependency)

Type#149 [unused] real$-
optimized away (dependency)

Type#150 [used] real-
val?^ | miss    %72.0 = LdVar              eR    sigs !upd, e1.2
void                    Assume             D     %72.1, %69.3 (Typecheck@0x560a586bffc0[Type#150])
exact match
checkFor: real-, static: val?^ | miss, feedback: real-, expected: real-, required: val?^ | miss

Type#151 [used] int$-
val?^ | miss    %72.4 = LdVar              eR    i, e1.2
void                    Assume             D     %72.5, %69.3 (Typecheck@0x560a586bffc0[Type#151])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#152 [unused] $#-
optimized away (dependency)

Type#153 [unused] $#-
optimized away (dependency)

Type#154 [unused] $#-
optimized away (dependency)

Type#155 [unused] $#-
optimized away (dependency)

Type#156 [unused] $#-
optimized away (dependency)

Type#157 [unused] $#-
optimized away (dependency)

Type#158 [unused] $#-
optimized away (dependency)

Type#159 [unused] $#-
optimized away (dependency)

Type#160 [unused] $#-
optimized away (dependency)

Type#161 [unused] $#-
optimized away (dependency)

Type#162 [used] real-
val?^ | miss    %76.3 = LdVar              eR    sigs, e1.2
void                    Assume             D     %76.4, %54.2 (Typecheck@0x560a586bffc0[Type#162])
exact match
checkFor: real-, static: val?^ | miss, feedback: real-, expected: real-, required: val?^ | miss

Type#163 [unused] real$-
real$-          %76.7 = CallSafeBuiltin    wed   max(%76.6)    <real$->
dependent slot

Type#164 [unused] $#-
optimized away (dependency)

Type#165 [unused] $#-
optimized away (dependency)

Type#166 [unused] $#-
optimized away (dependency)

Type#167 [unused] $#-
optimized away (dependency)

Type#168 [unused] $#-
optimized away (dependency)

Type#169 [unused] real-
optimized away (dependency)

Type#170 [unused] real$-
optimized away (dependency)

Type#171 [unused] lgl-
lgl-            %78.3 = Lt                 wed   %76.6, %76.7, elided   <lgl->
dependent slot

Type#172 [unused] real-
optimized away (dependency)

Type#173 [unused] lgl-
lgl-            %78.4 = Gt                 wed   %76.6, 0, elided   <lgl->
dependent slot

Type#174 [unused] lgl-
val+            %78.5 = CallSafeBuiltin    wed   &(%78.3, %78.4)    <lgl->
dependent slot

Type#175 [unused] $#-
optimized away (dependency)

Type#176 [unused] lgl-
optimized away (dependency)

Type#177 [used] lgl$-
val?            %80.3 = CallBuiltin        !v    any(%78.5) e1.2   <lgl$->
void                    Assume             D     %80.4, %80.5 (Typecheck@0x560a586bffc0[Type#177])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#178 [unused] $#-
optimized away (dependency)

Type#179 [unused] $#-
optimized away (dependency)

Type#180 [unused] $#-
optimized away (dependency)

Type#181 [unused] $#-
optimized away (dependency)

Type#182 [unused] $#-
optimized away (dependency)

Type#183 [unused] $#-
optimized away (dependency)

Type#184 [unused] $#-
optimized away (dependency)

Type#185 [unused] $#-
optimized away (dependency)

Type#186 [unused] $#-
optimized away (dependency)

Type#187 [unused] $#-
optimized away (dependency)

Type#188 [unused] $#-
optimized away (dependency)

Type#189 [unused] $#-
optimized away (dependency)

Type#190 [unused] $#-
optimized away (dependency)

Type#191 [used] vec-
val?^ | miss    %86.0 = LdVar              eR    funs, e1.2
void                    Assume             D     %86.1, %84.0 (Typecheck@0x560a586bffc0[Type#191])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

----------------------
Inlinee: Recall [0x560a5a3adf30]
referenced: 2
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (lgl|vec)- (polluted)
val?            %100.9 = Call               !     <spec .Internal>(%100.8) e100.7   <(lgl|vec)->
other unused reason

======================= ClosureVersion: getGroupMembers (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,Eager2,NonRefl1,NonRefl2,!Obj1,!Obj2) =======================
referenced: 38
referenced non-empty: 25
read non-empty: 18
used: 3
present non-empty: 7

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 22
optimized away non-empty: 15
dependent: 20
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

----------------------
getGroupMembers [0x560a5a44b620]
referenced: 30
referenced non-empty: 17
read non-empty: 17
used: 3
present non-empty: 7

Used
exact match: 2
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 7
dependent: 12
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
optimized away (dependency)

Type#1 [unused] cls
val?            %2.4  = StaticCall         !v    getGeneric[0x560a7d67c220](%2.3) e1.3   <cls>
dependent slot

Type#2 [unused] cls
optimized away (dependency)

Type#3 [unused] cls
optimized away (dependency)

Type#4 [used] lgl$-
val?            %5.4  = Call               !     function(object, class2) <(rir::DispatchTable*|...(%5.3, "groupGenericFunction") e1.3   <lgl$->
void                    Assume             D     %5.5, %5.6 (Typecheck@0x560a59e504c0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] vec-
val?            %8.3  = Call               !v    %8.0(%8.1, %8.2) e1.3   <vec->
dependent slot

Type#8 [unused] lgl$-
val?            %8.6  = Force!<lazy>       !v    %8.5, e1.3   <lgl$->
dependent slot

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] str$-
val?            %18.3 = Call               !v    %18.0(%18.1, %18.2) e1.3   <str$->
dependent slot

Type#12 [unused] str$-
optimized away (dependency)

Type#13 [used] lgl$-
val?            %20.8 = PopContext         C     %20.7, %20.4   <lgl$->
void                    Assume             D     %20.9, %20.10 (Typecheck@0x560a59e504c0[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] vec-
optimized away (dependency)

Type#19 [unused] env-
optimized away

Type#20 [unused] vec-
val?            %26.5 = StaticCall         !v    .recMembers[0x560a80c8f280](%26.3, %26.4) from %1.4 e1.3   <vec->
dependent slot

Type#21 [unused] lgl$-
val?            %10.2 = Force!<lazy>       !     %10.0, e1.3   <lgl$->
dependent slot

Type#22 [used] vec-
val?^ | miss    %13.0 = LdVar              eR    members, e1.3
void                    Assume             D     %13.1, %10.4 (Typecheck@0x560a59e504c0[Type#22])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#23 [unused] vec-
optimized away (dependency)

Type#24 [unused] str-
val?            %17.6 = StaticCall         !     sapply[0x560a80e4bfe0](%17.3, %17.5) { 0 1 } e1.3   <str->
other unused reason

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 8
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away (dependency)

Type#1 [unused] val? (polluted)
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

*********************** Compilation session for: getPackageName (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1) ***********************
======================= ClosureVersion: getPackageName (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0 miss: 1) =======================
referenced: 93
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 3
dependent: 6
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
getPackageName [0x560a5431b8e0]
referenced: 93
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 3
dependent: 6
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] env-
val+            %2.4  = Force!<lazy>       !vr   %1.0,    <env->
dependent slot

Type#4 [unused] env-
val?            %2.5  = CallBuiltin        !v    as.environment(%2.4) e2.3   <env->
dependent slot

Type#5 [unused] env-
optimized away (dependency)

Type#6 [unused] str$-
val?            %4.4  = StaticCall         !v    get0[0x560a80d794e0](".packageName", %4.3, missingArg, false) { 0 1 3n } e2.3   <str$->
dependent slot

Type#7 [unused] str$-
optimized away (dependency)

Type#8 [unused] lgl$-
lgl$-           %4.8  = Not                d     %4.5, elided   <lgl$->
other unused reason

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] str$-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] $#-
optimized away (dependency)

Type#87 [unused] $#-
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] $#-
optimized away (dependency)

Type#90 [unused] $#-
optimized away (dependency)

Type#91 [unused] $#-
optimized away (dependency)

Type#92 [unused] $#-
optimized away (dependency)

======================= ClosureVersion: get0 (CorrOrd,!TMany,Argmatch;Eager0,Eager2,Eager3,NonRefl0,NonRefl2,NonRefl3,!Obj0,!Obj3 miss: 1) =======================
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

----------------------
get0 [0x560a56361ae0]
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 1

Type#0 [unused] $#-
optimized away

Type#1 [unused] str$+ (polluted)
val+            %5.1  = Force<lazy>              %1.3,    <str$+>
other unused reason

Type#2 [used] env+ (polluted)
val?            %5.3  = Force<lazy>        !v    %5.2, e1.6   <env+>
void                    Assume             D     %5.4, %5.5 (Typecheck@0x560a563ebd40[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: env+, expected: env+, required: val?^ | miss

Type#3 [unused] str$-
val?            %7.3  = Force!<lazy>       !v    %7.2, e1.6   <str$->
other unused reason

Type#4 [unused] lgl$-
val?            %7.5  = Force!<lazy>       !v    %7.4, e1.6   <lgl$->
other unused reason

Type#5 [unused] (nil|vec)+ (polluted)
val?            %7.7  = Force!<lazy>       !v    %7.6, e1.6   <(nil|vec)+>
other unused reason

*********************** Compilation session for: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) ***********************
======================= ClosureVersion: isFALSE (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) =======================
referenced: 11
referenced non-empty: 8
read non-empty: 7
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
isFALSE [0x560a552428f0]
referenced: 11
referenced non-empty: 8
read non-empty: 7
used: 4
present non-empty: 2

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
val?            %1.1  = Force!<lazy>       !vr   %1.0,    <val?>
other unused reason

Type#2 [used] lgl$-
val+            %1.2  = CallSafeBuiltin    vwed  is.logical(%1.1)    <lgl$->
void                    Assume             D     %1.3, %1.4 (Typecheck@0x560a54e55690[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %1.1  = Force!<lazy>       !vr   %1.0,    <val?>
void                    Assume             D     %3.0, %1.4 (Typecheck@0x560a54e55690[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %1.1  = Force!<lazy>       !vr   %1.0,    <val?>
void                    Assume             D     %5.0, %1.4 (Typecheck@0x560a54e55690[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %5.3  = CallSafeBuiltin    vwed  is.na(%5.2)    <lgl$->
dependent slot

Type#10 [used] lgl$-
val?            %1.1  = Force!<lazy>       !vr   %1.0,    <val?>
void                    Assume             D     %9.1, %6.3 (Typecheck@0x560a54e55690[Type#10])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

*********************** Compilation session for: ifelse (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,!Obj1,!Obj2) ***********************
======================= ClosureVersion: ifelse (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl1,NonRefl2,!Obj1,!Obj2) =======================
referenced: 105
referenced non-empty: 37
read non-empty: 36
used: 19
present non-empty: 11

Used
exact match: 12
widened: 7
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 18
optimized away non-empty: 7
dependent: 12
other reasons unused non-empty: 6

Polluted
polluted: 23
used polluted: 13

----------------------
ifelse [0x560a55ff34f0]
referenced: 92
referenced non-empty: 33
read non-empty: 33
used: 19
present non-empty: 9

Used
exact match: 12
widened: 7
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 5
dependent: 12
other reasons unused non-empty: 2

Polluted
polluted: 20
used polluted: 13

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [used] lgl+ (polluted)
val?            %1.4  = Force!<lazy>       !v    %1.2, e1.3   <lgl+>
void                    Assume             D     %1.5, %1.6 (Typecheck@0x560a5612f5f0[Type#1])
exact match
checkFor: lgl+, static: val?, feedback: lgl+, expected: lgl+, required: val?^ | miss

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] lgl+ (polluted)
val?            %2.5  = Force!<wrapped>    !v    %2.4, e1.3   <lgl+>
dependent slot

Type#15 [unused] str$-
str$-           %2.6  = CallSafeBuiltin    wed   typeof(%2.5)    <str$->
other unused reason

Type#16 [unused] lgl$-
lgl$-           %4.0  = Neq                d     %2.6, "logical", elided   <lgl$->
dependent slot

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [used] lgl+ (polluted)
val?^ | miss    %5.3  = LdVar              eR    test, e1.3
void                    Assume             D     %5.4, %2.7 (Typecheck2@0x560a5612f5f0[Type#19])
narrowed with static type: no
widened: yes
checkFor: lgl~+, static: val?^ | miss, feedback: lgl+, expected: lgl+, required: val?+

Type#20 [used] int$-
(int|real)$-    %5.8  = CallSafeBuiltin    wed   length(%5.7)    <int$->
void                    Assume             D     %5.9, %5.10 (Typecheck@0x560a5612f5f0[Type#20])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#21 [unused] lgl$-
lgl$-           %7.2  = Eq                 d     %7.1, 1, elided   <lgl$->
dependent slot

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] lgl+ (polluted)
val?            %13.1 = Force!<wrapped>    !v    %13.0, e1.3   <lgl+>
dependent slot

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [used] lgl+ (polluted)
val             %15.3 = ChkMissing         e     %13.1   <lgl+>
void                    Assume             D     %15.4, %13.3 (Typecheck@0x560a5612f5f0[Type#61])
exact match
checkFor: lgl+, static: val, feedback: lgl+, expected: lgl+, required: val+

Type#62 [used] int$-
(int|real)$-    %15.7 = CallSafeBuiltin    wed   length(%15.6)    <int$->
void                    Assume             D     %15.8, %15.9 (Typecheck@0x560a5612f5f0[Type#62])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#63 [unused] lgl+ (polluted)
val?            %19.4 = Force!<wrapped>    !v    %19.3, e1.3   <lgl+>
dependent slot

Type#64 [unused] int+ (polluted)
optimized away (dependency)

Type#65 [used] lgl+ (polluted)
val?^ | miss    %21.3 = LdVar              eR    test, e1.3
void                    Assume             D     %21.4, %19.7 (Typecheck2@0x560a5612f5f0[Type#65])
narrowed with static type: no
widened: yes
checkFor: lgl~+, static: val?^ | miss, feedback: lgl+, expected: lgl+, required: val?+

Type#66 [unused] int+ (polluted)
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [used] int+ (polluted)
val+            %19.5 = CallSafeBuiltin    wed   which(%19.4)    <int+>
void                    Assume             D     %23.3, %21.11 (Typecheck@0x560a5612f5f0[Type#68])
exact match
checkFor: int+, static: val+, feedback: int+, expected: int+, required: val?^ | miss

Type#69 [used] int$-
(int|real)$-    %23.6 = CallSafeBuiltin    wed   length(%23.5)    <int$->
void                    Assume             D     %23.7, %23.8 (Typecheck@0x560a5612f5f0[Type#69])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#70 [unused] lgl$-
lgl$-           %25.2 = Gt                 d     %25.1, 0L, elided   <lgl$->
dependent slot

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [used] (real|str)- (polluted)
val?            %45.3 = NamedCall          !v    %45.0(%45.1, length.out=%45.2) e1.3   <(real|str)->
void                    Assume             D     %45.5, %45.6 (Typecheck@0x560a5612f5f0[Type#73])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (real|str)-, expected: (real|str)-, required: val?+

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [used] int+ (polluted)
val?^ | miss    %47.1 = LdVar              eR    ypos, e1.3
void                    Assume             D     %47.2, %45.6 (Typecheck@0x560a5612f5f0[Type#75])
exact match
checkFor: int+, static: val?^ | miss, feedback: int+, expected: int+, required: val?^ | miss

Type#76 [used] (real|str)- (polluted)
val?            %47.7 = Extract1_1D        wed   %47.6, %47.4, elided   <(real|str)->
void                    Assume             D     %47.8, %47.9 (Typecheck@0x560a5612f5f0[Type#76])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: (real|str)-, expected: (real|str)-, required: val?+

Type#77 [used] lgl+ (polluted)
val?^ | miss    %49.0 = LdVar              eR    ans !upd, e1.3
void                    Assume             D     %49.1, %47.9 (Typecheck@0x560a5612f5f0[Type#77])
exact match
checkFor: lgl+, static: val?^ | miss, feedback: lgl+, expected: lgl+, required: val?^ | miss

Type#78 [unused] int+ (polluted)
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [used] int+ (polluted)
val?^ | miss    %29.3 = LdVar              eR    npos, e1.3
void                    Assume             D     %29.4, %27.0 (Typecheck@0x560a5612f5f0[Type#80])
exact match
checkFor: int+, static: val?^ | miss, feedback: int+, expected: int+, required: val?^ | miss

Type#81 [used] int$-
(int|real)$-    %29.7 = CallSafeBuiltin    wed   length(%29.6)    <int$->
void                    Assume             D     %29.8, %29.9 (Typecheck@0x560a5612f5f0[Type#81])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#82 [unused] lgl$-
lgl$-           %31.2 = Gt                 d     %31.1, 0L, elided   <lgl$->
dependent slot

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] (real|str) (polluted)
val?            %37.3 = NamedCall          !v    %37.0(%37.1, length.out=%37.2) e1.3   <(real|str)>
other unused reason

Type#86 [unused] int$-
optimized away (dependency)

Type#87 [used] int-
val?^ | miss    %44.0 = LdVar              eR    npos, e1.3
void                    Assume             D     %44.1, %37.5 (Typecheck@0x560a5612f5f0[Type#87])
exact match
checkFor: int-, static: val?^ | miss, feedback: int-, expected: int-, required: val?^ | miss

Type#88 [used] (real|str)+ (polluted)
val?            %41.1 = Extract1_1D        !v    %37.3, %41.0, e1.3   <(real|str)+>
void                    Assume             D     %41.2, %41.3 (Typecheck@0x560a5612f5f0[Type#88])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: (real|str)+, expected: (real|str)+, required: val?+

Type#89 [used] val?- (polluted)
val?^ | miss    %43.0 = LdVar              eR    ans !upd, e1.3
void                    Assume             D     %43.1, %41.3 (Typecheck@0x560a5612f5f0[Type#89])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: val?-, expected: val?-, required: val?^ | miss

Type#90 [used] int-
val?^ | miss    %43.5 = LdVar              eR    npos, e1.3
void                    Assume             D     %43.6, %41.3 (Typecheck@0x560a5612f5f0[Type#90])
exact match
checkFor: int-, static: val?^ | miss, feedback: int-, expected: int-, required: val?^ | miss

Type#91 [used] (real|str)+ (polluted)
val?^ | miss    %35.0 = LdVar              eR    ans, e1.3
void                    Assume             D     %35.1, %33.0 (Typecheck@0x560a5612f5f0[Type#91])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: (real|str)+, expected: (real|str)+, required: val?^ | miss

----------------------
Inlinee: which [0x560a56086380]
referenced: 12
referenced non-empty: 3
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] lgl+ (polluted)
lgl             %21.8 = Not                wed   %21.7, elided   <lgl+>
other unused reason

Type#1 [unused] lgl$-
optimized away

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] int+ (polluted)
val+            %21.9 = CallSafeBuiltin    wed   which(%21.8)    <int+>
other unused reason

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

*********************** Compilation session for: .NamespaceOrPackage (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: .NamespaceOrPackage (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 20
referenced non-empty: 9
read non-empty: 9
used: 1
present non-empty: 4

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 4
dependent: 6
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
.NamespaceOrPackage [0x560a71e18440]
referenced: 18
referenced non-empty: 7
read non-empty: 7
used: 0
present non-empty: 4

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 3
dependent: 6
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
val+            %2.4  = Force!<lazy>       !vr   %1.0,    <str$->
other unused reason

Type#1 [unused] sym-
val             %4.2  = CallSafeBuiltin    wed   as.vector(%4.1, "symbol")    <sym->
dependent slot

Type#2 [unused] sym-
optimized away (dependency)

Type#3 [unused] env-
val?            %6.8  = PopContext         C     %6.7, %6.4   <env->
dependent slot

Type#4 [unused] env-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] env-
optimized away (dependency)

Type#17 [unused] env-
val?            %10.4 = StaticCall         !     asNamespace[0x560a81fb7630](%10.3) e2.3   <env->
dependent slot

----------------------
Inlinee: .getNamespace [0x560a6e307d30]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] sym-
optimized away

----------------------
Inlinee: as.name [0x560a564eda10]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 1
present non-empty: 0

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] str$-
val+            %2.4  = Force!<lazy>       !vr   %1.0,    <str$->
void                    Assume             D     %2.5, %2.6 (Typecheck@0x560a56604200[Type#0])
narrowed with static type: no
widened: yes
checkFor: val-, static: val+, feedback: str$-, expected: str$-, required: val?+

*********************** Compilation session for: parent.env<- (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) ***********************
======================= ClosureVersion: parent.env<- (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,NonRefl0,NonRefl1,!Obj0,!Obj1) =======================
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
parent.env<- [0x560a71e18fd0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
val+            %1.2  = Force<value>             %1.1,    <env->
dependent slot

Type#1 [unused] env-
val+            %1.3  = Force<wrapped>           %1.0,    <env->
dependent slot

*********************** Compilation session for: .asGroupArgument (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) ***********************
======================= ClosureVersion: .asGroupArgument (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,!Obj0) =======================
referenced: 9
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
.asGroupArgument [0x560a71e1b9e0]
referenced: 9
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] vec-
val+            %2.2  = Force!<lazy>       !vr   %1.0,    <vec->
dependent slot

Type#2 [unused] lgl$-
lgl$#-          %2.3  = CallSafeBuiltin    wed   is.character(%2.2)    <lgl$->
other unused reason

Type#3 [unused] vec-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: .setupMethodsTables (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj1) ***********************
======================= ClosureVersion: get (CorrOrd,!TMany,Argmatch;Eager0,Eager1,Eager3,Eager4,NonRefl0,NonRefl1,NonRefl3,NonRefl4,!Obj0,!Obj4) =======================
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 1
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 1

----------------------
get [0x560a56b53b40]
referenced: 6
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 1
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (int|env)- (polluted)
optimized away

Type#1 [unused] env+ (polluted)
optimized away (dependency)

Type#2 [unused] str$+ (polluted)
val+            %7.0  = Force<lazy>              %1.4,    <str$+>
other unused reason

Type#3 [used] env+ (polluted)
val?            %7.2  = Force<lazy>        !v    %7.1, e1.7   <env+>
void                    Assume             D     %7.3, %7.4 (Typecheck@0x560a56e45650[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: env+, expected: env+, required: val?^ | miss

Type#4 [unused] str$-
val?            %9.3  = Force!<lazy>       !v    %9.2, e1.7   <str$->
other unused reason

Type#5 [unused] lgl$-
val?            %9.5  = Force!<lazy>       !v    %9.4, e1.7   <lgl$->
other unused reason

======================= ClosureVersion: exists (CorrOrd,!TMany,Argmatch;Eager0,Eager1,Eager3,Eager4,Eager5,NonRefl0,NonRefl1,NonRefl3,NonRefl4,NonRefl5,!Obj0,!Obj5) =======================
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 1
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 1

----------------------
exists [0x560a572da620]
referenced: 8
referenced non-empty: 6
read non-empty: 6
used: 1
present non-empty: 3

Used
exact match: 0
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 2
dependent: 1
other reasons unused non-empty: 4

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] (int|env)- (polluted)
optimized away

Type#3 [unused] env+ (polluted)
optimized away (dependency)

Type#4 [unused] str$+ (polluted)
val+            %7.0  = Force<lazy>              %1.5,    <str$+>
other unused reason

Type#5 [used] env+ (polluted)
val?            %7.2  = Force<lazy>        !v    %7.1, e1.8   <env+>
void                    Assume             D     %7.3, %7.4 (Typecheck@0x560a574dece0[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: env+, expected: env+, required: val?^ | miss

Type#6 [unused] str$-
val?            %9.3  = Force!<lazy>       !v    %9.2, e1.8   <str$->
other unused reason

Type#7 [unused] lgl$-
val?            %9.5  = Force!<lazy>       !v    %9.4, e1.8   <lgl$->
other unused reason

======================= ClosureVersion: .mlistAddToTable (!ExpMi,CorrOrd,!TMany,Argmatch miss: 2) =======================
referenced: 29
referenced non-empty: 19
read non-empty: 19
used: 4
present non-empty: 5

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 10
dependent: 13
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
.mlistAddToTable [0x560a71a26540]
referenced: 29
referenced non-empty: 19
read non-empty: 19
used: 4
present non-empty: 5

Used
exact match: 4
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 15
optimized away non-empty: 10
dependent: 13
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] env-
optimized away (dependency)

Type#2 [unused] cls
val?            %2.3  = Force!<lazy>       !v    %1.1, e1.2   <cls>
dependent slot

Type#3 [unused] env-
val?            %2.5  = StaticCall         !v    environment[0x560a828f7200](%2.4) e1.2   <env->
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] str-
val?            %2.10 = Call               !v    %2.7(%2.8, %2.9) e1.2   <str->
other unused reason

Type#7 [unused] env-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %4.4  = StaticCall         !v    exists[0x560a82847b00](".SigLength", missingArg, %4.3, missingArg, missingArg, false) { 0 2n 5n } e1.2   <lgl$->
void                    Assume             D     %4.5, %4.6 (Typecheck@0x560a71a26430[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] env-
optimized away (dependency)

Type#11 [used] real$-
val?            %7.4  = StaticCall         !v    get[0x560a8284fe30](".SigLength", missingArg, %7.3, missingArg, false) { 0 2n 4n } e1.2   <real$->
void                    Assume             D     %7.5, %7.6 (Typecheck@0x560a71a26430[Type#11])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?^ | miss

Type#12 [unused] env-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] str$-
optimized away

Type#15 [unused] cls
optimized away (dependency)

Type#16 [unused] lgl$-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] env-
optimized away (dependency)

Type#19 [used] real$-
val?            %13.4 = StaticCall         !v    get[0x560a8284fe30](".SigLength", missingArg, %13.3, missingArg, false) { 0 2n 4n } e1.2   <real$->
void                    Assume             D     %13.5, %13.6 (Typecheck@0x560a71a26430[Type#19])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?^ | miss

Type#20 [unused] real$-
optimized away (dependency)

Type#21 [used] real$-
val?^ | miss    %17.0 = LdVar              eR    n, e1.2
void                    Assume             D     %17.1, %15.3 (Typecheck@0x560a71a26430[Type#21])
exact match
checkFor: real$-, static: val?^ | miss, feedback: real$-, expected: real$-, required: val?^ | miss

Type#22 [unused] lgl$-
lgl$-           %17.4 = Gt                 d     %15.1, %17.3, elided   <lgl$->
dependent slot

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] env-
val?            %18.2 = Force!<wrapped>    !     %18.0, e1.2   <env->
dependent slot

======================= ClosureVersion: .setupMethodsTables (!ExpMi,CorrOrd,!TMany,Argmatch;Eager1,NonRefl0,NonRefl1,!Obj1) =======================
referenced: 75
referenced non-empty: 22
read non-empty: 22
used: 1
present non-empty: 8

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 21
optimized away non-empty: 13
dependent: 18
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

----------------------
.setupMethodsTables [0x560a71e11ee0]
referenced: 75
referenced non-empty: 22
read non-empty: 22
used: 1
present non-empty: 8

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 21
optimized away non-empty: 13
dependent: 18
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] cls
val?            %2.4  = Force!<lazy>       !vr   %1.1,    <cls>
dependent slot

Type#3 [unused] env-
val?            %2.6  = StaticCall         !v    environment[0x560a828f7200](%2.5) e2.3   <env->
dependent slot

Type#4 [unused] lgl$-
val?            %2.9  = Force!<value>      !v    %2.8, e2.3   <lgl$->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] vec-
val?            %25.4 = Call               !v    %25.1(%25.2, %25.3) e2.3   <vec->
dependent slot

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] real$-
optimized away

Type#39 [unused] env-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] str-
optimized away

Type#43 [unused] cls-
optimized away

Type#44 [unused] vec-
val?            %8.5  = StaticCall         !v    lapply[0x560a82613ec0](%8.3, %8.4) { 0 1 } e2.3   <vec->
dependent slot

Type#45 [unused] vec-
optimized away (dependency)

Type#46 [unused] env-
optimized away (dependency)

Type#47 [unused] lgl$-
val?            %10.7 = Force!<value>      !v    %10.6, e2.3   <lgl$->
dependent slot

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] cls
val?            %12.3 = Call               !v    %12.0(%12.1, %12.2) e2.3   <cls>
dependent slot

Type#53 [unused] cls
optimized away (dependency)

Type#54 [unused] cls
optimized away (dependency)

Type#55 [unused] env-
val?            %14.5 = StaticCall         !v    .mlistAddToTable[0x560a828543d0](%14.3, %14.4) e2.3   <env->
dependent slot

Type#56 [unused] env-
optimized away (dependency)

Type#57 [unused] env-
optimized away (dependency)

Type#58 [unused] env-
optimized away (dependency)

Type#59 [unused] env-
optimized away (dependency)

Type#60 [unused] cls
optimized away (dependency)

Type#61 [used] lgl$-
val?            %20.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%20.3, "groupGenericFunction") e2.3   <lgl$->
void                    Assume             D     %20.5, %20.6 (Typecheck@0x560a71ac9180[Type#61])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: .storeMlist (!ExpMi,CorrOrd,!TMany,Argmatch;Eager3,NonRefl2,NonRefl3,NonRefl4,NonRefl5,!Obj3,!Obj4,!Obj5,SimpleReal3) ***********************
======================= ClosureVersion: .storeMlist (!ExpMi,CorrOrd,!TMany,Argmatch;Eager3,NonRefl2,NonRefl3,NonRefl4,NonRefl5,!Obj3,!Obj4,!Obj5,SimpleReal3) =======================
referenced: 141
referenced non-empty: 25
read non-empty: 25
used: 9
present non-empty: 6

Used
exact match: 4
widened: 5
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 16
optimized away non-empty: 10
dependent: 16
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
.storeMlist [0x560a71e13890]
referenced: 141
referenced non-empty: 25
read non-empty: 25
used: 9
present non-empty: 6

Used
exact match: 4
widened: 5
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 16
optimized away non-empty: 10
dependent: 16
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
val?            %1.7  = Force!<lazy>       !vr   %1.3,    <cls>
dependent slot

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] cls
optimized away (dependency)

Type#3 [used] lgl$-
val?            %3.4  = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%3.3, "MethodsList") e1.6   <lgl$->
void                    Assume             D     %3.5, %3.6 (Typecheck@0x560a71985840[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] cls
val?            %6.4  = Force!<wrapped>    !v    %6.3, e1.6   <cls>
dependent slot

Type#6 [used] vec$+
val?            %6.5  = NamedCall          !v    <blt list>(ANY=%6.4) e1.6   <vec$+>
void                    Assume             D     %6.7, %6.8 (Typecheck@0x560a71985840[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec$+, expected: vec$+, required: val?+

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] vec$+
optimized away (dependency)

Type#12 [unused] str$-
val+            %8.6  = CallSafeBuiltin    wed   names(%8.5)    <str$->
dependent slot

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] vec$+
optimized away (dependency)

Type#15 [used] int$-
val?            %10.3 = CallBuiltin        !v    seq_along(%8.5) e1.6   <int$->
void                    Assume             D     %10.4, %10.5 (Typecheck@0x560a71985840[Type#15])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#16 [used] vec$+
val?^ | miss    %14.0 = LdVar              eR    m, e1.6
void                    Assume             D     %14.1, %12.8 (Typecheck@0x560a71985840[Type#16])
narrowed with static type: no
widened: yes
checkFor: val?~+ | miss, static: val?^ | miss, feedback: vec$+, expected: vec$+, required: val?^ | miss

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] int$-
optimized away (dependency)

Type#19 [unused] cls
val?            %14.7 = Extract2_1D        wed   %14.4, %12.6, elided   <cls>
dependent slot

Type#20 [used] str$-
val?^ | miss    %16.0 = LdVar              eR    classes, e1.6
void                    Assume             D     %16.1, %14.9 (Typecheck@0x560a71985840[Type#20])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] int$-
optimized away (dependency)

Type#23 [used] str$-
val?            %16.7 = Extract2_1D        wed   %16.4, %12.6, elided   <str$->
void                    Assume             D     %16.13, %16.15 (Typecheck@0x560a71985840[Type#23])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#24 [used] str$-
val?            %16.9 = Force!<lazy>       !v    %16.8, e1.6   <str$->
void                    Assume             D     %16.14, %16.15 (Typecheck@0x560a71985840[Type#24])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#25 [used] real$-
val?            %16.11 = Force!<value>      !v    %16.10, e1.6   <real$->
void                    Assume             D     %16.12, %16.15 (Typecheck@0x560a71985840[Type#25])
exact match
checkFor: real$-, static: val?, feedback: real$-, expected: real$-, required: val?+

Type#26 [unused] cls
optimized away (dependency)

Type#27 [used] lgl$-
val?            %20.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%20.3, "MethodDefinition") e1.6   <lgl$->
void                    Assume             D     %20.5, %20.6 (Typecheck@0x560a71985840[Type#27])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] lgl$-
val?            %26.1 = Force!<lazy>       !v    %26.0, e1.6   <lgl$->
dependent slot

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] str$-
optimized away (dependency)

Type#75 [unused] str$-
optimized away (dependency)

Type#76 [unused] cls
optimized away (dependency)

Type#77 [unused] env-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [unused] $#-
optimized away (dependency)

Type#85 [unused] $#-
optimized away (dependency)

Type#86 [unused] $#-
optimized away (dependency)

Type#87 [unused] $#-
optimized away (dependency)

Type#88 [unused] $#-
optimized away (dependency)

Type#89 [unused] $#-
optimized away (dependency)

Type#90 [unused] $#-
optimized away (dependency)

Type#91 [unused] $#-
optimized away (dependency)

Type#92 [unused] $#-
optimized away (dependency)

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] $#-
optimized away (dependency)

Type#99 [unused] $#-
optimized away (dependency)

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [unused] $#-
optimized away (dependency)

Type#102 [unused] $#-
optimized away (dependency)

Type#103 [unused] $#-
optimized away (dependency)

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] $#-
optimized away (dependency)

Type#106 [unused] $#-
optimized away (dependency)

Type#107 [unused] $#-
optimized away (dependency)

Type#108 [unused] $#-
optimized away (dependency)

Type#109 [unused] $#-
optimized away (dependency)

Type#110 [unused] $#-
optimized away (dependency)

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] $#-
optimized away (dependency)

Type#113 [unused] $#-
optimized away (dependency)

Type#114 [unused] $#-
optimized away (dependency)

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

Type#117 [unused] $#-
optimized away (dependency)

Type#118 [unused] $#-
optimized away (dependency)

Type#119 [unused] $#-
optimized away (dependency)

Type#120 [unused] $#-
optimized away (dependency)

Type#121 [unused] $#-
optimized away (dependency)

Type#122 [unused] $#-
optimized away (dependency)

Type#123 [unused] $#-
optimized away (dependency)

Type#124 [unused] $#-
optimized away (dependency)

Type#125 [unused] $#-
optimized away (dependency)

Type#126 [unused] $#-
optimized away (dependency)

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] $#-
optimized away (dependency)

Type#129 [unused] $#-
optimized away (dependency)

Type#130 [unused] $#-
optimized away (dependency)

Type#131 [unused] $#-
optimized away (dependency)

Type#132 [unused] $#-
optimized away (dependency)

Type#133 [unused] $#-
optimized away (dependency)

Type#134 [unused] $#-
optimized away (dependency)

Type#135 [unused] $#-
optimized away (dependency)

Type#136 [unused] $#-
optimized away (dependency)

Type#137 [unused] $#-
optimized away (dependency)

Type#138 [unused] $#-
optimized away (dependency)

Type#139 [unused] $#-
optimized away (dependency)

Type#140 [unused] env-
val?            %40.2 = Force!<wrapped>    !     %40.0, e1.6   <env->
dependent slot

*********************** Compilation session for: generic.skeleton (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0) ***********************
======================= ClosureVersion: generic.skeleton (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0) =======================
referenced: 42
referenced non-empty: 21
read non-empty: 21
used: 4
present non-empty: 8

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 17
optimized away non-empty: 9
dependent: 14
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

----------------------
generic.skeleton [0x560a726cd1d0]
referenced: 42
referenced non-empty: 21
read non-empty: 21
used: 4
present non-empty: 8

Used
exact match: 2
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 17
optimized away non-empty: 9
dependent: 14
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
optimized away (dependency)

Type#1 [unused] str-
val?            %2.5  = StaticCall         !v    formalArgs[0x560a82c1e8a0](%2.4) e2.3   <str->
dependent slot

Type#2 [unused] str$+
optimized away

Type#3 [unused] str-
optimized away (dependency)

Type#4 [unused] str-
optimized away (dependency)

Type#5 [unused] vec-
optimized away (dependency)

Type#6 [unused] cls-
optimized away

Type#7 [unused] vec-
val?            %4.5  = StaticCall         !v    lapply[0x560a82d0de20](%4.3, %4.4) { 0 1 } e2.3   <vec->
dependent slot

Type#8 [unused] str-
optimized away (dependency)

Type#9 [used] int$-
val?            %6.4  = StaticCall         !v    match[0x560a82c22180]("...", %6.3) e2.3   <int$->
void                    Assume             D     %6.5, %6.6 (Typecheck@0x560a72742e40[Type#9])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] int$-
optimized away (dependency)

Type#12 [unused] lgl$-
lgl$-           %10.3 = CallSafeBuiltin    wed   is.na(%8.1)    <lgl$->
dependent slot

Type#13 [unused] int$-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [used] str-
val?^ | miss    %13.3 = LdVar              eR    anames, e2.3
void                    Assume             D     %13.4, %10.4 (Typecheck@0x560a72742e40[Type#15])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#16 [used] int$-
(int|real)$-    %13.8 = CallSafeBuiltin    wed   length(%13.7)    <int$->
void                    Assume             D     %13.9, %13.10 (Typecheck@0x560a72742e40[Type#16])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#17 [unused] lgl$-
lgl$-           %15.2 = Lt                 d     %8.1, %15.1, elided   <lgl$->
dependent slot

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] cls
val?            %17.1 = Force!<lazy>       !v    %17.0, e2.3   <cls>
dependent slot

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] cls
val?            %18.1 = Force!<wrapped>    !v    %18.0, e2.3   <cls>
dependent slot

Type#38 [used] vec-
val?^ | miss    %20.0 = LdVar              eR    skeleton !upd, e2.3
void                    Assume             D     %20.1, %18.2 (Typecheck@0x560a72742e40[Type#38])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: vec-, expected: vec-, required: val?^ | miss

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] vec-
val?            %20.5 = Subassign2_1D      !v    %18.1, %20.4, 1L, e2.3   <vec->
dependent slot

Type#41 [unused] code-
val?            %22.4 = CallBuiltin        !     as.call(%20.5) e2.3   <code->
other unused reason

*********************** Compilation session for: .mergeMethodsTable (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj1,!Obj2,!Obj3) ***********************
======================= ClosureVersion: .mergeMethodsTable (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,NonRefl3,!Obj1,!Obj2,!Obj3) =======================
referenced: 409
referenced non-empty: 85
read non-empty: 85
used: 31
present non-empty: 28

Used
exact match: 14
widened: 17
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 54
optimized away non-empty: 26
dependent: 50
other reasons unused non-empty: 4

Polluted
polluted: 11
used polluted: 3

----------------------
.mergeMethodsTable [0x560a71c0ad30]
referenced: 332
referenced non-empty: 80
read non-empty: 80
used: 30
present non-empty: 26

Used
exact match: 13
widened: 17
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 50
optimized away non-empty: 24
dependent: 50
other reasons unused non-empty: 0

Polluted
polluted: 9
used polluted: 3

Type#0 [unused] cls
val?            %2.4  = Force!<lazy>       !vr   %1.3,    <cls>
dependent slot

Type#1 [unused] env-
val?            %2.6  = StaticCall         !v    environment[0x560a83f29570](%2.5) e2.3   <env->
dependent slot

Type#2 [unused] env-
optimized away (dependency)

Type#3 [used] lgl$-
val?            %4.4  = StaticCall         !v    exists[0x560a83f325b0](".SigLength", missingArg, %4.3, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %4.5, %4.6 (Typecheck@0x560a71d8b840[Type#3])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [used] lgl$-
val?            %7.1  = Force!<lazy>       !v    %7.0, e2.3   <lgl$->
void                    Assume             D     %7.2, %7.3 (Typecheck@0x560a71d8b840[Type#5])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] env-
optimized away (dependency)

Type#9 [unused] (int|real)$- (polluted)
val?            %12.4 = StaticCall         !v    get[0x560a83ec1180](".SigLength", missingArg, %12.3) { 0 2n } e2.3   <(int|real)$->
dependent slot

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] str- (polluted)
val?            %12.8 = Call               !v    %12.6("ANY", %12.7) e2.3   <str->
dependent slot

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [used] env-
val?            %14.4 = Force!<lazy>       !v    %14.3, e2.3   <env->
void                    Assume             D     %14.5, %14.6 (Typecheck@0x560a71d8b840[Type#13])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#14 [unused] str-
val+            %16.2 = CallSafeBuiltin    wed   names(%16.1)    <str->
dependent slot

Type#15 [unused] str-
optimized away (dependency)

Type#16 [used] env-
val?            %17.3 = Force!<wrapped>    !v    %17.2, e2.3   <env->
void                    Assume             D     %17.5, %17.6 (Typecheck@0x560a71d8b840[Type#16])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [used] str$-
val?^ | miss    %19.1 = LdVar              eR    what, e2.3
void                    Assume             D     %19.2, %17.6 (Typecheck@0x560a71d8b840[Type#18])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#19 [unused] cls
val?            %19.8 = Extract2_1D        wed   %19.7, %19.5, elided   <cls>
dependent slot

Type#20 [unused] cls
optimized away (dependency)

Type#21 [unused] lgl$-
optimized away (dependency)

Type#22 [unused] cls
optimized away (dependency)

Type#23 [used] lgl$-
val?            %29.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%29.3, "MethodDefinition") e2.3   <lgl$->
void                    Assume             D     %29.5, %29.6 (Typecheck@0x560a71d8b840[Type#23])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] str (polluted)
val?            %37.3 = Call               !v    %37.0(%37.1, %37.2) e2.3   <str>
dependent slot

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] str (polluted)
val             %40.3 = ChkMissing         e     %38.0   <str>
dependent slot

Type#73 [used] int$-
val?            %40.4 = CallBuiltin        !v    length(%40.3) e2.3   <int$->
void                    Assume             D     %40.5, %40.6 (Typecheck@0x560a71d8b840[Type#73])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#74 [unused] int$-
optimized away (dependency)

Type#75 [used] (int|real)$- (polluted)
val?^ | miss    %44.0 = LdVar              eR    n, e2.3
void                    Assume             D     %44.1, %42.3 (Typecheck@0x560a71d8b840[Type#75])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: (int|real)$-, expected: (int|real)$-, required: val?^ | miss

Type#76 [used] lgl$-
lgl-            %44.5 = Eq                 wed   %42.1, %44.4, elided   <lgl$->
void                    Assume             D     %44.6, %44.7 (Typecheck@0x560a71d8b840[Type#76])
exact match
checkFor: lgl$-, static: lgl-, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#77 [unused] int$-
optimized away (dependency)

Type#78 [used] real$-
val?~- | miss   %44.3 = CastType           d     dn %44.0
void                    Assume             D     %47.0, %44.7 (Typecheck@0x560a71d8b840[Type#78])
exact match
checkFor: real$-, static: val?~- | miss, feedback: real$-, expected: real$-, required: val?^ | miss

Type#79 [unused] lgl$-
lgl$-           %47.3 = Lt                 d     %42.1, %47.2, elided   <lgl$->
dependent slot

Type#80 [unused] lgl$-
val?            %48.1 = Force!<wrapped>    !v    %48.0, e2.3   <lgl$->
dependent slot

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] str-
val?            %140.3 = Call               !v    %140.0(%140.1, %140.2) e2.3   <str->
dependent slot

Type#84 [used] int$-
val?^ | miss    %142.0 = LdVar              eR    ns, e2.3
void                    Assume             D     %142.1, %140.5 (Typecheck@0x560a71d8b840[Type#84])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#85 [used] str-
val?^ | miss    %144.0 = LdVar              eR    signames, e2.3
void                    Assume             D     %144.1, %142.5 (Typecheck@0x560a71d8b840[Type#85])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#86 [unused] env-
optimized away (dependency)

Type#87 [unused] int$-
optimized away (dependency)

Type#88 [unused] str-
optimized away (dependency)

Type#89 [used] int$-
val?^ | miss    %148.0 = LdVar              eR    ns, e2.3
void                    Assume             D     %148.1, %146.7 (Typecheck@0x560a71d8b840[Type#89])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#90 [used] env-
val?^ | miss    %148.4 = LdVar              eR    fenv !upd, e2.3
void                    Assume             D     %148.5, %146.7 (Typecheck@0x560a71d8b840[Type#90])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#91 [unused] int$-
optimized away (dependency)

Type#92 [unused] $#-
optimized away (dependency)

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] $#-
optimized away (dependency)

Type#99 [unused] $#-
optimized away (dependency)

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [unused] $#-
optimized away (dependency)

Type#102 [unused] $#-
optimized away (dependency)

Type#103 [unused] $#-
optimized away (dependency)

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] $#-
optimized away (dependency)

Type#106 [unused] $#-
optimized away (dependency)

Type#107 [unused] $#-
optimized away (dependency)

Type#108 [unused] $#-
optimized away (dependency)

Type#109 [unused] $#-
optimized away (dependency)

Type#110 [unused] $#-
optimized away (dependency)

Type#111 [unused] $#-
optimized away (dependency)

Type#112 [unused] $#-
optimized away (dependency)

Type#113 [unused] $#-
optimized away (dependency)

Type#114 [unused] $#-
optimized away (dependency)

Type#115 [unused] $#-
optimized away (dependency)

Type#116 [unused] $#-
optimized away (dependency)

Type#117 [unused] $#-
optimized away (dependency)

Type#118 [unused] $#-
optimized away (dependency)

Type#119 [unused] $#-
optimized away (dependency)

Type#120 [unused] $#-
optimized away (dependency)

Type#121 [unused] $#-
optimized away (dependency)

Type#122 [unused] $#-
optimized away (dependency)

Type#123 [unused] $#-
optimized away (dependency)

Type#124 [unused] $#-
optimized away (dependency)

Type#125 [unused] $#-
optimized away (dependency)

Type#126 [unused] $#-
optimized away (dependency)

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] $#-
optimized away (dependency)

Type#129 [unused] $#-
optimized away (dependency)

Type#130 [unused] $#-
optimized away (dependency)

Type#131 [unused] $#-
optimized away (dependency)

Type#132 [unused] $#-
optimized away (dependency)

Type#133 [unused] $#-
optimized away (dependency)

Type#134 [unused] $#-
optimized away (dependency)

Type#135 [unused] $#-
optimized away (dependency)

Type#136 [unused] $#-
optimized away (dependency)

Type#137 [unused] $#-
optimized away (dependency)

Type#138 [unused] $#-
optimized away (dependency)

Type#139 [unused] $#-
optimized away (dependency)

Type#140 [unused] $#-
optimized away (dependency)

Type#141 [unused] lgl$-
val?            %51.1 = Force!<wrapped>    !v    %51.0, e2.3   <lgl$->
dependent slot

Type#142 [unused] $#-
optimized away (dependency)

Type#143 [unused] $#-
optimized away (dependency)

Type#144 [unused] $#-
optimized away (dependency)

Type#145 [unused] $#-
optimized away (dependency)

Type#146 [unused] $#-
optimized away (dependency)

Type#147 [unused] $#-
optimized away (dependency)

Type#148 [unused] $#-
optimized away (dependency)

Type#149 [unused] $#-
optimized away (dependency)

Type#150 [unused] $#-
optimized away (dependency)

Type#151 [unused] $#-
optimized away (dependency)

Type#152 [unused] $#-
optimized away (dependency)

Type#153 [unused] $#-
optimized away (dependency)

Type#154 [unused] $#-
optimized away (dependency)

Type#155 [unused] $#-
optimized away (dependency)

Type#156 [unused] $#-
optimized away (dependency)

Type#157 [unused] $#-
optimized away (dependency)

Type#158 [unused] str$-
optimized away (dependency)

Type#159 [unused] env-
optimized away (dependency)

Type#160 [used] lgl$-
val?            %55.5 = StaticCall         !v    exists[0x560a83ec1fd0](%55.3, missingArg, %55.4, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %55.6, %55.7 (Typecheck@0x560a71d8b840[Type#160])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#161 [unused] cls
optimized away (dependency)

Type#162 [unused] $#-
optimized away (dependency)

Type#163 [unused] $#-
optimized away (dependency)

Type#164 [unused] cls
val?            %132.6 = StaticCall         !v    .newOrMultipleMethod[0x560a83efae60](%132.3, %132.4, %132.5) e2.3   <cls>
dependent slot

Type#165 [used] nil-
val?^ | miss    %134.0 = LdVar              eR    allTable, e2.3
void                    Assume             D     %134.1, %132.8 (Typecheck@0x560a71d8b840[Type#165])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: nil-, expected: nil-, required: val?^ | miss

Type#166 [unused] env-
optimized away (dependency)

Type#167 [unused] env-
val?            %139.4 = StaticCall         !v    get[0x560a83ec1180](".AllMTable", missingArg, %139.3) { 0 2n } e2.3   <env->
dependent slot

Type#168 [unused] cls
val?            %136.1 = Force!<value>      !v    %136.0, e2.3   <cls>
dependent slot

Type#169 [used] env-
val?^ | miss    %138.0 = LdVar              eR    allTable !upd, e2.3
void                    Assume             D     %138.1, %136.2 (Typecheck@0x560a71d8b840[Type#169])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#170 [used] str$-
val?^ | miss    %138.5 = LdVar              eR    what, e2.3
void                    Assume             D     %138.6, %136.2 (Typecheck@0x560a71d8b840[Type#170])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#171 [unused] cls
val?            %59.1 = Force!<value>      !v    %59.0, e2.3   <cls>
dependent slot

Type#172 [unused] env-
val?            %59.3 = Force!<wrapped>    !v    %59.2, e2.3   <env->
dependent slot

Type#173 [used] str$-
val?^ | miss    %61.0 = LdVar              eR    what, e2.3
void                    Assume             D     %61.1, %59.4 (Typecheck@0x560a71d8b840[Type#173])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#174 [used] env-
val?            %63.3 = Force!<wrapped>    !v    %63.2, e2.3   <env->
void                    Assume             D     %63.5, %63.6 (Typecheck@0x560a71d8b840[Type#174])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#175 [unused] $#-
optimized away (dependency)

Type#176 [used] str$-
val?^ | miss    %65.1 = LdVar              eR    what, e2.3
void                    Assume             D     %65.2, %63.6 (Typecheck@0x560a71d8b840[Type#176])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#177 [unused] cls
val?            %65.8 = Extract2_1D        wed   %65.7, %65.5, elided   <cls>
dependent slot

Type#178 [unused] cls
optimized away (dependency)

Type#179 [unused] lgl$-
optimized away (dependency)

Type#180 [unused] cls
optimized away (dependency)

Type#181 [used] lgl$-
val?            %75.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%75.3, "MethodDefinition") e2.3   <lgl$->
void                    Assume             D     %75.5, %75.6 (Typecheck@0x560a71d8b840[Type#181])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#182 [unused] $#-
optimized away (dependency)

Type#183 [unused] $#-
optimized away (dependency)

Type#184 [unused] $#-
optimized away (dependency)

Type#185 [unused] $#-
optimized away (dependency)

Type#186 [unused] $#-
optimized away (dependency)

Type#187 [unused] $#-
optimized away (dependency)

Type#188 [unused] $#-
optimized away (dependency)

Type#189 [unused] $#-
optimized away (dependency)

Type#190 [unused] $#-
optimized away (dependency)

Type#191 [unused] $#-
optimized away (dependency)

Type#192 [unused] $#-
optimized away (dependency)

Type#193 [unused] $#-
optimized away (dependency)

Type#194 [unused] $#-
optimized away (dependency)

Type#195 [unused] $#-
optimized away (dependency)

Type#196 [unused] $#-
optimized away (dependency)

Type#197 [unused] $#-
optimized away (dependency)

Type#198 [unused] $#-
optimized away (dependency)

Type#199 [unused] $#-
optimized away (dependency)

Type#200 [unused] $#-
optimized away (dependency)

Type#201 [unused] $#-
optimized away (dependency)

Type#202 [unused] $#-
optimized away (dependency)

Type#203 [unused] $#-
optimized away (dependency)

Type#204 [unused] $#-
optimized away (dependency)

Type#205 [unused] $#-
optimized away (dependency)

Type#206 [unused] $#-
optimized away (dependency)

Type#207 [unused] $#-
optimized away (dependency)

Type#208 [unused] $#-
optimized away (dependency)

Type#209 [unused] $#-
optimized away (dependency)

Type#210 [unused] $#-
optimized away (dependency)

Type#211 [unused] $#-
optimized away (dependency)

Type#212 [unused] $#-
optimized away (dependency)

Type#213 [unused] $#-
optimized away (dependency)

Type#214 [unused] $#-
optimized away (dependency)

Type#215 [unused] $#-
optimized away (dependency)

Type#216 [unused] $#-
optimized away (dependency)

Type#217 [unused] $#-
optimized away (dependency)

Type#218 [unused] $#-
optimized away (dependency)

Type#219 [unused] $#-
optimized away (dependency)

Type#220 [unused] $#-
optimized away (dependency)

Type#221 [unused] $#-
optimized away (dependency)

Type#222 [unused] $#-
optimized away (dependency)

Type#223 [unused] $#-
optimized away (dependency)

Type#224 [unused] $#-
optimized away (dependency)

Type#225 [unused] $#-
optimized away (dependency)

Type#226 [unused] $#-
optimized away (dependency)

Type#227 [unused] str (polluted)
val?            %83.3 = Call               !v    %83.0(%83.1, %83.2) e2.3   <str>
dependent slot

Type#228 [unused] $#-
optimized away (dependency)

Type#229 [unused] $#-
optimized away (dependency)

Type#230 [unused] str (polluted)
val             %86.3 = ChkMissing         e     %84.0   <str>
dependent slot

Type#231 [used] int$-
val?            %86.4 = CallBuiltin        !v    length(%86.3) e2.3   <int$->
void                    Assume             D     %86.5, %86.6 (Typecheck@0x560a71d8b840[Type#231])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#232 [unused] int$-
optimized away (dependency)

Type#233 [used] (int|real)$- (polluted)
val?^ | miss    %90.0 = LdVar              eR    n, e2.3
void                    Assume             D     %90.1, %88.3 (Typecheck@0x560a71d8b840[Type#233])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: (int|real)$-, expected: (int|real)$-, required: val?^ | miss

Type#234 [used] lgl$-
lgl-            %90.5 = Eq                 wed   %88.1, %90.4, elided   <lgl$->
void                    Assume             D     %90.6, %90.7 (Typecheck@0x560a71d8b840[Type#234])
exact match
checkFor: lgl$-, static: lgl-, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#235 [unused] $#-
optimized away (dependency)

Type#236 [unused] $#-
optimized away (dependency)

Type#237 [unused] $#-
optimized away (dependency)

Type#238 [unused] $#-
optimized away (dependency)

Type#239 [unused] $#-
optimized away (dependency)

Type#240 [unused] $#-
optimized away (dependency)

Type#241 [unused] $#-
optimized away (dependency)

Type#242 [unused] $#-
optimized away (dependency)

Type#243 [unused] $#-
optimized away (dependency)

Type#244 [unused] $#-
optimized away (dependency)

Type#245 [unused] $#-
optimized away (dependency)

Type#246 [unused] $#-
optimized away (dependency)

Type#247 [unused] $#-
optimized away (dependency)

Type#248 [unused] $#-
optimized away (dependency)

Type#249 [unused] $#-
optimized away (dependency)

Type#250 [unused] $#-
optimized away (dependency)

Type#251 [unused] $#-
optimized away (dependency)

Type#252 [unused] $#-
optimized away (dependency)

Type#253 [unused] $#-
optimized away (dependency)

Type#254 [unused] $#-
optimized away (dependency)

Type#255 [unused] $#-
optimized away (dependency)

Type#256 [unused] $#-
optimized away (dependency)

Type#257 [unused] $#-
optimized away (dependency)

Type#258 [unused] $#-
optimized away (dependency)

Type#259 [unused] $#-
optimized away (dependency)

Type#260 [unused] $#-
optimized away (dependency)

Type#261 [unused] $#-
optimized away (dependency)

Type#262 [unused] $#-
optimized away (dependency)

Type#263 [unused] $#-
optimized away (dependency)

Type#264 [unused] $#-
optimized away (dependency)

Type#265 [unused] $#-
optimized away (dependency)

Type#266 [unused] $#-
optimized away (dependency)

Type#267 [unused] $#-
optimized away (dependency)

Type#268 [unused] $#-
optimized away (dependency)

Type#269 [unused] $#-
optimized away (dependency)

Type#270 [unused] $#-
optimized away (dependency)

Type#271 [unused] $#-
optimized away (dependency)

Type#272 [unused] $#-
optimized away (dependency)

Type#273 [unused] $#-
optimized away (dependency)

Type#274 [unused] $#-
optimized away (dependency)

Type#275 [unused] $#-
optimized away (dependency)

Type#276 [unused] $#-
optimized away (dependency)

Type#277 [unused] $#-
optimized away (dependency)

Type#278 [unused] $#-
optimized away (dependency)

Type#279 [unused] $#-
optimized away (dependency)

Type#280 [unused] $#-
optimized away (dependency)

Type#281 [unused] $#-
optimized away (dependency)

Type#282 [unused] $#-
optimized away (dependency)

Type#283 [unused] $#-
optimized away (dependency)

Type#284 [unused] $#-
optimized away (dependency)

Type#285 [unused] $#-
optimized away (dependency)

Type#286 [unused] $#-
optimized away (dependency)

Type#287 [unused] $#-
optimized away (dependency)

Type#288 [unused] $#-
optimized away (dependency)

Type#289 [unused] $#-
optimized away (dependency)

Type#290 [unused] $#-
optimized away (dependency)

Type#291 [unused] $#-
optimized away (dependency)

Type#292 [unused] $#-
optimized away (dependency)

Type#293 [unused] $#-
optimized away (dependency)

Type#294 [unused] $#-
optimized away (dependency)

Type#295 [unused] $#-
optimized away (dependency)

Type#296 [unused] $#-
optimized away (dependency)

Type#297 [unused] $#-
optimized away (dependency)

Type#298 [unused] $#-
optimized away (dependency)

Type#299 [unused] lgl$-
val?            %96.1 = Force!<wrapped>    !v    %96.0, e2.3   <lgl$->
dependent slot

Type#300 [unused] $#-
optimized away (dependency)

Type#301 [unused] $#-
optimized away (dependency)

Type#302 [unused] $#-
optimized away (dependency)

Type#303 [unused] $#-
optimized away (dependency)

Type#304 [unused] $#-
optimized away (dependency)

Type#305 [unused] $#-
optimized away (dependency)

Type#306 [unused] $#-
optimized away (dependency)

Type#307 [unused] $#-
optimized away (dependency)

Type#308 [unused] $#-
optimized away (dependency)

Type#309 [unused] $#-
optimized away (dependency)

Type#310 [unused] $#-
optimized away (dependency)

Type#311 [unused] $#-
optimized away (dependency)

Type#312 [unused] $#-
optimized away (dependency)

Type#313 [unused] $#-
optimized away (dependency)

Type#314 [unused] $#-
optimized away (dependency)

Type#315 [unused] $#-
optimized away (dependency)

Type#316 [unused] str$-
optimized away (dependency)

Type#317 [unused] env-
optimized away (dependency)

Type#318 [used] lgl$-
val?            %100.5 = StaticCall         !v    exists[0x560a83ec1fd0](%100.3, missingArg, %100.4, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %100.6, %100.7 (Typecheck@0x560a71d8b840[Type#318])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#319 [unused] cls
optimized away (dependency)

Type#320 [unused] $#-
optimized away (dependency)

Type#321 [unused] $#-
optimized away (dependency)

Type#322 [unused] cls
val?            %115.2 = PopContext         C     %113.1, %107.6   <cls>
dependent slot

Type#323 [used] (nil|env)- (polluted)
val?^ | miss    %117.0 = LdVar              eR    allTable, e2.3
void                    Assume             D     %117.1, %115.4 (Typecheck@0x560a71d8b840[Type#323])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: (nil|env)-, expected: (nil|env)-, required: val?^ | miss

Type#324 [unused] env-
optimized away (dependency)

Type#325 [unused] env-
val?            %122.4 = StaticCall         !v    get[0x560a83ec1180](".AllMTable", missingArg, %122.3) { 0 2n } e2.3   <env->
dependent slot

Type#326 [unused] cls
val?            %119.1 = Force!<value>      !v    %119.0, e2.3   <cls>
dependent slot

Type#327 [used] env-
val?^ | miss    %121.0 = LdVar              eR    allTable !upd, e2.3
void                    Assume             D     %121.1, %119.2 (Typecheck@0x560a71d8b840[Type#327])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

Type#328 [used] str$-
val?^ | miss    %121.5 = LdVar              eR    what, e2.3
void                    Assume             D     %121.6, %119.2 (Typecheck@0x560a71d8b840[Type#328])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#329 [unused] cls
val?            %104.1 = Force!<value>      !v    %104.0, e2.3   <cls>
dependent slot

Type#330 [unused] env-
val?            %104.3 = Force!<value>      !v    %104.2, e2.3   <env->
dependent slot

Type#331 [used] str$-
val?^ | miss    %106.0 = LdVar              eR    what, e2.3
void                    Assume             D     %106.1, %104.4 (Typecheck@0x560a71d8b840[Type#331])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

----------------------
Inlinee: .newOrMultipleMethod [0x560a71d88ce0]
referenced: 74
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [used] lgl$-
val?            %109.4 = StaticCall         !v    .duplicateClassesExist[0x560a83ef9620]() e109.3   <lgl$->
void                    Assume             D     %109.5, %109.6 (Typecheck@0x560a71d88be0[Type#0])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#1 [unused] cls
val?            %113.1 = Force!<lazy>       !v    %113.0, e109.3   <cls>
other unused reason

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: is.primitive [0x560a54179310]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

Type#1 [unused] str$-
str$-           %67.4 = CallSafeBuiltin    wed   typeof(%65.8)    <str$->
other unused reason

*********************** Compilation session for: .sigLabel (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) ***********************
======================= ClosureVersion: .sigLabel (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0) =======================
referenced: 6
referenced non-empty: 6
read non-empty: 3
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 6
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 6

Polluted
polluted: 3
used polluted: 0

----------------------
.sigLabel [0x560a7113f950]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str (polluted)
val?            %2.3  = Force!<lazy>       !vr   %1.0,    <str>
other unused reason

Type#1 [unused] str$-
val+            %2.5  = CallSafeBuiltin    vwed  paste(%2.4, " ", "#", false)    <str$->
other unused reason

----------------------
Inlinee: paste [0x560a55fd8390]
referenced: 4
referenced non-empty: 4
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec- (polluted)
val+            %2.4  = CallSafeBuiltin    wed   list(%2.3)    <vec->
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] (nil|str)- (polluted)
optimized away

Type#3 [unused] lgl$-
optimized away

*********************** Compilation session for: .resetTable (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2,SimpleInt1) ***********************
======================= ClosureVersion: is.primitive (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,NonRefl0) =======================
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

----------------------
is.primitive [0x560a54179310]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %1.1  = Force!<lazy>             %1.0,    <val?>
other unused reason

Type#1 [unused] str$-
str$-           %1.2  = CallSafeBuiltin    wed   typeof(%1.1)    <str$->
other unused reason

======================= ClosureVersion: .resetTable (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0,NonRefl1,NonRefl2,!Obj0,!Obj1,!Obj2,SimpleInt1) =======================
referenced: 179
referenced non-empty: 78
read non-empty: 74
used: 10
present non-empty: 16

Used
exact match: 7
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 68
optimized away non-empty: 52
dependent: 54
other reasons unused non-empty: 14

Polluted
polluted: 11
used polluted: 0

----------------------
.resetTable [0x560a7c5283a0]
referenced: 161
referenced non-empty: 63
read non-empty: 63
used: 9
present non-empty: 9

Used
exact match: 6
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 54
optimized away non-empty: 45
dependent: 53
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 0

Type#0 [used] lgl$-
val?            %6.2  = PopContext         C     %6.1, %2.4   <lgl$->
void                    Assume             D     %6.3, %6.4 (Typecheck@0x560a713a9550[Type#0])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str-
val?            %8.8  = Call               !v    %8.6("ANY", %8.7) e2.3   <str->
dependent slot

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] str-
val?            %8.12 = Call               !v    %8.10("methods", %8.11) e2.3   <str->
dependent slot

Type#7 [used] int$-
val?            %8.15 = Force!<wrapped>    !v    %8.14, e2.3   <int$->
void                    Assume             D     %8.16, %8.17 (Typecheck@0x560a713a9550[Type#7])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?+

Type#8 [unused] int-
int-            %10.2 = Colon              d     1L, %10.1, elided   <int->
dependent slot

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [used] env-
val?            %12.4 = Force!<lazy>       !v    %12.3, e2.3   <env->
void                    Assume             D     %12.5, %12.6 (Typecheck@0x560a713a9550[Type#10])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: env-, expected: env-, required: val?+

Type#11 [unused] str-
val+            %14.2 = CallSafeBuiltin    wed   names(%14.1)    <str->
dependent slot

Type#12 [unused] str-
optimized away (dependency)

Type#13 [unused] str$-
optimized away (dependency)

Type#14 [unused] env-
optimized away (dependency)

Type#15 [unused] (cls|blt) (polluted)
val?            %18.5 = StaticCall         !v    get[0x560a82dd8e50](%18.3, missingArg, %18.4) { 0 2n } e2.3   <(cls|blt)>
dependent slot

Type#16 [unused] (cls|blt) (polluted)
optimized away (dependency)

Type#17 [unused] lgl$-
optimized away (dependency)

Type#18 [unused] cls
optimized away

Type#19 [used] lgl$-
val?            %28.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%28.3, "MethodDefinition") e2.3   <lgl$->
void                    Assume             D     %28.5, %28.6 (Typecheck@0x560a713a9550[Type#19])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] str$
val?            %32.3 = Call               !v    %32.0(%32.1, %32.2) e2.3   <str$>
dependent slot

Type#37 [used] str-
val?^ | miss    %72.0 = LdVar              eR    anyLabel, e2.3
void                    Assume             D     %72.1, %22.4 (Typecheck@0x560a713a9550[Type#37])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#38 [unused] (cls|blt) (polluted)
optimized away (dependency)

Type#39 [used] lgl$-
val?            %35.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%35.3, "MethodDefinition") e2.3   <lgl$->
void                    Assume             D     %35.5, %35.6 (Typecheck@0x560a713a9550[Type#39])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#40 [unused] int-
optimized away (dependency)

Type#41 [unused] str-
optimized away (dependency)

Type#42 [unused] int$-
optimized away (dependency)

Type#43 [unused] lgl-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] str-
optimized away (dependency)

Type#46 [unused] str-
optimized away (dependency)

Type#47 [unused] str$-
optimized away (dependency)

Type#48 [unused] str$
optimized away (dependency)

Type#49 [unused] str$-
val?            %67.4 = PopContext         C     %67.3, %65.4   <str$->
dependent slot

Type#50 [unused] int-
optimized away (dependency)

Type#51 [unused] str$
optimized away (dependency)

Type#52 [unused] int$-
optimized away (dependency)

Type#53 [unused] lgl-
optimized away (dependency)

Type#54 [unused] str-
optimized away (dependency)

Type#55 [unused] str$
optimized away (dependency)

Type#56 [unused] str-
optimized away (dependency)

Type#57 [unused] str
val?            %69.4 = Call               !v    function(object, Class, strict=TRUE, ext=possi|...(%69.3, "signature") e2.3   <str>
dependent slot

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] str
optimized away (dependency)

Type#81 [unused] str$-
optimized away (dependency)

Type#82 [unused] str$-
optimized away (dependency)

Type#83 [unused] env-
optimized away (dependency)

Type#84 [unused] str$-
optimized away (dependency)

Type#85 [unused] (cls|blt) (polluted)
optimized away (dependency)

Type#86 [unused] env-
optimized away (dependency)

Type#87 [unused] str$-
optimized away (dependency)

Type#88 [unused] env-
optimized away (dependency)

Type#89 [unused] spec-
val?            %47.5 = StaticCall         !v    get[0x560a82dd8e50](%47.3, missingArg, %47.4) { 0 2n } e2.3   <spec->
dependent slot

Type#90 [unused] spec-
optimized away (dependency)

Type#91 [used] lgl$-
val?            %49.5 = StaticCall         !v    is.primitive[0x560a84a6f590](%49.4) e2.3   <lgl$->
void                    Assume             D     %49.6, %49.7 (Typecheck@0x560a713a9550[Type#91])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#92 [unused] $#-
optimized away (dependency)

Type#93 [unused] $#-
optimized away (dependency)

Type#94 [unused] $#-
optimized away (dependency)

Type#95 [unused] $#-
optimized away (dependency)

Type#96 [unused] $#-
optimized away (dependency)

Type#97 [unused] $#-
optimized away (dependency)

Type#98 [unused] $#-
optimized away (dependency)

Type#99 [unused] $#-
optimized away (dependency)

Type#100 [unused] $#-
optimized away (dependency)

Type#101 [unused] $#-
optimized away (dependency)

Type#102 [unused] $#-
optimized away (dependency)

Type#103 [unused] $#-
optimized away (dependency)

Type#104 [unused] $#-
optimized away (dependency)

Type#105 [unused] $#-
optimized away (dependency)

Type#106 [unused] $#-
optimized away (dependency)

Type#107 [unused] $#-
optimized away (dependency)

Type#108 [unused] $#-
optimized away (dependency)

Type#109 [unused] $#-
optimized away (dependency)

Type#110 [unused] $#-
optimized away (dependency)

Type#111 [used] str-
val?^ | miss    %53.0 = LdVar              eR    anyLabel, e2.3
void                    Assume             D     %53.1, %49.7 (Typecheck@0x560a713a9550[Type#111])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str-, expected: str-, required: val?^ | miss

Type#112 [unused] spec-
optimized away (dependency)

Type#113 [used] lgl$-
val?            %55.4 = Call               !v    function(object, class2) <(rir::DispatchTable*|...(%55.3, "MethodDefinition") e2.3   <lgl$->
void                    Assume             D     %55.5, %55.6 (Typecheck@0x560a713a9550[Type#113])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#114 [unused] int-
optimized away (dependency)

Type#115 [unused] str-
optimized away (dependency)

Type#116 [unused] int$-
optimized away (dependency)

Type#117 [unused] lgl-
optimized away (dependency)

Type#118 [unused] $#-
optimized away (dependency)

Type#119 [unused] str-
optimized away (dependency)

Type#120 [unused] str-
optimized away (dependency)

Type#121 [unused] str$-
optimized away (dependency)

Type#122 [unused] $#-
optimized away (dependency)

Type#123 [unused] $#-
optimized away (dependency)

Type#124 [unused] $#-
optimized away (dependency)

Type#125 [unused] $#-
optimized away (dependency)

Type#126 [unused] $#-
optimized away (dependency)

Type#127 [unused] $#-
optimized away (dependency)

Type#128 [unused] $#-
optimized away (dependency)

Type#129 [unused] $#-
optimized away (dependency)

Type#130 [unused] $#-
optimized away (dependency)

Type#131 [unused] $#-
optimized away (dependency)

Type#132 [unused] $#-
optimized away (dependency)

Type#133 [unused] $#-
optimized away (dependency)

Type#134 [unused] $#-
optimized away (dependency)

Type#135 [unused] $#-
optimized away (dependency)

Type#136 [unused] $#-
optimized away (dependency)

Type#137 [unused] $#-
optimized away (dependency)

Type#138 [unused] $#-
optimized away (dependency)

Type#139 [unused] $#-
optimized away (dependency)

Type#140 [unused] $#-
optimized away (dependency)

Type#141 [unused] $#-
optimized away (dependency)

Type#142 [unused] $#-
optimized away (dependency)

Type#143 [unused] $#-
optimized away (dependency)

Type#144 [unused] $#-
optimized away (dependency)

Type#145 [unused] $#-
optimized away (dependency)

Type#146 [unused] $#-
optimized away (dependency)

Type#147 [unused] $#-
optimized away (dependency)

Type#148 [unused] $#-
optimized away (dependency)

Type#149 [unused] $#-
optimized away (dependency)

Type#150 [unused] $#-
optimized away (dependency)

Type#151 [unused] $#-
optimized away (dependency)

Type#152 [unused] $#-
optimized away (dependency)

Type#153 [unused] $#-
optimized away (dependency)

Type#154 [unused] $#-
optimized away (dependency)

Type#155 [unused] $#-
optimized away (dependency)

Type#156 [unused] str$-
optimized away (dependency)

Type#157 [unused] env-
optimized away (dependency)

Type#158 [unused] str$-
optimized away (dependency)

Type#159 [unused] spec-
optimized away (dependency)

Type#160 [unused] env-
optimized away (dependency)

----------------------
Inlinee: paste [0x560a55fd8390]
referenced: 4
referenced non-empty: 4
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 0
other reasons unused non-empty: 4

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] vec- (polluted)
val+            %58.14 = CallSafeBuiltin    wed   list(%58.13)    <vec->
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] (nil|str)- (polluted)
optimized away

Type#3 [unused] lgl$-
optimized away

----------------------
Inlinee: .sigLabel [0x560a7113f950]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] str (polluted)
optimized away

Type#1 [unused] str$-
val+            %58.15 = CallSafeBuiltin    wed   paste(%58.14, " ", "#", false)    <str$->
other unused reason

----------------------
Inlinee: packageSlot [0x560a6f2c7cd0]
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (str|other) (polluted)
val?            %67.2 = Force!<lazy>       !vL   %65.5, e67.1   <(str|other)>
other unused reason

Type#2 [unused] (nil|str)- (polluted)
val?            %67.3 = CallBuiltin        !v    attr(%67.2, "package") e67.1   <(nil|str)->
other unused reason

----------------------
Inlinee: is.primitive [0x560a54179310]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

Type#1 [unused] str$-
str$-           %20.3 = CallSafeBuiltin    wed   typeof(%18.5)    <str$->
other unused reason

----------------------
Inlinee: .allowPrimitiveMethods [0x560a732730e0]
referenced: 6
referenced non-empty: 4
read non-empty: 3
used: 1
present non-empty: 2

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 1
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] lgl$-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %4.5  = Force!<value>      !v    %4.3, e4.4   <vec>
other unused reason

Type#4 [unused] str$-
val?            %4.7  = Force!<value>      !v    %4.6, e4.4   <str$->
other unused reason

Type#5 [used] lgl$-
val?            %4.8  = CallBuiltin        !v    .Call(%4.5, "", nil, %4.7, nil, nil) e4.4   <lgl$->
void                    Assume             D     %4.9, %4.10 (Typecheck@0x560a73115530[Type#5])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: typeof [0x560a560b2a20]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
optimized away

*********************** Compilation session for: getMethodsForDispatch (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 1) ***********************
======================= ClosureVersion: .getMethodsTable (CorrOrd,!TMany,Argmatch;Eager2,NonRefl0,NonRefl2,NonRefl3) =======================
referenced: 14
referenced non-empty: 10
read non-empty: 10
used: 2
present non-empty: 2

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 7
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
.getMethodsTable [0x560a58690090]
referenced: 14
referenced non-empty: 10
read non-empty: 10
used: 2
present non-empty: 2

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 7
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
optimized away

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %7.2  = Force<lazy>        !v    %7.1, e1.6   <lgl$->
void                    Assume             D     %7.3, %7.4 (Typecheck@0x560a5868ff80[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] lgl$-
val?            %11.4 = Force!<lazy>       !     %11.2, e1.6   <lgl$->
dependent slot

Type#4 [unused] str$-
optimized away (dependency)

Type#5 [unused] env-
optimized away (dependency)

Type#6 [used] lgl$-
val?            %14.5 = StaticCall         !     exists[0x560a81a52910](%14.3, missingArg, %14.4, missingArg, missingArg, false) { 0 2n 5n } e1.6   <lgl$->
void                    Assume             D     %14.6, %14.7 (Typecheck@0x560a5868ff80[Type#6])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [unused] env-
optimized away (dependency)

Type#13 [unused] env-
val?            %20.5 = StaticCall         !     get[0x560a85039160](%20.3, missingArg, %20.4) { 0 2n } e1.6   <env->
dependent slot

======================= ClosureVersion: getMethodsForDispatch (!ExpMi,CorrOrd,!TMany,Argmatch;NonRefl0 miss: 1) =======================
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
getMethodsForDispatch [0x560a713f9870]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] cls
optimized away

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away

Type#4 [unused] env-
val?            %2.7  = StaticCall         !     .getMethodsTable[0x560a82dfd220](%2.4, %2.5, missingArg, %2.6) { 0 1 3n } e2.3   <env->
dependent slot

*********************** Compilation session for: as<- (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj1,!Obj2) ***********************
======================= ClosureVersion: .getMethodsTable (CorrOrd,!TMany,Argmatch;Eager2,NonRefl2,NonRefl3) =======================
referenced: 14
referenced non-empty: 10
read non-empty: 10
used: 2
present non-empty: 2

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 7
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

----------------------
.getMethodsTable [0x560a58690090]
referenced: 14
referenced non-empty: 10
read non-empty: 10
used: 2
present non-empty: 2

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 7
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] cls
optimized away

Type#1 [unused] env-
optimized away (dependency)

Type#2 [used] lgl$-
val?            %7.2  = Force<lazy>        !v    %7.1, e1.6   <lgl$->
void                    Assume             D     %7.3, %7.4 (Typecheck@0x560a5868ff80[Type#2])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] lgl$-
val?            %11.4 = Force!<lazy>       !     %11.2, e1.6   <lgl$->
dependent slot

Type#4 [unused] str$-
optimized away (dependency)

Type#5 [unused] env-
optimized away (dependency)

Type#6 [used] lgl$-
val?            %14.5 = StaticCall         !     exists[0x560a80d16bb0](%14.3, missingArg, %14.4, missingArg, missingArg, false) { 0 2n 5n } e1.6   <lgl$->
void                    Assume             D     %14.6, %14.7 (Typecheck@0x560a5868ff80[Type#6])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [unused] env-
optimized away (dependency)

Type#13 [unused] env-
val?            %20.5 = StaticCall         !     get[0x560a84c7be80](%20.3, missingArg, %20.4) { 0 2n } e1.6   <env->
dependent slot

======================= ClosureVersion: getMethodsForDispatch (!ExpMi,CorrOrd,!TMany,Argmatch miss: 1) =======================
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

----------------------
getMethodsForDispatch [0x560a713f9870]
referenced: 5
referenced non-empty: 4
read non-empty: 4
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] cls
optimized away

Type#2 [unused] env-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away

Type#4 [unused] env-
val?            %2.7  = StaticCall         !     .getMethodsTable[0x560a80faebc0](%2.4, %2.5, missingArg, %2.6) { 0 1 3n } e2.3   <env->
dependent slot

======================= ClosureVersion: .matchSigLength (!ExpMi,CorrOrd,!TMany,Argmatch;Eager3,NonRefl3,!Obj3) =======================
referenced: 93
referenced non-empty: 20
read non-empty: 20
used: 6
present non-empty: 8

Used
exact match: 4
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 14
optimized away non-empty: 6
dependent: 10
other reasons unused non-empty: 4

Polluted
polluted: 3
used polluted: 0

----------------------
.matchSigLength [0x560a71363170]
referenced: 87
referenced non-empty: 15
read non-empty: 15
used: 6
present non-empty: 5

Used
exact match: 4
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 9
optimized away non-empty: 4
dependent: 8
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] env-
optimized away

Type#2 [used] int$-
val?            %2.6  = StaticCall         !v    .getGenericSigLength[0x560a87a2e380](%2.4, %2.5, true) e2.3   <int$->
void                    Assume             D     %2.7, %2.8 (Typecheck@0x560a7137a690[Type#2])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] str+
val?            %6.4  = Force!<lazy>       !v    %6.3, e2.3   <str+>
void                    Assume             D     %6.5, %6.6 (Typecheck@0x560a7137a690[Type#4])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str+, expected: str+, required: val?+

Type#5 [used] int$-
(int|real)$-    %8.2  = CallSafeBuiltin    wed   length(%8.1)    <int$->
void                    Assume             D     %8.3, %8.4 (Typecheck@0x560a7137a690[Type#5])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] str+
optimized away (dependency)

Type#7 [unused] nil-
val?            %14.4 = PopContext         C     %14.3, %12.4   <nil->
dependent slot

Type#8 [used] int$-
val?^ | miss    %16.0 = LdVar              eR    n, e2.3
void                    Assume             D     %16.1, %14.6 (Typecheck@0x560a7137a690[Type#8])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#9 [used] int$-
val?^ | miss    %16.4 = LdVar              eR    nargs, e2.3
void                    Assume             D     %16.5, %14.6 (Typecheck@0x560a7137a690[Type#9])
exact match
checkFor: int$-, static: val?^ | miss, feedback: int$-, expected: int$-, required: val?^ | miss

Type#10 [unused] lgl$-
lgl$-           %16.8 = Lt                 d     %16.3, %16.7, elided   <lgl$->
dependent slot

Type#11 [unused] int$-
optimized away (dependency)

Type#12 [unused] int$-
optimized away (dependency)

Type#13 [unused] lgl$-
lgl$-           %17.0 = Gt                 d     %16.3, %16.7, elided   <lgl$->
dependent slot

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] $#-
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] $#-
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] $#-
optimized away (dependency)

Type#84 [used] nil-
val?^ | miss    %22.0 = LdVar              eR    pkgs, e2.3
void                    Assume             D     %22.1, %20.0 (Typecheck@0x560a7137a690[Type#84])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: nil-, expected: nil-, required: val?^ | miss

Type#85 [unused] str+
val?            %22.9 = Force!<wrapped>    !v    %22.8, e2.3   <str+>
dependent slot

Type#86 [unused] str+
val?            %22.16 = PopContext         C     %22.13, %22.10   <str+>
dependent slot

----------------------
Inlinee: packageSlot<- [0x560a71363290]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (nil|str)- (polluted)
optimized away

Type#1 [unused] str+
optimized away (dependency)

Type#2 [unused] str+
val?            %22.13 = NamedCall          !v    %22.12(%22.9, "package", value=%22.4) e22.11   <str+>
dependent slot

----------------------
Inlinee: packageSlot [0x560a6f2c7cd0]
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (str|other) (polluted)
val?            %14.2 = Force!<lazy>       !vL   %12.5, e14.1   <(str|other)>
other unused reason

Type#2 [unused] (nil|str)- (polluted)
val?            %14.3 = CallBuiltin        !v    attr(%14.2, "package") e14.1   <(nil|str)->
other unused reason

======================= ClosureVersion: .getGenericSigLength (!ExpMi,CorrOrd,!TMany,Argmatch;Eager2,NonRefl2,!Obj2) =======================
referenced: 8
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 1

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
.getGenericSigLength [0x560a7108d500]
referenced: 8
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 1

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 3
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] lgl$-
val+            %1.3  = Force<value>             %1.0,    <lgl$->
dependent slot

Type#3 [unused] env-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %3.4  = StaticCall         !     exists[0x560a80fe0d50](".SigLength", missingArg, %3.3, missingArg, missingArg, false) { 0 2n 5n } e2.3   <lgl$->
void                    Assume             D     %3.5, %3.6 (Typecheck@0x560a714137e0[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] env-
optimized away (dependency)

Type#7 [used] int$-
val?            %10.4 = StaticCall         !     get[0x560a84c7be80](".SigLength", missingArg, %10.3) { 0 2n } e2.3   <int$->
void                    Assume             D     %10.5, %10.6 (Typecheck@0x560a714137e0[Type#7])
exact match
checkFor: int$-, static: val?, feedback: int$-, expected: int$-, required: val?^ | miss

======================= ClosureVersion: as<- (!ExpMi,CorrOrd,!TMany,Argmatch;Eager0,Eager1,Eager2,NonRefl0,NonRefl1,NonRefl2,!Obj1,!Obj2) =======================
referenced: 146
referenced non-empty: 49
read non-empty: 46
used: 6
present non-empty: 19

Used
exact match: 3
widened: 3
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 43
optimized away non-empty: 24
dependent: 36
other reasons unused non-empty: 7

Polluted
polluted: 7
used polluted: 0

----------------------
as<- [0x560a7c688330]
referenced: 85
referenced non-empty: 22
read non-empty: 22
used: 1
present non-empty: 6

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 21
optimized away non-empty: 15
dependent: 21
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str
optimized away (dependency)

Type#1 [unused] str$+
val?            %10.1 = PopContext         C     %10.0, %2.5   <str$+>
dependent slot

Type#2 [unused] str-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] str$-
optimized away (dependency)

Type#5 [used] lgl$-
val?            %16.2 = PopContext         C     %16.1, %12.5   <lgl$->
void                    Assume             D     %16.3, %16.4 (Typecheck@0x560a7c563d70[Type#5])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] str
optimized away (dependency)

Type#10 [unused] str$+
optimized away (dependency)

Type#11 [unused] env-
val?            %33.1 = PopContext         C     %33.0, %19.4   <env->
dependent slot

Type#12 [unused] env-
optimized away (dependency)

Type#13 [unused] cls
val?            %35.4 = StaticCall         !v    getGeneric[0x560a84c524d0]("coerce<-", missingArg, %35.3) { 0 2n } e2.3   <cls>
dependent slot

Type#14 [unused] cls
optimized away (dependency)

Type#15 [unused] env-
val?            %37.4 = StaticCall         !v    getMethodsForDispatch[0x560a87a55720](%37.3) e2.3   <env->
dependent slot

Type#16 [unused] str$+
optimized away (dependency)

Type#17 [unused] str$-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] env-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] cls
val?            %39.8 = StaticCall         !v    .quickCoerceSelect[0x560a87aa9500](%39.3, %39.4, %39.5, %39.6, %39.7) e2.3   <cls>
dependent slot

Type#22 [unused] cls
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

Type#48 [unused] $#-
optimized away (dependency)

Type#49 [unused] $#-
optimized away (dependency)

Type#50 [unused] $#-
optimized away (dependency)

Type#51 [unused] $#-
optimized away (dependency)

Type#52 [unused] $#-
optimized away (dependency)

Type#53 [unused] $#-
optimized away (dependency)

Type#54 [unused] $#-
optimized away (dependency)

Type#55 [unused] $#-
optimized away (dependency)

Type#56 [unused] $#-
optimized away (dependency)

Type#57 [unused] $#-
optimized away (dependency)

Type#58 [unused] $#-
optimized away (dependency)

Type#59 [unused] $#-
optimized away (dependency)

Type#60 [unused] $#-
optimized away (dependency)

Type#61 [unused] $#-
optimized away (dependency)

Type#62 [unused] $#-
optimized away (dependency)

Type#63 [unused] $#-
optimized away (dependency)

Type#64 [unused] $#-
optimized away (dependency)

Type#65 [unused] $#-
optimized away (dependency)

Type#66 [unused] $#-
optimized away (dependency)

Type#67 [unused] $#-
optimized away (dependency)

Type#68 [unused] $#-
optimized away (dependency)

Type#69 [unused] $#-
optimized away (dependency)

Type#70 [unused] $#-
optimized away (dependency)

Type#71 [unused] $#-
optimized away (dependency)

Type#72 [unused] $#-
optimized away (dependency)

Type#73 [unused] $#-
optimized away (dependency)

Type#74 [unused] $#-
optimized away (dependency)

Type#75 [unused] $#-
optimized away (dependency)

Type#76 [unused] cls
optimized away (dependency)

Type#77 [unused] $#-
optimized away (dependency)

Type#78 [unused] $#-
optimized away (dependency)

Type#79 [unused] $#-
optimized away (dependency)

Type#80 [unused] $#-
optimized away (dependency)

Type#81 [unused] str
optimized away (dependency)

Type#82 [unused] $#-
optimized away (dependency)

Type#83 [unused] str-
optimized away (dependency)

Type#84 [unused] str
val?            %42.16 = PopContext         C     %42.15, %42.4   <str>
dependent slot

----------------------
Inlinee: packageSlot [0x560a6f2c7cd0]
referenced: 3
referenced non-empty: 2
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 2

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away

Type#1 [unused] (str|other) (polluted)
val?            %29.2 = Force!<lazy>       !vL   %27.5, e29.1   <(str|other)>
other unused reason

Type#2 [unused] (nil|str)- (polluted)
val?            %29.3 = CallBuiltin        !v    attr(%29.2, "package") e29.1   <(nil|str)->
other unused reason

----------------------
Inlinee: .classEnv [0x560a713ff040]
referenced: 35
referenced non-empty: 14
read non-empty: 11
used: 2
present non-empty: 5

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 12
optimized away non-empty: 7
dependent: 11
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] env-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [used] str$+
val?            %21.3 = Force!<lazy>       !vL   %19.5, e19.6   <str$+>
void                    Assume             D     %21.4, %21.5 (Typecheck@0x560a714d7840[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?^ | miss

Type#3 [unused] lgl$-
lgl$#-          %23.2 = CallSafeBuiltin    wed   is.character(%23.1)    <lgl$->
other unused reason

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] str$+
optimized away (dependency)

Type#8 [unused] (nil|str)- (polluted)
val?            %29.4 = PopContext         C     %29.3, %27.4   <(nil|str)->
dependent slot

Type#9 [unused] (nil|str)- (polluted)
optimized away (dependency)

Type#10 [unused] str$-
optimized away (dependency)

Type#11 [unused] env-
val?            %32.4 = StaticCall         !v    .requirePackage[0x560a809aea40](%32.3) e19.6   <env->
dependent slot

Type#12 [unused] env-
val?            %46.1 = Force!<lazy>       !v    %46.0, e19.6   <env->
dependent slot

Type#13 [unused] str$-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] other$
val?            %48.5 = StaticCall         !v    getClassDef[0x560a886f6820](%48.3, %48.4, nil) e19.6   <other$>
dependent slot

Type#16 [unused] other$
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] other$
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [used] env-
val?^ | miss    %54.0 = LdVar              eR    value, e19.6
void                    Assume             D     %54.1, %51.1 (Typecheck@0x560a714d7840[Type#34])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: env-, expected: env-, required: val?^ | miss

----------------------
Inlinee: asMethod [0x560a7c51d000]
referenced: 6
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] str
val?            %42.15 = Force!<value>      !     %42.13, e42.8   <str>
other unused reason

----------------------
Inlinee: .identC [0x560a569917c0]
referenced: 7
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 3

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] vec
val?            %14.3 = Force!<value>      !v    %14.1, e14.2   <vec>
other unused reason

Type#4 [unused] str$+ (polluted)
val?            %14.5 = Force!<lazy>       !v    %14.4, e14.2   <str$+>
dependent slot

Type#5 [unused] str$+ (polluted)
val?            %14.7 = Force!<lazy>       !v    %14.6, e14.2   <str$+>
dependent slot

Type#6 [used] lgl$-
val?            %14.8 = CallBuiltin        !v    .Call(%14.3, %14.5, %14.7) e14.2   <lgl$->
void                    Assume             D     %14.9, %14.10 (Typecheck@0x560a5692fc50[Type#6])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: .class1 [0x560a713f90f0]
referenced: 10
referenced non-empty: 6
read non-empty: 6
used: 2
present non-empty: 2

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] (str|cls) (polluted)
val?            %4.2  = Force!<lazy>       !vr   %2.6,    <(str|cls)>
other unused reason

Type#2 [used] str$+
val?            %4.3  = CallBuiltin        !v    class(%4.2) e4.1   <str$+>
void                    Assume             D     %4.5, %4.6 (Typecheck@0x560a7143c850[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: str$+, expected: str$+, required: val?+

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] str$+
optimized away (dependency)

Type#5 [used] int$-
(int|real)$-    %6.6  = CallSafeBuiltin    wed   length(%6.5)    <int$->
void                    Assume             D     %6.7, %6.8 (Typecheck@0x560a7143c850[Type#5])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#6 [unused] lgl$-
lgl$-           %8.2  = Gt                 d     %8.1, 1L, elided   <lgl$->
other unused reason

Type#7 [unused] str$+
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

*********************** Compilation session for: get_real_output (!ExpMi,CorrOrd,!TMany,Argmatch) ***********************
======================= ClosureVersion: get_real_output (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 120
referenced non-empty: 51
read non-empty: 39
used: 17
present non-empty: 15

Used
exact match: 11
widened: 6
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 34
optimized away non-empty: 19
dependent: 18
other reasons unused non-empty: 16

Polluted
polluted: 7
used polluted: 1

----------------------
get_real_output [0x560a5aab2860]
referenced: 7
referenced non-empty: 5
read non-empty: 5
used: 2
present non-empty: 2

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] (int|str)$ (polluted)
optimized away

Type#1 [used] lgl$-
val?            %2.10 = PopContext         C     %2.9, %2.5   <lgl$->
void                    Assume             D     %2.11, %2.12 (Typecheck@0x560a5aab2650[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [used] str$-
val?            %7.1  = Force!<wrapped>    !v    %7.0, e2.3   <str$->
void                    Assume             D     %7.22, %7.23 (Typecheck@0x560a5aab2650[Type#2])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#3 [unused] int$
val?            %95.4 = PopContext         C     %95.3, %13.4   <int$>
dependent slot

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] int$
val?            %6.2  = Force!<wrapped>    !     %6.0, e2.3   <int$>
dependent slot

----------------------
Inlinee: Sys.getenv [0x560a56393c00]
referenced: 48
referenced non-empty: 11
read non-empty: 5
used: 3
present non-empty: 2

Used
exact match: 1
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 6
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] str$-
optimized away (dependency)

Type#3 [unused] str$-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] str$-
optimized away (dependency)

Type#6 [unused] str$-
optimized away (dependency)

Type#7 [unused] lgl$-
val?            %30.4 = Force!<lazy>       !v    %30.3, e28.5   <lgl$->
dependent slot

Type#8 [unused] lgl$-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [used] str$-
val?            %41.4 = Force!<wrapped>    !v    %41.3, e28.5   <str$->
void                    Assume             D     %41.5, %41.6 (Typecheck@0x560a562d4e50[Type#10])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#11 [used] int$-
(int|real)$-    %43.2 = CallSafeBuiltin    wed   length(%43.1)    <int$->
void                    Assume             D     %43.3, %43.4 (Typecheck@0x560a562d4e50[Type#11])
exact match
checkFor: int$-, static: (int|real)$-, feedback: int$-, expected: int$-, required: val?^ | miss

Type#12 [unused] lgl$-
lgl$-           %45.2 = Gt                 d     %45.1, 1L, elided   <lgl$->
dependent slot

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [used] str$-
val?^ | miss    %51.0 = LdVar              eR    v, e28.5
void                    Assume             D     %51.1, %48.1 (Typecheck@0x560a562d4e50[Type#15])
narrowed with static type: no
widened: yes
checkFor: val?~- | miss, static: val?^ | miss, feedback: str$-, expected: str$-, required: val?^ | miss

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

Type#20 [unused] $#-
optimized away (dependency)

Type#21 [unused] $#-
optimized away (dependency)

Type#22 [unused] $#-
optimized away (dependency)

Type#23 [unused] $#-
optimized away (dependency)

Type#24 [unused] $#-
optimized away (dependency)

Type#25 [unused] $#-
optimized away (dependency)

Type#26 [unused] $#-
optimized away (dependency)

Type#27 [unused] $#-
optimized away (dependency)

Type#28 [unused] $#-
optimized away (dependency)

Type#29 [unused] $#-
optimized away (dependency)

Type#30 [unused] $#-
optimized away (dependency)

Type#31 [unused] $#-
optimized away (dependency)

Type#32 [unused] $#-
optimized away (dependency)

Type#33 [unused] $#-
optimized away (dependency)

Type#34 [unused] $#-
optimized away (dependency)

Type#35 [unused] $#-
optimized away (dependency)

Type#36 [unused] $#-
optimized away (dependency)

Type#37 [unused] $#-
optimized away (dependency)

Type#38 [unused] $#-
optimized away (dependency)

Type#39 [unused] $#-
optimized away (dependency)

Type#40 [unused] $#-
optimized away (dependency)

Type#41 [unused] $#-
optimized away (dependency)

Type#42 [unused] $#-
optimized away (dependency)

Type#43 [unused] $#-
optimized away (dependency)

Type#44 [unused] $#-
optimized away (dependency)

Type#45 [unused] $#-
optimized away (dependency)

Type#46 [unused] $#-
optimized away (dependency)

Type#47 [unused] $#-
optimized away (dependency)

----------------------
Inlinee:  [0x560a5aace290]
referenced: 1
referenced non-empty: 1
read non-empty: 1
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec+
val?            %71.2 = NamedCall          !v    <blt list>(type="not_rstudio", dynamic_tty=false, ansi_tty=false, ansi_color=false, num_colors=1L, hyperlink=false, has_canonical_mode=false) e71.1   <vec+>
other unused reason

----------------------
Inlinee: isTRUE [0x560a55e9e1e0]
referenced: 11
referenced non-empty: 8
read non-empty: 2
used: 3
present non-empty: 1

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 4
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
optimized away

Type#2 [used] lgl$-
val+            %30.5 = CallSafeBuiltin    wed   is.logical(%30.4)    <lgl$->
void                    Assume             D     %30.6, %30.7 (Typecheck@0x560a55e9bc50[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %30.4 = Force!<lazy>       !v    %30.3, e28.5   <lgl$->
void                    Assume             D     %33.0, %30.7 (Typecheck@0x560a55e9bc50[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %30.4 = Force!<lazy>       !v    %30.3, e28.5   <lgl$->
void                    Assume             D     %35.0, %30.7 (Typecheck@0x560a55e9bc50[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %35.3 = CallSafeBuiltin    wed   is.na(%35.2)    <lgl$->
dependent slot

Type#10 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: get_caps [0x560a5aacded0]
referenced: 9
referenced non-empty: 4
read non-empty: 4
used: 2
present non-empty: 2

Used
exact match: 0
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 2
optimized away non-empty: 0
dependent: 1
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] $#-
optimized away (dependency)

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [used] vec+
val?            %63.6 = Force!<value>      !v    %63.4, e63.5   <vec+>
void                    Assume             D     %67.4, %65.8 (Typecheck@0x560a5aacddd0[Type#3])
narrowed with static type: no
widened: yes
checkFor: val?+, static: val?, feedback: vec+, expected: vec+, required: val?+

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [used] str$-
val?            %65.6 = Force!<value>      !v    %65.5, e63.5   <str$->
void                    Assume             D     %65.7, %65.8 (Typecheck@0x560a5aacddd0[Type#5])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#6 [unused] cls-
val?            %67.9 = Extract2_1D        wed   %67.6, %67.8, elided   <cls->
other unused reason

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] vec+
val?            %73.4 = PopContext         C     %71.2, %69.5   <vec+>
dependent slot

----------------------
Inlinee: is_rstudio [0x560a5aacd6a0]
referenced: 2
referenced non-empty: 2
read non-empty: 2
used: 2
present non-empty: 0

Used
exact match: 1
widened: 1
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [used] str$-
val?            %51.5 = PopContext         C     %51.4, %28.4   <str$->
void                    Assume             D     %51.6, %51.7 (Typecheck@0x560a5aacd5b0[Type#0])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#1 [used] lgl$-
lgl-            %53.8 = Eq                 wed   %53.7, "1", elided   <lgl$->
void                    Assume             D     %53.9, %53.10 (Typecheck@0x560a5aacd5b0[Type#1])
exact match
checkFor: lgl$-, static: lgl-, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: rstudio_detect [0x560a5aac4000]
referenced: 4
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 1
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec
optimized away

Type#1 [unused] $#-
optimized away

Type#2 [unused] cls-
val?            %22.4 = Call               !v    %20.6(%22.2, %22.3) e20.5   <cls->
other unused reason

Type#3 [unused] vec+
val?            %77.4 = PopContext         C     %75.4, %24.5   <vec+>
other unused reason

----------------------
Inlinee: stderr [0x560a5aaced80]
referenced: 0
referenced non-empty: 0
read non-empty: 0
used: 0
present non-empty: 0

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 0
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

----------------------
Inlinee: rstudio_stdout [0x560a5aac0090]
referenced: 6
referenced non-empty: 5
read non-empty: 5
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 3
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] vec+
val?            %79.2 = PopContext         C     %77.4, %20.4   <vec+>
dependent slot

Type#1 [unused] vec+
optimized away (dependency)

Type#2 [unused] $#-
optimized away

Type#3 [unused] str$-
optimized away

Type#4 [unused] str-
optimized away

Type#5 [used] lgl$-
val?            %85.5 = PopContext         C     %85.4, %83.5   <lgl$->
void                    Assume             D     %85.6, %85.7 (Typecheck@0x560a5aabffa0[Type#5])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: cli_output_connection [0x560a5aab5160]
referenced: 5
referenced non-empty: 3
read non-empty: 3
used: 2
present non-empty: 1

Used
exact match: 2
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [used] lgl$-
val?            %15.4 = StaticCall         !vL   is_interactive[0x560a847a1d90]() e15.3   <lgl$->
void                    Assume             D     %15.5, %15.6 (Typecheck@0x560a5aab5070[Type#0])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#1 [used] lgl$-
val?            %87.4 = PopContext         C     %87.1, %18.3   <lgl$->
void                    Assume             D     %87.5, %87.6 (Typecheck@0x560a5aab5070[Type#1])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] int$
val             %95.3 = CallSafeBuiltin    wed   stderr()    <int$>
other unused reason

Type#4 [unused] $#-
optimized away (dependency)

----------------------
Inlinee: inherits [0x560a55ed11e0]
referenced: 3
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 0
other reasons unused non-empty: 3

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %2.8  = Force!<lazy>       !vL   %2.6, e2.7   <val?>
other unused reason

Type#1 [unused] str$-
optimized away

Type#2 [unused] lgl$-
optimized away

----------------------
Inlinee: %in% [0x560a548b4ae0]
referenced: 4
referenced non-empty: 4
read non-empty: 4
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 4
used polluted: 1

Type#0 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#1 [unused] (nil|str)+ (polluted)
optimized away (dependency)

Type#2 [used] int- (polluted)
val?            %83.11 = StaticCall         !v    match[0x560a8114b760](%83.9, %83.10, 0L) { 0 1 2n } e83.8   <int->
void                    Assume             D     %83.12, %83.13 (Typecheck@0x560a5530d350[Type#2])
exact match
checkFor: int-, static: val?, feedback: int-, expected: int-, required: val?+

Type#3 [unused] lgl- (polluted)
lgl-            %85.4 = Gt                 wed   %85.3, 0L, elided   <lgl->
other unused reason

----------------------
Inlinee:  [0x560a5aacd370]
referenced: 20
referenced non-empty: 2
read non-empty: 2
used: 1
present non-empty: 1

Used
exact match: 1
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 1
optimized away non-empty: 0
dependent: 0
other reasons unused non-empty: 1

Polluted
polluted: 0
used polluted: 0

Type#0 [used] lgl$-
val?            %55.2 = PopContext         C     %55.1, %26.4   <lgl$->
void                    Assume             D     %55.3, %55.4 (Typecheck@0x560a5aacd280[Type#0])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#1 [unused] vec+
val?            %75.4 = PopContext         C     %73.4, %63.3   <vec+>
other unused reason

Type#2 [unused] $#-
optimized away (dependency)

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] $#-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [unused] $#-
optimized away (dependency)

Type#9 [unused] $#-
optimized away (dependency)

Type#10 [unused] $#-
optimized away (dependency)

Type#11 [unused] $#-
optimized away (dependency)

Type#12 [unused] $#-
optimized away (dependency)

Type#13 [unused] $#-
optimized away (dependency)

Type#14 [unused] $#-
optimized away (dependency)

Type#15 [unused] $#-
optimized away (dependency)

Type#16 [unused] $#-
optimized away (dependency)

Type#17 [unused] $#-
optimized away (dependency)

Type#18 [unused] $#-
optimized away (dependency)

Type#19 [unused] $#-
optimized away (dependency)

======================= ClosureVersion: is_interactive (!ExpMi,CorrOrd,!TMany,Argmatch) =======================
referenced: 45
referenced non-empty: 37
read non-empty: 34
used: 10
present non-empty: 8

Used
exact match: 8
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 27
optimized away non-empty: 19
dependent: 22
other reasons unused non-empty: 5

Polluted
polluted: 5
used polluted: 0

----------------------
is_interactive [0x560a5aabb360]
referenced: 14
referenced non-empty: 14
read non-empty: 14
used: 7
present non-empty: 1

Used
exact match: 5
widened: 2
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 7
optimized away non-empty: 6
dependent: 7
other reasons unused non-empty: 0

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] nil-
lgl$-           %13.2 = CastType           d     dn %6.1   <nil->
dependent slot

Type#1 [unused] nil-
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] nil-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %19.8 = PopContext         C     %19.7, %19.4   <lgl$->
void                    Assume             D     %19.9, %19.10 (Typecheck@0x560a5aabb270[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#5 [unused] str$-
optimized away (dependency)

Type#6 [used] str$-
val?            %26.3 = PopContext         C     %26.2, %22.4   <str$->
void                    Assume             D     %26.4, %26.5 (Typecheck@0x560a5aabb270[Type#6])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#7 [used] lgl$-
lgl-            %28.2 = Eq                 wed   %28.1, "true", elided   <lgl$->
void                    Assume             D     %28.3, %28.4 (Typecheck@0x560a5aabb270[Type#7])
exact match
checkFor: lgl$-, static: lgl-, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#8 [unused] str$-
optimized away (dependency)

Type#9 [used] str$-
val?            %35.3 = PopContext         C     %35.2, %31.4   <str$->
void                    Assume             D     %35.4, %35.5 (Typecheck@0x560a5aabb270[Type#9])
narrowed with static type: no
widened: yes
checkFor: val?-, static: val?, feedback: str$-, expected: str$-, required: val?+

Type#10 [used] lgl$-
lgl-            %37.2 = Eq                 wed   %37.1, "true", elided   <lgl$->
void                    Assume             D     %37.3, %37.4 (Typecheck@0x560a5aabb270[Type#10])
exact match
checkFor: lgl$-, static: lgl-, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#11 [unused] str$-
optimized away (dependency)

Type#12 [used] lgl$-
val?            %40.9 = PopContext         C     %40.8, %40.4   <lgl$->
void                    Assume             D     %40.10, %40.11 (Typecheck@0x560a5aabb270[Type#12])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#13 [used] lgl$-
val?            %43.3 = CallBuiltin        !     interactive() e2.3   <lgl$->
void                    Assume             D     %43.4, %43.5 (Typecheck@0x560a5aabb270[Type#13])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

----------------------
Inlinee: tolower [0x560a5aa57fe0]
referenced: 7
referenced non-empty: 3
read non-empty: 3
used: 0
present non-empty: 3

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 3
optimized away non-empty: 0
dependent: 2
other reasons unused non-empty: 1

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] str- (polluted)
val?            %31.7 = Force!<lazy>       !vL   %31.5, e31.6   <str->
dependent slot

Type#2 [unused] lgl$-
lgl$#-          %31.8 = CallSafeBuiltin    wed   is.character(%31.7)    <lgl$->
other unused reason

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [unused] $#-
optimized away (dependency)

Type#5 [unused] $#-
optimized away (dependency)

Type#6 [unused] str- (polluted)
val?            %35.1 = Force!<wrapped>    !v    %35.0, e31.6   <str->
dependent slot

----------------------
Inlinee: identical [0x560a56255880]
referenced: 8
referenced non-empty: 8
read non-empty: 8
used: 0
present non-empty: 1

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 8
optimized away non-empty: 7
dependent: 8
other reasons unused non-empty: 0

Polluted
polluted: 2
used polluted: 0

Type#0 [unused] val? (polluted)
val?            %40.7 = Force!<lazy>       !vL   %40.5, e40.6   <val?>
dependent slot

Type#1 [unused] val? (polluted)
optimized away (dependency)

Type#2 [unused] lgl$-
optimized away (dependency)

Type#3 [unused] lgl$-
optimized away (dependency)

Type#4 [unused] lgl$-
optimized away (dependency)

Type#5 [unused] lgl$-
optimized away (dependency)

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: isTRUE [0x560a55e9e1e0]
referenced: 11
referenced non-empty: 8
read non-empty: 7
used: 3
present non-empty: 1

Used
exact match: 3
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 5
optimized away non-empty: 4
dependent: 3
other reasons unused non-empty: 2

Polluted
polluted: 1
used polluted: 0

Type#0 [unused] $#-
optimized away (dependency)

Type#1 [unused] val? (polluted)
optimized away

Type#2 [used] lgl$-
val+            %8.4  = CallSafeBuiltin    wed   is.logical(%6.1)    <lgl$->
void                    Assume             D     %8.5, %8.6 (Typecheck@0x560a55e9bc50[Type#2])
exact match
checkFor: lgl$-, static: val+, feedback: lgl$-, expected: lgl$-, required: val?^ | miss

Type#3 [unused] $#-
optimized away (dependency)

Type#4 [used] lgl$-
val?            %6.1  = PopContext         C     %6.0, %2.4   <nil->
void                    Assume             D     %11.0, %8.6 (Typecheck@0x560a55e9bc50[Type#4])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#5 [unused] int$-
optimized away

Type#6 [unused] lgl$-
optimized away (dependency)

Type#7 [unused] $#-
optimized away (dependency)

Type#8 [used] lgl$-
val?            %6.1  = PopContext         C     %6.0, %2.4   <nil->
void                    Assume             D     %13.0, %8.6 (Typecheck@0x560a55e9bc50[Type#8])
exact match
checkFor: lgl$-, static: val?, feedback: lgl$-, expected: lgl$-, required: val?+

Type#9 [unused] lgl$-
lgl$-           %13.3 = CallSafeBuiltin    wed   is.na(%13.2)    <lgl$->
dependent slot

Type#10 [unused] lgl$-
optimized away (dependency)

----------------------
Inlinee: getOption [0x560a55e8e470]
referenced: 5
referenced non-empty: 4
read non-empty: 2
used: 0
present non-empty: 2

Used
exact match: 0
widened: 0
narrowed: 0
widened narrowed: 0

Unused
unused non-empty: 4
optimized away non-empty: 2
dependent: 2
other reasons unused non-empty: 2

Polluted
polluted: 0
used polluted: 0

Type#0 [unused] str$-
optimized away (dependency)

Type#1 [unused] nil-
val?            %3.0  = CallBuiltin        !v    getOption("rlib_interactive") e2.5   <nil->
other unused reason

Type#2 [unused] $#-
optimized away

Type#3 [unused] lgl$-
val?            %61.1 = Force!<value>      !v    %61.0, e2.5   <lgl$->
other unused reason

Type#4 [unused] str$-
optimized away (dependency)

----------------------- Summary ------------------------
total functions (RIR compiled): 764
compiled functions (PIR compiled): 368
closure version compilations: 613
closure version compilations using some type feedback: 437

Slots
referenced: 23462
referenced non-empty: 10932
read non-empty: 10384
used: 2372

(referenced non-empty / referenced): 10932 / 23462 (46.5945%)
(read non-empty / referenced): 10384 / 23462 (44.2588%)
(used / referenced): 2372 / 23462 (10.11%)

Slots - Averaged per closure version
referenced non-empty / referenced (on average out of 608 values): 64.5707%
read non-empty / referenced (on average out of 608 values): 60.9096%
used / referenced (on average out of 608 values): 14.1128%

Used slots
exact match: 1398
widened: 970
narrowed: 4
widened narrowed: 0

Unused slots
unused non-empty: 8560
optimized away non-empty: 4628
dependent: 6659
other reasons unused non-empty: 1901

(optimized away non-empty / unused non-empty): 4628 / 8560 (54.0654%)
(dependent / unused non-empty): 6659 / 8560 (77.7921%)
(other reasons unused non-empty / unused non-empty): 1901 / 8560 (22.2079%)

Unused slots - Averaged per closure version
optimized away non-empty / unused non-empty (on average out of 569 values): 42.1049%
dependent / unused non-empty (on average out of 569 values): 55.5536%
other reasons unused non-empty / unused non-empty (on average out of 569 values): 44.4464%

Polluted slots
polluted: 1614
used polluted: 244

(polluted / referenced non-empty): 1614 / 10932 (14.764%)
(used polluted / used): 244 / 2372 (10.2867%)
(used polluted / polluted): 244 / 1614 (15.1177%)

Polluted slots - Averaged per closure version
polluted / referenced non-empty (on average out of 593 values): 23.1598%
used polluted / used (on average out of 437 values): 17.4727%
used polluted / polluted (on average out of 420 values): 15.0256%

